(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   2086337,      38519]
NotebookOptionsPosition[   2051643,      37471]
NotebookOutlinePosition[   2052829,      37509]
CellTagsIndexPosition[   2052786,      37506]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Programming in ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "- A Crash Course"
}], "Title",
 CellChangeTimes->{{3.3907458272729015`*^9, 3.390745835374874*^9}, {
   3.4918166235421247`*^9, 3.4918166247921247`*^9}, {3.4918166681046247`*^9, 
   3.4918166893389997`*^9}, {3.491822689266657*^9, 3.491822690219788*^9}, {
   3.4918550707921247`*^9, 3.4918550717296247`*^9}, 3.491912226577516*^9, {
   3.49212848428325*^9, 3.49212848803325*^9}}],

Cell["\<\
Tao Ju, Washington University in St. Louis
Fall 2010\
\>", "Subsubtitle",
 CellChangeTimes->{{3.390745838950158*^9, 3.3907458395911055`*^9}, {
   3.4918166287139997`*^9, 3.4918166428546247`*^9}, {3.491822915096227*^9, 
   3.4918229189087515`*^9}, {3.4918550794796247`*^9, 
   3.4918550890421247`*^9}, {3.491912232374465*^9, 3.4919122363120155`*^9}, {
   3.4921292948145*^9, 3.492129327986375*^9}, 3.4921676856861963`*^9}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a powerful environment for scientific computing as well as rapid \
prototyping. The goal of this tutorial is to get someone who already has \
programming experiences in other languages up to speed with computing, \
coding, and visualization in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". To fully utilize this tutorial, evaluate the expressions contained in the \
notebook and try out the various exercises (marked in ",
 StyleBox["this style",
  FontColor->RGBColor[0, 0, 1],
  Background->GrayLevel[0.85]],
 ")."
}], "Text",
 CellChangeTimes->{{3.491822810548683*^9, 3.491822868486554*^9}, {
   3.4918229076274295`*^9, 3.491823019721897*^9}, {3.491824873093133*^9, 
   3.491824895718278*^9}, {3.4918547966046247`*^9, 3.4918550646046247`*^9}, {
   3.4918551074639997`*^9, 3.4918551228389997`*^9}, {3.4919122200774326`*^9, 
   3.4919122208430676`*^9}, {3.492128568017625*^9, 3.49212871628325*^9}, {
   3.4921676390921483`*^9, 3.492167666061071*^9}, 3.492168323893406*^9, {
   3.492169089070178*^9, 3.492169103007767*^9}}],

Cell["\<\
Acknowledgement: the tutorial is in part based on the COMP110 modules at Rice \
University (authored by Joe Warren). \
\>", "Text",
 CellChangeTimes->{{3.491822810548683*^9, 3.491822868486554*^9}, {
  3.4918229076274295`*^9, 3.491823019721897*^9}, {3.491824873093133*^9, 
  3.491824895718278*^9}, {3.4918547966046247`*^9, 3.4918550646046247`*^9}, {
  3.4918551074639997`*^9, 3.4918551228389997`*^9}, {3.4919122200774326`*^9, 
  3.4919122208430676`*^9}, {3.492128568017625*^9, 3.492128659236375*^9}, {
  3.492128735955125*^9, 3.492128753127*^9}, {3.492129218486375*^9, 
  3.49212922253325*^9}, {3.492129261080125*^9, 3.492129266986375*^9}, {
  3.4921293080645*^9, 3.492129317986375*^9}, {3.492170192936618*^9, 
  3.4921701948116293`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Survival skills for ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Section",
 CellChangeTimes->{{3.390745863927069*^9, 3.390745869505313*^9}, {
  3.391450281328409*^9, 3.3914502846332273`*^9}, {3.391450529920825*^9, 
  3.3914505340368257`*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " consists of two main parts;  a front-end and a kernel.  The front-end is a \
set of windows that allows the user to view ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " files, called ",
 StyleBox["notebooks",
  FontSlant->"Italic"],
 ", and manipulate the contents of these notebooks.  The kernel is a set of \
core mathematical functions that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses to compute the value of expressions that appear in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebooks. Across the top of the screen is a thin, but wide window that \
contains a number of pull-down menus.  These windows can be used to "
}], "Text",
 CellChangeTimes->{{3.3914485261095257`*^9, 3.391448738829644*^9}, {
   3.391449167865123*^9, 3.391449190678382*^9}, {3.3914532787482624`*^9, 
   3.3914533146506033`*^9}, {3.392206947179152*^9, 3.3922070032906322`*^9}, {
   3.3922070368143263`*^9, 3.3922070429147882`*^9}, {3.4918167186983747`*^9, 
   3.4918167606671247`*^9}, 3.4918174280733747`*^9, 3.4918174620264997`*^9, 
   3.4918226493289013`*^9}],

Cell[TextData[{
 "Open and save notebooks (",
 Cell[BoxData["File"]],
 ")."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.3914485261095257`*^9, 3.391448738829644*^9}, {
   3.391449167865123*^9, 3.391449241832958*^9}, 3.3914492901033306`*^9}],

Cell[TextData[{
 "Edit the contents of a notebook (",
 Cell[BoxData["Edit"]],
 ")."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.3914485261095257`*^9, 3.391448738829644*^9}, {
  3.391449167865123*^9, 3.391449241832958*^9}, {3.3914492901033306`*^9, 
  3.39144929600193*^9}, {3.3914493472266088`*^9, 3.3914493578721285`*^9}}],

Cell[TextData[{
 "Format the contents of a notebook (",
 Cell[BoxData["Format"]],
 ")."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.3914485261095257`*^9, 3.391448738829644*^9}, {
   3.391449167865123*^9, 3.391449241832958*^9}, {3.3914492901033306`*^9, 
   3.3914493012696095`*^9}, 3.3914528806478834`*^9}],

Cell[TextData[{
 "Organize and manipulates cells, the building blocks of a notebook (",
 Cell[BoxData["Cell"]],
 "). "
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.3914485261095257`*^9, 3.391448738829644*^9}, {
  3.391449167865123*^9, 3.391449241832958*^9}, {3.3914492901033306`*^9, 
  3.3914493025214343`*^9}}],

Cell[TextData[{
 "Create graphics for the notebook (",
 Cell[BoxData["Graphics"]],
 ")."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.3914485261095257`*^9, 3.391448738829644*^9}, {
  3.391449167865123*^9, 3.3914493053655806`*^9}}],

Cell[TextData[{
 "Control evaluation of expressions in the notebook (",
 Cell[BoxData["Evaluation"]],
 "). "
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.3914485261095257`*^9, 3.391448738829644*^9}, {
  3.391449167865123*^9, 3.3914493073685007`*^9}, {3.392207121085526*^9, 
  3.392207126334177*^9}}],

Cell[TextData[{
 "Open palette design to simplify common tasks (",
 Cell[BoxData["Palettes"]],
 ")."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.3914485261095257`*^9, 3.391448738829644*^9}, {
  3.391449167865123*^9, 3.3914493094615526`*^9}, {3.392207133990933*^9, 
  3.39220713735007*^9}}],

Cell[TextData[{
 "Manage the layout of multiple notebooks on the screen (",
 Cell[BoxData["Window"]],
 "),"
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.3914485261095257`*^9, 3.391448738829644*^9}, {
  3.391449167865123*^9, 3.391449311304239*^9}}],

Cell[TextData[{
 "Provide helpful information about ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "(",
 Cell[BoxData["Help"]],
 ")."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.3914485261095257`*^9, 3.391448738829644*^9}, {
   3.391449167865123*^9, 3.391449338073264*^9}, 3.3914528864463367`*^9}],

Cell[TextData[{
 "Instead of exploring each of these menus in detail, we will focus on a few \
key survival skills for ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " which can be accessed through these menus."
}], "Text",
 CellChangeTimes->{{3.3905860398613024`*^9, 3.3905860615424786`*^9}, {
  3.391448681425957*^9, 3.391448682207096*^9}, {3.3914493169024*^9, 
  3.3914493172829547`*^9}, {3.39144937762092*^9, 3.391449434083235*^9}, {
  3.3914523109273033`*^9, 3.391452311718457*^9}, {3.392207150935748*^9, 
  3.392207170419806*^9}}],

Cell[CellGroupData[{

Cell["Writing notebooks", "Subsection",
 CellChangeTimes->{{3.491822724751259*^9, 3.4918227265012703`*^9}, {
  3.491822791642312*^9, 3.491822795861089*^9}, {3.4918231159568872`*^9, 
  3.4918231166756425`*^9}, {3.4918310180699606`*^9, 3.491831019460595*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is not only a powerful computing tool, but also serves as a full-fledged \
document preparation environment. The document you are looking at right now \
is called a ",
 StyleBox["notebook",
  FontSlant->"Italic"],
 ", which can incorporate a variety of contents like texts, equations, \
figures and interactive graphics. "
}], "Text",
 CellChangeTimes->{{3.491823090456724*^9, 3.491823103941186*^9}, {
  3.49182315851966*^9, 3.4918231824416885`*^9}, {3.4918237151325974`*^9, 
  3.4918237376327415`*^9}, {3.4918282738180227`*^9, 3.4918282751305313`*^9}}],

Cell[TextData[{
 "A ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook consists of a sequence of ",
 StyleBox["cells",
  FontSlant->"Italic"],
 ".  Each cell has a particular style associated with it.  To view this \
style, you first select the cell by clicking on the square bracket bounding \
the cell on the right side of the window.  Next, select the ",
 Cell[BoxData["Format"]],
 " menu and the ",
 Cell[BoxData["Style"]],
 " submenu. (Alternatively, you can click on the square bracket with the \
right mouse botton, and access the ",
 Cell[BoxData["Style"]],
 " menu.) The resulting drop-down menu lists the possible cell styles for the \
current notebook and has a check mark next to the style associated with the \
selected cell.  You may change the style of an existing cell using this menu."
}], "Text",
 CellChangeTimes->{{3.3905859948265457`*^9, 3.3905860284849443`*^9}, {
   3.3918774691861105`*^9, 3.3918777208530087`*^9}, 3.392213358730625*^9, {
   3.4918232523015103`*^9, 3.49182331869256*^9}, 3.4921704002504444`*^9}],

Cell[TextData[{
 "Some cells such as the \"Survival Skills in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\" cell above act as titles or section heading that cause cells to be \
grouped together hierarchically.  If we select this cell and check its style, \
we note its style is ",
 Cell[BoxData["Section"]],
 ".  All text cells in between two section cells make up the body of this \
section.  You can expand and collapse this section of the notebook by double \
clicking on the right bracket associated with the section heading (a cell \
with collapsed contents inside will have a small triangle at the bottom of \
the bracket). ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses a default hierarchy to group cells. For example, the ",
 Cell[BoxData["Title"]],
 " cell is at the top level of the hierarchy, followed by ",
 Cell[BoxData["Section"]],
 ", then ",
 Cell[BoxData["SubSection"]],
 ", then ",
 Cell[BoxData["SubSubSection"]],
 ". Adding cells for titles and sections makes your notebook look more \
polished."
}], "Text",
 CellChangeTimes->{{3.3918777265713453`*^9, 3.391877854187393*^9}, {
  3.3918780114666862`*^9, 3.3918780127585697`*^9}, {3.3918784970746403`*^9, 
  3.3918785624699783`*^9}, {3.392212678815942*^9, 3.392212696539652*^9}, {
  3.49182357092855*^9, 3.4918235755692043`*^9}, {3.4918236365852194`*^9, 
  3.4918236624916353`*^9}, {3.4918246132320952`*^9, 3.4918246399978914`*^9}, {
  3.4918247645455637`*^9, 3.4918248013114243`*^9}, {3.492167834343398*^9, 
  3.4921678861874795`*^9}}],

Cell[TextData[{
 StyleBox["Exercise:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Fully expand the remaining sections in this notebook."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
  3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
  3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
  3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
  3.391451509849435*^9}, {3.392207789527644*^9, 3.392207789527944*^9}, {
  3.4918175343702497`*^9, 3.4918175703233747`*^9}, {3.4918186824952497`*^9, 
  3.4918186837921247`*^9}, {3.491823776039237*^9, 3.4918238232582893`*^9}, {
  3.4918238907899714`*^9, 3.4918239250089407`*^9}, {3.491824646326057*^9, 
  3.491824689466958*^9}, {3.4918247401704073`*^9, 3.49182476165492*^9}, {
  3.4918695718858747`*^9, 3.4918695774952497`*^9}, {3.4918696139639997`*^9, 
  3.4918696220108747`*^9}, {3.4918696856827497`*^9, 3.4918696880264997`*^9}, {
  3.492130514080125*^9, 3.492130533392625*^9}, {3.4921681799862347`*^9, 
  3.492168188361288*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[TextData[{
 "In most notebooks there are two important types of cells, ",
 Cell[BoxData["Input"]],
 " cells and ",
 Cell[BoxData["Text"]],
 " cells.  To create a cell, click on the space between any two existing \
cells and start typing. You may change the cell style as discussed above.The \
default cell type is ",
 Cell[BoxData["Input"]],
 " cells, which contain ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expressions waiting to be evaluated (and are shown in boxes).  Hitting ",
 Cell[BoxData[
  RowBox[{"Shift", "+", "Enter"}]]],
 " in an ",
 Cell[BoxData["Input"]],
 " cell causes ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to evaluate the contents of the cell and produce a corresponding ",
 Cell[BoxData["Output"]],
 " cell.  On the other hand,  ",
 Cell[BoxData["Text"]],
 " cells do not contain expressions that are destined to be evaluated.  \
Instead, they contain text and formulas that are meant to be read (like this \
cell).  "
}], "Text",
 CellChangeTimes->{{3.391877865964563*^9, 3.3918780968812094`*^9}, {
  3.392212523294924*^9, 3.392212555302466*^9}, {3.4918236850699053`*^9, 
  3.4918237084450545`*^9}, {3.4918242091982594`*^9, 3.491824242464097*^9}, {
  3.4921709332382307`*^9, 3.492170974363494*^9}, {3.4921710130512414`*^9, 
  3.492171038707656*^9}}],

Cell[TextData[{
 StyleBox["Exercise: ",
  FontWeight->"Bold"],
 StyleBox["Create a new ",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData["Text"],
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" cell with and a new ",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData["Input"],
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" cell, and type \"Hello World\" in both cells. Try evaluating the ",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData["Input"],
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" cell, and what happens? Now, replace the words in the ",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData["Input"],
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" cell with a numerical expression (e.g., ",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"2", "*", "3"}]],
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["), and evaluate it.",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4918175875108747`*^9, 3.4918175909639997`*^9}, {
   3.4918176283077497`*^9, 3.4918176446514997`*^9}, 3.4918177455108747`*^9, 
   3.49213053678325*^9, 3.492168042797857*^9, {3.4921682132676983`*^9, 
   3.4921682135176997`*^9}},
 FontWeight->"Bold",
 Background->GrayLevel[0.85]],

Cell["\[OpenCurlyDoubleQuote]Hello World\[CloseCurlyDoubleQuote]", "Text",
 CellChangeTimes->{{3.650806649872755*^9, 3.6508066579840403`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<Hello World\>\"", "\[IndentingNewLine]", 
 RowBox[{"6", "+", "2"}]}], "Input",
 CellChangeTimes->{{3.650806661216633*^9, 3.650806685226768*^9}}],

Cell[BoxData["\<\"Hello World\"\>"], "Output",
 CellChangeTimes->{3.65080668607094*^9}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.6508066860736837`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\"\<Hello World\>\"", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.650806677849834*^9, 3.650806677867571*^9}}],

Cell[TextData[{
 "A common beginner mistake is to punch all of their text into a single ",
 Cell[BoxData["Text"]],
 " cell and try to format the text inside the cell.  A better method is to \
treat each ",
 Cell[BoxData["Text"]],
 " cell as a single paragraph and let ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " handle the typesetting using the options in the ",
 Cell[BoxData["Format"]],
 " menu. For more information on cells and notebooks, you should take a brief \
look at the tutorial ",
 ButtonBox["Notebooks as Documents.",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/NotebooksAsDocuments"]
}], "Text",
 CellChangeTimes->{{3.3918782328193903`*^9, 3.391878257415248*^9}, {
   3.3918783082593718`*^9, 3.391878317012132*^9}, {3.391878582138653*^9, 
   3.3918785967599688`*^9}, {3.391878652611393*^9, 3.391878677217265*^9}, 
   3.392212641358615*^9, {3.4918244634655113`*^9, 3.4918244815906277`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Saving your work", "Subsection",
 CellChangeTimes->{{3.39144945623553*^9, 3.3914494650984507`*^9}}],

Cell[TextData[{
 "Perhaps the most critical task is saving your work (use ",
 Cell[BoxData["Save"]],
 " or ",
 Cell[BoxData[
  RowBox[{"Save", " ", "As"}]]],
 " in the ",
 Cell[BoxData["File"]],
 " menu). As a general piece of good advice, I suggest that you save your \
work frequently.  Computers (especially running Windows) have a bad habit of \
misbehaving at the most critical time (say after you have done an hour of \
unsaved work).  I suggest saving your work at least every 15 minutes or \
before evaluating a piece of code that could have unexpected outcomes."
}], "Text",
 CellChangeTimes->{{3.3905860398613024`*^9, 3.3905860615424786`*^9}, {
   3.391448681425957*^9, 3.391448682207096*^9}, {3.3914493169024*^9, 
   3.3914493172829547`*^9}, {3.39144937762092*^9, 3.3914497869877243`*^9}, {
   3.391449817171728*^9, 3.391449840896316*^9}, 3.3914529006870975`*^9, {
   3.392207280676815*^9, 3.392207281480912*^9}, {3.4918168486827497`*^9, 
   3.4918170523233747`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting help", "Subsection",
 CellChangeTimes->{{3.391449870189021*^9, 3.391449871891503*^9}}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  RowBox[{"Documentation", " ", "Center"}]]],
 " that is accessible from the ",
 Cell[BoxData["Help"]],
 " menu will become your best friend in using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  The main menu for the ",
 Cell[BoxData[
  RowBox[{"Documentation", " ", "Center"}]]],
 " provides an overview of the capabilities of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  Other ways to access information about a function are either to simply \
select the function name in your notebook and press ",
 Cell[BoxData["F1"]],
 " , or to type its name into the blank line at the top of the ",
 Cell[BoxData[
  RowBox[{"Documentation", " ", "Center"}]]],
 " window and click the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " icon to the left.  The ",
 Cell[BoxData[
  RowBox[{"Documentation", " ", "Center"}]]],
 " will search for and return links to relevant topics in its library of \
helpful information.  "
}], "Text",
 CellChangeTimes->{{3.390586064216323*^9, 3.390586065107605*^9}, {
  3.39058653295033*^9, 3.3905865340519133`*^9}, {3.39058678187827*^9, 
  3.390586786154419*^9}, {3.3905871921782527`*^9, 3.390587197996619*^9}, {
  3.391450607513946*^9, 3.3914508469430027`*^9}, {3.392207512877863*^9, 
  3.3922075133464527`*^9}, {3.4088222319013863`*^9, 3.4088222560179577`*^9}, {
  3.408822300635901*^9, 3.4088223020927877`*^9}, {3.4918171008389997`*^9, 
  3.4918172053077497`*^9}}],

Cell[TextData[{
 StyleBox["Exercise: ",
  FontWeight->"Bold"],
 StyleBox["Use the ",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"Documentation", " ", "Center"}]],
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" to locate functions that manipulate prime numbers.  Locate a \
function that determines whether an integer is prime.  Use this function to \
determine whether ",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["2", "31"], "-", "1"}]],
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is prime.  ",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4918175875108747`*^9, 3.4918175909639997`*^9}, {
   3.4918176283077497`*^9, 3.4918176446514997`*^9}, 3.4918177455108747`*^9, 
   3.49213053678325*^9, 3.492168042797857*^9, {3.4921682132676983`*^9, 
   3.4921682135176997`*^9}, {3.492168349862322*^9, 3.492168364065538*^9}, {
   3.492168406722061*^9, 3.492168407472066*^9}},
 FontWeight->"Bold",
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimeQ", "[", 
  RowBox[{
   RowBox[{"2", "^", "31"}], "-", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6508068528456593`*^9, 3.650806864927125*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.65080686556144*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  RowBox[{"Documentation", " ", "Center"}]]],
 " contains a number of tutorials on relevant topics in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  Instead of rehashing them in our notebooks, I will simply provide a \
hyperlink to the relevant tutorial or explanation (shown in orange in this \
notebook). "
}], "Text",
 CellChangeTimes->{{3.3914510238709407`*^9, 3.3914510837081757`*^9}, {
   3.391451141342199*^9, 3.3914511980548787`*^9}, {3.3914512374122567`*^9, 
   3.3914512374423003`*^9}, {3.3914512766294303`*^9, 3.3914513343435698`*^9}, 
   3.3914514404482574`*^9, {3.3914514715836487`*^9, 3.391451471894101*^9}, {
   3.3914515205550423`*^9, 3.3914515907974467`*^9}, {3.3914516233348827`*^9, 
   3.3914516286326056`*^9}, {3.4918174831358747`*^9, 3.4918175105889997`*^9}, 
   3.4918186792921247`*^9, {3.491822669125903*^9, 3.4918226781259604`*^9}}],

Cell[TextData[{
 StyleBox["Exercise: ",
  FontWeight->"Bold"],
 StyleBox["Click on the orange text to visit a tutorial on ",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{
     RowBox[{"Integer", " ", "and", " ", "Number"}], "-", 
     RowBox[{"Theoretical", " ", 
      RowBox[{"Functions", "."}]}]}],
    BaseStyle->"Link",
    ButtonData->"paclet:tutorial/IntegerAndNumberTheoreticalFunctions"], 
   TraditionalForm]]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4918175875108747`*^9, 3.4918175909639997`*^9}, {
   3.4918176283077497`*^9, 3.4918176446514997`*^9}, 3.4918177455108747`*^9, 
   3.49213053678325*^9, 3.492168042797857*^9, {3.4921682132676983`*^9, 
   3.4921682135176997`*^9}, {3.492168349862322*^9, 3.492168364065538*^9}, {
   3.492168406722061*^9, 3.492168429690958*^9}, {3.4921688197559547`*^9, 
   3.4921688197559547`*^9}},
 FontWeight->"Bold",
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Controlling computation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.3914504752010508`*^9, 3.3914504854960594`*^9}}],

Cell[TextData[{
 "One final skill is learning how to control computations in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has no notion of an undefined variable.  While the idea that computation \
corresponds to simplification of an expression makes ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " an extremely powerful language, this paradigm sometimes causes ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to strain mightily to simplify or evaluate an expression in which the user \
has unwittingly made a simple mistake such as accidentally inserting an \
undefined variable.  "
}], "Text",
 CellChangeTimes->{{3.3905860489243345`*^9, 3.390586054993061*^9}, {
   3.3914516729271812`*^9, 3.391451943762024*^9}, {3.3914523916049213`*^9, 
   3.3914524101319313`*^9}, 3.391452915128151*^9, {3.392208951127565*^9, 
   3.3922090166469297`*^9}, {3.4088226174937153`*^9, 3.408822622715523*^9}, {
   3.408822653886292*^9, 3.408822662502685*^9}, 3.491825180079473*^9}],

Cell[TextData[{
 "In such cases, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " may take a long time to find what it thinks is the correct answer to an \
erroneous input expression.  If ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " \"hangs\" and fails to return a reasonable answer in a moderate amount of \
time, this situation is often the case.  To help deal with this problem, you \
may abort a current evaluation by selecting the ",
 Cell[BoxData[
  RowBox[{"Abort", " ", "Evaluation"}]]],
 " option from the ",
 Cell[BoxData["Evaluation"]],
 " menu.  (This command also has the keyboard shortcut ",
 Cell[BoxData[
  RowBox[{"Alt", "+", "."}]]],
 " .)"
}], "Text",
 CellChangeTimes->{{3.3905860489243345`*^9, 3.390586054993061*^9}, {
  3.3914516729271812`*^9, 3.391452091457345*^9}, {3.391452418153626*^9, 
  3.391452418444049*^9}}],

Cell[TextData[{
 StyleBox["Exercise: ",
  FontWeight->"Bold"],
 StyleBox["Evaluate the expression below. Abort its evaluation once you \
realize it will never return an answer.",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4918175875108747`*^9, 3.4918175909639997`*^9}, {
   3.4918176283077497`*^9, 3.4918176446514997`*^9}, 3.4918177455108747`*^9, 
   3.49213053678325*^9, 3.492168042797857*^9, {3.4921682132676983`*^9, 
   3.4921682135176997`*^9}, {3.492168349862322*^9, 3.492168364065538*^9}, {
   3.492168406722061*^9, 3.492168429690958*^9}, 3.492168478488145*^9},
 FontWeight->"Bold",
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"While", "[", 
  RowBox[{"True", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.4921688846782446`*^9, 3.4921688875845137`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.650806907151978*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.650806892150599*^9, 3.65080690490351*^9}}],

Cell[TextData[{
 "Occasionally, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " may also run slowly due to the presence of lots of complex ",
 Cell[BoxData["Manipulate"]],
 " commands.  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses much of its computation power dynamically updating the output of \
these ",
 Cell[BoxData["Manipulate"]],
 " commands (even if the user is not manipulating the sliders.)  If ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " seems to be laggy, you should try disabling ",
 Cell[BoxData[
  RowBox[{"Dynamic", " ", "Updating"}]]],
 " in the ",
 Cell[BoxData["Evaluation"]],
 " menu."
}], "Text",
 CellChangeTimes->{{3.390586340153101*^9, 3.3905863472332816`*^9}, {
   3.390586646503611*^9, 3.3905866490372543`*^9}, {3.3914505047641497`*^9, 
   3.3914505112135525`*^9}, {3.391452164764217*^9, 3.391452169681385*^9}, {
   3.391452434767847*^9, 3.3914526206388235`*^9}, 3.391452917882166*^9, {
   3.392209125355301*^9, 3.3922091311329613`*^9}}],

Cell[TextData[{
 StyleBox["Exercise: ",
  FontWeight->"Bold"],
 StyleBox["Evaluate this expression with dynamic updating turned on.  Move \
the slider.  Next, disable dynamic updating.  Now, what happens when you move \
the slider?  Finally, enable dynamic updating once more and move the slider.  \
What happens?",
  FontWeight->"Plain",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4918175875108747`*^9, 3.4918175909639997`*^9}, {
   3.4918176283077497`*^9, 3.4918176446514997`*^9}, 3.4918177455108747`*^9, 
   3.49213053678325*^9, 3.492168042797857*^9, {3.4921682132676983`*^9, 
   3.4921682135176997`*^9}, {3.492168349862322*^9, 3.492168364065538*^9}, {
   3.492168406722061*^9, 3.492168429690958*^9}, 3.492168478488145*^9, 
   3.4921686503642454`*^9},
 FontWeight->"Bold",
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"x", "!"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "100", ",", "1"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 100, 1}}, Typeset`size$$ = {12., {0., 13.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$92635$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$92635$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Factorial[$CellContext`x$$], 
      "Specifications" :> {{$CellContext`x$$, 0, 100, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{371., {71., 80.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.4921688937876782`*^9, {3.6508070036430817`*^9, 3.650807022546838*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematical expressions", "Section",
 CellChangeTimes->{{3.3907458730805964`*^9, 3.3907458785787215`*^9}, {
   3.3918740526953063`*^9, 3.3918740548184013`*^9}, {3.4918190419014997`*^9, 
   3.4918190435733747`*^9}, {3.4918192918546247`*^9, 3.4918192926358747`*^9}, 
   3.4918197393546247`*^9, {3.4918249559842887`*^9, 3.4918249618437014`*^9}, {
   3.4918250346722927`*^9, 3.491825036328553*^9}, {3.4918253951745996`*^9, 
   3.491825412784087*^9}, {3.4918256452387*^9, 3.49182564836372*^9}, {
   3.491826306039804*^9, 3.49182632021177*^9}, 3.4921722630592413`*^9}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " at its core is just a very sophisticated calculator.  To use this \
calculator, you need to create (or reuse) an ",
 Cell[BoxData["Input"]],
 " cell and enter an expression.  Hitting ",
 Cell[BoxData[
  RowBox[{"Shift", "+", "Enter"}]]],
 " then evaluates the expression in the cell and returns its ",
 StyleBox["value",
  FontSlant->"Italic"],
 " (a simplified version of the expression). There are two basic forms of \
mathematical expressions, numerical and algebraic."
}], "Text",
 CellChangeTimes->{{3.3905859669364414`*^9, 3.3905859765302367`*^9}, {
  3.390586197047325*^9, 3.390586209465181*^9}, {3.3905870778338337`*^9, 
  3.3905870803474483`*^9}, {3.3918713025259123`*^9, 3.391871318038528*^9}, {
  3.391871484861735*^9, 3.3918716058080587`*^9}, {3.4918190624483747`*^9, 
  3.4918190629639997`*^9}, {3.4918405698185916`*^9, 3.4918405900843463`*^9}}],

Cell[CellGroupData[{

Cell["Numerical calculations", "Subsection",
 CellChangeTimes->{{3.491830016532301*^9, 3.4918300190010667`*^9}, {
  3.4918409153051777`*^9, 3.4918409164458103`*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " gives the user the ability to typeset mathematical expression in a quick \
and easy to use way.  For example,"
}], "Text",
 CellChangeTimes->{{3.3918718655266953`*^9, 3.391871910432162*^9}, 
   3.392209312614799*^9, {3.491827695845574*^9, 3.491827708642531*^9}, {
   3.491830919647456*^9, 3.491830928663139*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1", "+", 
  RowBox[{"2", "\[Times]", "3"}]}], "\[IndentingNewLine]", 
 FractionBox["5.0", "7.5"], "\[IndentingNewLine]", 
 SqrtBox[
  RowBox[{"2.2", "-", "0.9"}]]}], "Input",
 CellChangeTimes->{
  3.491825886068366*^9, {3.4918262166486073`*^9, 3.4918262276330523`*^9}, {
   3.4918266656983557`*^9, 3.4918266675108676`*^9}, {3.4918306383644056`*^9, 
   3.4918306518801174`*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.491825888177755*^9, 3.4918266682764974`*^9}],

Cell[BoxData["0.6666666666666666`"], "Output",
 CellChangeTimes->{3.491825888177755*^9, 3.4918266682921224`*^9}],

Cell[BoxData["1.140175425099138`"], "Output",
 CellChangeTimes->{3.491825888177755*^9, 3.4918266682921224`*^9}]
}, Open  ]],

Cell[TextData[{
 "For novice users, the easiest way to create these math expressions is to \
use the ",
 Cell[BoxData["BasicMathInput"]],
 " palette from the ",
 Cell[BoxData["Palette"]],
 " menu.  This palette contains most of the interesting expressions that you \
might like to create. As you become more proficient at using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", you will start to become interested in using keyboard shortcuts to create \
most of these expressions.  Many of these shortcuts involve using either the \
control key or the escape key.  Take a brief look at the tutorial ",
 ButtonBox["Entering Two-Dimensional Input",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EnteringTwoDimensionalInput"],
 " for more a detailed description of how these shortcuts work."
}], "Text",
 CellChangeTimes->{{3.4918277413458652`*^9, 3.491827745814644*^9}}],

Cell[TextData[{
 "The above form of mathematical expressions is called the ",
 Cell[BoxData["TraditionalForm"]],
 ".  Internally, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " represents all expressions in ",
 Cell[BoxData["StandardForm"]],
 ".  This form consists of expressions of the form ",
 Cell[BoxData[
  RowBox[{"Function", "[", 
   RowBox[{
    SubscriptBox["arg", "1"], ",", 
    SubscriptBox["arg", "2"], ",", "\[Ellipsis]", ",", 
    SubscriptBox["arg", "n"]}], "]"}]]],
 ".   For example, the expressions above in ",
 Cell[BoxData[
  RowBox[{"StandardForm", Cell[""]}]]],
 " is "
}], "Text",
 CellChangeTimes->{{3.3918719185239587`*^9, 3.3918722915978527`*^9}, {
  3.392209387594993*^9, 3.392209388462455*^9}, {3.4088848917730083`*^9, 
  3.4088849107738867`*^9}, {3.491825911787281*^9, 3.4918259160685587`*^9}, {
  3.49182664837012*^9, 3.4918266789796906`*^9}, {3.491827970737958*^9, 
  3.4918280016600313`*^9}, {3.491830944616366*^9, 3.4918309512726583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plus", "[", 
  RowBox[{"1", ",", 
   RowBox[{"Times", "[", 
    RowBox[{"2", ",", "3"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Divide", "[", 
  RowBox[{"5.0", ",", "7.5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sqrt", "[", 
  RowBox[{"Subtract", "[", 
   RowBox[{"2.2", ",", "0.9"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.491825920099834*^9, 3.4918259269748783`*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.49182598197523*^9}],

Cell[BoxData["0.6666666666666666`"], "Output",
 CellChangeTimes->{3.49182598197523*^9}],

Cell[BoxData["1.140175425099138`"], "Output",
 CellChangeTimes->{3.49182598197523*^9}]
}, Open  ]],

Cell[TextData[{
 "There are two key points to make about ",
 Cell[BoxData["StandardForm"]],
 ". First, all ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function names start with upper case.  (To distinguish your functions from \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s, you should always use lower case.)  Second, the parameters to the \
function (the ",
 Cell[BoxData[
  SubscriptBox["arg", "i"]]],
 ") are contained inside square brackets, not parentheses.  Specifically, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses ",
 Cell[BoxData[
  RowBox[{"[", "]"}]]],
 " for functions and ",
 Cell[BoxData[
  RowBox[{"(", ")"}]]],
 " for grouping inside expressions.  Square brackets and parentheses are ",
 StyleBox["not",
  FontSlant->"Italic"],
 " interchangeable.  For example, "
}], "Text",
 CellChangeTimes->{{3.3918719185239587`*^9, 3.391872331095435*^9}, {
  3.3918724272355947`*^9, 3.391872504257883*^9}, {3.39220945424618*^9, 
  3.392209474689117*^9}, {3.491826831355666*^9, 3.491826831777544*^9}}],

Cell[BoxData[
 RowBox[{"Plus", 
  RowBox[{"(", 
   RowBox[{"1", ",", "1"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.391872507272278*^9, 3.3918725117588186`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[TextData[{
 "yields an error.  This error is indicated by the red bracket on the \
right-hand side of the cell with a small square labeled with a ",
 Cell[BoxData["+"]],
 ".  To view the error message associated with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s evaluation, you can click on the ",
 Cell[BoxData["+"]],
 " to expand the cell.  Confusing the usage of square brackets and \
parentheses is the most common error that a novice ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " user makes.  Please remember the difference."
}], "Text",
 CellChangeTimes->{{3.3918725326793184`*^9, 3.3918726728036013`*^9}, {
   3.391872743716984*^9, 3.3918727663900385`*^9}, 3.392213460077546*^9}],

Cell[TextData[{
 "In general, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has almost every mathematical function that you can imagine already \
available.  Remember to check ",
 Cell[BoxData[
  RowBox[{"Documentation", " ", "Center"}]],
  FontVariations->{"Underline"->False}],
 " when you are in need."
}], "Text",
 CellChangeTimes->{{3.3920456603225756`*^9, 3.392045661173834*^9}, {
   3.3920457583774824`*^9, 3.3920457782869053`*^9}, 3.392046440215111*^9, {
   3.3920464888169355`*^9, 3.3920466109774656`*^9}, {3.392479851261984*^9, 
   3.392479874323648*^9}, {3.393604912239956*^9, 3.393604913967944*^9}, {
   3.4918270993730063`*^9, 3.4918271132480955`*^9}, {3.4918271678421946`*^9, 
   3.491827191795473*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Algebraic calculations", "Subsection",
 CellChangeTimes->{{3.3918740792139673`*^9, 3.3918740858937054`*^9}, {
   3.3918744520174665`*^9, 3.3918744536999197`*^9}, 3.4918300797827063`*^9, {
   3.491840906539497*^9, 3.491840910602023*^9}}],

Cell[TextData[{
 "One fundamental feature of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " that separates it from other languages like Java or Matlab is its ability \
to perform not only numerical calculations, but also algebraic calculations.  \
This ability arises because ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " treats a mathematical expression as something to be simplified as opposed \
to something to be evaluated numerically.  Thus, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is easily able to evaluate "
}], "Text",
 CellChangeTimes->{{3.391874458777322*^9, 3.3918745816965218`*^9}, {
   3.392211116061035*^9, 3.392211123830573*^9}, {3.392211153900618*^9, 
   3.392211233833625*^9}, 3.392213477297399*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"x", "+", "x"}], "x"]], "Input",
 CellChangeTimes->{{3.391874586533574*^9, 3.391874592081662*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.391874594114626*^9}]
}, Open  ]],

Cell[TextData[{
 "without having a specific value for ",
 Cell[BoxData["x"]],
 ", or"
}], "Text",
 CellChangeTimes->{{3.3918746041993284`*^9, 3.3918746679923306`*^9}, {
   3.3918747379743547`*^9, 3.391874782869807*^9}, 3.392213507885388*^9, {
   3.491830090001521*^9, 3.4918300966265635`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "+", "y"}], ")"}], "3"], "]"}]], "Input",
 CellChangeTimes->{{3.491830100360963*^9, 3.4918301073922577`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "3"], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "2"], " ", "y"}], "+", 
  RowBox[{"3", " ", "x", " ", 
   SuperscriptBox["y", "2"]}], "+", 
  SuperscriptBox["y", "3"]}]], "Output",
 CellChangeTimes->{3.491830108907892*^9}]
}, Open  ]],

Cell[TextData[{
 "without having a specific value for ",
 Cell[BoxData["x"]],
 " or ",
 Cell[BoxData["y"]],
 ". You can learn more about symbolic and algebraic computations in the \
tutorials on ",
 ButtonBox["Algebraic Calculations",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/AlgebraicCalculationsOverview"],
 "."
}], "Text",
 CellChangeTimes->{{3.3918746041993284`*^9, 3.3918746679923306`*^9}, {
   3.3918747379743547`*^9, 3.391874782869807*^9}, 3.392213507885388*^9, {
   3.491830090001521*^9, 3.4918301464550076`*^9}}],

Cell[TextData[{
 "Given its ability to manipulate algebraic expressions, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is also well-suited to solving systems of algebraic equations. The \
bread-and-butter function for this task is ",
 Cell[BoxData[
  ButtonBox["Solve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Solve"]]],
 "."
}], "Text",
 CellChangeTimes->{{3.3918759593649855`*^9, 3.3918760350453176`*^9}, {
   3.391876161159176*^9, 3.391876305960277*^9}, 3.392211611075569*^9, {
   3.4918302067366433`*^9, 3.491830215924202*^9}, 3.491831162477135*^9, {
   3.492130947002*^9, 3.492130947002*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", "x"}], "+", "1"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.391876307953182*^9, 3.39187631539403*^9}, {
  3.523876493859375*^9, 3.523876494*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["1", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.3918763160149355`*^9, 3.52387649478125*^9}]
}, Open  ]],

Cell[TextData[{
 "Before pointing you towards the tutorial on ",
 ButtonBox["Solving Equations",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/SolvingEquations"],
 " for more reading, let me make two points about equations in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  First, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses double equals (",
 Cell[BoxData["\[Equal]"]],
 ") for equations and single equals ",
 Cell[BoxData["="]],
 " for assignment.  Confusing the two is another common mistake in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  Note what happens if we replace ",
 Cell[BoxData["\[Equal]"]],
 " by ",
 Cell[BoxData["="]],
 " in the expression above."
}], "Text",
 CellChangeTimes->{{3.3918759593649855`*^9, 3.3918760350453176`*^9}, {
  3.391876161159176*^9, 3.3918763766032653`*^9}, {3.4918302222054925`*^9, 
  3.491830237627466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", "x"}], "+", "1"}], "=", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.391876307953182*^9, 3.39187631539403*^9}, 
   3.3918763853359966`*^9, {3.523876497109375*^9, 3.52387649721875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Set", "::", "\<\"write\"\>"}], ":", 
  " ", "\<\"Tag \\!\\(Plus\\) in \\!\\(1 + \\(\\(2\\\\ x\\)\\)\\) is \
Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.391876386347471*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "::", "\<\"eqf\"\>"}], ":", 
  " ", "\<\"\\!\\(0\\) is not a well-formed equation. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/eqf\\\", ButtonNote -> \
\\\"Solve::eqf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.391876386607851*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", "0", "]"}]], "Output",
 CellChangeTimes->{3.391876386647909*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData["Solve"]],
 " (and many more ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ") functions can take not only a single equation as input, but also a ",
 StyleBox["list",
  FontSlant->"Italic"],
 " of equations.  Lists in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " consist of a sequence of expressions, separated by commas and enclosed by \
curly brackets.  For example, "
}], "Text",
 CellChangeTimes->{{3.3918764112037086`*^9, 3.391876510828949*^9}, {
  3.392211688905538*^9, 3.392211701874744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", "y"}], "\[Equal]", "4"}], ",", 
     RowBox[{
      RowBox[{"x", "-", "y"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391876514243928*^9, 3.3918765244087467`*^9}, {
  3.52387650025*^9, 3.52387650221875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "2"}], ",", 
    RowBox[{"y", "\[Rule]", "2"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.3918765247692723`*^9, 3.523876503671875*^9}]
}, Open  ]],

Cell[TextData[{
 "We will learn much more about lists in later sections.  While Solve returns \
exact answers and even symbolic ones (e.g., when the coefficients of the \
equations contain undefined symbols), a faster and more robust routine for \
finding approximate numerical answers is ",
 Cell[BoxData[
  ButtonBox["NSolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NSolve"]]],
 ". For linear system of equations, a specialized routine is called ",
 Cell[BoxData[
  ButtonBox["LinearSolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinearSolve"]]],
 "."
}], "Text",
 CellChangeTimes->{{3.3918765332716675`*^9, 3.3918767001749916`*^9}, 
   3.3922135274425507`*^9, {3.4918302520806837`*^9, 3.491830357393858*^9}, {
   3.491830407581679*^9, 3.491830505144803*^9}, {3.492130958627*^9, 
   3.4921309635645*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Subsection",
 CellChangeTimes->{{3.523877984015625*^9, 3.523877985375*^9}}],

Cell[TextData[{
 StyleBox["Exercise 1:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Typeset these expressions by yourself. Try some other mathematical \
expressions with powers, integrals, derivatives, or matrices, and evaluate \
the results. "
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, {3.392209171640656*^9, 
   3.392209171889008*^9}, 3.491826096225961*^9, {3.491826539869426*^9, 
   3.491826584416586*^9}, {3.4918267087298813`*^9, 3.491826709464261*^9}, {
   3.4918267442301083`*^9, 3.4918267627927275`*^9}, {3.491827868206052*^9, 
   3.491827920565762*^9}, {3.492130761580125*^9, 3.492130776861375*^9}, {
   3.492168908709649*^9, 3.492168913928432*^9}, {3.4921689518817997`*^9, 
   3.4921689970852146`*^9}, {3.4921696472925005`*^9, 3.49216966129259*^9}, {
   3.523877954359375*^9, 3.523877967578125*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1", "+", 
  RowBox[{"2", "\[Times]", "3"}]}], "\[IndentingNewLine]", 
 FractionBox["5.0", "7.5"], "\[IndentingNewLine]", 
 SqrtBox[
  RowBox[{"2.2", "-", "0.9"}]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "+", 
   RowBox[{"2", "*", "3"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"5.0", "/", "7.5"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Sqrt", "[", 
   RowBox[{"2.2", "-", "0.9"}], "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"498", "^", "2"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"\[Integral]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"x", "^", "4"}]}], ")"}], " ", 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], " ", 
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}]}], "-", 
    RowBox[{"x", "^", "2"}]}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "'"}], "[", "x", "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"a", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10", ",", "9"}], "}"}]}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{
  3.491825886068366*^9, {3.4918262166486073`*^9, 3.4918262276330523`*^9}, {
   3.4918266656983557`*^9, 3.4918266675108676`*^9}, {3.4918306383644056`*^9, 
   3.4918306518801174`*^9}, {3.6508084986636353`*^9, 3.650808500540729*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.650808503079856*^9}],

Cell[BoxData["0.6666666666666666`"], "Output",
 CellChangeTimes->{3.6508085031249523`*^9}],

Cell[BoxData["1.140175425099138`"], "Output",
 CellChangeTimes->{3.650808503129521*^9}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.650808503134923*^9}],

Cell[BoxData["0.6666666666666666`"], "Output",
 CellChangeTimes->{3.650808503139*^9}],

Cell[BoxData["1.140175425099138`"], "Output",
 CellChangeTimes->{3.6508085031424427`*^9}],

Cell[BoxData["248004"], "Output",
 CellChangeTimes->{3.650808503146188*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "5"], "5"]}]], "Output",
 CellChangeTimes->{3.650808503853077*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
   SuperscriptBox["x", "4"]}]}]], "Output",
 CellChangeTimes->{3.6508085038576202`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "x"}], "+", 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
   SuperscriptBox["x", "3"]}], "+", 
  SuperscriptBox["x", "4"]}]], "Output",
 CellChangeTimes->{3.6508085039002247`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"69", ",", "101"}], "}"}]], "Output",
 CellChangeTimes->{3.650808504040043*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Exercise 2:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 "  Compute the value of the sum of the integers from ",
 Cell[BoxData["1"]],
 " to ",
 Cell[BoxData["30"]],
 " inclusive.  Instead of typing in the thirty numbers, use the ",
 Cell[BoxData[
  RowBox[{"Documentation", " ", "Center"}]]],
 " to locate a function in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " that performs this computation.  Find at least two functions that can \
handle this task."
}], "Text",
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, {3.392209171640656*^9, 
   3.392209171889008*^9}, 3.491826096225961*^9, {3.4918273797654257`*^9, 
   3.4918273806404314`*^9}, {3.491830040266828*^9, 3.491830040735581*^9}, 
   3.4921308075645*^9, 3.492169015335331*^9, 3.5238779561875*^9, 
   3.523877990515625*^9},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{"i", ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "30"}], "}"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "30"], "i"}], "\n"}], "\n", 
 RowBox[{"Total", "[", 
  RowBox[{"Range", "[", "30", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.650808525397152*^9, 3.650808525400117*^9}}],

Cell[BoxData["465"], "Output",
 CellChangeTimes->{3.650808526770177*^9}],

Cell[BoxData["465"], "Output",
 CellChangeTimes->{3.650808526774168*^9}],

Cell[BoxData["465"], "Output",
 CellChangeTimes->{3.650808526817987*^9}]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[TextData[{
 StyleBox["Exercise 3:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 "  Given two number ",
 Cell[BoxData["a"]],
 " and ",
 Cell[BoxData["b"]],
 ", the ",
 StyleBox["absolute",
  FontSlant->"Italic"],
 " error between the two numbers is ",
 Cell[BoxData[
  RowBox[{"|", 
   RowBox[{"a", "-", "b"}], "|"}]]],
 " while the ",
 StyleBox["relative",
  FontSlant->"Italic"],
 " error between the two number is ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"|", 
    RowBox[{"a", "-", "b"}], "|"}], "a"]]],
 ".  To 20 significant digits, what are the absolute and relative errors \
between ",
 Cell[BoxData["\[Pi]"]],
 " and ",
 Cell[BoxData[
  FractionBox["22", "7"]]],
 "?  "
}], "Text",
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, 3.3918728001893134`*^9, {
   3.3918729449102983`*^9, 3.391872974753806*^9}, {3.391873051425584*^9, 
   3.3918731539049854`*^9}, {3.391873443186721*^9, 3.3918734635163593`*^9}, {
   3.391873516293301*^9, 3.3918735876373115`*^9}, {3.3918736406145453`*^9, 
   3.391873748221422*^9}, {3.391874371069455*^9, 3.391874371239703*^9}, {
   3.40897809496875*^9, 3.408978095171875*^9}, {3.4918274603440666`*^9, 
   3.4918274606409435`*^9}, {3.4918276012199683`*^9, 3.49182761011065*^9}, 
   3.4921308075645*^9, {3.492130928798875*^9, 3.492130928798875*^9}, {
   3.4921690175384703`*^9, 3.4921690189603543`*^9}, 3.492169718917959*^9, {
   3.523876053578125*^9, 3.523876056015625*^9}, 3.523877957359375*^9, 
   3.523877990515625*^9},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "Pi"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"22", "/", "7"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"SetAccuracy", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"a", "-", "b"}], "]"}], ",", "20"}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"SetAccuracy", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"a", "-", "b"}], "]"}], "/", "a"}], ",", "20"}], "]"}]}], "Input",
 CellChangeTimes->{3.650808548568534*^9}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.650808549598563*^9}],

Cell[BoxData[
 FractionBox["22", "7"]], "Output",
 CellChangeTimes->{3.650808549602624*^9}],

Cell[BoxData["0.001264489267349618680213759577639972945687743482037036858`16.\
390817481145234"], "Output",
 CellChangeTimes->{3.650808549848649*^9}],

Cell[BoxData["0.000402499434770681975840798341518847073746344654297678062`16.\
390783484589388"], "Output",
 CellChangeTimes->{3.6508085498532743`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Exercise:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to find the solutions to the quadratic equation ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"b", " ", "x"}], "+", "c"}], "\[Equal]", "0"}]]],
 ".  Backsubstitute the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s answer into the equation and show the answers are actual solutions to \
the equation (check out the ",
 Cell[BoxData[
  ButtonBox["ReplaceAll",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ReplaceAll"]]],
 " function for substitution, and the ",
 Cell[BoxData[
  ButtonBox["Simplify",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Simplify"]], "InlineFormula"],
 " function for reducing an algebraic expression to its simplist form)."
}], "Text",
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, {3.392209171640656*^9, 
   3.392209171889008*^9}, 3.491826096225961*^9, {3.491830292471567*^9, 
   3.491830294034077*^9}, {3.4918305222074127`*^9, 3.491830545582562*^9}, 
   3.4918306643645725`*^9, {3.492130836502*^9, 3.492130881392625*^9}, {
   3.4921690410073705`*^9, 3.492169043585512*^9}, {3.52387651009375*^9, 
   3.5238765555*^9}, 3.523877990515625*^9},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b"}], "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "*", 
      RowBox[{"x", "^", "2"}]}], "+", 
     RowBox[{"b", "*", "x"}], "+", "c"}], "\[Equal]", "0"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{"eq", ",", "x"}], "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"eq", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "2"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}]}], "}"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"v", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "2"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}]}], "}"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Simplify", "[", 
  RowBox[{"v", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "22"}], ",", 
     RowBox[{"b", "\[Rule]", "11"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.650808564889909*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "+", 
   RowBox[{"b", " ", "x"}], "+", 
   RowBox[{"a", " ", 
    SuperscriptBox["x", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.650808565718855*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.650808565990888*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", 
   RowBox[{"2", " ", "x"}], "+", 
   SuperscriptBox["x", "2"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.650808565995385*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6508085660005836`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "44"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "11"}], "-", 
        SqrtBox[
         RowBox[{"121", "-", 
          RowBox[{"88", " ", "c"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "44"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "11"}], "+", 
        SqrtBox[
         RowBox[{"121", "-", 
          RowBox[{"88", " ", "c"}]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6508085660984707`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variables", "Section",
 CellChangeTimes->{{3.4918322963125167`*^9, 3.491832299781289*^9}, {
   3.4918325369859324`*^9, 3.491832538845319*^9}, {3.491832593736295*^9, 
   3.491832599376956*^9}, 3.491834297169072*^9, {3.491834451216933*^9, 
   3.491834457951351*^9}, {3.491840827679617*^9, 3.491840839867195*^9}, 
   3.4919570587139997`*^9}],

Cell[TextData[{
 "In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ",  a variable can assume any kind of value that a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expression would return: number (Integer, Real, Complex, etc.), boolean \
expression (True or False), string, graphics, dynamic objects, etc., and even \
a function. There are two kinds of variables, ones that are reserved by ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " with constant values (which typically start with an uppercase letter), and \
ones that the user define (which are suggested to start with a lowercase \
letter). "
}], "Text",
 CellChangeTimes->{{3.491840614631378*^9, 3.4918407140538898`*^9}, {
  3.492129106361375*^9, 3.492129158861375*^9}, {3.4921311476895*^9, 
  3.492131206580125*^9}}],

Cell[TextData[{
 "In the last part of this section, we will discuss the scope of variables, \
and introduce one of the most useful functions in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " for programming - ",
 Cell[BoxData["Module"]],
 "."
}], "Text",
 CellChangeTimes->{{3.491840614631378*^9, 3.4918407140538898`*^9}, {
  3.492129106361375*^9, 3.492129158861375*^9}, {3.4921311476895*^9, 
  3.492131221236375*^9}, {3.4921697750433183`*^9, 3.4921697766058283`*^9}}],

Cell[CellGroupData[{

Cell["System constants", "Subsection",
 CellChangeTimes->{{3.4918320184669886`*^9, 3.4918320247795286`*^9}}],

Cell[TextData[{
 "Several variables and symbols are reserved by ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "to hold values of well-known constants, such as ",
 Cell[BoxData["\[ExponentialE]"]],
 ", ",
 Cell[BoxData["\[ImaginaryI]"]],
 ", ",
 Cell[BoxData["\[Pi]"]],
 " and ",
 Cell[BoxData["\[Infinity]"]],
 " (positive infinity). Their corresponding letter variables are ",
 Cell[BoxData["E"]],
 ", ",
 Cell[BoxData["I"]],
 ",  ",
 Cell[BoxData["Pi"]],
 " and ",
 Cell[BoxData["Infinity"]],
 ". For example,"
}], "Text",
 CellChangeTimes->{{3.392045826317886*^9, 3.3920458281305647`*^9}, 
   3.3920562861856127`*^9, {3.4918320289670553`*^9, 3.49183221010884*^9}, {
   3.4918323427190638`*^9, 3.491832343547194*^9}, {3.4918323809693084`*^9, 
   3.49183243670404*^9}, {3.4918551737452497`*^9, 3.4918553679483747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Pi"], "Input",
 CellChangeTimes->{
  3.4918323593129196`*^9, {3.4918324603916917`*^9, 3.491832460563568*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.491832359969174*^9, 3.4918324608448195`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "treats these constants as symbolic forms during evaluation untill they are \
explicitly asked to evaluate to numerical numbers (e.g., by calling functions \
such as ",
 Cell[BoxData[
  ButtonBox["N",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/N"]]],
 "). However, this also means that the computation can be rather slow. For \
faster numerical evaluations, a good practice is to first cast these symbols \
to numberical numbers by ",
 Cell[BoxData["N"]],
 " before using them in computation:"
}], "Text",
 CellChangeTimes->{{3.4918553603233747`*^9, 3.4918554119952497`*^9}, {
  3.4921310351895*^9, 3.49213104159575*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.4918323459690847`*^9, 3.4918323465003376`*^9}, {
  3.49183245468853*^9, 3.4918324559229136`*^9}}],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{3.491832348765977*^9, 3.491832456376041*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["User-defined variables", "Subsection",
 CellChangeTimes->{{3.491832280546791*^9, 3.4918322880155883`*^9}}],

Cell[TextData[{
 "User-defined variables, by convention, always start with a lowercase letter \
to distinguish them from ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s built\[Hyphen]in constants and functions. The variable name can be made \
up of letters, numerics, and symbols.  Unlike other languages such as C or \
Java, there is no need to declare the ",
 StyleBox["type",
  FontSlant->"Italic"],
 " of the variable, and a same variable can be assigned with values of \
different types.  Variables values are set via the assignment operator ",
 Cell[BoxData["="]],
 ". For example, "
}], "Text",
 CellChangeTimes->{{3.3920458387462525`*^9, 3.3920458568730407`*^9}, {
  3.491832321515803*^9, 3.491832329281478*^9}, {3.4918326420178537`*^9, 
  3.4918326432991123`*^9}, {3.491832838284735*^9, 3.4918328617536354`*^9}, {
  3.491832919941508*^9, 3.4918329633167853`*^9}, {3.4918329936451044`*^9, 
  3.491833027426571*^9}, {3.491841626450354*^9, 3.4918416331378965`*^9}, {
  3.4918554410733747`*^9, 3.4918554492296247`*^9}, {3.4918554849014997`*^9, 
  3.4918555309952497`*^9}, {3.492131068986375*^9, 3.492131108205125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"r", " ", "=", "10"}], "\[IndentingNewLine]", 
 RowBox[{"\[Alpha]", " ", "=", " ", 
  RowBox[{"4", "\[Pi]"}]}]}], "Input",
 CellChangeTimes->{{3.3920458604282947`*^9, 3.392045861559967*^9}, {
  3.491832758565475*^9, 3.4918327617373705`*^9}, {3.4918349236418314`*^9, 
  3.4918349247824636`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.4918623845733747`*^9}],

Cell[BoxData[
 RowBox[{"4", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.4918623845889997`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses different font colors to differentiate variables that have been \
assigned a value and those that have not. Note that the color of the two \
variables ",
 Cell[BoxData["r"]],
 " and ",
 Cell[BoxData["\[Alpha]"]],
 " changed after you evaluated the cell above. Variables can be assigned with \
expressions involving other variables, and only the values (not the \
reference) of these other variables are used in the assignment. For example, \
let's define a new variable computed from ",
 Cell[BoxData["r"]],
 " and ",
 Cell[BoxData["\[Alpha]"]],
 ":"
}], "Text",
 CellChangeTimes->{{3.491832731237175*^9, 3.4918327902688026`*^9}, {
   3.4918328230190125`*^9, 3.4918328325034485`*^9}, 3.491832876034977*^9, {
   3.4918623316358747`*^9, 3.4918625511827497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"area", " ", "=", " ", 
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox["r", "2"]}]}]], "Input",
 CellChangeTimes->{{3.3920458668978553`*^9, 3.392045867879306*^9}, {
  3.4918327810031185`*^9, 3.491832784940644*^9}}],

Cell[BoxData[
 RowBox[{"400", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.3920458683900604`*^9, 3.491832654142932*^9, 
  3.4918327858156495`*^9, 3.4918555371202497`*^9, 3.4918560561202497`*^9}]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
   "Changing", " ", "the", " ", "value", " ", "of", " ", "variable", "  ", 
    Cell[BoxData["r"]], " ", "will", " ", "not", " ", "affect", " ", "the", 
    " ", "value", " ", "of", " ", Cell[BoxData["area"]]}], ":"}], 
  TraditionalForm]], "Text",
 CellChangeTimes->{{3.4918558531514997`*^9, 3.4918560381046247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"r", "=", "20"}], "\[IndentingNewLine]", 
 RowBox[{"area", " "}]}], "Input",
 CellChangeTimes->{{3.3920458668978553`*^9, 3.392045867879306*^9}, {
  3.4918327810031185`*^9, 3.491832784940644*^9}, {3.4918560479796247`*^9, 
  3.4918560587296247`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.4918560503389997`*^9, 3.4918560590421247`*^9}}],

Cell[BoxData[
 RowBox[{"400", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{{3.4918560503389997`*^9, 3.4918560590577497`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Note that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " displays the values of every expression we typed. Sometimes this is \
undesirable, especially if there are multiple expressions to be evaluated in \
order and you only care about the final result. To supress the display of \
results of an expression, end the expressions with a semicolon (;):"
}], "Text",
 CellChangeTimes->{{3.4918349039698305`*^9, 3.491834947313858*^9}, {
  3.4918601837921247`*^9, 3.4918602674483747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", " ", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", " ", "=", " ", 
   RowBox[{"4", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"area", " ", "=", " ", 
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox["r", "2"]}]}]}], "Input",
 CellChangeTimes->{{3.3920458668978553`*^9, 3.392045867879306*^9}, {
  3.4918327810031185`*^9, 3.491832784940644*^9}, {3.4918349521420135`*^9, 
  3.491834977126549*^9}}],

Cell[BoxData[
 RowBox[{"400", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.4918349778609285`*^9, 3.4918555413233747`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Scoping and ",
 Cell[BoxData["Module"]]
}], "Subsection",
 CellChangeTimes->{{3.4918555670108747`*^9, 3.4918555678546247`*^9}, {
  3.4921697878559003`*^9, 3.492169793199684*^9}}],

Cell[TextData[{
 "The variables in the above examples all have a global scope. That is, \
changing the value of the variable anytime in the current ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session (even in different notebooks) would affect all computations \
involving that variable. To clear the content of a variable, use the ",
 Cell[BoxData[
  ButtonBox["Clear",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Clear"]]],
 " command,  which will make the variable an undefined symbol. For example:"
}], "Text",
 CellChangeTimes->{{3.491833525570384*^9, 3.491833544398629*^9}, {
   3.491833707743425*^9, 3.4918337529624643`*^9}, {3.491833812165968*^9, 
   3.4918339396042833`*^9}, {3.4918339895577283`*^9, 
   3.4918340383080406`*^9}, {3.491834103699084*^9, 3.4918341164491653`*^9}, {
   3.4918341486056213`*^9, 3.491834151090012*^9}, {3.4918378083634186`*^9, 
   3.4918378377542315`*^9}, {3.4918555850733747`*^9, 
   3.4918556196671247`*^9}, {3.4918569103233747`*^9, 3.4918569170421247`*^9}, 
   3.4918599652921247`*^9, {3.4918626725264997`*^9, 3.4918626801514997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", "1"}]], "Input",
 CellChangeTimes->{{3.491842802786008*^9, 3.4918428061922793`*^9}, {
  3.4918599760577497`*^9, 3.4918599932139997`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.4918599950264997`*^9, 3.492131239580125*^9}]
}, Open  ]],

Cell[TextData[{
 "now note how the color of the variable ",
 Cell[BoxData["a"]],
 " changes after its content is cleared:"
}], "Text",
 CellChangeTimes->{{3.4918626835577497`*^9, 3.4918627225421247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], 
  ";"}], "\[IndentingNewLine]", "a"}], "Input",
 CellChangeTimes->{{3.491842802786008*^9, 3.4918428061922793`*^9}, {
  3.4918599760577497`*^9, 3.4918599932139997`*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{
  3.4918428065985317`*^9, {3.4918599883077497`*^9, 3.4918599978389997`*^9}, 
   3.492131240767625*^9}]
}, Open  ]],

Cell[TextData[{
 "Oftentimes it is useful to create ",
 StyleBox["local",
  FontSlant->"Italic"],
 " variables that are only shared among a block of code, for example, within \
a function. Such a block can be easily created with the function ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Module",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Module"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "..."}], "}"}], ",", "expr"}], "]"}]]],
 ", which specifies that occurrences of the symbols ",
 Cell[BoxData["x"], "InlineFormula"],
 ", ",
 Cell[BoxData["y"], "InlineFormula"],
 ", \[Ellipsis]  in ",
 Cell[BoxData["expr"], "InlineFormula"],
 " should be treated as local. Consider the following code:"
}], "Text",
 CellChangeTimes->{{3.4918561307764997`*^9, 3.4918561965421247`*^9}, {
  3.4918562505733747`*^9, 3.4918562643389997`*^9}, {3.4918564974171247`*^9, 
  3.4918566799014997`*^9}, {3.4918567136046247`*^9, 3.4918567246202497`*^9}, {
  3.4918600071046247`*^9, 3.4918600072296247`*^9}, {3.4918604225264997`*^9, 
  3.4918604471514997`*^9}, {3.492131251611375*^9, 3.49213127340825*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "10"}], ";", 
  RowBox[{"b", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "a", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", " ", "=", "20"}], ";", 
    RowBox[{"b", "=", "20"}], ";", "\[IndentingNewLine]", 
    RowBox[{"a", "+", "b"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"a", "+", "b"}]}], "Input",
 CellChangeTimes->{{3.4918562009014997`*^9, 3.4918562014639997`*^9}, {
  3.4918566194639997`*^9, 3.4918566233233747`*^9}, {3.4918567293389997`*^9, 
  3.4918567462139997`*^9}, {3.4918567990577497`*^9, 3.4918568505733747`*^9}, {
  3.4918569220889997`*^9, 3.4918569415108747`*^9}, {3.4918600117608747`*^9, 
  3.4918600371046247`*^9}}],

Cell[BoxData["40"], "Output",
 CellChangeTimes->{3.4918568521202497`*^9, 3.4918569428546247`*^9, 
  3.4918600374171247`*^9}],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{3.4918568521202497`*^9, 3.4918569428546247`*^9, 
  3.4918600374327497`*^9}]
}, Open  ]],

Cell[TextData[{
 "The reference to ",
 Cell[BoxData["a"]],
 " in the body of ",
 Cell[BoxData["Module"]],
 " does not affect the global variable, since a local variable with the same \
name is declared in ",
 Cell[BoxData["Module"]],
 ". On the other hand, the referece to ",
 Cell[BoxData["b"]],
 " in the body of ",
 Cell[BoxData["Module"]],
 " affects the global variable. Local variables are colored differently than \
global variables in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.4918600575421247`*^9, 3.4918601539483747`*^9}, {
  3.4918608767921247`*^9, 3.4918608889327497`*^9}}],

Cell[TextData[{
 "The initialization of local variables in ",
 Cell[BoxData["Module"]],
 " can take place within the starting curly brackets, for example:"
}], "Text",
 CellChangeTimes->{{3.4918603210733747`*^9, 3.4918603700577497`*^9}, {
  3.4918604626202497`*^9, 3.4918604648077497`*^9}, {3.492131294017625*^9, 
  3.492131295580125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "=", "20"}], ",", "b"}], "}"}], ",", 
   RowBox[{
    RowBox[{"b", "=", "10"}], ";", 
    RowBox[{"a", "+", "b"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4918603787764997`*^9, 3.4918604053389997`*^9}, {
  3.4918604812608747`*^9, 3.4918604947608747`*^9}, {3.4918663574796247`*^9, 
  3.4918663740108747`*^9}}],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{3.4918604059483747`*^9, 3.4918604953546247`*^9, 
  3.4918663762139997`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Subsection",
 CellChangeTimes->{{3.523877571171875*^9, 3.52387757228125*^9}}],

Cell[TextData[{
 StyleBox["Exercise:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Define two global variables ",
 Cell[BoxData["a"]],
 ", ",
 Cell[BoxData["b"]],
 ", and write a ",
 Cell[BoxData["Module"]],
 " that swaps their values without creating any new global variables."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, {3.392209171640656*^9, 
   3.392209171889008*^9}, 3.491826096225961*^9, {3.491830292471567*^9, 
   3.491830294034077*^9}, {3.4918305222074127`*^9, 3.491830545582562*^9}, 
   3.4918306643645725`*^9, {3.4918322209995346`*^9, 3.4918322523903604`*^9}, {
   3.4918605318702497`*^9, 3.4918605960264997`*^9}, 3.4921313016895*^9, {
   3.4921691555081034`*^9, 3.4921691594925036`*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "90"}], ";", 
   RowBox[{"b", "=", "9999"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", 
    RowBox[{
     RowBox[{"temp", "=", "a"}], ";", 
     RowBox[{"a", "=", "b"}], ";", 
     RowBox[{"b", "=", "temp"}], ";"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<a = \>\"", ",", "a", ",", "\"\< and b = \>\"", ",", "b"}], 
  "]"}]}], "Input",
 CellChangeTimes->{3.650808593032836*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a = \"\>", "\[InvisibleSpace]", "9999", 
   "\[InvisibleSpace]", "\<\" and b = \"\>", "\[InvisibleSpace]", "90"}],
  SequenceForm["a = ", 9999, " and b = ", 90],
  Editable->False]], "Print",
 CellChangeTimes->{3.6508085946418877`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controlling program flow", "Section",
 CellChangeTimes->{{3.491834683343418*^9, 3.4918346881871996`*^9}, {
  3.491840872336153*^9, 3.491840881617462*^9}, {3.4921722608717275`*^9, 
  3.492172261918609*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " provides a comprehensive set of functions for controling program flow. We \
cover some basic ones here, and you should consult with tutorials in the ",
 Cell[BoxData[
  RowBox[{"Documentation", " ", "Center"}]]],
 " for more information.  As we mentioned before, all ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions are called as ",
 Cell[BoxData[
  RowBox[{"foo", "[", 
   RowBox[{"arg1", ",", "..."}], "]"}]]],
 " with arguments contained in square brackets."
}], "Text",
 CellChangeTimes->{{3.4918350182049365`*^9, 3.4918351684715233`*^9}, {
  3.4918353711915708`*^9, 3.4918354578483753`*^9}, {3.491838459976964*^9, 
  3.491838482383357*^9}, {3.4918385203054748`*^9, 3.4918385524775558`*^9}, {
  3.491840454130351*^9, 3.491840463364785*^9}, {3.4918405075994434`*^9, 
  3.4918405580685167`*^9}}],

Cell[CellGroupData[{

Cell["Print", "Subsection",
 CellChangeTimes->{{3.491839693172356*^9, 3.491839697063006*^9}, {
  3.491840447505309*^9, 3.491840448005312*^9}}],

Cell[TextData[{
 "Probably the most useful debugging function in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is the ",
 Cell[BoxData[
  ButtonBox["Print",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Print"]]],
 " command, which we advise you to use often during coding. Print has a \
rather loose syntex, and can display any one or multiple expressions (e.g., \
numerics, string, graphics, dynamic objects, etc.). For example:"
}], "Text",
 CellChangeTimes->{{3.4918397002661514`*^9, 3.4918397635165567`*^9}, {
  3.4918398128606224`*^9, 3.4918398261888323`*^9}, {3.491839876626655*^9, 
  3.4918399083768587`*^9}, {3.491839990627385*^9, 3.4918400048618507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<a's value is \>\"", ",", "a"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4918387798227606`*^9, 3.491838787557185*^9}, {
   3.491838932964366*^9, 3.4918389558707623`*^9}, {3.4918389951366386`*^9, 
   3.491838997214777*^9}, 3.4918399208456883`*^9, {3.491839958736556*^9, 
   3.4918399734554*^9}, {3.491840007643119*^9, 3.4918400084243736`*^9}, {
   3.4918400706591473`*^9, 3.49184007808107*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a's value is \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["a's value is ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4918399773616753`*^9, {3.491840071877905*^9, 3.4918400786748233`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conditionals", "Subsection",
 CellChangeTimes->{{3.491835147158887*^9, 3.4918351500964055`*^9}, {
   3.4918353052067733`*^9, 3.4918353218006296`*^9}, {3.491836631840264*^9, 
   3.4918366351840353`*^9}, 3.491839032183751*^9}],

Cell[TextData[{
 "Conditional functions utilize ",
 ButtonBox["boolean expressions",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Booleans"],
 ", which have values of either True or False. A boolean expression can be \
created by ",
 ButtonBox["Relational Operators",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/RelationalAndLogicalOperators"],
 " (e.g., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"<", 
     RowBox[{",", 
      RowBox[{">", 
       RowBox[{",", 
        RowBox[{"\[Equal]", 
         RowBox[{",", 
          RowBox[{"\[GreaterEqual]", 
           RowBox[{",", 
            RowBox[{"\[LessEqual]", 
             RowBox[{",", "\[NotEqual]"}]}]}]}]}]}]}]}]}]}], " ", ")"}], 
   TraditionalForm]]],
 ", for example:"
}], "Text",
 CellChangeTimes->{{3.4918417230915976`*^9, 3.4918418160921926`*^9}, {
  3.4918418504049125`*^9, 3.4918418879520273`*^9}, {3.4918422725013638`*^9, 
  3.491842274267*^9}, {3.491842309392225*^9, 3.491842309392225*^9}, {
  3.49213137909575*^9, 3.492131379111375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Infinity]", "\[Equal]", "\[Infinity]"}]], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.491841901139612*^9}]
}, Open  ]],

Cell[TextData[{
 "Some ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " built-in functions also return a boolean value. These functions are called \
",
 ButtonBox["Testing Expressions",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/TestingExpressions"],
 ". The names of these functions all end with an uppercase Q. For example, \
the following function tests whether an integer if even:"
}], "Text",
 CellChangeTimes->{{3.4918419094052896`*^9, 3.4918420389686193`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvenQ", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.491841933952322*^9, 3.4918419346085763`*^9}, {
  3.4918420218903847`*^9, 3.491842050984321*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.491842042749893*^9, 3.491842051421824*^9}}]
}, Open  ]],

Cell[TextData[{
 "You can also combine boolean values using ",
 ButtonBox["Logical Operators",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/RelationalAndLogicalOperators"],
 " such as And (",
 Cell[BoxData[
  FormBox["&&", TraditionalForm]]],
 ") and Or (",
 Cell[BoxData[
  FormBox["||", TraditionalForm]]],
 "):"
}], "Text",
 CellChangeTimes->{{3.491842059562501*^9, 3.4918421664850607`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Infinity]", "\[Equal]", "\[Infinity]"}], "&&", 
  RowBox[{"EvenQ", "[", "1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Infinity]", "\[Equal]", "\[Infinity]"}], "||", 
  RowBox[{"EvenQ", "[", "1", "]"}]}]}], "Input",
 CellChangeTimes->{{3.49184217895389*^9, 3.4918421945008645`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.4918421857195587`*^9, 3.4918421950946183`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.4918421857195587`*^9, 3.491842195110244*^9}}]
}, Open  ]],

Cell[TextData[{
 "The most common conditional function is ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["If",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/If"], "[", 
   RowBox[{"condition", ",", "t", ",", "f"}], "]"}]]],
 ", which evaluates the boolean expression ",
 Cell[BoxData["condition"]],
 " and evaluate ",
 Cell[BoxData["t"]],
 " if ",
 Cell[BoxData["condition"]],
 " is True or ",
 Cell[BoxData["f"]],
 " otherwise. A boolean expression can be either a comparison (using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"<", 
     RowBox[{",", 
      RowBox[{">", 
       RowBox[{",", 
        RowBox[{"\[Equal]", 
         RowBox[{",", 
          RowBox[{"\[GreaterEqual]", 
           RowBox[{",", 
            RowBox[{"\[LessEqual]", 
             RowBox[{",", "\[NotEqual]"}]}]}]}]}]}]}]}]}]}], " ", ")"}], 
   TraditionalForm]]],
 " or a function that returns For example:"
}], "Text",
 CellChangeTimes->{{3.4918355115049686`*^9, 3.4918355696147156`*^9}, {
   3.491835625740075*^9, 3.49183565225587*^9}, 3.4918357108812447`*^9, 
   3.491835989804905*^9, {3.4918366610748262`*^9, 3.4918366620748324`*^9}, {
   3.4918367050907326`*^9, 3.491836709918888*^9}, {3.4918371106870785`*^9, 
   3.491837227469076*^9}, {3.491838399710953*^9, 3.491838401945342*^9}, {
   3.4918416587005606`*^9, 3.49184170627899*^9}, {3.491842205391559*^9, 
   3.4918422258448153`*^9}, {3.4918607249171247`*^9, 
   3.4918607260421247`*^9}, {3.4921314065645*^9, 3.49213141047075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"\[Infinity]", "\[Equal]", "\[Infinity]"}], ",", "1", ",", "2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"\[Infinity]", "\[NotEqual]", "\[Infinity]"}], ",", "1", ",", 
   "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.491835593286742*^9, 3.4918356717716193`*^9}, {
  3.4918358884605064`*^9, 3.4918358978980665`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.491835573114738*^9, 3.491835664271571*^9}, 
   3.4918358984293203`*^9}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.491835573114738*^9, 3.491835664271571*^9}, 
   3.4918358984293203`*^9}]
}, Open  ]],

Cell[TextData[{
 "One of ",
 Cell[BoxData[
  RowBox[{"t", ",", "f"}]]],
 " can be omitted, and nothing will happen if they are chosen to be \
evaluated. For example:"
}], "Text",
 CellChangeTimes->{{3.4918368170914497`*^9, 3.491836889529413*^9}, {
   3.4918372331097364`*^9, 3.4918372492973404`*^9}, {3.4918384064922466`*^9, 
   3.491838408445384*^9}, 3.4918422448761873`*^9, {3.4921314295645*^9, 
   3.492131442423875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"\[Infinity]", "\[Equal]", "\[Infinity]"}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.491836867810524*^9, {3.4918422391574*^9, 3.4918422611262913`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.4918368700292883`*^9, {3.49184223982928*^9, 3.4918422613606677`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"\[Infinity]", "\[NotEqual]", "\[Infinity]"}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.491836876076202*^9, 3.49183687652933*^9}, {
  3.491842252985614*^9, 3.491842255657506*^9}}],

Cell[TextData[{
 "Calling ",
 Cell[BoxData["If"]],
 " with a non-boolean expression would cause ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to output the un-evaluated expression:"
}], "Text",
 CellChangeTimes->{{3.4918627625733747`*^9, 3.4918628540733747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"\[Infinity]", ",", "1", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.4918628292608747`*^9, 3.4918628300889997`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"\[Infinity]", ",", "1", ",", "2"}], "]"}]], "Output",
 CellChangeTimes->{3.4918628308546247`*^9}]
}, Open  ]],

Cell["You can nest expressions to create more complex expressions:", "Text",
 CellChangeTimes->{{3.4918357243500805`*^9, 3.4918357477408557`*^9}, {
  3.4918369018888674`*^9, 3.491836903263876*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"\[Infinity]", "\[Equal]", "\[Infinity]"}], ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Infinity]", "\[Equal]", "\[Pi]"}], ",", "1", ",", "2"}], 
    "]"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.4918357517877564`*^9, 3.4918358029130836`*^9}, {
  3.491835839397692*^9, 3.491835925585744*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.491835854179037*^9, 3.491835880491705*^9}, {
  3.49183591252316*^9, 3.4918359261951227`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Other conditional functions include ",
 Cell[BoxData[
  ButtonBox["Which",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Which"]]],
 ", which tests a set of boolean expressions in turn, and ",
 Cell[BoxData[
  ButtonBox[
   ButtonBox["Switch",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Which"],
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Switch"]]],
 ", which is similar to the switch/case command in C and Java. See tutorials \
on ",
 ButtonBox["Conditionals",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/Conditionals"],
 " for more functions and examples."
}], "Text",
 CellChangeTimes->{{3.4918359448827424`*^9, 3.4918359626016054`*^9}, {
  3.491836014680064*^9, 3.4918361168369675`*^9}, {3.4918366514185143`*^9, 
  3.4918366890437546`*^9}, {3.49183759531518*^9, 3.491837648956148*^9}, {
  3.4918386383687305`*^9, 3.4918386602126207`*^9}, {3.491839177200304*^9, 
  3.491839177200304*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loops", "Subsection",
 CellChangeTimes->{{3.4918353155193396`*^9, 3.4918353249412746`*^9}, {
  3.4918390349650187`*^9, 3.4918390355743976`*^9}}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["For",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/For"], "[", 
   RowBox[{"start", ",", "test", ",", "incr", ",", "body"}], "]"}]]],
 " command has a similar syntex to C and Java, executing ",
 Cell[BoxData["start"], "InlineFormula"],
 ", then repeatedly evaluates ",
 Cell[BoxData["body"], "InlineFormula"],
 " and ",
 Cell[BoxData["incr"], "InlineFormula"],
 " until ",
 Cell[BoxData["test"], "InlineFormula"],
 " fails to give True. For example:"
}], "Text",
 CellChangeTimes->{{3.4918369208108635`*^9, 3.4918369560610886`*^9}, {
  3.4918370069520397`*^9, 3.4918370085457993`*^9}, {3.491837061233637*^9, 
  3.4918370755618534`*^9}, {3.4918373037820644`*^9, 3.4918373814075613`*^9}, {
  3.4918374171265397`*^9, 3.4918374264547243`*^9}, {3.491838392820284*^9, 
  3.491838394367169*^9}, {3.4918606718077497`*^9, 3.4918606740421247`*^9}, {
  3.492131550798875*^9, 3.4921315574395*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "3"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"Print", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4918369440922623`*^9, 3.491836945123519*^9}, {
   3.49183697971749*^9, 3.4918369995769925`*^9}, {3.491837728722284*^9, 
   3.4918377636287575`*^9}, {3.4918379883645706`*^9, 3.4918380043490477`*^9}, 
   3.491839283482234*^9, 3.4918393727640553`*^9, {3.4918400928780394`*^9, 
   3.491840147065886*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{{3.4918400952374296`*^9, 3.491840097987447*^9}, 
   3.4918401477221403`*^9, 3.492131703705125*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.4918400952374296`*^9, 3.491840097987447*^9}, 
   3.4918401477221403`*^9, 3.492131703705125*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.4918400952374296`*^9, 3.491840097987447*^9}, 
   3.4918401477221403`*^9, 3.492131703705125*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Do",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Do"], "[", 
   RowBox[{"expr", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      SubscriptBox["i", "min"], ",", 
      SubscriptBox["i", "max"], ",", "di"}], "}"}]}], "]"}]], "InlineFormula"],
 " command is a more succinct way to write an iterative expression that uses \
an iterator ",
 Cell[BoxData["i"]],
 " within a range of values ",
 Cell[BoxData[
  RowBox[{"[", 
   RowBox[{
    SubscriptBox["i", "min"], ",", 
    SubscriptBox["i", "max"]}], "]"}]]],
 " at a fixed increment ",
 Cell[BoxData["di"]],
 ". The following expression achieves the same effect as the one above:"
}], "Text",
 CellChangeTimes->{{3.4918374585955553`*^9, 3.4918375131584044`*^9}, {
  3.491837549252385*^9, 3.491837565768116*^9}, {3.4918376895032825`*^9, 
  3.4918377205347314`*^9}, {3.4918381174278965`*^9, 3.4918381729438767`*^9}, {
  3.4918607607608747`*^9, 3.4918607616827497`*^9}, {3.4918607971514997`*^9, 
  3.4918608581358747`*^9}, {3.492131565642625*^9, 3.4921315971895*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4918376642531214`*^9, 3.49183767497194*^9}, {
   3.4918377571755905`*^9, 3.491837758003721*^9}, 3.49183799688025*^9, 
   3.4918392867947555`*^9, {3.4918401508627853`*^9, 3.491840156440946*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.491840156737823*^9, 3.492131705861375*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.491840156737823*^9, 3.492131705861375*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.491840156737823*^9, 3.492131705861375*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Note that the iterator ",
 Cell[BoxData["i"]],
 " in ",
 Cell[BoxData["Do"]],
 " is a ",
 StyleBox["local",
  FontSlant->"Italic"],
 " variable whose scope is only within the body of ",
 Cell[BoxData["Do"]],
 " . The ",
 Cell[BoxData[
  SubscriptBox["i", "min"]]],
 " part can be omitted if it is 1, and so is the increment ",
 Cell[BoxData["di"]],
 " if it is 1: "
}], "Text",
 CellChangeTimes->{{3.491837784691392*^9, 3.491837801019622*^9}, {
  3.4918378507074394`*^9, 3.491837871973201*^9}, {3.491838187818972*^9, 
  3.491838267022604*^9}, {3.491839078121545*^9, 3.4918390890122395`*^9}, {
  3.491839305169873*^9, 3.491839348263899*^9}, {3.4918607859796247`*^9, 
  3.4918607897452497`*^9}, {3.4918609056827497`*^9, 3.4918609117921247`*^9}, {
  3.492131625048875*^9, 3.4921316858145*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4918376642531214`*^9, 3.49183767497194*^9}, {
   3.4918377571755905`*^9, 3.491837758003721*^9}, 3.49183799688025*^9, {
   3.4918392954979362`*^9, 3.4918393014979744`*^9}, {3.4918400468621197`*^9, 
   3.491840053330911*^9}, {3.491840161769105*^9, 3.4918401638159933`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{{3.491840049237135*^9, 3.4918400540652905`*^9}, 
   3.49184016414412*^9, 3.492131707127*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.491840049237135*^9, 3.4918400540652905`*^9}, 
   3.49184016414412*^9, 3.492131707127*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.491840049237135*^9, 3.4918400540652905`*^9}, 
   3.49184016414412*^9, 3.492131707127*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Using",
 " ",
 Cell[BoxData["Do"]],
 " ",
 ", You can create nested loops by using multiple iterators:"
}], "Text",
 CellChangeTimes->{{3.491837964692544*^9, 3.49183798202078*^9}, {
   3.4918380469118204`*^9, 3.4918380498024635`*^9}, 3.4918390470744715`*^9, 
   3.4918390915278807`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"i", ",", "\"\<,\>\"", ",", "j"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4918376642531214`*^9, 3.49183767497194*^9}, {
  3.4918377571755905`*^9, 3.491837758003721*^9}, {3.4918380110209656`*^9, 
  3.4918380279273233`*^9}, {3.4918393559201975`*^9, 3.4918393621858625`*^9}, {
  3.49184017189417*^9, 3.49184018994116*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm[1, ",", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.491840184363*^9, 3.491840190456789*^9}, 
   3.492131708486375*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm[1, ",", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.491840184363*^9, 3.491840190456789*^9}, 
   3.492131708502*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm[2, ",", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.491840184363*^9, 3.491840190456789*^9}, 
   3.492131708517625*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm[2, ",", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.491840184363*^9, 3.491840190456789*^9}, 
   3.49213170853325*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"3", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm[3, ",", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.491840184363*^9, 3.491840190456789*^9}, 
   3.4921317085645*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"3", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm[3, ",", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.491840184363*^9, 3.491840190456789*^9}, 
   3.492131708580125*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "the above expression achieves the same effect as the following expression \
using ",
 Cell[BoxData["For"]],
 ":"
}], "Text",
 CellChangeTimes->{{3.4918380842714343`*^9, 3.49183809372462*^9}, {
  3.4918382767882915`*^9, 3.4918382871633577`*^9}, {3.49183906174644*^9, 
  3.4918390621214423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "3"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", "2"}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{"Print", "[", 
      RowBox[{"i", ",", "\"\<,\>\"", ",", "j"}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4918369440922623`*^9, 3.491836945123519*^9}, {
  3.49183697971749*^9, 3.4918369995769925`*^9}, {3.491837728722284*^9, 
  3.4918377636287575`*^9}, {3.4918379883645706`*^9, 3.4918380043490477`*^9}, {
  3.491838065193187*^9, 3.491838079208902*^9}, {3.491839366607766*^9, 
  3.491839388967284*^9}, {3.4918402012224827`*^9, 3.4918402084725294`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm[1, ",", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.4918402090037823`*^9, 3.492131711767625*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm[1, ",", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.4918402090037823`*^9, 3.492131711767625*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm[2, ",", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.4918402090037823`*^9, 3.492131711767625*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm[2, ",", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.4918402090037823`*^9, 3.492131711767625*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"3", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm[3, ",", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.4918402090037823`*^9, 3.49213171178325*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"3", "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm[3, ",", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.4918402090037823`*^9, 3.49213171178325*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Another function of interest is ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["While",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/While"], "[", 
   RowBox[{"test", ",", "body"}], "]"}]], "InlineFormula"],
 ", which evaluates ",
 Cell[BoxData["test"], "InlineFormula"],
 ", then ",
 Cell[BoxData["body"], "InlineFormula"],
 ", repetitively, until ",
 Cell[BoxData["test"], "InlineFormula"],
 " first fails to give True. For example:"
}], "Text",
 CellChangeTimes->{{3.491838302679082*^9, 3.491838389054635*^9}, {
  3.4918606900889997`*^9, 3.4918606913702497`*^9}, {3.492131696127*^9, 
  3.492131697580125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"a", "\[LessEqual]", "3"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", "a", "]"}], ";", 
    RowBox[{"a", "++"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4918387798227606`*^9, 3.491838787557185*^9}, {
  3.4918402245038815`*^9, 3.4918402284414067`*^9}, {3.4918402857542734`*^9, 
  3.491840286926156*^9}, {3.4918403173951015`*^9, 3.491840344739026*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.491840229113286*^9, 3.491840290004301*^9, 
  3.491840345317155*^9, 3.49213171372075*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.491840229113286*^9, 3.491840290004301*^9, 
  3.491840345317155*^9, 3.492131713736375*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.491840229113286*^9, 3.491840290004301*^9, 
  3.491840345317155*^9, 3.492131713736375*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " provides functions ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Continue",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Continue"], "[", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Break",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Break"], "[", "]"}]]],
 " that let you jump to next iteration of the loop or outside the current \
loop. For example, the following expression is equivalent to the one above:"
}], "Text",
 CellChangeTimes->{{3.4918388053854246`*^9, 3.491838910276721*^9}, {
  3.4918389732146235`*^9, 3.4918389825271835`*^9}, {3.491839112528015*^9, 
  3.491839112809267*^9}, {3.492131728236375*^9, 3.492131734080125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{"True", ",", 
   RowBox[{
    RowBox[{"Print", "[", "a", "]"}], ";", 
    RowBox[{"a", "++"}], ";", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", ">", "3"}], ",", 
      RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4918387798227606`*^9, 3.491838787557185*^9}, {
   3.491838932964366*^9, 3.4918389558707623`*^9}, {3.4918389951366386`*^9, 
   3.491838997214777*^9}, 3.491840302363755*^9, {3.4918403604266267`*^9, 
   3.4918403763017282`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.491840376536105*^9, 3.492131715127*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.491840376536105*^9, 3.492131715127*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.491840376536105*^9, 3.492131715142625*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "See the tutorials on ",
 ButtonBox["Loops and Control Structures",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/LoopsAndControlStructures"],
 " for more usages of these functions and other related functions for looping \
control."
}], "Text",
 CellChangeTimes->{{3.491838567071399*^9, 3.4918386196342354`*^9}, {
  3.4918390126367507`*^9, 3.49183902577746*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Subsection",
 CellChangeTimes->{{3.523877511359375*^9, 3.5238775128125*^9}}],

Cell[TextData[{
 StyleBox["Exercise 1:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Write an ",
 Cell[BoxData["If"]],
 " expression that computes the absolute value of a variable ",
 Cell[BoxData[Cell["y"]]],
 ". Compare with the built-in function ",
 Cell[BoxData[
  ButtonBox["Abs",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Abs"]]],
 "."
}], "Text",
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, {3.392209171640656*^9, 
   3.392209171889008*^9}, 3.491826096225961*^9, 3.491836772966167*^9, {
   3.4918426722695475`*^9, 3.4918426914727955`*^9}, {3.492131478111375*^9, 
   3.49213153409575*^9}, {3.4921692499462075`*^9, 3.4921692515868435`*^9}, {
   3.523877531984375*^9, 3.52387754565625*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"-", "5"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"y", "\[GreaterEqual]", "0"}], ",", "y", ",", 
    RowBox[{"-", "y"}]}], "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Abs", "[", "y", "]"}]}], "Input",
 CellChangeTimes->{3.650808619843363*^9}],

Cell[BoxData[
 RowBox[{"-", "5"}]], "Output",
 CellChangeTimes->{3.650808620988296*^9}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.6508086209913797`*^9}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.650808620994748*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Exercise 2:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Using looping, print out the first 20 Fibonacci numbers. Compare with the \
built-in function ",
 Cell[BoxData[
  ButtonBox["Fibonacci",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Fibonacci"]]],
 "."
}], "Text",
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, {3.392209171640656*^9, 
   3.392209171889008*^9}, 3.491826096225961*^9, 3.491836772966167*^9, {
   3.491839499686743*^9, 3.4918395139524593`*^9}, {3.491839590374823*^9, 
   3.491839646406432*^9}, {3.491839792282366*^9, 3.4918398025949316`*^9}, {
   3.491840380614256*^9, 3.491840402364395*^9}, {3.4918606423233747`*^9, 
   3.4918606425577497`*^9}, 3.492131750736375*^9, {3.4921692692744565`*^9, 
   3.4921692710244675`*^9}, {3.523877533375*^9, 3.52387754565625*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fibonacci", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ",", 
      RowBox[{"y", "=", "0"}], ",", 
      RowBox[{"i", "=", "0"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "++"}], "<", "n"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"x", "+", "y"}]}], "}"}]}]}], "]"}], ";", "y"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "20"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{"fibonacci", "[", "i", "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"fibonacci", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.650807681787619*^9, 3.650807874998556*^9}, {
  3.650807954437272*^9, 3.650807961951782*^9}, {3.6508080249698753`*^9, 
  3.650808055950035*^9}, {3.650808129583536*^9, 3.650808161841902*^9}, {
  3.650808236226172*^9, 3.650808242909642*^9}, {3.6508082804549217`*^9, 
  3.6508083299046583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330426029*^9}}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330429508*^9}}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330432341*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.6508083304350224`*^9}}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330438079*^9}}],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330440827*^9}}],

Cell[BoxData["13"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330443295*^9}}],

Cell[BoxData["21"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330446082*^9}}],

Cell[BoxData["34"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.6508083304488087`*^9}}],

Cell[BoxData["55"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.6508083304511538`*^9}}],

Cell[BoxData["89"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.6508083304535513`*^9}}],

Cell[BoxData["144"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330457169*^9}}],

Cell[BoxData["233"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.6508083304599857`*^9}}],

Cell[BoxData["377"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330463771*^9}}],

Cell[BoxData["610"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330467279*^9}}],

Cell[BoxData["987"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.6508083304698963`*^9}}],

Cell[BoxData["1597"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330472851*^9}}],

Cell[BoxData["2584"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330475231*^9}}],

Cell[BoxData["4181"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.650808330477653*^9}}],

Cell[BoxData["6765"], "Print",
 CellChangeTimes->{
  3.650808163042461*^9, 3.650808245610623*^9, {3.6508082833290863`*^9, 
   3.6508083304800453`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610", ",", "987", ",", "1597", ",", "2584", ",", "4181", ",", "6765"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.650808245668436*^9, {3.650808283385553*^9, 3.650808330482944*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650808098041156*^9, 3.650808098640869*^9}, {
  3.650808190463554*^9, 3.650808196497044*^9}, {3.650808341815095*^9, 
  3.6508083454108686`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610", ",", "987", ",", "1597", ",", "2584", ",", "4181", ",", "6765"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6508081975491753`*^9, 3.65080834700323*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making new functions", "Section",
 CellChangeTimes->{{3.4918346910934677`*^9, 3.491834693124731*^9}}],

Cell[TextData[{
 "Creating functions is a key component in programming in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". With functions, a large program can be built from smaller pieces that can \
be individually written, tested, and re-used. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " treats functions as a type of variable, hence offering a lot of \
flexibility in working with functions (e.g., a function can be passed as \
argument to other functions). "
}], "Text",
 CellChangeTimes->{{3.4918435669471483`*^9, 3.4918438759803762`*^9}, {
   3.4918439102462206`*^9, 3.491844008403098*^9}, {3.4918441523258944`*^9, 
   3.4918443616084843`*^9}, {3.4918609442452497`*^9, 
   3.4918609573858747`*^9}, {3.4918610119952497`*^9, 
   3.4918612797921247`*^9}, {3.4918629060889997`*^9, 
   3.4918629145421247`*^9}, {3.4918629446514997`*^9, 
   3.4918630369952497`*^9}, {3.4918649369014997`*^9, 
   3.4918649549639997`*^9}, {3.4918694854796247`*^9, 3.4918694884327497`*^9}, 
   3.4918701220733747`*^9, {3.492131777892625*^9, 3.49213179053325*^9}}],

Cell[TextData[{
 "By convention, user\[Hyphen]defined functions in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " always have names that begin with lower case letters (to differentiate \
from built\[Hyphen]in functions).  There are different ways to create \
functions in ",
 StyleBox["Mathematica.",
  FontSlant->"Italic"],
 " While your will probably end up using the first approach for creating most \
of the standalone functions, the second approach can come handy for defining \
inline functions. We will also discuss a special type of function called memo \
functions, which have application in hashing."
}], "Text",
 CellChangeTimes->{{3.4918435669471483`*^9, 3.4918438759803762`*^9}, {
  3.4918439102462206`*^9, 3.491844008403098*^9}, {3.4918441523258944`*^9, 
  3.4918443616084843`*^9}, {3.4918609442452497`*^9, 3.4918609573858747`*^9}, {
  3.4918610119952497`*^9, 3.4918612797921247`*^9}, {3.4918629060889997`*^9, 
  3.4918629145421247`*^9}, {3.4918629446514997`*^9, 3.4918630369952497`*^9}, {
  3.4918645989483747`*^9, 3.4918646949952497`*^9}, {3.4918647605889997`*^9, 
  3.4918648041202497`*^9}, {3.4918649779483747`*^9, 3.4918649804483747`*^9}, {
  3.4921318184395*^9, 3.49213185553325*^9}}],

Cell[CellGroupData[{

Cell["The first approach", "Subsection",
 CellChangeTimes->{{3.4918434916341662`*^9, 3.4918434952904396`*^9}, 
   3.491843554587694*^9, {3.491846041634861*^9, 3.4918460452755094`*^9}}],

Cell[TextData[{
 "Here is a simple user-defined function called ",
 Cell[BoxData["myAbs"]],
 " that takes a single argument ",
 Cell[BoxData["y"]],
 " and computes the absolute value of ",
 Cell[BoxData["y"]],
 ":"
}], "Text",
 CellChangeTimes->{{3.4918444090150375`*^9, 3.4918445255939083`*^9}, {
  3.491846051916177*^9, 3.491846055056822*^9}, {3.4918615974171247`*^9, 
  3.4918615987764997`*^9}, {3.4918629323077497`*^9, 3.4918629393546247`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myAbs", "[", "y_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"y", "<", "0"}], ",", 
    RowBox[{"-", "y"}], ",", "y"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.392047417849872*^9, 3.3920474214552*^9}}],

Cell[TextData[{
 "The underscore ",
 Cell[BoxData["_"]],
 " after the variable ",
 Cell[BoxData["y"]],
 " tells ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " that ",
 Cell[BoxData["y_"]],
 " is a ",
 StyleBox["pattern",
  FontSlant->"Italic"],
 " (i.e. ",
 Cell[BoxData["y"]],
 " is an parameter for the function).  In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", patterns are used to give names to parts of an expression that have a \
particular structure.  Anytime that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " subsequently encounters an expression of the form ",
 Cell[BoxData[
  RowBox[{"myAbs", "[", "\[Ellipsis]", "]"}]]],
 ", ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will evaluate the ",
 Cell[BoxData["\[Ellipsis]"]],
 " expression and assign its value to the variable ",
 Cell[BoxData["y"]],
 ", whose scope is ",
 StyleBox["local",
  FontSlant->"Italic"],
 " within the function body (hence the difference in the color of ",
 Cell[BoxData["y"]],
 ").  Then, ",
 Cell[BoxData["myAbs"]],
 " will evaluate the right-hand side of its definition (",
 Cell[BoxData[
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"y", " ", "<", " ", "0"}], ",", " ", 
    RowBox[{"-", "y"}], ",", " ", "y"}], "]"}]]],
 ") using this local variable ",
 Cell[BoxData["y"]],
 " and return this value as its answer."
}], "Text",
 CellChangeTimes->{
  3.392047034964039*^9, {3.392047245725505*^9, 3.392047523395849*^9}, {
   3.3920477396253963`*^9, 3.3920477518234224`*^9}, 3.3920562965409155`*^9, {
   3.392480747452964*^9, 3.392480773780159*^9}, 3.392481250322494*^9, {
   3.392481411964602*^9, 3.3924814215315943`*^9}, 3.3936095164621983`*^9, 
   3.408993868606782*^9, {3.4918444582809772`*^9, 3.4918444607809935`*^9}, {
   3.4918445038750196`*^9, 3.491844559047248*^9}, {3.4918455222096615`*^9, 
   3.4918455774443903`*^9}, 3.4918629261983747`*^9}],

Cell[TextData[{
 "We can now evaluate ",
 Cell[BoxData["myAbs"]],
 " using various expressions as argument,"
}], "Text",
 CellChangeTimes->{
  3.392047034964039*^9, {3.392047245725505*^9, 3.392047533270442*^9}, 
   3.392481168320038*^9, {3.3924812902110567`*^9, 3.392481290529231*^9}, {
   3.4918616041671247`*^9, 3.4918616051983747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"myAbs", "[", 
  RowBox[{"1", "+", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"myAbs", "[", 
  RowBox[{"0", "*", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"myAbs", "[", 
  RowBox[{
   RowBox[{"-", "1"}], "-", "1"}], "]"}]}], "Input"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.4918446214226465`*^9, 3.523878435546875*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.4918446214226465`*^9, 3.523878435546875*^9}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.4918446214226465`*^9, 3.523878435578125*^9}]
}, Open  ]],

Cell[TextData[{
 "To reduce the number of errors that you will make in defining new functions \
using this approach, here are the Three Laws of Function Definition for ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (in homage to Asimov's Three Laws of Robotics)."
}], "Text",
 CellChangeTimes->{{3.3920470970557985`*^9, 3.3920471885009375`*^9}, {
   3.392480933778686*^9, 3.392480934682522*^9}, 3.491844809720727*^9, {
   3.4918613974327497`*^9, 3.4918614178233747`*^9}}],

Cell[TextData[{
 StyleBox["1. Always use square brackets in the function definition and \
function evaluation.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "  "
}], "Text",
 CellChangeTimes->{{3.392047193468278*^9, 3.392047220207794*^9}, {
   3.3920476178854876`*^9, 3.3920476880291467`*^9}, 3.392047723621746*^9, {
   3.393609600620633*^9, 3.393609608898992*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0, 0]],

Cell[TextData[{
 "For example, use ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "+", "3"}]}]]],
 " instead of using ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", 
    RowBox[{"(", "x_", ")"}]}], "=", 
   RowBox[{"x", "+", "3"}]}]]],
 "."
}], "Text",
 CellChangeTimes->{{3.392047193468278*^9, 3.392047220207794*^9}, {
   3.3920476178854876`*^9, 3.3920476880291467`*^9}, 3.392047723621746*^9}],

Cell[TextData[{
 "2. Always use ",
 Cell[BoxData[":="]],
 " instead of ",
 Cell[BoxData["="]],
 " in your function definition."
}], "Text",
 CellChangeTimes->{{3.392047231484459*^9, 3.3920472372229395`*^9}, {
  3.3920477301614103`*^9, 3.3920477333961906`*^9}, {3.392047778182376*^9, 
  3.3920477954178467`*^9}, {3.392047854675419*^9, 3.3920478548056107`*^9}, {
  3.392048040109455*^9, 3.3920480767435937`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0, 0]],

Cell[TextData[{
 "For example, use ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "+", "3"}]}]]],
 " instead of using ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{"x", "+", "3"}]}]]],
 ".  Using ",
 Cell[BoxData["SetDelayed"]],
 " (",
 Cell[BoxData[":="]],
 ") causes your function not to be evaluated until you call it (and that's \
why there is no display of results after you evaluate the definition).  This \
behavior mimics how most other programming languages work. (Later you will \
make use of ",
 Cell[BoxData["="]],
 " once you have a rock solid understanding of the difference between how ",
 Cell[BoxData[":="]],
 " and ",
 Cell[BoxData["="]],
 " behave)."
}], "Text",
 CellChangeTimes->{{3.392047193468278*^9, 3.392047220207794*^9}, {
   3.3920476178854876`*^9, 3.3920476880291467`*^9}, 3.392047723621746*^9, {
   3.3920480849557295`*^9, 3.3920482080075774`*^9}, {3.3924809702786283`*^9, 
   3.392480999419283*^9}, {3.3936096552451897`*^9, 3.393609655744314*^9}, 
   3.4918448302521086`*^9, {3.4918640505264997`*^9, 3.4918640792296247`*^9}}],

Cell["\<\
3. Always remember to use an underscore after the arguments to your function.\
\>", "Text",
 CellChangeTimes->{{3.392047231484459*^9, 3.3920472372229395`*^9}, {
   3.3920477301614103`*^9, 3.3920477333961906`*^9}, {3.392047778182376*^9, 
   3.3920477954178467`*^9}, {3.392047854675419*^9, 3.3920478548056107`*^9}, {
   3.392048040109455*^9, 3.392048040199589*^9}, 3.392481517885528*^9, {
   3.4918616113702497`*^9, 3.4918616126358747`*^9}},
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0, 0]],

Cell[TextData[{
 "For example, use ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "+", "3"}]}]]],
 " instead of using ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], "=", 
   RowBox[{"x", "+", "3"}]}]]],
 ".  "
}], "Text",
 CellChangeTimes->{{3.392047193468278*^9, 3.392047220207794*^9}, {
   3.3920476178854876`*^9, 3.3920476880291467`*^9}, 3.392047723621746*^9, {
   3.3920478270846443`*^9, 3.3920479126711254`*^9}, 3.392056310391384*^9, {
   3.392481018675473*^9, 3.392481020515278*^9}, 3.4918614810421247`*^9}],

Cell[TextData[{
 "A more complex function with local variables other than the input arguments \
can be defined using the scoping command ",
 Cell[BoxData[
  ButtonBox["Module",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Module"]]],
 ", as we have learned above. For example, here is a function ",
 Cell[BoxData["fact"]],
 " that computes the factorial of an input, positive integer, which makes use \
of a local variable:"
}], "Text",
 CellChangeTimes->{{3.4918615554796247`*^9, 3.4918615912296247`*^9}, {
  3.4918616217608747`*^9, 3.4918618154952497`*^9}, {3.4918619025733747`*^9, 
  3.4918619599796247`*^9}, {3.4918621823702497`*^9, 3.4918621860577497`*^9}, {
  3.4918686540733747`*^9, 3.4918686575733747`*^9}, {3.492131878517625*^9, 
  3.492131878517625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fact", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"result", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"result", "*=", "i"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "result"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.392047417849872*^9, 3.3920474214552*^9}, {
  3.4918617050733747`*^9, 3.4918617076202497`*^9}, {3.4918617714014997`*^9, 
  3.4918617794796247`*^9}, {3.4918618201046247`*^9, 3.4918618647296247`*^9}, {
  3.4918686724171247`*^9, 3.4918686740421247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fact", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.4918618480108747`*^9, 3.4918618511671247`*^9}, {
  3.4918619819483747`*^9, 3.4918619846827497`*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{{3.4918618516514997`*^9, 3.4918618661358747`*^9}, {
  3.4918619822296247`*^9, 3.4918619850264997`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Finally, it is also possible to define functions of several arguments or no \
argument.  For example, here is another ",
 Cell[BoxData["fact"]],
 " function that computes the product of all integers between the two input \
numbers:"
}], "Text",
 CellChangeTimes->{{3.3920475834746346`*^9, 3.392047607349918*^9}, {
  3.392481062474525*^9, 3.392481068319648*^9}, {3.491846068947536*^9, 
  3.4918460727600603`*^9}, {3.4918620697921247`*^9, 3.4918620874014997`*^9}, {
  3.4918621629952497`*^9, 3.4918621785108747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fact", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"result", "=", "m"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"result", "*=", "i"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"m", "+", "1"}], ",", "n"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "result"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.392047417849872*^9, 3.3920474214552*^9}, {
  3.4918617050733747`*^9, 3.4918617076202497`*^9}, {3.4918617714014997`*^9, 
  3.4918617794796247`*^9}, {3.4918618201046247`*^9, 3.4918618647296247`*^9}, {
  3.4918620170421247`*^9, 3.4918620340889997`*^9}, {3.4918686787452497`*^9, 
  3.4918686852764997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fact", "[", 
  RowBox[{"3", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.4918618480108747`*^9, 3.4918618511671247`*^9}, {
  3.4918619819483747`*^9, 3.4918619846827497`*^9}, {3.4918620505733747`*^9, 
  3.4918620574952497`*^9}}],

Cell[BoxData["60"], "Output",
 CellChangeTimes->{{3.4918618516514997`*^9, 3.4918618661358747`*^9}, {
  3.4918619822296247`*^9, 3.4918619850264997`*^9}, {3.4918620525889997`*^9, 
  3.4918620597608747`*^9}}]
}, Open  ]],

Cell[TextData[{
 "The following function ",
 Cell[BoxData["clearFact"]],
 " has no argument, and clears the definition of ",
 Cell[BoxData["fact"]],
 " (note how the color of the function name ",
 Cell[BoxData["fact"]],
 " changes in the cell above when you evaluate ",
 Cell[BoxData["clearFact"]],
 "):"
}], "Text",
 CellChangeTimes->{{3.4918460793851027`*^9, 3.4918460847288866`*^9}, 
   3.491846118229101*^9, {3.4918621446358747`*^9, 3.4918621589327497`*^9}, {
   3.4918622027452497`*^9, 3.4918622690421247`*^9}, {3.4921318878145*^9, 
   3.492131906002*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"clearFact", "[", "]"}], ":=", 
  RowBox[{"Clear", "[", "fact", "]"}]}]], "Input",
 CellChangeTimes->{{3.491846086478898*^9, 3.4918460934164424`*^9}, {
   3.4918621243389997`*^9, 3.4918621355108747`*^9}, {3.4918622295733747`*^9, 
   3.4918622311046247`*^9}, 3.4918640187452497`*^9}],

Cell[BoxData[
 RowBox[{"clearFact", "[", "]"}]], "Input",
 CellChangeTimes->{{3.4918460965102124`*^9, 3.491846099853984*^9}, 
   3.4918622351983747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The second approach", "Subsection",
 CellChangeTimes->{{3.491846134354204*^9, 3.4918461365729685`*^9}}],

Cell[TextData[{
 "Alternatively, a function can be defined using the ",
 Cell[BoxData[
  ButtonBox["Function",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Function"]]],
 " command, which provides a slightly different format than the approach \
above. For example, here is a ",
 Cell[BoxData["myAbs"]],
 " function equivalent to the one defined above:"
}], "Text",
 CellChangeTimes->{{3.491846139135485*^9, 3.4918461526668215`*^9}, {
  3.4918465892789907`*^9, 3.4918466291854963`*^9}, {3.4918631881671247`*^9, 
  3.4918632509796247`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myAbs", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "y", "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"y", "<", "0"}], ",", 
       RowBox[{"-", "y"}], ",", "y"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4918461648075247`*^9, 3.491846169620055*^9}, 
   3.491846230948573*^9, {3.4918463740588636`*^9, 3.491846379387023*^9}, {
   3.4918632548702497`*^9, 3.4918632677921247`*^9}, 3.4918633035733747`*^9, {
   3.4918634854639997`*^9, 3.4918634901358747`*^9}, {3.4918636721827497`*^9, 
   3.4918636733389997`*^9}, 3.4918640255108747`*^9}],

Cell[TextData[{
 "The first part of ",
 Cell[BoxData["Function"]],
 " declares a single argument of this function to be used as a local variable \
in the body, and the second part is the body. Now we can evaluate it just as \
before:"
}], "Text",
 CellChangeTimes->{{3.4918633251514997`*^9, 3.4918634110889997`*^9}, 
   3.492131972267625*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myAbs", "[", 
  RowBox[{"1", "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.4918633124327497`*^9, 3.4918633141358747`*^9}, {
  3.4918634131671247`*^9, 3.4918634150108747`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.4918634152764997`*^9, 3.4918636767452497`*^9}]
}, Open  ]],

Cell["\<\
You can define a function with zero or multiple arguments too. Here is a \
function that returns true if both arguments are positive:\
\>", "Text",
 CellChangeTimes->{{3.4918634468389997`*^9, 3.4918634477139997`*^9}, {
  3.4918634927139997`*^9, 3.4918636033233747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bothPos", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"x", ">", "0"}], ",", 
       RowBox[{"y", ">", "0"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4918462786676283`*^9, 3.491846288761443*^9}, {
   3.491846386012065*^9, 3.4918463912308483`*^9}, {3.4918464276685815`*^9, 
   3.4918464287467136`*^9}, {3.4918636089639997`*^9, 3.4918636488858747`*^9}, 
   3.4918640291671247`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bothPos", "[", 
  RowBox[{"2", ",", 
   RowBox[{"-", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"bothPos", "[", 
  RowBox[{"2", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4918462786676283`*^9, 3.491846288761443*^9}, {
  3.491846386012065*^9, 3.4918463912308483`*^9}, {3.4918464276685815`*^9, 
  3.4918464287467136`*^9}, {3.4918636089639997`*^9, 3.4918636463858747`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.4918636381514997`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4918636381514997`*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData["Function"]],
 " is often used to write ",
 StyleBox["inline",
  FontSlant->"Italic"],
 " functions that do not need a function name. There are variations of the \
syntax of ",
 Cell[BoxData["Function"]],
 " that can make the code look more succinct. For example, I can equivalently \
define the above two functions, ",
 Cell[BoxData["myAbs"]],
 " and ",
 Cell[BoxData["bothPos"]],
 " as:"
}], "Text",
 CellChangeTimes->{{3.4918637473858747`*^9, 3.4918639796983747`*^9}, {
  3.4918648304483747`*^9, 3.4918648602296247`*^9}, {3.492131993705125*^9, 
  3.492132086080125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myAbs", "=", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"#", "<", "0"}], ",", 
      RowBox[{"-", "#"}], ",", "#"}], "]"}], "&"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4918461648075247`*^9, 3.491846169620055*^9}, 
   3.491846230948573*^9, {3.4918463740588636`*^9, 3.491846379387023*^9}, {
   3.49184641176223*^9, 3.4918464134341154`*^9}, 3.4918640024796247`*^9, 
   3.4918641082764997`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bothPos", "=", 
   RowBox[{
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"#1", ">", "0"}], ",", 
      RowBox[{"#2", ">", "0"}]}], "]"}], "&"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4918462786676283`*^9, 3.491846288761443*^9}, {
   3.491846386012065*^9, 3.4918463912308483`*^9}, {3.4918464276685815`*^9, 
   3.4918464287467136`*^9}, 3.4918640085889997`*^9, 3.4918641102296247`*^9}],

Cell[TextData[{
 "Here the ",
 Cell[BoxData[
  FormBox["&", TraditionalForm]]],
 " symbol indicates this is a ",
 Cell[BoxData["Function"]],
 " expression. The arguments to the function are referred to in the body by ",
 Cell[BoxData["#"]],
 ", if it's a single-argument function, or by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"#1", ",", "#2", ",", "..."}], TraditionalForm]]],
 ", if it's a multiple-argument function. Below is an example where ",
 Cell[BoxData["myAbs"]],
 " is defined as an inline function to get the absolute value of every \
element in a list (the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Map",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Map"], "[", 
   RowBox[{"f", ",", "expr"}], "]"}]]],
 " function applies a function ",
 Cell[BoxData["f"]],
 " to every element of a list ",
 Cell[BoxData["expr"]],
 "): "
}], "Text",
 CellChangeTimes->{{3.4918464668407073`*^9, 3.4918464706063566`*^9}, {
  3.4918641255421247`*^9, 3.4918642851671247`*^9}, {3.4918643317921247`*^9, 
  3.4918645491671247`*^9}, {3.492132112392625*^9, 3.492132158798875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"#", "<", "0"}], ",", 
      RowBox[{"-", "#"}], ",", "#"}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "3"}], ",", "\[ExponentialE]", ",", 
     RowBox[{"-", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4918643034327497`*^9, 3.4918643269796247`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "\[ExponentialE]", ",", "\[Pi]"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.4918643981827497`*^9, 3.4918644092139997`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Memo functions and hashing", "Subsection",
 CellChangeTimes->{{3.49184351260305*^9, 3.4918435315250463`*^9}, {
  3.491845649710478*^9, 3.4918456516011147`*^9}, {3.4918663975264997`*^9, 
  3.4918664176046247`*^9}}],

Cell[TextData[{
 "As mentioned above in the first approach, the ",
 Cell[BoxData[
  ButtonBox["SetDelayed",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/SetDelayed"]]],
 " (",
 Cell[BoxData[":="]],
 ") is used to cause your function not to be evaluated until you call it - \
which is exactly how a regular function should behave. At times, however, you \
may want the function to \"remember\" the result of an evaluation, to avoid \
repeating the evaluation if the same argument is passed to the function. This \
is when ",
 Cell[BoxData[
  ButtonBox["Set",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Set"]]],
 " (",
 Cell[BoxData[
  FormBox["=", TraditionalForm]]],
 ") becomes useful.  "
}], "Text",
 CellChangeTimes->{{3.4918664224796247`*^9, 3.4918667785108747`*^9}, {
  3.492132197673875*^9, 3.492132211267625*^9}}],

Cell[TextData[{
 "Consider the following recursive function for computing the first ",
 Cell[BoxData["n"]],
 " Fibonacci numbers:"
}], "Text",
 CellChangeTimes->{{3.4918667805108747`*^9, 3.4918667964796247`*^9}, {
  3.4918669278546247`*^9, 3.4918669327764997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fib", "[", "n_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "\[Equal]", "0"}], ",", "0", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "1"}], ",", "1", ",", 
       RowBox[{
        RowBox[{"fib", "[", 
         RowBox[{"n", "-", "2"}], "]"}], "+", 
        RowBox[{"fib", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.491845697148281*^9, 3.4918456974607835`*^9}, {
  3.4918667991358747`*^9, 3.4918668897764997`*^9}}],

Cell[TextData[{
 "Evaluate the function for some large ",
 Cell[BoxData["n"]],
 ":"
}], "Text",
 CellChangeTimes->{{3.4918669062608747`*^9, 3.4918669513546247`*^9}, {
  3.4918669928702497`*^9, 3.4918670055421247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fib", "[", "40", "]"}]], "Input",
 CellChangeTimes->{{3.4918669191358747`*^9, 3.4918669568233747`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.4918669634327497`*^9}]
}, Open  ]],

Cell[TextData[{
 "You may notice that the evaluation takes a long time. Hit  ",
 Cell[BoxData[
  RowBox[{"Alt", "+", "."}]]],
 " to abort ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s evaluation process. "
}], "Text",
 CellChangeTimes->{{3.4918669677296247`*^9, 3.4918670263389997`*^9}}],

Cell[TextData[{
 "To see why the evaluation is slow, observe that the function makes numerous \
calls to itself with the same arguments (the number of calls made to ",
 Cell[BoxData[
  RowBox[{"fib", "[", 
   RowBox[{"n", "-", "k"}], "]"}]]],
 " during evaluation of ",
 Cell[BoxData[
  RowBox[{"f", "[", "n", "]"}]]],
 " is exactly the ",
 Cell[BoxData[
  RowBox[{"k", "+", "1"}]]],
 "th Fibonacci number.). Since the function has no \"memory\", each call \
needs to be evaluated, hence incurring a huge waste in time. Now, revise the \
function to include a ",
 Cell[BoxData["Set"]],
 " (",
 Cell[BoxData[
  FormBox["=", TraditionalForm]]],
 ") operation: "
}], "Text",
 CellChangeTimes->{{3.4918670295264997`*^9, 3.4918671512139997`*^9}, {
  3.4918671931671247`*^9, 3.4918672449327497`*^9}, {3.4918672861202497`*^9, 
  3.4918672927921247`*^9}, {3.4918673864952497`*^9, 3.4918675978702497`*^9}, {
  3.49213222928325*^9, 3.492132240705125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fib", "[", "n_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"fib", "[", "n", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "0"}], ",", "0", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"n", "\[Equal]", "1"}], ",", "1", ",", 
         RowBox[{
          RowBox[{"fib", "[", 
           RowBox[{"n", "-", "2"}], "]"}], "+", 
          RowBox[{"fib", "[", 
           RowBox[{"n", "-", "1"}], "]"}]}]}], "]"}]}], "]"}]}], ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.491845697148281*^9, 3.4918456974607835`*^9}, {
  3.4918667991358747`*^9, 3.4918668897764997`*^9}, {3.4918676004483747`*^9, 
  3.4918676084171247`*^9}}],

Cell[TextData[{
 "The trick here is that we assign the construct ",
 Cell[BoxData[
  RowBox[{"fib", "[", "n", "]"}]]],
 " with the resulting value of evaluation when ",
 Cell[BoxData["fib"]],
 " is called the first time with argument ",
 Cell[BoxData["n"]],
 ". From then on, any later calls to ",
 Cell[BoxData[
  RowBox[{"fib", "[", "n", "]"}]]],
 " will simply look-up the value associated with the construct ",
 Cell[BoxData[
  RowBox[{"fib", "[", "n", "]"}]]],
 " without evaluating the function body of ",
 Cell[BoxData["fib"]],
 ". Now we can evaluate the function with much larger ",
 Cell[BoxData["n"]],
 " and not getting laggy:"
}], "Text",
 CellChangeTimes->{{3.4918676399952497`*^9, 3.4918679338389997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fib", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.4918669191358747`*^9, 3.4918669568233747`*^9}, {
  3.4918678956827497`*^9, 3.4918679031202497`*^9}}],

Cell[BoxData["354224848179261915075"], "Output",
 CellChangeTimes->{
  3.4918669634327497`*^9, 3.4918676174796247`*^9, {3.4918678962452497`*^9, 
   3.4918679033546247`*^9}}]
}, Open  ]],

Cell[TextData[{
 "You can find more discussion on this trick in the tutorial on ",
 ButtonBox["Memo Functions",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/FunctionsThatRememberValuesTheyHaveFound"],
 "."
}], "Text",
 CellChangeTimes->{{3.4918680078233747`*^9, 3.4918680426046247`*^9}}],

Cell["\<\
Another scenario when memo functions become useful is defining a hash map. A \
hash map is a way of storing values that can be quickly accessed with some \
keys. We can make use of the \"look-up\" capability of memo functions to \
build a simple hash map. For example, to define a hash map with one key and a \
default value of 0, we start off with a regular function:\
\>", "Text",
 CellChangeTimes->{{3.4918679440421247`*^9, 3.4918680028702497`*^9}, {
  3.4918680485264997`*^9, 3.4918682537608747`*^9}, {3.4918683128702497`*^9, 
  3.4918683196983747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"hash", "[", "key_", "]"}], ":=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.4918682548546247`*^9, 3.4918682699483747`*^9}}],

Cell[TextData[{
 "With this function alone, evaluating hash with any input key will return 0 \
(the default value). To store a value 1 associated with a key called \"Monday\
\", use the ",
 Cell[BoxData["Set"]],
 " (",
 Cell[BoxData[
  FormBox["=", TraditionalForm]]],
 ") operator: "
}], "Text",
 CellChangeTimes->{{3.4918682821671247`*^9, 3.4918683540577497`*^9}, {
  3.4918684389796247`*^9, 3.4918684477764997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"hash", "[", "\"\<Monday\>\"", "]"}], "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.4918683563233747`*^9, 3.4918684137139997`*^9}}],

Cell[TextData[{
 "Future evaluations with this key will cause ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "to look up the value 1, while evaluations with other keys will fall back to \
evaluating the original function hash, which would return 0:"
}], "Text",
 CellChangeTimes->{{3.4918684588077497`*^9, 3.4918685505577497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hash", "[", "\"\<Monday\>\"", "]"}]], "Input"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.4918685550421247`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hash", "[", "\"\<Tuesday\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4918685560108747`*^9, 3.4918685624796247`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.4918685627608747`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Suggestions for coding style", "Subsection",
 CellChangeTimes->{{3.4918435405407295`*^9, 3.49184354615014*^9}, {
   3.4918613070889997`*^9, 3.4918613117452497`*^9}, 3.4918694302764997`*^9}],

Cell[TextData[{
 "By now you have learned the essential tools to start programming in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". A common pitfall of novice programmers in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is to create a single, long function that does a complicated task. My \
first suggestion is ",
 StyleBox["divide-and-conquer",
  FontSlant->"Italic"],
 ": break big functions into smaller helper functions, each performing an \
atomic task. This will not only make your program more readable, but more \
importantly, makes debugging and testing a lot easier. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does not have a sophisticated debugging interface as in other languages \
suchas C++. Hence the smaller the function, the easier it is for you to \
figure out where it went wrong."
}], "Text",
 CellChangeTimes->{{3.4918687414952497`*^9, 3.4918690247921247`*^9}, {
  3.4918690618546247`*^9, 3.4918690628702497`*^9}}],

Cell[TextData[{
 "My second suggestion to improve readibility of the code is to add comments. \
Comments can be added either as a Text cell, or within an input expression \
between ",
 Cell[BoxData[
  RowBox[{"(*", " ", "*)"}]]],
 ". Here is an inline comment example:"
}], "Text",
 CellChangeTimes->{{3.4918690503233747`*^9, 3.4918692286671247`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fib", "[", "n_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"base", " ", "case", " ", "1"}], ",", " ", 
      RowBox[{"return", " ", "0"}]}], " ", "*)"}], "\[IndentingNewLine]", "0",
     ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"n", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"base", " ", "case", " ", "2"}], ",", " ", 
        RowBox[{"return", " ", "0"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      "1", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"otherwise", ",", " ", 
        RowBox[{"evaluate", " ", "recursively"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fib", "[", 
        RowBox[{"n", "-", "2"}], "]"}], "+", 
       RowBox[{"fib", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4918692305264997`*^9, 3.4918693418077497`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Subsection",
 CellChangeTimes->{{3.523877461671875*^9, 3.52387746296875*^9}}],

Cell[TextData[{
 StyleBox["Exercise 1:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Write a function ",
 Cell[BoxData[
  RowBox[{"fact", "[", "x", "]"}]]],
 " that computes the factorial of ",
 Cell[BoxData["x"]],
 " using ",
 StyleBox["recursion",
  FontSlant->"Italic"],
 ". That is, your function body will contain calls to the same function",
 StyleBox[". ",
  FontSlant->"Italic"],
 "Try your function on various integers and compare with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s built-in ",
 Cell[BoxData[
  ButtonBox["Factorial",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Factorial"]]],
 " function."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, {3.392209171640656*^9, 
   3.392209171889008*^9}, 3.491826096225961*^9, 3.491836772966167*^9, {
   3.491839499686743*^9, 3.4918395139524593`*^9}, {3.491839590374823*^9, 
   3.491839646406432*^9}, {3.491839792282366*^9, 3.4918398025949316`*^9}, {
   3.491840380614256*^9, 3.491840402364395*^9}, 3.4918450045188484`*^9, {
   3.4918451795199685`*^9, 3.4918452417859917`*^9}, {3.4918453348647127`*^9, 
   3.4918453512085676`*^9}, {3.491845396771359*^9, 3.4918454575217476`*^9}, {
   3.4918631167921247`*^9, 3.4918631505577497`*^9}, 3.492131917705125*^9, {
   3.492169292462105*^9, 3.4921692940871153`*^9}, {3.4921698527781906`*^9, 
   3.492169899309738*^9}, {3.523877487046875*^9, 3.5238774880625*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fact", "[", "n_", "]"}], ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{"n", "==", "0"}], ",", "1", ",", 
    RowBox[{"n", "*", 
     RowBox[{"fact", "[", 
      RowBox[{"n", "-", "1"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fact", "[", "10", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Factorial", "[", "10", "]"}]}], "Input",
 CellChangeTimes->{{3.650808943942471*^9, 3.650809061019964*^9}}],

Cell[BoxData["3628800"], "Output",
 CellChangeTimes->{{3.650809040864696*^9, 3.650809061718297*^9}}],

Cell[BoxData["3628800"], "Output",
 CellChangeTimes->{{3.650809040864696*^9, 3.6508090617217617`*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Exercise 2:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Re-define your recursive function  ",
 Cell[BoxData[
  RowBox[{"fact", "[", "x", "]"}]]],
 " in the previous exercise using ",
 Cell[BoxData["Function"]],
 "."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, {3.392209171640656*^9, 
   3.392209171889008*^9}, 3.491826096225961*^9, 3.491836772966167*^9, {
   3.491839499686743*^9, 3.4918395139524593`*^9}, {3.491839590374823*^9, 
   3.491839646406432*^9}, {3.491839792282366*^9, 3.4918398025949316`*^9}, {
   3.491840380614256*^9, 3.491840402364395*^9}, 3.4918450045188484`*^9, {
   3.4918451795199685`*^9, 3.491845180394974*^9}, {3.491846564263206*^9, 
   3.4918466430762105`*^9}, {3.4918645601983747`*^9, 3.4918645812296247`*^9}, 
   3.49213217497075*^9, {3.492169334868626*^9, 3.4921693362280097`*^9}, {
   3.52387748875*^9, 3.523877489015625*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fact", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "y", "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"y", "==", "0"}], ",", "1", ",", 
       RowBox[{"y", "*", 
        RowBox[{"fact", "[", 
         RowBox[{"y", "-", "1"}], "]"}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fact", "[", "20", "]"}]}], "Input",
 CellChangeTimes->{{3.650809229771595*^9, 3.650809233638817*^9}, {
   3.650809272712924*^9, 3.6508092771826553`*^9}, {3.650809428373391*^9, 
   3.650809481562314*^9}, {3.650809540789222*^9, 3.650809546561804*^9}, {
   3.650809733925248*^9, 3.650809753492045*^9}, {3.65081471203471*^9, 
   3.650814736077364*^9}, 3.650814964511389*^9, {3.6508150955294313`*^9, 
   3.650815177937347*^9}, {3.650815219671463*^9, 3.650815253608016*^9}, {
   3.6508153233759127`*^9, 3.6508153795017033`*^9}}],

Cell[BoxData["2432902008176640000"], "Output",
 CellChangeTimes->{3.650815380132616*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Exercise 3:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Create a hash map with two keys, and try storing and querying some values."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, {3.392209171640656*^9, 
   3.392209171889008*^9}, 3.491826096225961*^9, 3.491836772966167*^9, {
   3.491839499686743*^9, 3.4918395139524593`*^9}, {3.491839590374823*^9, 
   3.491839646406432*^9}, {3.491839792282366*^9, 3.4918398025949316`*^9}, {
   3.491840380614256*^9, 3.491840402364395*^9}, 3.4918450045188484`*^9, {
   3.4918451795199685`*^9, 3.491845180394974*^9}, {3.491846564263206*^9, 
   3.4918466430762105`*^9}, {3.4918645601983747`*^9, 
   3.4918645812296247`*^9}, {3.4918685825421247`*^9, 3.4918686056514997`*^9}, 
   3.4918736955733747`*^9, {3.4920292238389997`*^9, 3.4920292240264997`*^9}, {
   3.4921693451343164`*^9, 3.492169346228074*^9}, {3.523877489703125*^9, 
   3.52387748996875*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hash", "[", 
   RowBox[{"key1_", ",", "key2_"}], "]"}], ":=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hash", "[", 
   RowBox[{"\"\<Monday\>\"", ",", "\"\<Tuesday\>\""}], "]"}], "=", 
  "1"}], "\[IndentingNewLine]", 
 RowBox[{"hash", "[", 
  RowBox[{"\"\<Monday\>\"", ",", "\"\<Tuesday\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"hash", "[", 
  RowBox[{"\"\<Sunday\>\"", ",", "\"\<T\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.65081016819591*^9, 3.6508101932573233`*^9}, 
   3.650810244006565*^9, {3.6508133143870296`*^9, 3.650813334007766*^9}, {
   3.650813930609993*^9, 3.650813966054537*^9}, {3.650814380875265*^9, 
   3.650814438957906*^9}, {3.650814528186431*^9, 3.650814567059329*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.650810194684614*^9, {3.650813322694594*^9, 3.6508133348370113`*^9}, {
   3.650813953921502*^9, 3.650813966657135*^9}, {3.650814384153839*^9, 
   3.650814439572301*^9}, 3.65081452912817*^9, 3.6508145681301823`*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.650810194684614*^9, {3.650813322694594*^9, 3.6508133348370113`*^9}, {
   3.650813953921502*^9, 3.650813966657135*^9}, {3.650814384153839*^9, 
   3.650814439572301*^9}, 3.65081452912817*^9, 3.65081456813381*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.650810194684614*^9, {3.650813322694594*^9, 3.6508133348370113`*^9}, {
   3.650813953921502*^9, 3.650813966657135*^9}, {3.650814384153839*^9, 
   3.650814439572301*^9}, 3.65081452912817*^9, 3.65081456813659*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lists", "Section",
 CellChangeTimes->{{3.4918347697033463`*^9, 3.491834770250225*^9}}],

Cell[TextData[{
 "The most important and unique data type in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is the ",
 StyleBox["list",
  FontSlant->"Italic"],
 ".  There are well over a thousand ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " built-in functions that operate directly on lists, making lists a central \
construct in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". A list consists of a sequence of items enclosed by curly brackets and \
separated by commas.  For example, the list consisting of the numbers ",
 Cell[BoxData["1"]],
 ", ",
 Cell[BoxData["2"]],
 ", ",
 Cell[BoxData["3"]],
 ", and ",
 Cell[BoxData["4"]],
 " has the form:"
}], "Text",
 CellChangeTimes->{{3.4918700905421247`*^9, 3.4918701075733747`*^9}, 
   3.4918701600108747`*^9, {3.4918712080889997`*^9, 3.4918712084483747`*^9}, {
   3.4918713562764997`*^9, 3.4918713909483747`*^9}, {3.492132333142625*^9, 
   3.4921323333145*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Input",
 CellChangeTimes->{{3.3920500129449368`*^9, 3.3920500132654104`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.392050015118149*^9}]
}, Open  ]],

Cell[TextData[{
 "Note that internally, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " represents this list in the form ",
 Cell[BoxData[
  RowBox[{"List", "[", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}]]],
 "."
}], "Text",
 CellChangeTimes->{{3.392054760160433*^9, 3.3920547849270334`*^9}, 
   3.3924838410181847`*^9}],

Cell["\<\
Lists can be nested. For example, here is a two-dimensional array of numbers:\
\>", "Text",
 CellChangeTimes->{{3.4918701850889997`*^9, 3.4918702243546247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.4918702650421247`*^9, 3.4918702827296247`*^9}, {
  3.4918730693546247`*^9, 3.4918730745421247`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4918730748546247`*^9}]
}, Open  ]],

Cell[TextData[{
 "More generally, lists can be a sequence of any ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expressions:"
}], "Text",
 CellChangeTimes->{{3.4918703105889997`*^9, 3.4918703497608747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", "a"}], ",", "\[Pi]", ",", 
     RowBox[{"{", 
      RowBox[{"Sin", "[", "x", "]"}], "}"}]}], "}"}], ",", "\"\<Hello\>\""}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.4918703541358747`*^9, 3.4918704344014997`*^9}, {
   3.4918705613077497`*^9, 3.4918706124796247`*^9}, 3.4918726356514997`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "\[Pi]", ",", 
     RowBox[{"{", 
      RowBox[{"Sin", "[", "x", "]"}], "}"}]}], "}"}], ",", "\<\"Hello\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4918704349952497`*^9, {3.4918705739952497`*^9, 3.4918706127921247`*^9}, 
   3.4918726363077497`*^9}]
}, Open  ]],

Cell[TextData[{
 "In the following we will cover some most commonly used list operations. \
This section just skims the surface of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s capabilities concerning lists. If you have time, read through the \
section ",
 ButtonBox["List Manipulation",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ListManipulation"],
 " to get a better idea of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s list capabilities."
}], "Text",
 CellChangeTimes->{{3.4918708606514997`*^9, 3.4918708800264997`*^9}, {
  3.4918710050421247`*^9, 3.4918710084171247`*^9}, {3.4918711271046247`*^9, 
  3.4918711890421247`*^9}, {3.4918714017921247`*^9, 3.4918714019483747`*^9}, {
  3.4920352122764997`*^9, 3.4920352266827497`*^9}, {3.4920359566827497`*^9, 
  3.4920360143077497`*^9}, {3.492132388392625*^9, 3.492132401205125*^9}}],

Cell["\<\
The exercises are listed at the end of the section. You will be using list \
operations for creating and processing 2D images.\
\>", "Text",
 CellChangeTimes->{{3.49213241334575*^9, 3.4921324829395*^9}}],

Cell[CellGroupData[{

Cell["Creating lists", "Subsection",
 CellChangeTimes->{{3.4918704760889997`*^9, 3.4918704778702497`*^9}}],

Cell[TextData[{
 "There are several ways to create lists in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  The easiest way is simply to enumerate the entries in the list as done \
above - if they are few. For larger lists, a number of built-in functions can \
be used to simplify the creation process."
}], "Text",
 CellChangeTimes->{{3.4918716856358747`*^9, 3.4918716868546247`*^9}, {
  3.4918717184327497`*^9, 3.4918718007608747`*^9}}],

Cell[TextData[{
 "The function ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Range",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Range"], "[", 
   RowBox[{
    SubscriptBox["i", "min"], ",", 
    SubscriptBox["i", "max"], ",", "di"}], "]"}]]],
 " offers a simple way to create a list of numbers with regular intervals (it \
has several simpler variants, e.g., when ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["d", "i"], "=", "1"}]]],
 " or ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["i", "min"], "=", "1"}]]],
 "):"
}], "Text",
 CellChangeTimes->{{3.4918718410733747`*^9, 3.4918719549483747`*^9}, {
  3.4918719974327497`*^9, 3.4918719997452497`*^9}, {3.4918720541983747`*^9, 
  3.4918720554952497`*^9}, {3.492132518611375*^9, 3.492132518611375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "5", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.4918716885108747`*^9, 3.4918716902921247`*^9}, {
  3.4918719608233747`*^9, 3.4918719862608747`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.5`", ",", "1.`", ",", "1.5`", ",", "2.`", ",", "2.5`", ",", 
   "3.`", ",", "3.5`", ",", "4.`", ",", "4.5`", ",", "5.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.4918719738702497`*^9, 3.4918719868077497`*^9}}]
}, Open  ]],

Cell[TextData[{
 "More often, we wish to build a list by evaluating an expression at regular \
intervals. The most useful function for this purpose is ",
 Cell[BoxData[
  ButtonBox["Table",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Table"]]],
 ". It has many variations of syntax (click on the hyperlink to see for \
yourself), and they are similar to the syntax of ",
 Cell[BoxData[
  ButtonBox["Do",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Do"]]],
 ". In the simplest form, ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Table",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Table"], "[", 
   RowBox[{"expr", ",", 
    RowBox[{"{", 
     SubscriptBox["i", "max"], "}"}]}], "]"}]], "InlineFormula"],
 " generates a list of ",
 Cell[BoxData[
  SubscriptBox["i", "max"]]],
 " copies of ",
 Cell[BoxData["expr"]],
 ". For example, the following produces a list of one hundred 1s:"
}], "Text",
 CellChangeTimes->{{3.4918720437921247`*^9, 3.4918721667139997`*^9}, {
  3.4918722007608747`*^9, 3.4918722162608747`*^9}, {3.4918722566358747`*^9, 
  3.4918726038077497`*^9}, {3.4918726634639997`*^9, 3.4918727029014997`*^9}, {
  3.4918727584171247`*^9, 3.4918727963702497`*^9}, {3.4918729461671247`*^9, 
  3.4918729876046247`*^9}, {3.4921325278145*^9, 3.4921325510645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", "100", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4918727748389997`*^9, 3.4918727829327497`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.4918727884483747`*^9}]
}, Open  ]],

Cell[TextData[{
 "The full syntax is ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Table",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Table"], "[", 
   RowBox[{"expr", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      SubscriptBox["i", "min"], ",", 
      SubscriptBox["i", "max"], ",", "di"}], "}"}]}], "]"}]]],
 ", which generates a list of values of ",
 Cell[BoxData["expr"]],
 " when ",
 Cell[BoxData["i"]],
 " runs from ",
 Cell[BoxData[
  SubscriptBox["i", "min"]]],
 " to ",
 Cell[BoxData[
  SubscriptBox["i", "max"]]],
 " with intervals ",
 Cell[BoxData["di"]],
 ". For example, the following generates a list of numbers that are square \
roots of the numbers we generated above with ",
 Cell[BoxData["Range"]],
 ":"
}], "Text",
 CellChangeTimes->{{3.4918720437921247`*^9, 3.4918721667139997`*^9}, {
  3.4918722007608747`*^9, 3.4918722162608747`*^9}, {3.4918722566358747`*^9, 
  3.4918726038077497`*^9}, {3.4918726634639997`*^9, 3.4918727029014997`*^9}, {
  3.4918727584171247`*^9, 3.4918727728858747`*^9}, {3.4918728154952497`*^9, 
  3.4918728677139997`*^9}, {3.4920298163389997`*^9, 3.4920298177608747`*^9}, {
  3.492132556705125*^9, 3.4921325854395*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5", ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4918702255108747`*^9, 3.4918702783702497`*^9}, {
  3.4918726111046247`*^9, 3.4918726225733747`*^9}, {3.4918728799639997`*^9, 
  3.4918728849952497`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.7071067811865476`", ",", "1.`", ",", "1.224744871391589`", 
   ",", "1.4142135623730951`", ",", "1.5811388300841898`", ",", 
   "1.7320508075688772`", ",", "1.8708286933869707`", ",", "2.`", ",", 
   "2.1213203435596424`", ",", "2.23606797749979`"}], "}"}]], "Output",
 CellChangeTimes->{{3.4918702384014997`*^9, 3.4918702786983747`*^9}, 
   3.4918726235264997`*^9, 3.4918728854952497`*^9}]
}, Open  ]],

Cell[TextData[{
 "Nested lists can be created easily with ",
 Cell[BoxData["Table"]],
 " (just like ",
 Cell[BoxData["Do"]],
 "). For example:"
}], "Text",
 CellChangeTimes->{{3.4918728994952497`*^9, 3.4918729335108747`*^9}, {
  3.4918730079952497`*^9, 3.4918730235889997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4918730304483747`*^9, 3.4918730511983747`*^9}, {
  3.4918730998233747`*^9, 3.4918731501358747`*^9}, {3.492132628673875*^9, 
  3.492132630236375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4918730521514997`*^9, {3.4918731118077497`*^9, 3.4918731508389997`*^9}, 
   3.49213263065825*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Querying lists", "Subsection",
 CellChangeTimes->{{3.4918712402921247`*^9, 3.4918712426983747`*^9}, {
  3.4918739089327497`*^9, 3.4918739111827497`*^9}, {3.491912438141488*^9, 
  3.491912439719623*^9}}],

Cell["\<\
Here are some useful functions to get quick facts about a list, such as its \
size, data range, and the location of a particular element.\
\>", "Text",
 CellChangeTimes->{{3.4920314353546247`*^9, 3.4920314839171247`*^9}, {
  3.492050319418851*^9, 3.4920503214189405`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["Length",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Length"]]],
 " gives the number of elements on the first level of a list:"
}], "Text",
 CellChangeTimes->{{3.4918739184796247`*^9, 3.4918739666983747`*^9}, {
  3.4919124590166216`*^9, 3.491912472344832*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.3920500129449368`*^9, 3.3920500132654104`*^9}, {
  3.4918739989171247`*^9, 3.4918740014952497`*^9}, {3.4920348202921247`*^9, 
  3.4920348205264997`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.4918740017296247`*^9, 3.4920348209483747`*^9}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.4918740017296247`*^9, 3.4920348209483747`*^9}]
}, Open  ]],

Cell[TextData[{
 "For a multi-dimensional array, ",
 Cell[BoxData[
  ButtonBox["Dimensions",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Dimensions"]]],
 " gives the length of the array in each dimension:"
}], "Text",
 CellChangeTimes->{{3.491912488141808*^9, 3.491912492641837*^9}, {
  3.491912605048806*^9, 3.491912607814449*^9}, {3.4919219896557426`*^9, 
  3.4919220759219193`*^9}, {3.4920349366983747`*^9, 3.4920349386202497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4920348477139997`*^9, 3.4920348514327497`*^9}}],

Cell[BoxData[
 RowBox[{"{", "4", "}"}]], "Output",
 CellChangeTimes->{3.4920348518233747`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.4920348518233747`*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["MemberQ",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/MemberQ"], "[", 
   RowBox[{"l", ",", "e"}], "]"}]]],
 " function checks whether a list ",
 Cell[BoxData["l"]],
 " contains a particular element ",
 Cell[BoxData["e"]],
 ":"
}], "Text",
 CellChangeTimes->{{3.4920297014014997`*^9, 3.4920297431827497`*^9}, {
  3.4920349727921247`*^9, 3.4920349764014997`*^9}, {3.4920386754327497`*^9, 
  3.4920386788546247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "3"}], "}"}], ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.49192307531894*^9, 3.4919230772252026`*^9}, {
  3.4920297620264997`*^9, 3.4920297631983747`*^9}, {3.4920300823389997`*^9, 
  3.4920300825889997`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4920297637452497`*^9, 3.4920300833233747`*^9}]
}, Open  ]],

Cell[TextData[{
 "If you want to know the location(s) of the element in the list, use the ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Position",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Position"], "[", 
   RowBox[{"l", ",", " ", "e"}], "]"}]], "InlineFormula"],
 " function:"
}], "Text",
 CellChangeTimes->{{3.4920297014014997`*^9, 3.4920297431827497`*^9}, {
  3.4920297743389997`*^9, 3.4920297839796247`*^9}, {3.4920299430733747`*^9, 
  3.4920300480264997`*^9}, {3.4920349664483747`*^9, 3.4920349673077497`*^9}, {
  3.4920386808077497`*^9, 3.4920386818233747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "3"}], "}"}], ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.491923082350236*^9, 3.4919230840377464`*^9}, {
  3.4920300528233747`*^9, 3.4920300555577497`*^9}, {3.4920300865108747`*^9, 
  3.4920300866514997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "5", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4920300560889997`*^9, 3.4920300870421247`*^9}]
}, Open  ]],

Cell[TextData[{
 "The positions are returned as a list, and each element in the list is the \
index of one instance of ",
 Cell[BoxData["e"]],
 " in ",
 Cell[BoxData["l"]],
 ". Note that the index in a list in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " starts from 1, not 0. If ",
 Cell[BoxData["l"]],
 " is a nested list, each instance is represented by indices at succesively \
deeper levels:"
}], "Text",
 CellChangeTimes->{{3.4920300949327497`*^9, 3.4920301997608747`*^9}, {
  3.4920302537764997`*^9, 3.4920303346514997`*^9}, {3.4920349945733747`*^9, 
  3.4920350191827497`*^9}, {3.4920351082921247`*^9, 3.4920351457139997`*^9}, {
  3.4920386834327497`*^9, 3.4920386886514997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.4920303447452497`*^9, 3.4920303493546247`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4920303498077497`*^9}]
}, Open  ]],

Cell[TextData[{
 "Here, ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}]]],
 " represents the position at index 2 in the 1st sub-list, ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"2", ",", "1"}], "}"}]]],
 " represents the position at index 1 in the 2nd sub-list."
}], "Text",
 CellChangeTimes->{{3.4920303560733747`*^9, 3.4920305286827497`*^9}, {
  3.4920350703702497`*^9, 3.4920350844327497`*^9}, {3.492132656986375*^9, 
  3.492132660798875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Retrieving elements", "Subsection",
 CellChangeTimes->{{3.4918709210264997`*^9, 3.4918709298546247`*^9}}],

Cell[TextData[{
 "The most common way to retrieve elements from a list is ",
 Cell[BoxData[
  RowBox[{"Part", "[", 
   RowBox[{"l", ",", "i"}], "]"}]]],
 ", which returns the ",
 Cell[BoxData["i"]],
 "th element of the list ",
 Cell[BoxData["l"]],
 ".  This function is used so often that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " supports the shorthand form ",
 Cell[BoxData[
  RowBox[{"l", "[", 
   RowBox[{"[", "i", "]"}], "]"}]]],
 " or ",
 Cell[BoxData[
  RowBox[{"l", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]]],
 ".  (The special bracket ",
 Cell[BoxData["\[LeftDoubleBracket]"]],
 " are formed by typing ",
 Cell[BoxData[
  RowBox[{"Escape", " ", "[", 
   RowBox[{"[", " ", "Escape"}]}]]],
 ".). For example:"
}], "Text",
 CellChangeTimes->{{3.4920313627764997`*^9, 3.4920313836202497`*^9}, {
  3.4920354097296247`*^9, 3.4920354683233747`*^9}, {3.4920355200421247`*^9, 
  3.4920355290733747`*^9}, {3.4920379070421247`*^9, 3.4920379184796247`*^9}, {
  3.4920386625108747`*^9, 3.4920386664171247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Part", "[", 
  RowBox[{"l", ",", "3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"l", "[", 
  RowBox[{"[", "3", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"l", "\[LeftDoubleBracket]", "3", 
  "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.4920354857608747`*^9, 3.4920355385108747`*^9}, {
  3.4920386555733747`*^9, 3.4920386575577497`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.4920355061514997`*^9, 3.4920355388858747`*^9, 
  3.4920386584327497`*^9}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.4920355061514997`*^9, 3.4920355388858747`*^9, 
  3.4920386584327497`*^9}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.4920355061514997`*^9, 3.4920355388858747`*^9, 
  3.4920386584327497`*^9}]
}, Open  ]],

Cell[TextData[{
 "As mentioned before, ",
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" indices start from 1, not 0",
  FontColor->RGBColor[1, 0, 0]],
 ". Accessing a part of a list that does not exist is a common error in \
coding. Take the 0th element will yield nonsense (the value List), and taking \
elements after the end of the list will generate an error message. For \
example:"
}], "Text",
 CellChangeTimes->{{3.4920355552296247`*^9, 3.4920356201514997`*^9}, {
  3.4920358124171247`*^9, 3.4920359037608747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"l", "\[LeftDoubleBracket]", "0", 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{"l", "\[LeftDoubleBracket]", "5", 
  "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.3920547266208677`*^9, 3.392054735574099*^9}, {
  3.4920356229327497`*^9, 3.4920356472921247`*^9}, {3.4920358016514997`*^9, 
  3.4920358026046247`*^9}, {3.4920358806671247`*^9, 3.4920358835889997`*^9}, {
  3.4920386981046247`*^9, 3.4920386986202497`*^9}}],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{{3.4920356254014997`*^9, 3.4920356476046247`*^9}, 
   3.4920358031671247`*^9, 3.4920358840108747`*^9, 3.4920386995889997`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Part", "::", "\<\"partw\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Part \\\\\\\"\\\", \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\!\\(5\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" of \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({1, 2, 3, 4}\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" does not \
exist.\\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4920358840108747`*^9, 3.4920386995889997`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[LeftDoubleBracket]",
   "5", "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{{3.4920356254014997`*^9, 3.4920356476046247`*^9}, 
   3.4920358031671247`*^9, 3.4920358840108747`*^9, 3.4920386995889997`*^9}]
}, Open  ]],

Cell["\<\
An element in a nested list can be accessed by its indices at successively \
deeper level of the list, separated by commas:\
\>", "Text",
 CellChangeTimes->{{3.4920362068233747`*^9, 3.4920362966983747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"a", "\[LeftDoubleBracket]", "3", 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{"a", "\[LeftDoubleBracket]", 
  RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.4920362996671247`*^9, 3.4920363369796247`*^9}, {
  3.4920366611514997`*^9, 3.4920366676827497`*^9}, {3.4920387059171247`*^9, 
  3.4920387071827497`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.4920363289639997`*^9, 3.4920363374483747`*^9}, 
   3.4920366681983747`*^9, 3.4920387086671247`*^9}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.4920363289639997`*^9, 3.4920363374483747`*^9}, 
   3.4920366681983747`*^9, 3.4920387086671247`*^9}]
}, Open  ]],

Cell["\<\
You can also retrieve multiple items from a list by using a list of indices \
instead of a single index. The result will be another list containing the \
subset of the original list with the specified indices. For example,\
\>", "Text",
 CellChangeTimes->{{3.4920363818858747`*^9, 3.4920364567296247`*^9}, {
  3.4920365427139997`*^9, 3.4920365446202497`*^9}, {3.4920366894796247`*^9, 
  3.4920367018389997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", "\[LeftDoubleBracket]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3"}], "}"}], 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{"a", "\[LeftDoubleBracket]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", "2"}], 
  "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.4920365476202497`*^9, 3.4920365782452497`*^9}, {
  3.4920367349796247`*^9, 3.4920367372296247`*^9}, {3.4920377891827497`*^9, 
  3.4920378050108747`*^9}, {3.4920387107296247`*^9, 3.4920387113077497`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4920365795264997`*^9, 3.4920367375264997`*^9, {3.4920377938389997`*^9, 
   3.4920378053546247`*^9}, 3.4920387121671247`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4920365795264997`*^9, 3.4920367375264997`*^9, {3.4920377938389997`*^9, 
   3.4920378053546247`*^9}, 3.4920387121827497`*^9}]
}, Open  ]],

Cell[TextData[{
 "Part (\[LeftDoubleBracket]\[RightDoubleBracket]) supports a powerful way of \
extracting a range of elements via the Span ",
 Cell[BoxData[";;"]],
 " operator. Spend a few minutes and read up on ",
 Cell[BoxData[
  FormBox[
   ButtonBox["Span",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Span"], TraditionalForm]]],
 " and ",
 ButtonBox["Part",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Part"],
 "."
}], "Text",
 CellChangeTimes->{{3.4920382472608747`*^9, 3.4920384100421247`*^9}, {
  3.4920384414639997`*^9, 3.4920384945421247`*^9}, {3.4920392484639997`*^9, 
  3.4920392485421247`*^9}, {3.492040035301893*^9, 3.492040158041766*^9}, {
  3.492132689048875*^9, 3.49213269309575*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " supports various other functions for element retrieval that serve specific \
needs. Functions ",
 Cell[BoxData[
  ButtonBox["First",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/First"]]],
 " and ",
 Cell[BoxData[
  ButtonBox["Last",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Last"]]],
 " return the first and last element of a list, respectively, and ",
 Cell[BoxData[
  ButtonBox["Rest",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Rest"]]],
 " and ",
 Cell[BoxData[
  ButtonBox["Most",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Most"]]],
 " return the subset of the list without the first or last element, \
respectively. For example:"
}], "Text",
 CellChangeTimes->{{3.4920365961514997`*^9, 3.4920365975577497`*^9}, {
  3.4920378140733747`*^9, 3.4920378490264997`*^9}, {3.4920378908389997`*^9, 
  3.4920378999483747`*^9}, {3.4920379408546247`*^9, 3.4920382137139997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"First", "[", "l", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "[", "l", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Rest", "[", "l", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Most", "[", "l", "]"}]}], "Input",
 CellChangeTimes->{{3.4920381232296247`*^9, 3.4920381296983747`*^9}, {
  3.4920382176827497`*^9, 3.4920382229014997`*^9}, {3.4920387231983747`*^9, 
  3.4920387248077497`*^9}, {3.4920390304014997`*^9, 3.4920390314327497`*^9}, {
  3.4920391549171247`*^9, 3.4920391549952497`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.4920381298858747`*^9, 3.4920382230889997`*^9, 
  3.4920387255733747`*^9, 3.4920390319639997`*^9, 3.4920391554483747`*^9}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.4920381298858747`*^9, 3.4920382230889997`*^9, 
  3.4920387255733747`*^9, 3.4920390319639997`*^9, 3.4920391554483747`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.4920381298858747`*^9, 3.4920382230889997`*^9, 
  3.4920387255733747`*^9, 3.4920390319639997`*^9, 3.4920391554483747`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.4920381298858747`*^9, 3.4920382230889997`*^9, 
  3.4920387255733747`*^9, 3.4920390319639997`*^9, 3.4920391554483747`*^9}]
}, Open  ]],

Cell[TextData[{
 "Function ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Take",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Take"], "[", 
   RowBox[{"l", ",", "n"}], "]"}]]],
 " gives the first ",
 Cell[BoxData["n"]],
 " elements of the list ",
 Cell[BoxData["l"]],
 ",  ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Take",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Take"], "[", 
   RowBox[{"l", ",", 
    RowBox[{"-", "n"}]}], "]"}]]],
 " gives the last ",
 Cell[BoxData["n"]],
 " elements, and ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Take",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Take"], "[", 
   RowBox[{"l", ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "]"}]], "InlineFormula"],
 " gives elements ",
 Cell[BoxData["m"]],
 " thgourh ",
 Cell[BoxData["n"]],
 ":"
}], "Text",
 CellChangeTimes->{{3.4920381386671247`*^9, 3.4920381396202497`*^9}, {
  3.4920385234171247`*^9, 3.4920385246046247`*^9}, {3.4920386337139997`*^9, 
  3.4920386478233747`*^9}, {3.4920387353546247`*^9, 3.4920387534952497`*^9}, {
  3.4920388376358747`*^9, 3.4920388806202497`*^9}, {3.4920389867921247`*^9, 
  3.4920389974014997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Take", "[", 
  RowBox[{"l", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"l", ",", 
   RowBox[{"-", "2"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"l", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4920388823546247`*^9, 3.4920389011358747`*^9}, {
   3.4920390011046247`*^9, 3.4920390034796247`*^9}, {3.4920391164639997`*^9, 
   3.4920391247608747`*^9}, 3.4920391628702497`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.4920388882764997`*^9, 3.4920389028702497`*^9}, 
   3.4920390045889997`*^9, 3.4920391257139997`*^9, 3.4920391632296247`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.4920388882764997`*^9, 3.4920389028702497`*^9}, 
   3.4920390045889997`*^9, 3.4920391257139997`*^9, 3.4920391632296247`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.4920388882764997`*^9, 3.4920389028702497`*^9}, 
   3.4920390045889997`*^9, 3.4920391257139997`*^9, 3.4920391632452497`*^9}]
}, Open  ]],

Cell[TextData[{
 "Similarly, function ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Drop",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Drop"], "[", 
   RowBox[{"l", ",", "n"}], "]"}]]],
 " gives the list ",
 Cell[BoxData["l"]],
 " without the first ",
 Cell[BoxData["n"]],
 " elements,  ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Drop",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Drop"], "[", 
   RowBox[{"l", ",", 
    RowBox[{"-", "n"}]}], "]"}]]],
 " gives the list without the last ",
 Cell[BoxData["n"]],
 " elements, and ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Drop",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Drop"], "[", 
   RowBox[{"l", ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}]}], "]"}]], "InlineFormula"],
 " gives the list without elements ",
 Cell[BoxData["m"]],
 " thgourh ",
 Cell[BoxData["n"]],
 ". Also, ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Drop",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Drop"], "[", 
   RowBox[{
    StyleBox["list", "TI"], ",", 
    RowBox[{"{", 
     StyleBox["n", "TI"], "}"}]}], "]"}]], "InlineFormula"],
 "gives the list without a single element at index ",
 Cell[BoxData["n"]],
 ". For example:"
}], "Text",
 CellChangeTimes->{{3.4920381386671247`*^9, 3.4920381396202497`*^9}, {
  3.4920385234171247`*^9, 3.4920385246046247`*^9}, {3.4920386337139997`*^9, 
  3.4920386478233747`*^9}, {3.4920387353546247`*^9, 3.4920387534952497`*^9}, {
  3.4920388376358747`*^9, 3.4920388806202497`*^9}, {3.4920389434639997`*^9, 
  3.4920389793858747`*^9}, {3.4920390509796247`*^9, 3.4920390999171247`*^9}, {
  3.4920391816358747`*^9, 3.4920392356202497`*^9}, {3.4920395915632644`*^9, 
  3.492039649378354*^9}, {3.492039794541107*^9, 3.4920398305739717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Drop", "[", 
  RowBox[{"l", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Drop", "[", 
  RowBox[{"l", ",", 
   RowBox[{"-", "2"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Drop", "[", 
  RowBox[{"l", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Drop", "[", 
  RowBox[{"l", ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4920388823546247`*^9, 3.4920389011358747`*^9}, {
  3.4920390011046247`*^9, 3.4920390034796247`*^9}, {3.4920391164639997`*^9, 
  3.4920391674171247`*^9}, {3.492039652050349*^9, 3.4920396629727135`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.4920391412921247`*^9, 3.4920391677764997`*^9}, {
  3.492039655706763*^9, 3.4920396632852273`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.4920391412921247`*^9, 3.4920391677764997`*^9}, {
  3.492039655706763*^9, 3.4920396632852273`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.4920391412921247`*^9, 3.4920391677764997`*^9}, {
  3.492039655706763*^9, 3.4920396632852273`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.4920391412921247`*^9, 3.4920391677764997`*^9}, {
  3.492039655706763*^9, 3.4920396633008533`*^9}}]
}, Open  ]],

Cell[TextData[{
 "There are many other bulit-in functions that could simplify your code for \
retrieving elements, which are not covered here. Spend a couple of minutes \
and browse functions like ",
 Cell[BoxData[
  ButtonBox["Extract",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Extract"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["Delete",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Delete"]]],
 " and ",
 Cell[BoxData[
  ButtonBox["Select",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Select"]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4920393031514997`*^9, 3.4920393041358747`*^9}, {
  3.492039529888626*^9, 3.4920395792502127`*^9}, {3.492039670019904*^9, 
  3.492039735866604*^9}, {3.492039840043146*^9, 3.492039857137662*^9}, {
  3.4920399262657585`*^9, 3.4920399620486116`*^9}, {3.4920401886212616`*^9, 
  3.4920402001217766`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modifying lists", "Subsection",
 CellChangeTimes->{{3.4918704834639997`*^9, 3.4918704924639997`*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " supports a range of functions for changing the structure of a list. A \
common task is to add a new element to an existing list. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " offers functions ",
 Cell[BoxData[
  ButtonBox["Prepend",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Prepend"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["Append",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Append"]]],
 ", and ",
 Cell[BoxData[
  ButtonBox["Insert",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Insert"]]],
 " for this purpose, which respectively adds an element to the beginning, the \
end, and at a specified locatoin of the list. For example,"
}], "Text",
 CellChangeTimes->{{3.4920430635313015`*^9, 3.4920431688172684`*^9}, {
   3.4920432034281936`*^9, 3.4920432794315987`*^9}, {3.49204364241661*^9, 
   3.4920436786213565`*^9}, 3.4920445756459165`*^9, {3.4920461737487583`*^9, 
   3.4920461750613165`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Prepend", "[", 
  RowBox[{"l", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Append", "[", 
  RowBox[{"l", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Insert", "[", 
  RowBox[{"l", ",", "0", ",", "3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4920433052608805`*^9, 3.492043358216378*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.492043352450495*^9, 3.4920433589664116`*^9}, 
   3.4920436154466515`*^9, 3.492044429045599*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.492043352450495*^9, 3.4920433589664116`*^9}, 
   3.4920436154466515`*^9, 3.492044429061225*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "0", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.492043352450495*^9, 3.4920433589664116`*^9}, 
   3.4920436154466515`*^9, 3.492044429061225*^9}]
}, Open  ]],

Cell[TextData[{
 "Note that these functions (and most other ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions on lists) outputs the modified list but do not change the \
original list in the argument. For example, the variable ",
 Cell[BoxData["l"]],
 " above is unaffected by these operations:"
}], "Text",
 CellChangeTimes->{{3.492043366169859*^9, 3.492043509254394*^9}, 
   3.4920436877780166`*^9}],

Cell[CellGroupData[{

Cell[BoxData["l"], "Input",
 CellChangeTimes->{3.492043510332567*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.49204351061383*^9}]
}, Open  ]],

Cell[TextData[{
 "The two exceptions are functions ",
 Cell[BoxData[
  ButtonBox["PrependTo",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PrependTo"]]],
 " and ",
 Cell[BoxData[
  ButtonBox["AppendTo",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/AppendTo"]]],
 ", which reset the content of the variable in the argument to be the result:"
}], "Text",
 CellChangeTimes->{{3.4920435170828695`*^9, 3.492043584476514*^9}, {
  3.492043698309738*^9, 3.4920437032474594`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PrependTo", "[", 
  RowBox[{"l", ",", "0"}], "]"}], "\[IndentingNewLine]", "l"}], "Input",
 CellChangeTimes->{{3.4920435621317625`*^9, 3.4920436190093107`*^9}, {
  3.4920444234359727`*^9, 3.4920444259985876`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4920435695539703`*^9, {3.4920436002115936`*^9, 3.492043620931272*^9}, 
   3.492044430873806*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4920435695539703`*^9, {3.4920436002115936`*^9, 3.492043620931272*^9}, 
   3.492044430873806*^9}]
}, Open  ]],

Cell[TextData[{
 "There are a couple of functions used very often that change the ordering of \
elements in a list. ",
 Cell[BoxData[
  ButtonBox["Reverse",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Reverse"]]],
 " reverses the order of elements, while ",
 Cell[BoxData[
  ButtonBox["RotateLeft",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RotateLeft"]]],
 " or ",
 Cell[BoxData[
  ButtonBox["RotateRight",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RotateRight"]]],
 " cycles the elements to the left or right:"
}], "Text",
 CellChangeTimes->{{3.492043755781063*^9, 3.4920438313313227`*^9}, {
  3.492043883474283*^9, 3.4920439315389366`*^9}, {3.492044295602121*^9, 
  3.49204438990322*^9}, {3.49204451679953*^9, 3.4920445295813527`*^9}, {
  3.4921327278145*^9, 3.49213274034575*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Reverse", "[", "l", "]"}], "\[IndentingNewLine]", 
 RowBox[{"RotateLeft", "[", "l", "]"}], "\[IndentingNewLine]", 
 RowBox[{"RotateRight", "[", "l", "]"}]}], "Input",
 CellChangeTimes->{{3.4920443942627907`*^9, 3.4920444063102055`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "3", ",", "2", ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.492044407075865*^9, 3.492044434889611*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.492044407075865*^9, 3.492044434889611*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "0", ",", "1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.492044407075865*^9, 3.4920444349052362`*^9}}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["Sort",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Sort"]]],
 " sorts the elements in ascending order:"
}], "Text",
 CellChangeTimes->{{3.492043755781063*^9, 3.4920438313313227`*^9}, {
   3.492043883474283*^9, 3.4920439315389366`*^9}, 3.492044295602121*^9, 
   3.4920445362691526`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", "1", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.492043933554652*^9, 3.4920439527898884`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.4920439537430563`*^9}]
}, Open  ]],

Cell["\<\
You can also defined a customized ordering function, using the inline \
function definition approach we discussed earlier (see section on Making new \
functions). For example, the following code sorts a nested list in descending \
order of the second element in each sub-list:\
\>", "Text",
 CellChangeTimes->{{3.4920439700875387`*^9, 3.4920441456579037`*^9}, {
  3.4920441989571667`*^9, 3.492044214942258*^9}, {3.492044682228816*^9, 
  3.492044683650755*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"#1", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ">", 
     RowBox[{"#2", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.492044173502901*^9, 3.4920441783312426`*^9}, 
   3.492044678931793*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"40", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.492044147298602*^9, 3.4920441787375107`*^9, 
  3.492044679259933*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " supports the usual operations involving multiple lists, such as ",
 Cell[BoxData[
  ButtonBox["Join",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Join"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["Union",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Union"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["Intersection",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Intersection"]]],
 ", and ",
 Cell[BoxData[
  ButtonBox["Complement",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Complement"]]],
 ". While I will refer you to their reference pages for their syntax, I \
should point out that, except ",
 Cell[BoxData[
  ButtonBox["Join",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Join"]]],
 ", the other three functions return a sorted list (in ascending order) \
without duplicate elements. Note the difference between ",
 Cell[BoxData[
  ButtonBox["Join",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Join"]]],
 " and ",
 Cell[BoxData[
  ButtonBox["Union",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Union"]]],
 " in this example:"
}], "Text",
 CellChangeTimes->{{3.4920447609823437`*^9, 3.492044860580556*^9}, {
  3.4920450927003293`*^9, 3.4920452197372704`*^9}, {3.4920452573795815`*^9, 
  3.492045277833623*^9}, {3.4921327536895*^9, 3.492132754127*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4920452244562316`*^9, 3.492045250582402*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1", ",", "2", ",", "2", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.492045243707094*^9, 3.49204525120743*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.492045243707094*^9, 3.49204525120743*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vector and matrix operations", "Subsection",
 CellChangeTimes->{{3.4920460927138777`*^9, 3.4920460996985655`*^9}, 
   3.4920462149693546`*^9, {3.4920463473971624`*^9, 3.492046350287917*^9}, {
   3.4920466137997217`*^9, 3.492046616862359*^9}, {3.492046652879597*^9, 
   3.49204665595786*^9}}],

Cell[TextData[{
 "A number of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions are designed for lists with a particular structure, such as 1D \
vectors and 2D matrices. These functions are essential for calculatoins in \
linear algebra. To start, the function MatrixForm is useful for viewing a 2D \
array in a matrix format:"
}], "Text",
 CellChangeTimes->{{3.492046774103778*^9, 3.4920468674517097`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "a", "]"}]}], "Input",
 CellChangeTimes->{{3.4920469263449726`*^9, 3.492046937236086*^9}, {
  3.492046983441281*^9, 3.492047004160959*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3"},
     {"3", "4"},
     {"4", "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4920469375485997`*^9, {3.492046987800851*^9, 3.492047004785987*^9}}]
}, Open  ]],

Cell["Transpose takes a 2D array and swaps its rows and columns:", "Text",
 CellChangeTimes->{{3.4920469604402504`*^9, 3.4920469784410567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", "a", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.492046993644863*^9, 3.4920470113644066`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "4"},
     {"3", "4", "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.4920469963168573`*^9, 3.492047011661295*^9}}]
}, Open  ]],

Cell[TextData[{
 "Common arithmatic functions (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"+", 
     RowBox[{",", 
      RowBox[{"*", 
       RowBox[{",", 
        RowBox[{"^", 
         RowBox[{",", "..."}]}]}]}]}]}], ")"}], TraditionalForm]]],
 " can apply directly to matrices (or vectors) of the same dimensions, in an \
element-wise manner. For example,"
}], "Text",
 CellChangeTimes->{{3.4920478436516914`*^9, 3.4920478717310743`*^9}, {
  3.49204791426423*^9, 3.4920479859705667`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", "a"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4920480060495915`*^9, 3.492048031066337*^9}, {
  3.4920756802580905`*^9, 3.4920756846957893`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", "6"},
     {"6", "8"},
     {"8", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.4920480229253473`*^9, 3.4920480315194826`*^9}}]
}, Open  ]],

Cell["\<\
Dot(.) performs matrix product, which requires the two input matrices to have \
compatible dimensions (the number of columns in the first matrix equals the \
number of rows in the second matrix):\
\>", "Text",
 CellChangeTimes->{{3.492047041037611*^9, 3.4920471043373213`*^9}, {
  3.4920471625586796`*^9, 3.492047163668104*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", ".", 
   RowBox[{"Transpose", "[", "a", "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4920471143065186`*^9, 3.4920471499643655`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"13", "18", "23"},
     {"18", "25", "32"},
     {"23", "32", "41"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.4920471176504183`*^9, 3.492047146354829*^9}}]
}, Open  ]],

Cell["\<\
If the dimensions of the two matrices don't match, an error message will \
occur:\
\>", "Text",
 CellChangeTimes->{{3.492047153448897*^9, 3.492047180106341*^9}, 
   3.492048064005313*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", ".", "a"}]], "Input",
 CellChangeTimes->{{3.492047182809587*^9, 3.492047183059598*^9}, 
   3.492048064005313*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dot", "::", "\<\"dotsh\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Tensors \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\(\\({2, 3}\\)\\), \
\\(\\({3, 4}\\)\\), \\(\\({4, 5}\\)\\)}\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" and \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\(\\({2, 3}\\)\\), \
\\(\\({3, 4}\\)\\), \\(\\({4, 5}\\)\\)}\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" have incompatible \
shapes.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Dot/dotsh\\\", ButtonNote -> \
\\\"Dot::dotsh\\\"]\\)\"\>"}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.492047146370455*^9, 3.4920471833721123`*^9, 
  3.492048064005313*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}]}], "}"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.4920471176504183`*^9, 3.492047146370455*^9}, 
   3.4920471833721123`*^9, 3.492048064005313*^9}]
}, Open  ]],

Cell["\<\
Note that if the two matrices are vectors, they can dot directly:\
\>", "Text",
 CellChangeTimes->{{3.492047200466628*^9, 3.4920472943614593`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"b", ".", "b"}]}], "Input",
 CellChangeTimes->{{3.492047243171666*^9, 3.4920472502813597`*^9}}],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.4920472505938735`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " supports a comprehensive set of linear algebraic functions on matrices, \
such as ",
 Cell[BoxData[
  ButtonBox["Det",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Det"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["Inverse",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Inverse"]]],
 ", ",
 Cell[BoxData[
  ButtonBox["Eigensystem",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Eigensystem"]]],
 ", to name a few. Take a moment to browse this tutorial on ",
 ButtonBox["Linear Algebra",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/MatricesAndLinearAlgebra"],
 " and see the capability of ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "in matrix operations."
}], "Text",
 CellChangeTimes->{{3.492047339535358*^9, 3.49204737328687*^9}, {
  3.4920474084603205`*^9, 3.492047420976506*^9}, {3.4920474924797096`*^9, 
  3.4920476167040243`*^9}, {3.4920476682688346`*^9, 3.492047680550635*^9}, {
  3.4920477811957684`*^9, 3.492047791852496*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applying functions to lists", "Subsection",
 CellChangeTimes->{{3.4918735389639997`*^9, 3.4918735426358747`*^9}, {
  3.491923313070462*^9, 3.491923313820467*^9}, {3.491923358430127*^9, 
  3.49192335886763*^9}, {3.4919240552158365`*^9, 3.491924059372113*^9}, {
  3.4920757590741215`*^9, 3.4920757632930603`*^9}}],

Cell[TextData[{
 "Some ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions can be directly applied to a list to obtain a summary value, \
such ",
 Cell[BoxData[
  ButtonBox["Min",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Min"]]],
 " and ",
 Cell[BoxData[
  ButtonBox["Max",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Max"]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.4920757677151337`*^9, 3.492075800247841*^9}, {
  3.4920759514889913`*^9, 3.492075953207818*^9}, {3.4920767261330686`*^9, 
  3.4920767285863037`*^9}, {3.492078155400222*^9, 3.4920781652600384`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "2", ",", 
     RowBox[{"-", "3"}], ",", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", "l", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", "l", "]"}]}], "Input",
 CellChangeTimes->{{3.492075956082947*^9, 3.492075966817803*^9}, {
  3.492076992582505*^9, 3.4920769960514107`*^9}}],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{3.4920759678022223`*^9, 3.492076996535807*^9, 
  3.4920771387140512`*^9}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.4920759678022223`*^9, 3.492076996535807*^9, 
  3.4920771387140512`*^9}]
}, Open  ]],

Cell[TextData[{
 "More often, a function needs to be applied to each element in the list, \
which requires iteration over the list. Although many ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " built-in functions automatically apply to every element in a list (check \
out for example ",
 Cell[BoxData[
  ButtonBox["Abs",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Abs"]]],
 " and ",
 Cell[BoxData[
  ButtonBox["EvenQ",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/EvenQ"]]],
 "),  usually you need to use ",
 Cell[BoxData["Table"]],
 " and ",
 Cell[BoxData["Do"]],
 " to iterative over a list yourself. Both ",
 Cell[BoxData["Table"]],
 " and ",
 Cell[BoxData["Do"]],
 " need to use iterators over the indices in the list, which can make the \
code look complex. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " supports two additional functions, ",
 Cell[BoxData[
  ButtonBox["Map",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Map"]]],
 " and ",
 Cell[BoxData[
  ButtonBox["Scan",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Scan"]]],
 ", that can simplify your code."
}], "Text",
 CellChangeTimes->{{3.492075982099737*^9, 3.492076690287713*^9}, {
  3.4920767406180925`*^9, 3.4920768326222143`*^9}, {3.4920768676550336`*^9, 
  3.4920768942187233`*^9}, {3.492077375943429*^9, 3.4920774208516903`*^9}, {
  3.4920777459756303`*^9, 3.492077757007375*^9}, {3.4920781747135873`*^9, 
  3.49207823895084*^9}, {3.4920806437148185`*^9, 3.4920806688253183`*^9}, {
  3.4921327878145*^9, 3.492132815002*^9}}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Map",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Map"], "[", 
   RowBox[{"f", ",", "l"}], "]"}]]],
 " function applies some function ",
 Cell[BoxData["f"], "InlineFormula"],
 " to each element on the first level in ",
 Cell[BoxData["l"], "InlineFormula"],
 ", and returns the result of evaluation in a new list with the same length \
as ",
 Cell[BoxData["l"]],
 ". This is similar to ",
 Cell[BoxData["Table"]],
 ", and in fact they are equivalent in uses. For example, both expressions \
below get the absolute value of each element in a list:"
}], "Text",
 CellChangeTimes->{{3.492075982099737*^9, 3.492076690287713*^9}, {
  3.4920767406180925`*^9, 3.4920768326222143`*^9}, {3.4920768676550336`*^9, 
  3.4920768803743534`*^9}, {3.4920769516119194`*^9, 3.492076964253111*^9}, {
  3.492077070773508*^9, 3.492077105665696*^9}, {3.492077715114873*^9, 
  3.4920777154430127`*^9}, {3.4920778840599413`*^9, 3.492077889435182*^9}, {
  3.4920782542640257`*^9, 3.4920783085945845`*^9}, {3.492078448882119*^9, 
  3.4920784498040357`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"#", "<", "0"}], ",", 
      RowBox[{"-", "#"}], ",", "#"}], "]"}], "&"}], ",", "l"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"l", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "<", "0"}], ",", 
     RowBox[{"-", 
      RowBox[{"l", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"l", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "l", "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.492076972331598*^9, 3.492077062382507*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4920770214587984`*^9, {3.4920770596636353`*^9, 3.492077063257546*^9}, 
   3.4920771407922697`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4920770214587984`*^9, {3.4920770596636353`*^9, 3.492077063257546*^9}, 
   3.4920771407922697`*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData["Map"]],
 " expression above uses an inline function, whose argument (an element in \
the list) is passed to the function body as ",
 Cell[BoxData["#"]],
 ". Note that ",
 Cell[BoxData["Map"]],
 " does not need to iterate over the indices, and hence the code is more \
succinct than ",
 Cell[BoxData["Table"]],
 ". Check out some variants of ",
 Cell[BoxData["Map"]],
 ", such as ",
 Cell[BoxData[
  ButtonBox["MapThread",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/MapThread"]]],
 " (iterating over multiple lists), and ",
 Cell[BoxData[
  ButtonBox["MapIndexed",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/MapIndexed"]]],
 " (passing the index of the element as well as the content to the function)."
}], "Text",
 CellChangeTimes->{{3.49207715285531*^9, 3.492077271813764*^9}, {
  3.492077306627824*^9, 3.492077353973695*^9}, {3.4920774317584295`*^9, 
  3.4920775061055098`*^9}, {3.4920775604985714`*^9, 3.492077624001416*^9}, {
  3.492078313001032*^9, 3.4920783527059355`*^9}}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Scan",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Scan"], "[", 
   RowBox[{"f", ",", "l"}], "]"}]], "InlineFormula"],
 " function is similar to ",
 Cell[BoxData["Map"]],
 ", except that it does not return any result. It achieves the same effect as \
",
 Cell[BoxData["Do"]],
 ", but simpler to write. For example, both expressions below print out \
values in a list:"
}], "Text",
 CellChangeTimes->{{3.492077629189149*^9, 3.49207770411438*^9}, {
  3.492077773508114*^9, 3.4920778138380456`*^9}, {3.492077899201245*^9, 
  3.492077982845617*^9}, {3.492078132336689*^9, 3.4920781335711193`*^9}, {
  3.492078361128188*^9, 3.492078442491208*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Scan", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Element: \>\"", ",", "#"}], "]"}], "&"}], ",", "l"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4920779208584647`*^9, 3.4920779306089015`*^9}, {
  3.4920781031635065`*^9, 3.4920781138358603`*^9}, {3.492078510463003*^9, 
  3.492078516557026*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Element: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "1"}]}],
  SequenceForm["Element: ", -1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4920781146327705`*^9, {3.492078511384919*^9, 3.492078517010171*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Element: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Element: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4920781146327705`*^9, {3.492078511384919*^9, 3.492078517010171*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Element: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3"}]}],
  SequenceForm["Element: ", -3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4920781146327705`*^9, {3.492078511384919*^9, 3.492078517010171*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Element: \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Element: ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4920781146327705`*^9, {3.492078511384919*^9, 3.492078517010171*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Element: \>\"", ",", 
     RowBox[{"l", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "l", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.492078060911614*^9, 3.4920780911004667`*^9}, {
  3.4920785093535786`*^9, 3.4920785184164844`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Element: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "1"}]}],
  SequenceForm["Element: ", -1],
  Editable->False]], "Print",
 CellChangeTimes->{3.4920780858346057`*^9, 3.4920785191508923`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Element: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Element: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.4920780858346057`*^9, 3.492078519166518*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Element: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "3"}]}],
  SequenceForm["Element: ", -3],
  Editable->False]], "Print",
 CellChangeTimes->{3.4920780858346057`*^9, 3.492078519166518*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Element: \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["Element: ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{3.4920780858346057`*^9, 3.492078519166518*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Subsection",
 CellChangeTimes->{{3.4921693980565305`*^9, 3.4921694128535004`*^9}}],

Cell["\<\
List is the essential data structure for image analysis: a 2D image is simply \
a two-dimensional list, where each entry in the list is the color at a pixel. \
The following exercises use list operations to create images and implement \
several common image processing filters. Visualize your result with this \
helper function that displays a two-dimensional list as a 2D grayscale image \
(where the darker color indicates lower values):\
\>", "Text",
 CellChangeTimes->{{3.49210644915625*^9, 3.492106512484375*^9}, {
  3.4921067006875*^9, 3.492106773453125*^9}, {3.492120664736375*^9, 
  3.492120801517625*^9}, {3.49212101078325*^9, 3.4921210486895*^9}, {
  3.523878898078125*^9, 3.523878922015625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"showArray", "[", "arr_", "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"Raster", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"arr", "-", 
         RowBox[{"Min", "[", "arr", "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", "arr", "]"}], "-", 
         RowBox[{"Min", "[", "arr", "]"}]}], ")"}]}], "]"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "True"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4920307712452497`*^9, 3.4920307873233747`*^9}, {
   3.4920405607941837`*^9, 3.4920405636380615`*^9}, 3.4920414712099686`*^9, {
   3.4920492094785028`*^9, 3.49204921254114*^9}, 3.4920805907280693`*^9, {
   3.4922677684213123`*^9, 3.492267849174413*^9}}],

Cell[TextData[{
 StyleBox["Exercise 1:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " ",
 "Write a function ",
 Cell[BoxData[
  RowBox[{"makeImage", "[", 
   RowBox[{"n", ",", "m"}], "]"}]]],
 " to create a 2D array with dimension ",
 Cell[BoxData["n"]],
 " by ",
 Cell[BoxData["m"]],
 " that evaluates ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "*", 
   RowBox[{"Sin", "[", "y", "]"}]}]]],
 " where ",
 Cell[BoxData["x"]],
 " and ",
 Cell[BoxData["y"]],
 " range between ",
 Cell[BoxData["0"]],
 " and ",
 Cell[BoxData[
  RowBox[{"2", " ", "\[Pi]"}]]],
 ". Try your function with some values of ",
 Cell[BoxData["n"]],
 ", ",
 Cell[BoxData["m"]],
 ". "
}], "Text",
 CellChangeTimes->{{3.3914499126909833`*^9, 3.3914499937491555`*^9}, {
   3.3914502962000904`*^9, 3.3914503003160906`*^9}, {3.3914504496538057`*^9, 
   3.391450456343559*^9}, {3.3914505505909595`*^9, 3.391450580674818*^9}, {
   3.3914508734316196`*^9, 3.3914509133498154`*^9}, {3.3914514834809933`*^9, 
   3.391451509849435*^9}, 3.3914515934413013`*^9, {3.391451658736493*^9, 
   3.391451659046946*^9}, {3.391452106679537*^9, 3.3914521368234825`*^9}, {
   3.391452688337519*^9, 3.3914527949529505`*^9}, {3.392209171640656*^9, 
   3.392209171889008*^9}, 3.491826096225961*^9, 3.491836772966167*^9, {
   3.491839499686743*^9, 3.4918395139524593`*^9}, {3.491839590374823*^9, 
   3.491839646406432*^9}, {3.491839792282366*^9, 3.4918398025949316`*^9}, {
   3.491840380614256*^9, 3.491840402364395*^9}, 3.4918450045188484`*^9, {
   3.4918451795199685`*^9, 3.491845180394974*^9}, {3.491846564263206*^9, 
   3.4918466430762105`*^9}, {3.4918645601983747`*^9, 
   3.4918645812296247`*^9}, {3.4918685825421247`*^9, 3.4918686056514997`*^9}, 
   3.4918736955733747`*^9, {3.4920292238389997`*^9, 3.4920294055577497`*^9}, {
   3.4920294396983747`*^9, 3.4920295993858747`*^9}, {3.4920305479483747`*^9, 
   3.4920305692921247`*^9}, {3.4920305993077497`*^9, 
   3.4920306577608747`*^9}, {3.4920307160733747`*^9, 
   3.4920307695577497`*^9}, {3.4920308088546247`*^9, 
   3.4920308348858747`*^9}, {3.4920310167921247`*^9, 3.4920311496827497`*^9}, 
   3.4920312033546247`*^9, {3.4920313100264997`*^9, 3.4920313140577497`*^9}, {
   3.4920348770889997`*^9, 3.4920349115108747`*^9}, {3.4920402480145473`*^9, 
   3.492040362504051*^9}, {3.4920404239286776`*^9, 3.492040428194494*^9}, {
   3.4920406017178926`*^9, 3.4920407278172913`*^9}, {3.49204082132148*^9, 
   3.492040991657236*^9}, {3.492041024314949*^9, 3.4920410875834084`*^9}, {
   3.492041132835435*^9, 3.492041133741726*^9}, {3.492041171321534*^9, 
   3.492041243996665*^9}, {3.492041281279585*^9, 3.492041376830741*^9}, {
   3.4920415048364754`*^9, 3.492041552369855*^9}, 3.4920419138079214`*^9, {
   3.4921207123145*^9, 3.49212071778325*^9}, {3.49212082453325*^9, 
   3.49212086884575*^9}, {3.492120910502*^9, 3.492120917705125*^9}, {
   3.49212107553325*^9, 3.49212114640825*^9}, {3.4921694224160614`*^9, 
   3.4921694249942026`*^9}, {3.492267607873949*^9, 3.492267702483324*^9}, {
   3.6502246638066874`*^9, 3.6502246670368233`*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeImage", "[", 
   RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "*", 
     RowBox[{"Sin", "[", "y", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "*", "Pi"}], ",", 
      RowBox[{"2", "*", 
       FractionBox["Pi", 
        RowBox[{"n", "-", "1"}]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", 
      RowBox[{"2", "*", "Pi"}], ",", 
      RowBox[{"2", "*", 
       FractionBox["Pi", 
        RowBox[{"m", "-", "1"}]]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sth", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.2", ",", "0.3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2", ",", "0.43", ",", "0.4"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showArray", "[", "sth", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dimensions", "[", "sth", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeImage", "[", 
   RowBox[{"2", ",", "2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeImage", "[", 
   RowBox[{"10", ",", "10"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"showArray", "[", 
  RowBox[{"makeImage", "[", 
   RowBox[{"8", ",", "10"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"showArray", "[", 
  RowBox[{"makeImage", "[", 
   RowBox[{"40", ",", "40"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.650224126199203*^9, 3.65022426574656*^9}, 
   3.65022430540154*^9, {3.650224374726739*^9, 3.650224385846566*^9}, {
   3.650224455481113*^9, 3.650224478178598*^9}, {3.650224538810211*^9, 
   3.650224545616877*^9}, {3.6502245915139217`*^9, 3.6502246190408783`*^9}, {
   3.6502248466759357`*^9, 3.650224892775282*^9}, {3.650224929115713*^9, 
   3.650224930564981*^9}, {3.6502250233828506`*^9, 3.6502250397985897`*^9}, {
   3.650225351835125*^9, 3.650225380093643*^9}, {3.6502254802738256`*^9, 
   3.650225505536828*^9}, {3.650225676345889*^9, 3.650225769554803*^9}, {
   3.650225864831087*^9, 3.6502258832156*^9}, {3.650225931152342*^9, 
   3.6502259478887243`*^9}, {3.650226030032454*^9, 3.650226102124783*^9}, {
   3.650226304362615*^9, 3.650226310602223*^9}, 3.650226561800164*^9, {
   3.650226690653373*^9, 3.650226750145568*^9}, {3.6502269866951847`*^9, 
   3.650226988948505*^9}, {3.650227031846483*^9, 3.650227037436648*^9}, {
   3.650227874742957*^9, 3.650227889078658*^9}, {3.650227962525878*^9, 
   3.650228066289707*^9}, {3.650228133018957*^9, 3.6502282510274057`*^9}, {
   3.6502282990401163`*^9, 3.650228346446836*^9}, {3.6502288089332*^9, 
   3.6502288494916058`*^9}, {3.6502290390269527`*^9, 
   3.6502290900100393`*^9}, {3.6502291238356113`*^9, 3.650229133101522*^9}, {
   3.650748816293133*^9, 3.6507488223115587`*^9}, {3.6507490442068996`*^9, 
   3.650749147475993*^9}, {3.65074919004539*^9, 3.650749190732108*^9}, {
   3.6507492650144567`*^9, 3.650749273727412*^9}, {3.6508160131882772`*^9, 
   3.6508160315360947`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.2`", ",", "0.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "0.43`", ",", "0.4`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.650224266918729*^9, 3.650224398664297*^9, {3.650224458506588*^9, 
   3.650224479057604*^9}, 3.650224549933446*^9, {3.650224595811223*^9, 
   3.65022462281686*^9}, {3.6502248839867*^9, 3.650224893920842*^9}, 
   3.650224931392601*^9, {3.650225042198491*^9, 3.6502250527579613`*^9}, {
   3.650226758884028*^9, 3.650226764666813*^9}, {3.650226976418622*^9, 
   3.6502269900342207`*^9}, 3.650227039198484*^9, {3.650227863069985*^9, 
   3.650227890298498*^9}, {3.650228018719325*^9, 3.650228066937037*^9}, {
   3.650228201107049*^9, 3.650228251773279*^9}, {3.650228324077849*^9, 
   3.650228373993537*^9}, 3.6502290946191463`*^9, 3.65022913386255*^9, 
   3.650748222487892*^9, 3.650748280491062*^9, 3.6507488230997763`*^9, 
   3.650748900037058*^9, {3.650749083220257*^9, 3.650749148098171*^9}, 
   3.650749191613529*^9, 3.65074927457798*^9, {3.6508160177775517`*^9, 
   3.650816034666018*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[
   NCache[{{Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[3, 14] Pi] Sin[Rational[2, 9] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 18] Pi] Cos[Rational[3, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], 
      Rational[1, 2] (Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[3, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[3, 14] Pi] Sin[Rational[1, 9] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[3, 14] Pi] Sin[Rational[1, 9] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[3, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], 
      Rational[1, 2] (Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[1, 18] Pi] Cos[Rational[3, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[3, 14] Pi] Sin[Rational[2, 9] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 14] Pi] Sin[Rational[2, 9] Pi]), 1, 
      Rational[1, 2] (Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 14] Pi] Sin[Rational[1, 9] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[1, 14] Pi] Sin[Rational[1, 9] Pi]), 
      Rational[1, 2] (
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], 0, Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[1, 14] Pi] Sin[Rational[2, 9] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Sin[Rational[1, 7] Pi] Sin[Rational[2, 9] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 18] Pi] Sin[Rational[1, 7] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 7] Pi]), 
      Rational[1, 2] Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Sin[Rational[1, 9] Pi] Sin[Rational[1, 7] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Sin[Rational[1, 9] Pi] Sin[Rational[1, 7] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[1, 7] Pi]), 
      Rational[1, 2] Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[1, 18] Pi] Sin[Rational[1, 7] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Sin[Rational[1, 7] Pi] Sin[Rational[2, 9] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Sin[Rational[1, 7] Pi] Sin[Rational[2, 9] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[1, 18] Pi] Sin[Rational[1, 7] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[1, 7] Pi]), 
      Rational[1, 2] Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Sin[Rational[1, 9] Pi] Sin[Rational[1, 7] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Sin[Rational[1, 9] Pi] Sin[Rational[1, 7] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 7] Pi]), 
      Rational[1, 2] Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 18] Pi] Sin[Rational[1, 7] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Sin[Rational[1, 7] Pi] Sin[Rational[2, 9] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[1, 14] Pi] Sin[Rational[2, 9] Pi]), 0, 
      Rational[1, 2] (
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[1, 14] Pi] Sin[Rational[1, 9] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 14] Pi] Sin[Rational[1, 9] Pi]), 
      Rational[1, 2] (Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], 1, Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 14] Pi] Sin[Rational[2, 9] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[3, 14] Pi] Sin[Rational[2, 9] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[1, 18] Pi] Cos[Rational[3, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], 
      Rational[1, 2] (Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[3, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] - 
       Cos[Rational[3, 14] Pi] Sin[Rational[1, 9] Pi]), Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[3, 14] Pi] Sin[Rational[1, 9] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[3, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], 
      Rational[1, 2] (Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[1, 18] Pi] Cos[Rational[3, 14] Pi]) 
      Sec[Rational[1, 18] Pi] Sec[Rational[1, 14] Pi], Rational[1, 2] 
      Sec[Rational[1, 18] Pi] 
      Sec[Rational[1, 14] Pi] (
       Cos[Rational[1, 18] Pi] Cos[Rational[1, 14] Pi] + 
       Cos[Rational[3, 14] Pi] Sin[Rational[2, 9] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
      1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2]}}, {{0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5}, {
     0.5, 0.7617138414775648, 0.9009688679024193, 0.8526061047631469, 
     0.6392550264248545, 0.3607449735751457, 0.14739389523685334`, 
     0.09903113209758094, 0.23828615852243537`, 0.5}, {
     0.5, 0.8263518223330699, 1, 0.9396926207859085, 0.6736481776669304, 
      0.3263518223330697, 0.060307379214091655`, 0, 0.17364817766693044`, 
      0.5}, {0.5, 0.6452402246077997, 0.7225209339563146, 0.69568162526196, 
     0.5772807093485148, 0.4227192906514854, 0.30431837473804024`, 
     0.2774790660436857, 0.3547597753922004, 0.5}, {0.5, 0.3547597753922004, 
     0.2774790660436857, 0.30431837473804024`, 0.4227192906514854, 
     0.5772807093485148, 0.69568162526196, 0.7225209339563146, 
     0.6452402246077997, 0.5}, {
     0.5, 0.17364817766693044`, 0, 0.060307379214091655`, 0.3263518223330697, 
      0.6736481776669304, 0.9396926207859085, 1, 0.8263518223330699, 0.5}, {
     0.5, 0.23828615852243537`, 0.09903113209758094, 0.14739389523685334`, 
     0.3607449735751457, 0.6392550264248545, 0.8526061047631469, 
     0.9009688679024193, 0.7617138414775648, 0.5}, {0.5, 0.5, 0.5, 0.5, 0.5, 
     0.5, 0.5, 0.5, 0.5, 0.5}}]],
  Frame->True]], "Output",
 CellChangeTimes->{
  3.650224266918729*^9, 3.650224398664297*^9, {3.650224458506588*^9, 
   3.650224479057604*^9}, 3.650224549933446*^9, {3.650224595811223*^9, 
   3.65022462281686*^9}, {3.6502248839867*^9, 3.650224893920842*^9}, 
   3.650224931392601*^9, {3.650225042198491*^9, 3.6502250527579613`*^9}, {
   3.650226758884028*^9, 3.650226764666813*^9}, {3.650226976418622*^9, 
   3.6502269900342207`*^9}, 3.650227039198484*^9, {3.650227863069985*^9, 
   3.650227890298498*^9}, {3.650228018719325*^9, 3.650228066937037*^9}, {
   3.650228201107049*^9, 3.650228251773279*^9}, {3.650228324077849*^9, 
   3.650228373993537*^9}, 3.6502290946191463`*^9, 3.65022913386255*^9, 
   3.650748222487892*^9, 3.650748280491062*^9, 3.6507488230997763`*^9, 
   3.650748900037058*^9, {3.650749083220257*^9, 3.650749148098171*^9}, 
   3.650749191613529*^9, 3.65074927457798*^9, {3.6508160177775517`*^9, 
   3.650816034673321*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[
   NCache[{{Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[2, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[2, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi]^2), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[4, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[4, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[2, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[2, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[8, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[8, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[7, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[7, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[8, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[8, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[19, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[17, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[19, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[5, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[11, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[7, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[1, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[5, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[1, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 1, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 78] Pi] + 
       Cos[Rational[1, 78] Pi]^2) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[1, 78] Pi] + 
       Cos[Rational[1, 78] Pi]^2) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[5, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 0, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[1, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[5, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[5, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[5, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[3, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[2, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[4, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[2, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 78] Pi] + 
       Cos[Rational[1, 78] Pi]^2) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Rational[3, 4] + Cos[Rational[1, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[7, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[5, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[1, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[1, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[5, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[7, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Rational[-3, 4] + Cos[Rational[1, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[1, 78] Pi] + 
       Cos[Rational[1, 78] Pi]^2) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[2, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[4, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[2, 39] Pi]), Rational[
      1, 2]}, {Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[17, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[17, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[17, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[8, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[3, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[7, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[7, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[3, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[8, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[7, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[7, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[7, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[7, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[7, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[7, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[7, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[7, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[5, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[5, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[1, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[1, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[1, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[1, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[5, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[5, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[7, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[7, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[7, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[7, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[7, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[7, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[7, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[7, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[8, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[3, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[7, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[7, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[3, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[8, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[17, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[17, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[17, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[2, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[4, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[2, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[1, 78] Pi] + 
       Cos[Rational[1, 78] Pi]^2) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Rational[-3, 4] + Cos[Rational[1, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[7, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[5, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[1, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[1, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[1, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[5, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[7, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Rational[3, 4] + Cos[Rational[1, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 78] Pi] + 
       Cos[Rational[1, 78] Pi]^2) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[2, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[4, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[2, 39] Pi]), Rational[
      1, 2]}, {Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[3, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[5, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[5, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[5, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[1, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 0, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[5, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[1, 78] Pi] + 
       Cos[Rational[1, 78] Pi]^2) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 78] Pi] + 
       Cos[Rational[1, 78] Pi]^2) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 1, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[1, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[5, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[5, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[1, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[1, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[7, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[3, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[3, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[7, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[7, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[11, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[11, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[11, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[5, 26] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 26] Pi] 
       Cos[Rational[17, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Cos[Rational[17, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[5, 26] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[5, 26] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[19, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[11, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[7, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[1, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[5, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[3, 26] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 - Cos[Rational[17, 78] Pi] 
       Cos[Rational[19, 78] Pi]) Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[3, 13] Pi]), 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Cos[Rational[19, 78] Pi]) 
      Sec[Rational[1, 78] Pi]^2, 
      Rational[1, 2] (Cos[Rational[1, 78] Pi]^2 + Cos[Rational[19, 78] Pi]^2) 
      Sec[Rational[1, 78] Pi]^2, Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[8, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[8, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[7, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[7, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[8, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[8, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[8, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[2, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[5, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[5, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[2, 13] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 13] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[4, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[4, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 13] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 13] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[4, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[4, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi]^2), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[-1, 2] 3^Rational[1, 2] Sin[Rational[2, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[2, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 - 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[1, 39] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[1, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[5, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[7, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[3, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[17, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Rational[1, 2] 3^Rational[1, 2] Sin[Rational[2, 39] Pi]), 
      Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[3, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[1, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[7, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[11, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[5, 26] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Cos[Rational[19, 78] Pi] Sin[Rational[2, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[8, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[2, 13] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi] Sin[Rational[4, 39] Pi]), Rational[1, 2] 
      Sec[Rational[1, 78] Pi]^2 (Cos[Rational[1, 78] Pi]^2 + 
       Sin[Rational[2, 39] Pi]^2), Rational[1, 2]}, {
     Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
      1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
      Rational[1, 2], Rational[1, 2], Rational[1, 2]}}, {CompressedData["
1:eJxTTMoPSmVkYGDQYICBB/ajNHk0AP9rLqs=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP4KYLouRaeA/11bVI2fQ4D/p
p0L41jHhP3OLPwBbi+E/StZsuKHa4T9mk2mBnR3iP/Ns1zySUuI/kIb6zSB4
4j9EJLExUI3iP5ITePGTkeI/2ie5xs+E4j+w+kRWWGfiP9rsHP/wOeI/LmIW
y8b94T8D0eOiaLThP6lrNfm8X+E/0JhxMfUB4T9GsI0Vf53gP47Zbbv0NOA/
5EwkiRaW3z91n+TUAcXeP2DOHJ0V/N0/riiVDYZA3T/8XTi6LpfcP6Q702ly
BNw/TSbGAR6M2z+hCnZTTzHbP02wjXJg9to/3dgPHdjc2j95t52cX+XaP+Hy
CmS+D9s/GiZRhtta2z822Sz9xMTbP2tTJo+8Stw/GemA/0np3D8vsHoPUpzd
P1JSVbgxX94//c6i6dws3z8AAAAAAADgP1r+ov8=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP9dW1SNn0OA/akBxg2ib4T9K
4hQkwlviPzN+r7B4DOM/2R6pgfio4z8+Q0T1My3kP/YZZE++leQ/N5GIbuLf
5D8hmnK/tAnlPx1MavgfEuU/Qg69R+z45D+0FNbFwL7kP91cWyEfZeQ/3b0A
olnu4z/XzUvEg13jP9NpVdRdtuI/7hvDDjz94T9ect/s6TbhP7jWH1qKaOA/
kVLAS+su3z9EG0EmLJLdPyTIeeKHBdw/WixVV0ST2j9SZGh3+ETZP0iE/rtM
I9g/RUZJvcE11z+Z1lN0foLWP33jhXAnDtY/xmcrD8Db1T++yxqBluzVP5Ld
7iI7QNY/Fcw3YYPU1j+FeXcVmKXXP0/CrfwOrtg/mQOhng7n2T9rO9a3e0jb
Pyx/Hfkuydw/UlJVuDFf3j8AAAAAAADgP1rEnQY=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP+mnQvjWMeE/SuIUJMJb4j+1
Ft47CnbjP7B1fqVfeeQ/J+uG7Qpf5T9opaNPGSHmP4Jn9SaEuuY/hy3cQFIn
5z8RuUE1smTnP9GUtxUNcec/9ziH9xBM5z9wcNMSs/bmP7bluWgpc+Y/h8iQ
GtzE5T+tVnLTTvDkPxx+2dkC++M/YUPDj1Lr4j9hQlVTR8jhPxnCUddqmeA/
z3tcUSrN3j8/e1VZcW/cPz95eeBaKdo/yANNTPoJ2D+mUhtZYh/WP/Nu3spH
dtQ/lDSMLq0Z0z8hH1namRLSPxGO8RDeZ9E/XdaQ1OUd0T/ejXyVmzbRP/Kk
R35bsdE//TAVsveK0j8utbhgzb3TP7Mp8iTqQdU/oBQDtUAN1z+V0kOI6xPZ
P2s71rd7SNs/L7B6D1Kc3T8AAAAAAADgP6oGnF0=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP3OLPwBbi+E/M36vsHgM4z+w
dX6lX3nkP6iDtXicyOU/QPx4c4Dx5j9qDzgfW+znP/q4G0Gtsug/W4+u7VM/
6T82KCGXqo7pP+qlXjSjnuk///bN4NNu6T/6CWuaeQDpPxjcCAxwVug/hn4r
mh515z/MeB4wW2LmPzow4I5DJeU/j6RrHg7G4z8bkzV6003iP5Cp4yFSxuA/
4Kw4vFtz3j/K2ZQLWWTbP+O2KMPjc9g/i58/4ni11T9oDsOfSTvTP/MCqcvC
FdE/oY/czz+mzj8a2FOWGf7LPwQkyHywRMo/WGiFLnOFyT8lX3ujVcXJP5TC
RUmwAss/FxyR+0o1zT8t4Y/BSSfQP4EHDhn/HNI/sfiUDsdu1D+gFAO1QA3X
P5kDoZ4O59k/GemA/0np3D8AAAAAAADgP3VEmqM=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP0rWbLih2uE/2R6pgfio4z8n
64btCl/lP0D8eHOA8eY/7admquxV6D/SD/FkFIPpP0U38eUqceo/q7NglwUa
6z81fMvsRHnrP2WKN2JxjOs/7XZC1wtT6z+oYgPakM7qP8qi3MtuAuo/X4yW
Ie/z6D8UWJlVE6rnPz+fsHRmLeY/9X9SecSH5D++C/rsGMTiP3MnAIEW7uA/
G7H//dIj3j+E6AsmznfaPxYAWw138NY/hMGeFjOl0z/XT81U2avQP4fOpXlD
MMw/2XSN0ET2xz9edfKXvMXEP0wk9qLQs8I/a9YhdzrOwT8rD9JM7BrCP1Yx
faLpl8M/7iI7aFQ7xj+6wDtsrvPJP09gZVZNqM4/gQcOGf8c0j+zKfIk6kHV
P0/CrfwOrtg/a1Mmj7xK3D8AAAAAAADgP8BKoZE=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP2aTaYGdHeI/PkNE9TMt5D9o
paNPGSHmP2oPOB9b7Oc/0g/xZBSD6T/Gzx9xvNrqP4EKNrts6us/HiQO5Rur
7D/YFXdizBftPzdNr4+tLe0/DvZsWy7s7D+9D7QIAVXsP+4Ske8PbOs/V3xK
h2M36j/Qsihm+r7oP8+nC0CUDOc/bQY/Q3Er5T9MFB2AByjjP7w6FkqwD+E/
iYrTa5/g3T9n18X/8K/ZPyXzgXkdqdU/YrDof9fm0T/BNF1nFgTNP6EO1uJx
Isc/SrS7QcBPwj8Xgl+691e9P5JPmCSNnrg/R5aFgpOStj9AUUfsnEG3PxHf
jtcgp7o/+dUnE01WwD/pwIA7DpXEP7rAO2yu88k/LeGPwUkn0D8utbhgzb3T
P4V5dxWYpdc/Ntks/cTE2z8AAAAAAADgPy8UmGA=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP/Ns1zySUuI/9hlkT76V5D+C
Z/UmhLrmP/q4G0Gtsug/RTfx5Spx6j+BCja7bOrrP6C8PHCtFO0/sGxMhjPo
7T8h9fGHhF/uP4KBrFuJd+4/CeYgwaIv7j9TpvpwrYntP0vpIcT1iew/YDkj
NBs36z8TzLxx5JnpPwAatzQFvec/JjzWRtes5T9sNVugCHfjPx6yBrVAKuE/
xJvylX6r3T8plUm/7hHZP7SHU3JRptQ/AcyRlvWF0D+1zww5bpjJP34acy+T
I8M/p7Xw3lGwuz9izSp4lLKzP3qf8e3TBa0/7+c3RWqHqD/1reCAtweqP36a
nM1jvrA/ABsafpRatz/51ScTTVbAP+4iO2hUO8Y/FxyR+0o1zT/9MBWy94rS
PxXMN2GD1NY/GiZRhtta2z8AAAAAAADgP33NnOo=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP5CG+s0geOI/N5GIbuLf5D+H
LdxAUifnP1uPru1TP+k/q7NglwUa6z8eJA7lG6vsP7BsTIYz6O0/o40gExbJ
7j9Z2IF/8EfvP/KNY7l5Ye8/xjE6cQgV7z+Wv458l2TuP8bMjLW4VO0/BjmU
rnbs6z+QoLECJjXqP2lgh3gnOug//UjTkZwI5j/42b97EK/jP5JIPqEXPeE/
3G6DvdCF3T8RTIAI36HYPwZuWdzG7tM/W37iHWIXzz/BfTn1ZyvHP+cbr0Ul
TsA/0pmZUzpatT+ZBhQ3iLapPy/HudjxXp0/4kGO08jQkz/p9MQP8AGXP9Ql
982ebqM/fpqczWO+sD8R347XIKe6P1YxfaLpl8M/lMJFSbACyz/ypEd+W7HR
P5Ld7iI7QNY/4fIKZL4P2z8AAAAAAADgPyHtnuQ=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP0QksTFQjeI/IZpyv7QJ5T8R
uUE1smTnPzYoIZeqjuk/NXzL7ER56z/YFXdizBftPyH18YeEX+4/WdiBf/BH
7z9zJpJEC8vvP56ID5Vv5e8/fmfRdG6W7z85WMy1E+DuP1EPAWcYx+0/9TMb
hMNS7D9dzV61uYzqP43PzV+9gOg/O/5wrWA85j8jXLaSq87jP0jfeiW4R+E/
cEEKtY9w3T+5R5PaqGLYP4kDHqU+h9M/zcHIgAr9zT+NyoQqGc3FP1lgJt/j
ab0/fYX3xzzHsT94fDqjxP6hP2MgpstiZIo/SmJ38GqQaj/Bxuy2XXp6P+n0
xA/wAZc/9a3ggLcHqj9AUUfsnEG3PysP0kzsGsI/JV97o1XFyT/ejXyVmzbR
P77LGoGW7NU/ebednF/l2j8AAAAAAADgP3oLn3g=
     "], {
     0.5, 0.580270740145908, 0.6584625102863161, 0.7325501846468346, 
      0.8006149313779904, 0.8608939092922127, 0.9118259245246126, 
      0.952091864634028, 0.9806488629223493, 0.99675730813421, 1, 
      0.9902929545037029, 0.9678875790247965, 0.933364161019182, 
      0.8876168388788885, 0.8318304442173868, 0.7674498153531654, 
      0.6961423767562195, 0.6197549536301364, 0.5402659401094151, 
      0.45973405989058486`, 0.3802450463698635, 0.3038576232437805, 
      0.2325501846468347, 0.16816955578261325`, 0.11238316112111153`, 
      0.06663583898081796, 0.032112420975203615`, 0.009707045496297117, 0, 
      0.0032426918657899916`, 0.0193511370776508, 0.04790813536597215, 
      0.08817407547538735, 0.13910609070778732`, 0.19938506862200955`, 
      0.2674498153531653, 0.3415374897136839, 0.4197292598540921, 
      0.5}, CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP9onucbPhOI/Qg69R+z45D/3
OIf3EEznP//2zeDTbuk/7XZC1wtT6z8O9mxbLuzsPwnmIMGiL+4/xjE6cQgV
7z9+Z9F0bpbvPxCvodl6sO8/u09y6oBi7z9AFjCoha7uP5BLDmYyme0/Zu52
4bUp7D95QbWilGnqPxh2GuJpZOg/f3ADlJon5j/ZuveZ/MHjP/rvs2V0Q+E/
DCCYNBd53T9NihDMBnzYPwMf+dfKsNM/nyeWd1huzj8b+ip1rVnGP9CMSPRQ
sr4/gKONz2w2sz8JnP58pRelP68ItrHir5M/EzyUl0nhgz9jIKbLYmSKPy/H
udjxXp0/ep/x7dMFrT+ST5gkjZ64P0wk9qLQs8I/BCTIfLBEyj8RjvEQ3mfR
P33jhXAnDtY/TbCNcmD22j8AAAAAAADgPxzXoBU=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP7D6RFZYZ+I/tBTWxcC+5D9w
cNMSs/bmP/oJa5p5AOk/qGID2pDO6j+9D7QIAVXsP1Om+nCtie0/lr+OfJdk
7j85WMy1E+DuPzq3Q1/v+O4/QBYwqIWu7j8S5DzxwwLuPz5FTAUd+uw/Y+n3
mmub6z+NAVrixO/pP8pGcEw8Aug/P05hG5rf5T/tXIuiBpbjP5aWRmisNOE/
1NJyL6eW3T8lRum68tPYP4JjPcnLQNQ/2uQ+zg73zz/P+Zd27EDIP3ZaIJRR
ksE/F9ad1RcvuD/gvjHswNOvPwmc/nylF6U/cIzECwpxoD94fDqjxP6hP5kG
FDeItqk/Ys0qeJSysz8Xgl+691e9P1518pe8xcQ/GthTlhn+yz8hH1namRLS
P5nWU3R+gtY/oQp2U08x2z8AAAAAAADgPyK8n+g=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP9rsHP/wOeI/3VxbIR9l5D+2
5bloKXPmPxjcCAxwVug/yqLcy24C6j/uEpHvD2zrP0vpIcT1iew/xsyMtbhU
7T9RDwFnGMftP2e/WoQe3u0/kEsOZjKZ7T8+RUwFHfrsP+SBJib9BOw/Y1gv
BizA6j+y7rJEEzTpP7LZoBv1auc/ODP4Wqhw5T/7KbDpSVLjP13WkNTlHeE/
RlPeVjTE3T8JrJ8sbFvZP5CZD0qvHtU/nUy+yBUq0T83RTTtsi/LP3OeQudP
/8Q/4PDLzhbYvz8X1p3VFy+4P4Cjjc9sNrM/wgQq3QsPsT99hffHPMexP9KZ
mVM6WrU/p7Xw3lGwuz9KtLtBwE/CP9l0jdBE9sc/oY/czz+mzj+UNIwurRnT
P0VGSb3BNdc/TSbGAR6M2z8AAAAAAADgP6Y3nJ0=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgPy5iFsvG/eE/3b0Aolnu4z+H
yJAa3MTlP4Z+K5oedec/X4yWIe/z6D9XfEqHYzfqP2A5IzQbN+s/BjmUrnbs
6z/1MxuEw1LsP6ijy21bZ+w/Zu524bUp7D9j6feaa5vrP2NYLwYswOo/NIfh
z6Sd6T+JMHY/XDvoPyDbOlN/ouY/b7Xv6aTd5D+prP2Mh/jiPwm92Ky3/+A/
8IVOppAA3j+wpgTm8A7aPyOVICy2RNY/v0mKWQG70j/aPScCjxLPPy/jecBs
ick/c55C50//xD92WiCUUZLBP9CMSPRQsr4/xeKikSTFvD9ZYCbf42m9P+cb
r0UlTsA/fhpzL5Mjwz+hDtbicSLHP4fOpXlDMMw/8wKpy8IV0T/zbt7KR3bU
P0iE/rtMI9g/pDvTaXIE3D8AAAAAAADgP1UEoAM=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgPwPR46JotOE/181LxINd4z+t
VnLTTvDkP8x4HjBbYuY/FFiZVROq5z/Qsihm+r7oPxPMvHHkmek/kKCxAiY1
6j9dzV61uYzqP/NiN+Fanuo/eUG1opRp6j+NAVrixO/pP7LuskQTNOk/iTB2
P1w76D+ic2neEAznP0YMxQ0MruU/kVRAhV4q5D97SBitEoviP0MZlAvq2uA/
e83X6CtK3j8Jb8+l2unaP99Wf/VCq9c/dOd15Oej1D+7GC1D3ufRP9o9JwKP
Es8/N0U07bIvyz/P+Zd27EDIPxv6KnWtWcY/N3Qie5SGxT+NyoQqGc3FP8F9
OfVnK8c/tc8MOW6YyT/BNF1nFgTNP9dPzVTZq9A/aA7Dn0k70z+mUhtZYh/W
P1JkaHf4RNk//F04ui6X3D8AAAAAAADgPzN3nDw=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP6lrNfm8X+E/02lV1F224j8c
ftnZAvvjPzow4I5DJeU/P5+wdGYt5j/PpwtAlAznPwAatzQFvec/aWCHeCc6
6D+Nz81fvYDoPy9rSOryjug/GHYa4mlk6D/KRnBMPALoP7LZoBv1auc/INs6
U3+i5j9GDMUNDK7lPxPtbhDwk+Q/U5/t0Hlb4z8swdYDwQziPzFyq/RwsOA/
nxupFh6f3j+qfVL4febbP1vBJF4MSdk/3CUi3x/Y1j9053Xk56PUP79JilkB
u9I/nUy+yBUq0T/a5D7ODvfPP58nlndYbs4/RlPeVjTEzT/NwciACv3NP1t+
4h1iF88/AcyRlvWF0D9isOh/1+bRP4TBnhYzpdM/i58/4ni11T/IA01M+gnY
P1osVVdEk9o/riiVDYZA3T8AAAAAAADgP7GWnAQ=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP9CYcTH1AeE/7hvDDjz94T9h
Q8OPUuviP4+kax4OxuM/9X9SecSH5D9tBj9DcSvlPyY81kbXrOU//UjTkZwI
5j87/nCtYDzmP7PisGDMRuY/f3ADlJon5j8/TmEbmt/lPzgz+FqocOU/b7Xv
6aTd5D+RVECFXirkP1Of7dB5W+M/rVkFj1J24j8IyYAY2IDhP7g1lwNmgeA/
kJTR+DP93j/xbf7OT/7cP6ZM9eFaE9s/W8EkXgxJ2T/fVn/1QqvXPyOVICy2
RNY/kJkPSq8e1T+CYz3Jy0DUPwMf+dfKsNM/mjqePmdy0z+JAx6lPofTPwZu
WdzG7tM/tIdTclGm1D8l84F5HanVPxYAWw138NY/47Yow+Nz2D8/eXngWina
PyTIeeKHBdw/YM4cnRX83T8AAAAAAADgP82GnXs=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP0awjRV/neA/XnLf7Ok24T9h
QlVTR8jhPxuTNXrTTeI/vgv67BjE4j9MFB2AByjjP2w1W6AId+M/+Nm/exCv
4z8jXLaSq87jP4sDLFcI1eM/2br3mfzB4z/tXIuiBpbjP/spsOlJUuM/qaz9
jIf44j97SBitEoviPyzB1gPBDOI/CMmAGNiA4T86zsWO9+rgPx8hPiABT+A/
wr2Dv/1h3z+MY3TiECreP/Ft/s5P/tw/qn1S+H3m2z8Jb8+l2unaP7CmBObw
Dto/CayfLGxb2T8lRum68tPYP02KEMwGfNg/6finUe9V2D+5R5PaqGLYPxFM
gAjfodg/KZVJv+4R2T9n18X/8K/ZP4ToCybOd9o/ytmUC1lk2z8/e1VZcW/c
P0QbQSYskt0/dZ/k1AHF3j8AAAAAAADgP5VtooM=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP47Zbbv0NOA/uNYfWopo4D8Z
wlHXapngP5Cp4yFSxuA/cycAgRbu4D+8OhZKsA/hPx6yBrVAKuE/kkg+oRc9
4T9I33oluEfhP0k0/cvbSeE/+u+zZXRD4T+WlkZorDThP13WkNTlHeE/Cb3Y
rLf/4D9DGZQL6trgPzFyq/RwsOA/uDWXA2aB4D8fIT4gAU/gP2N38GqQGuA/
PBEfKt/K3z/CvYO//WHfP5CU0fgz/d4/nxupFh6f3j97zdfoK0reP/CFTqaQ
AN4/RlPeVjTE3T/U0nIvp5bdPwwgmDQXed0/bZcFaEhs3T9wQQq1j3DdP9xu
g73Qhd0/xJvylX6r3T+JitNrn+DdPxux//3SI94/4Kw4vFtz3j/Pe1xRKs3e
P5FSwEvrLt8/5EwkiRaW3z8AAAAAAADgP9MmnzA=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP+RMJIkWlt8/kVLAS+su3z/P
e1xRKs3eP+CsOLxbc94/G7H//dIj3j+JitNrn+DdP8Sb8pV+q90/3G6DvdCF
3T9wQQq1j3DdP22XBWhIbN0/DCCYNBd53T/U0nIvp5bdP0ZT3lY0xN0/8IVO
ppAA3j97zdfoK0reP58bqRYen94/kJTR+DP93j/CvYO//WHfPzwRHyrfyt8/
Y3fwapAa4D8fIT4gAU/gP7g1lwNmgeA/MXKr9HCw4D9DGZQL6trgPwm92Ky3
/+A/XdaQ1OUd4T+WlkZorDThP/rvs2V0Q+E/STT9y9tJ4T9I33oluEfhP5JI
PqEXPeE/HrIGtUAq4T+8OhZKsA/hP3MnAIEW7uA/kKnjIVLG4D8ZwlHXapng
P7jWH1qKaOA/jtltu/Q04D8AAAAAAADgPzJLnzA=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP3Wf5NQBxd4/RBtBJiyS3T8/
e1VZcW/cP8rZlAtZZNs/hOgLJs532j9n18X/8K/ZPymVSb/uEdk/EUyACN+h
2D+5R5PaqGLYP+n4p1HvVdg/TYoQzAZ82D8lRum68tPYPwmsnyxsW9k/sKYE
5vAO2j8Jb8+l2unaP6p9Uvh95ts/8W3+zk/+3D+MY3TiECreP8K9g7/9Yd8/
HyE+IAFP4D86zsWO9+rgPwjJgBjYgOE/LMHWA8EM4j97SBitEoviP6ms/YyH
+OI/+ymw6UlS4z/tXIuiBpbjP9m695n8weM/iwMsVwjV4z8jXLaSq87jP/jZ
v3sQr+M/bDVboAh34z9MFB2AByjjP74L+uwYxOI/G5M1etNN4j9hQlVTR8jh
P15y3+zpNuE/RrCNFX+d4D8AAAAAAADgP408ooM=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP2DOHJ0V/N0/JMh54ocF3D8/
eXngWinaP+O2KMPjc9g/FgBbDXfw1j8l84F5HanVP7SHU3JRptQ/Bm5Z3Mbu
0z+JAx6lPofTP5o6nj5nctM/Ax/518qw0z+CYz3Jy0DUP5CZD0qvHtU/I5Ug
LLZE1j/fVn/1QqvXP1vBJF4MSdk/pkz14VoT2z/xbf7OT/7cP5CU0fgz/d4/
uDWXA2aB4D8IyYAY2IDhP61ZBY9SduI/U5/t0Hlb4z+RVECFXirkP2+17+mk
3eQ/ODP4Wqhw5T8/TmEbmt/lP39wA5SaJ+Y/s+KwYMxG5j87/nCtYDzmP/1I
05GcCOY/JjzWRtes5T9tBj9DcSvlP/V/UnnEh+Q/j6RrHg7G4z9hQ8OPUuvi
P+4bww48/eE/0JhxMfUB4T8AAAAAAADgPwRXnXs=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP64olQ2GQN0/WixVV0ST2j/I
A01M+gnYP4ufP+J4tdU/hMGeFjOl0z9isOh/1+bRPwHMkZb1hdA/W37iHWIX
zz/NwciACv3NP0ZT3lY0xM0/nyeWd1huzj/a5D7ODvfPP51MvsgVKtE/v0mK
WQG70j9053Xk56PUP9wlIt8f2NY/W8EkXgxJ2T+qfVL4febbP58bqRYen94/
MXKr9HCw4D8swdYDwQziP1Of7dB5W+M/E+1uEPCT5D9GDMUNDK7lPyDbOlN/
ouY/stmgG/Vq5z/KRnBMPALoPxh2GuJpZOg/L2tI6vKO6D+Nz81fvYDoP2lg
h3gnOug/ABq3NAW95z/PpwtAlAznPz+fsHRmLeY/OjDgjkMl5T8cftnZAvvj
P9NpVdRdtuI/qWs1+bxf4T8AAAAAAADgP08tnAQ=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP/xdOLoul9w/UmRod/hE2T+m
UhtZYh/WP2gOw59JO9M/10/NVNmr0D/BNF1nFgTNP7XPDDlumMk/wX059Wcr
xz+NyoQqGc3FPzd0InuUhsU/G/oqda1Zxj/P+Zd27EDIPzdFNO2yL8s/2j0n
Ao8Szz+7GC1D3ufRP3TndeTno9Q/31Z/9UKr1z8Jb8+l2unaP3vN1+grSt4/
QxmUC+ra4D97SBitEoviP5FUQIVeKuQ/RgzFDQyu5T+ic2neEAznP4kwdj9c
O+g/su6yRBM06T+NAVrixO/pP3lBtaKUaeo/82I34Vqe6j9dzV61uYzqP5Cg
sQImNeo/E8y8ceSZ6T/Qsihm+r7oPxRYmVUTquc/zHgeMFti5j+tVnLTTvDk
P9fNS8SDXeM/A9Hjomi04T8AAAAAAADgPx3TnDw=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP6Q702lyBNw/SIT+u0wj2D/z
bt7KR3bUP/MCqcvCFdE/h86leUMwzD+hDtbicSLHP34acy+TI8M/5xuvRSVO
wD9ZYCbf42m9P8XiopEkxbw/0IxI9FCyvj92WiCUUZLBP3OeQudP/8Q/L+N5
wGyJyT/aPScCjxLPP79JilkBu9I/I5UgLLZE1j+wpgTm8A7aP/CFTqaQAN4/
Cb3YrLf/4D+prP2Mh/jiP2+17+mk3eQ/INs6U3+i5j+JMHY/XDvoPzSH4c+k
nek/Y1gvBizA6j9j6feaa5vrP2buduG1Kew/qKPLbVtn7D/1MxuEw1LsPwY5
lK527Os/YDkjNBs36z9XfEqHYzfqP1+MliHv8+g/hn4rmh515z+HyJAa3MTl
P929AKJZ7uM/LmIWy8b94T8AAAAAAADgP8AWoAM=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP00mxgEejNs/RUZJvcE11z+U
NIwurRnTP6GP3M8/ps4/2XSN0ET2xz9KtLtBwE/CP6e18N5RsLs/0pmZUzpa
tT99hffHPMexP8IEKt0LD7E/gKONz2w2sz8X1p3VFy+4P+Dwy84W2L8/c55C
50//xD83RTTtsi/LP51MvsgVKtE/kJkPSq8e1T8JrJ8sbFvZP0ZT3lY0xN0/
XdaQ1OUd4T/7KbDpSVLjPzgz+FqocOU/stmgG/Vq5z+y7rJEEzTpP2NYLwYs
wOo/5IEmJv0E7D8+RUwFHfrsP5BLDmYyme0/Z79ahB7e7T9RDwFnGMftP8bM
jLW4VO0/S+khxPWJ7D/uEpHvD2zrP8qi3MtuAuo/GNwIDHBW6D+25bloKXPm
P91cWyEfZeQ/2uwc//A54j8AAAAAAADgP0HnnJ0=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP6EKdlNPMds/mdZTdH6C1j8h
H1namRLSPxrYU5YZ/ss/XnXyl7zFxD8Xgl+691e9P2LNKniUsrM/mQYUN4i2
qT94fDqjxP6hP3CMxAsKcaA/CZz+fKUXpT/gvjHswNOvPxfWndUXL7g/dlog
lFGSwT/P+Zd27EDIP9rkPs4O988/gmM9yctA1D8lRum68tPYP9TSci+nlt0/
lpZGaKw04T/tXIuiBpbjPz9OYRua3+U/ykZwTDwC6D+NAVrixO/pP2Pp95pr
m+s/PkVMBR367D8S5DzxwwLuP0AWMKiFru4/OrdDX+/47j85WMy1E+DuP5a/
jnyXZO4/U6b6cK2J7T+9D7QIAVXsP6hiA9qQzuo/+glrmnkA6T9wcNMSs/bm
P7QU1sXAvuQ/sPpEVlhn4j8AAAAAAADgP7tIn+g=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP02wjXJg9to/feOFcCcO1j8R
jvEQ3mfRPwQkyHywRMo/TCT2otCzwj+ST5gkjZ64P3qf8e3TBa0/L8e52PFe
nT9jIKbLYmSKPxM8lJdJ4YM/rwi2seKvkz8JnP58pRelP4Cjjc9sNrM/0IxI
9FCyvj8b+ip1rVnGP58nlndYbs4/Ax/518qw0z9NihDMBnzYPwwgmDQXed0/
+u+zZXRD4T/ZuveZ/MHjP39wA5SaJ+Y/GHYa4mlk6D95QbWilGnqP2buduG1
Kew/kEsOZjKZ7T9AFjCoha7uP7tPcuqAYu8/EK+h2Xqw7z9+Z9F0bpbvP8Yx
OnEIFe8/CeYgwaIv7j8O9mxbLuzsP+12QtcLU+s///bN4NNu6T/3OIf3EEzn
P0IOvUfs+OQ/2ie5xs+E4j8AAAAAAADgPwLaoBU=
     "], {
     0.5, 0.4197292598540921, 0.3415374897136839, 0.2674498153531653, 
      0.19938506862200955`, 0.13910609070778732`, 0.08817407547538735, 
      0.04790813536597215, 0.0193511370776508, 0.0032426918657899916`, 0, 
      0.009707045496297117, 0.032112420975203615`, 0.06663583898081796, 
      0.11238316112111153`, 0.16816955578261325`, 0.2325501846468347, 
      0.3038576232437805, 0.3802450463698635, 0.45973405989058486`, 
      0.5402659401094151, 0.6197549536301364, 0.6961423767562195, 
      0.7674498153531654, 0.8318304442173868, 0.8876168388788885, 
      0.933364161019182, 0.9678875790247965, 0.9902929545037029, 1, 
      0.99675730813421, 0.9806488629223493, 0.952091864634028, 
      0.9118259245246126, 0.8608939092922127, 0.8006149313779904, 
      0.7325501846468346, 0.6584625102863161, 0.580270740145908, 
      0.5}, CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP3m3nZxf5do/vssagZbs1T/e
jXyVmzbRPyVfe6NVxck/Kw/STOwawj9AUUfsnEG3P/Wt4IC3B6o/6fTED/AB
lz/Bxuy2XXp6P0pid/BqkGo/YyCmy2Jkij94fDqjxP6hP32F98c8x7E/WWAm
3+NpvT+NyoQqGc3FP83ByIAK/c0/iQMepT6H0z+5R5PaqGLYP3BBCrWPcN0/
SN96JbhH4T8jXLaSq87jPzv+cK1gPOY/jc/NX72A6D9dzV61uYzqP/UzG4TD
Uuw/UQ8BZxjH7T85WMy1E+DuP35n0XRulu8/nogPlW/l7z9zJpJEC8vvP1nY
gX/wR+8/IfXxh4Rf7j/YFXdizBftPzV8y+xEees/Nighl6qO6T8RuUE1smTn
PyGacr+0CeU/RCSxMVCN4j8AAAAAAADgP+AQn3g=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP+HyCmS+D9s/kt3uIjtA1j/y
pEd+W7HRP5TCRUmwAss/VjF9oumXwz8R347XIKe6P36anM1jvrA/1CX3zZ5u
oz/p9MQP8AGXP+JBjtPI0JM/L8e52PFenT+ZBhQ3iLapP9KZmVM6WrU/5xuv
RSVOwD/BfTn1ZyvHP1t+4h1iF88/Bm5Z3Mbu0z8RTIAI36HYP9xug73Qhd0/
kkg+oRc94T/42b97EK/jP/1I05GcCOY/aWCHeCc66D+QoLECJjXqPwY5lK52
7Os/xsyMtbhU7T+Wv458l2TuP8YxOnEIFe8/8o1juXlh7z9Z2IF/8EfvP6ON
IBMWye4/sGxMhjPo7T8eJA7lG6vsP6uzYJcFGus/W4+u7VM/6T+HLdxAUifn
PzeRiG7i3+Q/kIb6zSB44j8AAAAAAADgP6tUnuQ=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgPxomUYbbWts/Fcw3YYPU1j/9
MBWy94rSPxcckftKNc0/7iI7aFQ7xj/51ScTTVbAPwAbGn6UWrc/fpqczWO+
sD/1reCAtweqP+/nN0Vqh6g/ep/x7dMFrT9izSp4lLKzP6e18N5RsLs/fhpz
L5Mjwz+1zww5bpjJPwHMkZb1hdA/tIdTclGm1D8plUm/7hHZP8Sb8pV+q90/
HrIGtUAq4T9sNVugCHfjPyY81kbXrOU/ABq3NAW95z8TzLxx5JnpP2A5IzQb
N+s/S+khxPWJ7D9TpvpwrYntPwnmIMGiL+4/goGsW4l37j8h9fGHhF/uP7Bs
TIYz6O0/oLw8cK0U7T+BCja7bOrrP0U38eUqceo/+rgbQa2y6D+CZ/UmhLrm
P/YZZE++leQ/82zXPJJS4j8AAAAAAADgP6iJnOo=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgPzbZLP3ExNs/hXl3FZil1z8u
tbhgzb3TPy3hj8FJJ9A/usA7bK7zyT/pwIA7DpXEP/nVJxNNVsA/Ed+O1yCn
uj9AUUfsnEG3P0eWhYKTkrY/kk+YJI2euD8Xgl+691e9P0q0u0HAT8I/oQ7W
4nEixz/BNF1nFgTNP2Kw6H/X5tE/JfOBeR2p1T9n18X/8K/ZP4mK02uf4N0/
vDoWSrAP4T9MFB2AByjjP20GP0NxK+U/z6cLQJQM5z/Qsihm+r7oP1d8Sodj
N+o/7hKR7w9s6z+9D7QIAVXsPw72bFsu7Ow/N02vj60t7T/YFXdizBftPx4k
DuUbq+w/gQo2u2zq6z/Gzx9xvNrqP9IP8WQUg+k/ag84H1vs5z9opaNPGSHm
Pz5DRPUzLeQ/ZpNpgZ0d4j8AAAAAAADgPz7XmGA=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP2tTJo+8Stw/T8Kt/A6u2D+z
KfIk6kHVP4EHDhn/HNI/T2BlVk2ozj+6wDtsrvPJP+4iO2hUO8Y/VjF9oumX
wz8rD9JM7BrCP2vWIXc6zsE/TCT2otCzwj9edfKXvMXEP9l0jdBE9sc/h86l
eUMwzD/XT81U2avQP4TBnhYzpdM/FgBbDXfw1j+E6AsmznfaPxux//3SI94/
cycAgRbu4D++C/rsGMTiP/V/UnnEh+Q/P5+wdGYt5j8UWJlVE6rnP1+MliHv
8+g/yqLcy24C6j+oYgPakM7qP+12QtcLU+s/ZYo3YnGM6z81fMvsRHnrP6uz
YJcFGus/RTfx5Spx6j/SD/FkFIPpP+2nZqrsVeg/QPx4c4Dx5j8n64btCl/l
P9keqYH4qOM/StZsuKHa4T8AAAAAAADgPzkOoZE=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgPxnpgP9J6dw/mQOhng7n2T+g
FAO1QA3XP7H4lA7HbtQ/gQcOGf8c0j8t4Y/BSSfQPxcckftKNc0/lMJFSbAC
yz8lX3ujVcXJP1hohS5zhck/BCTIfLBEyj8a2FOWGf7LP6GP3M8/ps4/8wKp
y8IV0T9oDsOfSTvTP4ufP+J4tdU/47Yow+Nz2D/K2ZQLWWTbP+CsOLxbc94/
kKnjIVLG4D8bkzV6003iP4+kax4OxuM/OjDgjkMl5T/MeB4wW2LmP4Z+K5oe
dec/GNwIDHBW6D/6CWuaeQDpP//2zeDTbuk/6qVeNKOe6T82KCGXqo7pP1uP
ru1TP+k/+rgbQa2y6D9qDzgfW+znP0D8eHOA8eY/qIO1eJzI5T+wdX6lX3nk
PzN+r7B4DOM/c4s/AFuL4T8AAAAAAADgP9l3mqM=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgPy+weg9SnN0/azvWt3tI2z+V
0kOI6xPZP6AUA7VADdc/synyJOpB1T8utbhgzb3TP/0wFbL3itI/8qRHflux
0T/ejXyVmzbRP13WkNTlHdE/EY7xEN5n0T8hH1namRLSP5Q0jC6tGdM/827e
ykd21D+mUhtZYh/WP8gDTUz6Cdg/P3l54Fop2j8/e1VZcW/cP897XFEqzd4/
GcJR12qZ4D9hQlVTR8jhP2FDw49S6+I/HH7Z2QL74z+tVnLTTvDkP4fIkBrc
xOU/tuW5aClz5j9wcNMSs/bmP/c4h/cQTOc/0ZS3FQ1x5z8RuUE1smTnP4ct
3EBSJ+c/gmf1JoS65j9opaNPGSHmPyfrhu0KX+U/sHV+pV955D+1Ft47Cnbj
P0riFCTCW+I/6adC+NYx4T8AAAAAAADgP9innF0=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP1JSVbgxX94/LH8d+S7J3D9r
O9a3e0jbP5kDoZ4O59k/T8Kt/A6u2D+FeXcVmKXXPxXMN2GD1NY/kt3uIjtA
1j++yxqBluzVP8ZnKw/A29U/feOFcCcO1j+Z1lN0foLWP0VGSb3BNdc/SIT+
u0wj2D9SZGh3+ETZP1osVVdEk9o/JMh54ocF3D9EG0EmLJLdP5FSwEvrLt8/
uNYfWopo4D9ect/s6TbhP+4bww48/eE/02lV1F224j/XzUvEg13jP929AKJZ
7uM/3VxbIR9l5D+0FNbFwL7kP0IOvUfs+OQ/HUxq+B8S5T8hmnK/tAnlPzeR
iG7i3+Q/9hlkT76V5D8+Q0T1My3kP9keqYH4qOM/M36vsHgM4z9K4hQkwlvi
P2pAcYNom+E/11bVI2fQ4D8AAAAAAADgP+J+nQY=
     "], CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAAAAAAAAAADgP/3OouncLN8/UlJVuDFf3j8v
sHoPUpzdPxnpgP9J6dw/a1Mmj7xK3D822Sz9xMTbPxomUYbbWts/4fIKZL4P
2z95t52cX+XaP93YDx3Y3No/TbCNcmD22j+hCnZTTzHbP00mxgEejNs/pDvT
aXIE3D/8XTi6LpfcP64olQ2GQN0/YM4cnRX83T91n+TUAcXeP+RMJIkWlt8/
jtltu/Q04D9GsI0Vf53gP9CYcTH1AeE/qWs1+bxf4T8D0eOiaLThPy5iFsvG
/eE/2uwc//A54j+w+kRWWGfiP9onucbPhOI/khN48ZOR4j9EJLExUI3iP5CG
+s0geOI/82zXPJJS4j9mk2mBnR3iP0rWbLih2uE/c4s/AFuL4T/pp0L41jHh
P9dW1SNn0OA/gpgui5Fp4D8AAAAAAADgP3oQov8=
     "], CompressedData["
1:eJxTTMoPSmVkYGDQYICBB/ajNHk0AP9rLqs=
     "]}]],
  Frame->True]], "Output",
 CellChangeTimes->{
  3.650224266918729*^9, 3.650224398664297*^9, {3.650224458506588*^9, 
   3.650224479057604*^9}, 3.650224549933446*^9, {3.650224595811223*^9, 
   3.65022462281686*^9}, {3.6502248839867*^9, 3.650224893920842*^9}, 
   3.650224931392601*^9, {3.650225042198491*^9, 3.6502250527579613`*^9}, {
   3.650226758884028*^9, 3.650226764666813*^9}, {3.650226976418622*^9, 
   3.6502269900342207`*^9}, 3.650227039198484*^9, {3.650227863069985*^9, 
   3.650227890298498*^9}, {3.650228018719325*^9, 3.650228066937037*^9}, {
   3.650228201107049*^9, 3.650228251773279*^9}, {3.650228324077849*^9, 
   3.650228373993537*^9}, 3.6502290946191463`*^9, 3.65022913386255*^9, 
   3.650748222487892*^9, 3.650748280491062*^9, 3.6507488230997763`*^9, 
   3.650748900037058*^9, {3.650749083220257*^9, 3.650749148098171*^9}, 
   3.650749191613529*^9, 3.65074927457798*^9, {3.6508160177775517`*^9, 
   3.650816034866951*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Exercise 2:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 "  Thresholding: write a function ",
 Cell[BoxData[
  RowBox[{"threshold", "[", 
   RowBox[{"img", ",", "val"}], "]"}]]],
 " that takes in an image ",
 Cell[BoxData["img"]],
 " (represented as a 2D array) and some valuve ",
 Cell[BoxData["val"]],
 ",  and returns a new image so that the value of a pixel is 1 in this new \
image if the corresponding pixel in ",
 Cell[BoxData["img"]],
 " has value above ",
 Cell[BoxData["val"]],
 ", and 0 otherwise. Apply your function to the result generated by your ",
 Cell[BoxData["makeImage"]],
 " function."
}], "Text",
 CellChangeTimes->{{3.4919592439952497`*^9, 3.4919592499483747`*^9}, {
   3.4919593481202497`*^9, 3.4919594533077497`*^9}, {3.4919600012608747`*^9, 
   3.4919600328233747`*^9}, {3.4920789169030857`*^9, 
   3.4920789313412323`*^9}, {3.4920791236467223`*^9, 3.492079165132956*^9}, {
   3.492079208150508*^9, 3.492079261949793*^9}, {3.492080214820605*^9, 
   3.4920802620727215`*^9}, {3.4920803865470476`*^9, 
   3.4920804109856424`*^9}, {3.4920804777073812`*^9, 3.492080520146783*^9}, {
   3.4920807359220743`*^9, 3.4920807579543114`*^9}, 3.492120992423875*^9, {
   3.492121173861375*^9, 3.4921212810645*^9}, {3.492121324642625*^9, 
   3.492121325923875*^9}, {3.49212136228325*^9, 3.492121442252*^9}, {
   3.4921215585645*^9, 3.492121563361375*^9}, {3.492169440666178*^9, 
   3.4921694566037803`*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"threshold", "[", 
   RowBox[{"img_", ",", " ", "val_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"img", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "val"}], ",", "1", ",", 
      "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"Dimensions", "[", "img", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{
       RowBox[{"Dimensions", "[", "img", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pic2", "=", 
  RowBox[{"threshold", "[", 
   RowBox[{
    RowBox[{"makeImage", "[", 
     RowBox[{"8", ",", "9"}], "]"}], ",", "0.5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"showArray", "[", 
  RowBox[{"threshold", "[", 
   RowBox[{
    RowBox[{"makeImage", "[", 
     RowBox[{"40", ",", "40"}], "]"}], ",", "0.5"}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6507421627309837`*^9, 3.6507421741058826`*^9}, {
   3.650742226939629*^9, 3.650742246026989*^9}, {3.65074265586934*^9, 
   3.6507426747155533`*^9}, {3.650742705207342*^9, 3.6507427139484177`*^9}, {
   3.650742754038405*^9, 3.650742775134337*^9}, {3.650742832942977*^9, 
   3.650742971871892*^9}, {3.650743002566319*^9, 3.650743046035606*^9}, {
   3.650743129284615*^9, 3.6507431338033867`*^9}, {3.650743176507736*^9, 
   3.6507431953082*^9}, {3.65074341077141*^9, 3.650743422488336*^9}, {
   3.6507434983995733`*^9, 3.650743539007352*^9}, {3.650745398137347*^9, 
   3.650745443643649*^9}, {3.6507454792114563`*^9, 3.650745492377284*^9}, {
   3.650745546733562*^9, 3.650745595908387*^9}, {3.650745649830089*^9, 
   3.650745671584311*^9}, {3.6507457024229527`*^9, 3.650745719014802*^9}, 
   3.6507458828158693`*^9, {3.6507462732913857`*^9, 3.6507462848169622`*^9}, {
   3.650746638117893*^9, 3.650746643090032*^9}, {3.6507480893034887`*^9, 
   3.650748093910862*^9}, 3.650748183981678*^9, {3.6507486583468533`*^9, 
   3.650748669028996*^9}, {3.650748733196661*^9, 3.65074878912827*^9}, {
   3.650748854308886*^9, 3.6507488780127583`*^9}, {3.650748921386969*^9, 
   3.650748934625639*^9}, {3.650749222864923*^9, 3.650749231093487*^9}, {
   3.65075176205651*^9, 3.6507518189042892`*^9}, {3.650816057783249*^9, 
   3.650816060490481*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.650743540617435*^9, 3.650745501425672*^9, {3.6507455596807528`*^9, 
   3.65074558866285*^9}, 3.6507456763280478`*^9, 3.650745710809935*^9, 
   3.650747879244959*^9, {3.6507480712774343`*^9, 3.650748106982491*^9}, 
   3.650748197948543*^9, 3.650748641130616*^9, {3.650748677843032*^9, 
   3.650748683292926*^9}, {3.650748776629121*^9, 3.650748792627061*^9}, 
   3.650748829419589*^9, {3.650748869617943*^9, 3.650748881546393*^9}, {
   3.650748925205257*^9, 3.650748935179666*^9}, {3.650749226780774*^9, 
   3.650749232148281*^9}, 3.650751769906395*^9, 3.650751830247278*^9, 
   3.650816061352249*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGDQgOIhAhghgDhVBBUyEqeQkQx1+BQOBnXE+gOfOmLDD0kh
fmVQlQQVjQIwIDpAqZcVqJ2GBkNWoHbex6eM+LKJyKJusAAA2v4DEQ==
   "]],
  Frame->True]], "Output",
 CellChangeTimes->{
  3.650743540617435*^9, 3.650745501425672*^9, {3.6507455596807528`*^9, 
   3.65074558866285*^9}, 3.6507456763280478`*^9, 3.650745710809935*^9, 
   3.650747879244959*^9, {3.6507480712774343`*^9, 3.650748106982491*^9}, 
   3.650748197948543*^9, 3.650748641130616*^9, {3.650748677843032*^9, 
   3.650748683292926*^9}, {3.650748776629121*^9, 3.650748792627061*^9}, 
   3.650748829419589*^9, {3.650748869617943*^9, 3.650748881546393*^9}, {
   3.650748925205257*^9, 3.650748935179666*^9}, {3.650749226780774*^9, 
   3.650749232148281*^9}, 3.650751769906395*^9, 3.650751830247278*^9, 
   3.6508160614076643`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Exercise 3:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 "  Blurring: one way to add \"blur\" to an image is to replace the value at \
each pixel ",
 StyleBox["p",
  FontWeight->"Bold"],
 " (excluding those on the image boundary) with the average value of the 9 \
pixels in the 3 by 3 neighborhood of ",
 StyleBox["p",
  FontWeight->"Bold"],
 ".  Write a function ",
 Cell[BoxData[
  RowBox[{"blur", "[", "img", "]"}]]],
 " that takes in an image ",
 Cell[BoxData["img"]],
 " and outputs the blurred image. Apply your function to the image generated \
by your ",
 Cell[BoxData["threshold"]],
 " function, and examine what happens when you apply blurring repeatedly \
(check out the ",
 Cell[BoxData[
  ButtonBox["Nest",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Nest"]]],
 " function for repeated function evaluation)."
}], "Text",
 CellChangeTimes->{{3.4919592439952497`*^9, 3.4919592499483747`*^9}, {
   3.4919593481202497`*^9, 3.4919594533077497`*^9}, {3.4919600012608747`*^9, 
   3.4919600328233747`*^9}, {3.4920789169030857`*^9, 
   3.4920789313412323`*^9}, {3.4920791236467223`*^9, 3.492079165132956*^9}, {
   3.492079208150508*^9, 3.492079261949793*^9}, {3.492080214820605*^9, 
   3.4920802620727215`*^9}, {3.4920803865470476`*^9, 
   3.4920804109856424`*^9}, {3.4920804777073812`*^9, 3.492080520146783*^9}, {
   3.4920807359220743`*^9, 3.4920807579543114`*^9}, 3.492120992423875*^9, {
   3.492121173861375*^9, 3.4921212810645*^9}, {3.492121324642625*^9, 
   3.492121325923875*^9}, {3.49212136228325*^9, 3.492121442252*^9}, {
   3.492121478830125*^9, 3.492121601736375*^9}, {3.492121666423875*^9, 
   3.492121799923875*^9}, {3.4921220043145*^9, 3.49212203640825*^9}, {
   3.492169443291195*^9, 3.4921694566037803`*^9}, {3.4922679037390084`*^9, 
   3.492267904676544*^9}, {3.650749715218235*^9, 3.650749716452642*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"blur", "[", "img_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "\[Equal]", "1"}], "||", 
       RowBox[{"i", "\[Equal]", 
        RowBox[{
         RowBox[{"Dimensions", "[", "img", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "||", 
       RowBox[{"j", "\[Equal]", "1"}], "||", 
       RowBox[{"j", "\[Equal]", 
        RowBox[{
         RowBox[{"Dimensions", "[", "img", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
      RowBox[{"img", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "True", ",", 
      RowBox[{"Mean", "[", 
       RowBox[{"Mean", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"img", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", 
            RowBox[{"i", "+", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"j", "-", "1"}], ",", 
            RowBox[{"j", "+", "1"}]}], "}"}]}], "]"}], "]"}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"Dimensions", "[", "img", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{
       RowBox[{"Dimensions", "[", "img", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pic4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pic5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.1", ",", "0.1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.01", ",", "0.02", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"blur", "[", "pic4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"blur", "[", 
  RowBox[{"makeImage", "[", 
   RowBox[{"40", ",", "40"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pic90", "=", 
   RowBox[{"Nest", "[", 
    RowBox[{"blur", ",", "pic2", ",", "3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pic100", "=", 
   RowBox[{"Nest", "[", 
    RowBox[{"blur", ",", "pic2", ",", "4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showArray", "[", 
   RowBox[{"blur", "[", "pic4", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"showArray", "[", "pic2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showArray", "[", "pic90", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showArray", "[", "pic100", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showArray", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{"blur", ",", "pic2", ",", "6"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"showArray", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{"blur", ",", "pic2", ",", "10"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"showArray", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{"blur", ",", "pic2", ",", "100"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"showArray", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{"blur", ",", "pic2", ",", "1000000"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6507502731551237`*^9, 3.650750287285344*^9}, {
   3.650750369771719*^9, 3.650750391090434*^9}, {3.650751088306016*^9, 
   3.650751175435158*^9}, {3.650751228331377*^9, 3.650751276673918*^9}, {
   3.650751524726124*^9, 3.650751534645619*^9}, {3.6507515829798737`*^9, 
   3.650751746225424*^9}, {3.6507518492119293`*^9, 3.650751854994173*^9}, {
   3.6507519004123783`*^9, 3.650751904843655*^9}, {3.650752046830511*^9, 
   3.650752060502182*^9}, 3.650752098782669*^9, {3.6507522775349083`*^9, 
   3.650752283372458*^9}, {3.6507523219953213`*^9, 3.6507523562110157`*^9}, {
   3.650752434306427*^9, 3.650752443176321*^9}, {3.650752628750422*^9, 
   3.6507526291003923`*^9}, {3.650752836856495*^9, 3.650752902244439*^9}, {
   3.650752953772942*^9, 3.6507529647844133`*^9}, {3.650753365853202*^9, 
   3.650753377109535*^9}, {3.650753585803914*^9, 3.650753605878992*^9}, {
   3.6507536376776943`*^9, 3.650753713101913*^9}, {3.650753758724277*^9, 
   3.650753810936462*^9}, {3.650753875826291*^9, 3.650754246147963*^9}, {
   3.650816097936974*^9, 3.6508161250649233`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6507518595551987`*^9, 3.6507519057764*^9, {3.6507520688444967`*^9, 
   3.650752100890394*^9}, 3.650752291594672*^9, {3.650752346720133*^9, 
   3.650752356763973*^9}, {3.6507524358611717`*^9, 3.6507524475493717`*^9}, 
   3.65075262959696*^9, {3.650752878093135*^9, 3.650752903029276*^9}, 
   3.650752965501766*^9, {3.650753382044529*^9, 3.650753453493132*^9}, 
   3.6507534843548937`*^9, 3.650753550097364*^9, {3.650753609089509*^9, 
   3.6507536255189657`*^9}, {3.650753704641427*^9, 3.65075372616451*^9}, {
   3.650753774032262*^9, 3.650753776226058*^9}, {3.650753813087335*^9, 
   3.6507538167791977`*^9}, {3.6507538846849213`*^9, 3.650753886947035*^9}, {
   3.650753939122637*^9, 3.650753978247518*^9}, {3.650754012375848*^9, 
   3.650754028809222*^9}, {3.6507540705450687`*^9, 3.650754111746582*^9}, {
   3.650754165883486*^9, 3.6507542490321503`*^9}, 3.6508161144697723`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.6507518595551987`*^9, 3.6507519057764*^9, {3.6507520688444967`*^9, 
   3.650752100890394*^9}, 3.650752291594672*^9, {3.650752346720133*^9, 
   3.650752356763973*^9}, {3.6507524358611717`*^9, 3.6507524475493717`*^9}, 
   3.65075262959696*^9, {3.650752878093135*^9, 3.650752903029276*^9}, 
   3.650752965501766*^9, {3.650753382044529*^9, 3.650753453493132*^9}, 
   3.6507534843548937`*^9, 3.650753550097364*^9, {3.650753609089509*^9, 
   3.6507536255189657`*^9}, {3.650753704641427*^9, 3.65075372616451*^9}, {
   3.650753774032262*^9, 3.650753776226058*^9}, {3.650753813087335*^9, 
   3.6507538167791977`*^9}, {3.6507538846849213`*^9, 3.650753886947035*^9}, {
   3.650753939122637*^9, 3.650753978247518*^9}, {3.650754012375848*^9, 
   3.650754028809222*^9}, {3.6507540705450687`*^9, 3.650754111746582*^9}, {
   3.650754165883486*^9, 3.6507542490321503`*^9}, 3.6508161795686703`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showArray", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{"blur", ",", 
    RowBox[{"threshold", "[", 
     RowBox[{
      RowBox[{"makeImage", "[", 
       RowBox[{"40", ",", "40"}], "]"}], ",", "0.5"}], "]"}], ",", "10"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.650816132678296*^9, 3.6508161722747602`*^9}, {
  3.6508162218610992`*^9, 3.650816241891369*^9}, {3.650816272694377*^9, 
  3.650816291424024*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[
   NCache[{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {
     0, Rational[2659156, 374768223], Rational[18095260, 1124304669], 
      Rational[31779220, 1124304669], Rational[49235480, 1124304669], 
      Rational[23112569, 374768223], Rational[269888731, 3372914007], 
      Rational[325927735, 3372914007], Rational[369621535, 3372914007], 
      Rational[132143503, 1124304669], Rational[134597236, 1124304669], 
      Rational[130246588, 1124304669], Rational[119310595, 1124304669], 
      Rational[11417855, 124922741], Rational[82487272, 1124304669], Rational[
      183341953, 3372914007], Rational[124123207, 3372914007], Rational[
      76002355, 3372914007], Rational[13878125, 1124304669], Rational[
      6718748, 1124304669], Rational[2832368, 1124304669], Rational[
      1020115, 1124304669], Rational[101905, 374768223], Rational[
      73315, 1124304669], Rational[39547, 3372914007], Rational[
      4717, 3372914007], Rational[265, 3372914007], 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0}, {
     0, Rational[18095260, 1124304669], Rational[40647083, 1124304669], 
      Rational[211528504, 3372914007], Rational[107871415, 1124304669], 
      Rational[150135800, 1124304669], Rational[192780829, 1124304669], 
      Rational[692429155, 3372914007], Rational[780172825, 3372914007], 
      Rational[277795088, 1124304669], Rational[282569408, 1124304669], 
      Rational[273822836, 1124304669], Rational[755618740, 3372914007], 
      Rational[655207465, 3372914007], Rational[530804167, 3372914007], 
      Rational[397838767, 3372914007], Rational[273104053, 3372914007], 
      Rational[169967236, 3372914007], Rational[31624772, 1124304669], 
      Rational[15643937, 1124304669], Rational[6759947, 1124304669], Rational[
      2505055, 1124304669], Rational[258713, 374768223], Rational[
      193684, 1124304669], Rational[109822, 3372914007], Rational[
      14017, 3372914007], Rational[889, 3372914007], 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0}, {
     0, Rational[31779220, 1124304669], Rational[211528504, 3372914007], 
      Rational[361149184, 3372914007], Rational[543460280, 3372914007], 
      Rational[744614750, 3372914007], Rational[942772600, 3372914007], 
      Rational[1115500210, 3372914007], Rational[1245636040, 3372914007], 
      Rational[441059278, 1124304669], Rational[447821968, 1124304669], 
      Rational[434876288, 1124304669], Rational[1207246040, 3372914007], 
      Rational[1056948310, 3372914007], Rational[867471352, 3372914007], 
      Rational[220244794, 1124304669], Rational[462294712, 3372914007], 
      Rational[294071206, 3372914007], Rational[56082752, 1124304669], 
      Rational[28517632, 1124304669], Rational[12706232, 1124304669], 
      Rational[1623974, 374768223], Rational[4705052, 3372914007], Rational[
      1226522, 3372914007], Rational[244112, 3372914007], Rational[
      33242, 3372914007], Rational[2332, 3372914007], 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0}, {
     0, Rational[49235480, 1124304669], Rational[107871415, 1124304669], 
      Rational[543460280, 3372914007], Rational[803601241, 3372914007], 
      Rational[1082563466, 3372914007], Rational[1349708561, 3372914007], 
      Rational[1576197185, 3372914007], Rational[580829365, 1124304669], 
      Rational[613130966, 1124304669], Rational[621316286, 1124304669], 
      Rational[604928396, 1124304669], Rational[1691277920, 3372914007], 
      Rational[1497508135, 3372914007], Rational[46209699, 124922741], 
      Rational[967906393, 3372914007], Rational[691764743, 3372914007], 
      Rational[150221830, 1124304669], Rational[88231030, 1124304669], 
      Rational[15386471, 374768223], Rational[21206603, 1124304669], Rational[
      2801171, 374768223], Rational[2803265, 1124304669], Rational[
      759770, 1124304669], Rational[473992, 3372914007], Rational[
      67967, 3372914007], Rational[1709, 1124304669], 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0}, {
     0, Rational[23112569, 374768223], Rational[150135800, 1124304669], 
      Rational[744614750, 3372914007], Rational[1082563466, 3372914007], 
      Rational[478107085, 1124304669], Rational[1761032525, 3372914007], 
      Rational[676510090, 1124304669], Rational[740280205, 1124304669], 
      Rational[776485123, 1124304669], Rational[785375924, 1124304669], 
      Rational[766905463, 1124304669], Rational[2160639205, 3372914007], 
      Rational[1936210450, 3372914007], Rational[1638838612, 3372914007], 
      Rational[431894440, 1124304669], Rational[315388817, 1124304669], 
      Rational[210370175, 1124304669], Rational[14079815, 124922741], 
      Rational[68083690, 1124304669], Rational[10720726, 374768223], Rational[
      13120103, 1124304669], Rational[4511555, 1124304669], Rational[
      3787895, 3372914007], Rational[815605, 3372914007], Rational[
      13513, 374768223], Rational[1073, 374768223], 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0}, {
     0, Rational[269888731, 3372914007], Rational[192780829, 1124304669], 
      Rational[942772600, 3372914007], Rational[1349708561, 3372914007], 
      Rational[1761032525, 3372914007], Rational[2131343510, 3372914007], 
      Rational[2425780655, 3372914007], Rational[2628735833, 3372914007], 
      Rational[304515436, 374768223], Rational[922459465, 1124304669], 
      Rational[2710577714, 3372914007], Rational[2565260105, 3372914007], 
      Rational[775449169, 1124304669], Rational[1999663642, 3372914007], 
      Rational[536653235, 1124304669], Rational[1199679251, 3372914007], 
      Rational[817719692, 3372914007], Rational[167939611, 1124304669], 
      Rational[30783280, 374768223], Rational[134004155, 3372914007], 
      Rational[55990639, 3372914007], Rational[19728709, 3372914007], 
      Rational[1887178, 1124304669], Rational[1251635, 3372914007], Rational[
      21340, 374768223], Rational[5269, 1124304669], 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0}, {
     0, Rational[325927735, 3372914007], Rational[692429155, 3372914007], 
      Rational[1115500210, 3372914007], Rational[1576197185, 3372914007], 
      Rational[676510090, 1124304669], Rational[2425780655, 3372914007], 
      Rational[2730720950, 3372914007], Rational[977946185, 1124304669], 
      Rational[338045450, 374768223], Rational[1022601595, 1124304669], 
      Rational[3013566335, 3372914007], Rational[957443725, 1124304669], 
      Rational[2633134220, 3372914007], Rational[2294793500, 3372914007], 
      Rational[1877293990, 3372914007], Rational[1423413905, 3372914007], 
      Rational[109780940, 374768223], Rational[206713690, 1124304669], 
      Rational[115803655, 1124304669], Rational[171167975, 3372914007], 
      Rational[72838765, 3372914007], Rational[2904055, 374768223], Rational[
      7638620, 3372914007], Rational[1720730, 3372914007], Rational[
      269335, 3372914007], Rational[22705, 3372914007], 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0}, {
     0, Rational[369621535, 3372914007], Rational[780172825, 3372914007], 
      Rational[1245636040, 3372914007], Rational[580829365, 1124304669], 
      Rational[740280205, 1124304669], Rational[2628735833, 3372914007], 
      Rational[977946185, 1124304669], Rational[3130820080, 3372914007], 
      Rational[1077687530, 1124304669], Rational[1085528990, 1124304669], 
      Rational[3206556356, 3372914007], Rational[3073649875, 3372914007], 
      Rational[105252215, 124922741], Rational[834443105, 1124304669], 
      Rational[2072982965, 3372914007], Rational[530783968, 1124304669], 
      Rational[1120094470, 3372914007], Rational[79156880, 374768223], 
      Rational[134772290, 1124304669], Rational[201732575, 3372914007], 
      Rational[86900011, 3372914007], Rational[3506090, 374768223], Rational[
      3110140, 1124304669], Rational[2126630, 3372914007], Rational[
      336920, 3372914007], Rational[28808, 3372914007], 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0}, {
     0, Rational[132143503, 1124304669], Rational[277795088, 1124304669], 
      Rational[441059278, 1124304669], Rational[613130966, 1124304669], 
      Rational[776485123, 1124304669], Rational[304515436, 374768223], 
      Rational[338045450, 374768223], Rational[1077687530, 1124304669], 
      Rational[369989503, 374768223], Rational[372424619, 374768223], 
      Rational[1101649589, 1124304669], Rational[1059582745, 1124304669], 
      Rational[984645940, 1124304669], Rational[290947553, 374768223], 
      Rational[80875932, 124922741], Rational[62580564, 124922741], Rational[
      399081617, 1124304669], Rational[28402328, 124922741], Rational[
      48681628, 374768223], Rational[73326224, 1124304669], Rational[
      31771711, 1124304669], Rational[11600024, 1124304669], Rational[
      3447679, 1124304669], Rational[263230, 374768223], Rational[
      41905, 374768223], Rational[3602, 374768223], 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0}, {
     0, Rational[134597236, 1124304669], Rational[282569408, 1124304669], 
      Rational[447821968, 1124304669], Rational[621316286, 1124304669], 
      Rational[785375924, 1124304669], Rational[922459465, 1124304669], 
      Rational[1022601595, 1124304669], Rational[1085528990, 1124304669], 
      Rational[372424619, 374768223], 1, Rational[1108726637, 1124304669], 
      Rational[1066950430, 1124304669], Rational[992326915, 1124304669], 
      Rational[880551316, 1124304669], Rational[735080071, 1124304669], 
      Rational[569318710, 1124304669], Rational[403676717, 1124304669], 
      Rational[86220734, 374768223], Rational[16420778, 124922741], Rational[
      74175926, 1124304669], Rational[32117026, 1124304669], Rational[
      11713229, 1124304669], Rational[3476099, 1124304669], Rational[
      794629, 1124304669], Rational[126181, 1124304669], Rational[
      3602, 374768223], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {
     0, Rational[130246588, 1124304669], Rational[273822836, 1124304669], 
      Rational[434876288, 1124304669], Rational[604928396, 1124304669], 
      Rational[766905463, 1124304669], Rational[2710577714, 3372914007], 
      Rational[3013566335, 3372914007], Rational[3206556356, 3372914007], 
      Rational[1101649589, 1124304669], Rational[1108726637, 1124304669], 
      Rational[1092006664, 1124304669], Rational[1048232225, 1124304669], 
      Rational[971483113, 1124304669], Rational[286116703, 374768223], 
      Rational[2139146909, 3372914007], Rational[1647915698, 3372914007], 
      Rational[1161757025, 3372914007], Rational[246624664, 1124304669], 
      Rational[139999534, 1124304669], Rational[23262338, 374768223], 
      Rational[9999187, 374768223], Rational[10855420, 1124304669], Rational[
      1064855, 374768223], Rational[2170520, 3372914007], Rational[
      341045, 3372914007], Rational[28808, 3372914007], 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0}, {
     0, Rational[119310595, 1124304669], Rational[755618740, 3372914007], 
      Rational[1207246040, 3372914007], Rational[1691277920, 3372914007], 
      Rational[2160639205, 3372914007], Rational[2565260105, 3372914007], 
      Rational[957443725, 1124304669], Rational[3073649875, 3372914007], 
      Rational[1059582745, 1124304669], Rational[1066950430, 1124304669], 
      Rational[1048232225, 1124304669], Rational[1000961600, 1124304669], 
      Rational[2762551625, 3372914007], Rational[2419163845, 3372914007], 
      Rational[1989708185, 3372914007], Rational[505489915, 1124304669], 
      Rational[1057107535, 3372914007], Rational[73927540, 374768223], 
      Rational[124360925, 1124304669], Rational[61199450, 1124304669], 
      Rational[25952260, 1124304669], Rational[27770720, 3372914007], 
      Rational[8045995, 3372914007], Rational[1790965, 3372914007], Rational[
      275890, 3372914007], Rational[22705, 3372914007], 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0}, {
     0, Rational[11417855, 124922741], Rational[655207465, 3372914007], 
      Rational[1056948310, 3372914007], Rational[1497508135, 3372914007], 
      Rational[1936210450, 3372914007], Rational[775449169, 1124304669], 
      Rational[2633134220, 3372914007], Rational[105252215, 124922741], 
      Rational[984645940, 1124304669], Rational[992326915, 1124304669], 
      Rational[971483113, 1124304669], Rational[2762551625, 3372914007], 
      Rational[2515316510, 3372914007], Rational[2175574180, 3372914007], 
      Rational[1765010180, 3372914007], Rational[1325708111, 3372914007], 
      Rational[303358990, 1124304669], Rational[563699191, 3372914007], 
      Rational[310812206, 3372914007], Rational[50085097, 1124304669], 
      Rational[20838565, 1124304669], Rational[21843085, 3372914007], 
      Rational[6187642, 3372914007], Rational[1346467, 3372914007], Rational[
      70004, 1124304669], Rational[10538, 1124304669], Rational[
      22705, 3372914007], Rational[28808, 3372914007], Rational[
      3602, 374768223], Rational[3602, 374768223], Rational[
      28808, 3372914007], Rational[22705, 3372914007], Rational[
      5269, 1124304669], Rational[1073, 374768223], Rational[
      1709, 1124304669], Rational[2332, 3372914007], Rational[
      889, 3372914007], Rational[265, 3372914007], 0}, {
     0, Rational[82487272, 1124304669], Rational[530804167, 3372914007], 
      Rational[867471352, 3372914007], Rational[46209699, 124922741], 
      Rational[1638838612, 3372914007], Rational[1999663642, 3372914007], 
      Rational[2294793500, 3372914007], Rational[834443105, 1124304669], 
      Rational[290947553, 374768223], Rational[880551316, 1124304669], 
      Rational[286116703, 374768223], Rational[2419163845, 3372914007], 
      Rational[2175574180, 3372914007], Rational[618114058, 1124304669], 
      Rational[493474571, 1124304669], Rational[1093221844, 3372914007], 
      Rational[81918551, 374768223], Rational[448235524, 3372914007], 
      Rational[242320112, 3372914007], Rational[38229158, 1124304669], 
      Rational[5181022, 374768223], Rational[15890899, 3372914007], Rational[
      1467763, 1124304669], Rational[989702, 3372914007], Rational[
      87040, 1124304669], Rational[70004, 1124304669], Rational[
      275890, 3372914007], Rational[341045, 3372914007], Rational[
      126181, 1124304669], Rational[41905, 374768223], Rational[
      336920, 3372914007], Rational[269335, 3372914007], Rational[
      21340, 374768223], Rational[13513, 374768223], Rational[
      67967, 3372914007], Rational[33242, 3372914007], Rational[
      14017, 3372914007], Rational[4717, 3372914007], 0}, {
     0, Rational[183341953, 3372914007], Rational[397838767, 3372914007], 
      Rational[220244794, 1124304669], Rational[967906393, 3372914007], 
      Rational[431894440, 1124304669], Rational[536653235, 1124304669], 
      Rational[1877293990, 3372914007], Rational[2072982965, 3372914007], 
      Rational[80875932, 124922741], Rational[735080071, 1124304669], 
      Rational[2139146909, 3372914007], Rational[1989708185, 3372914007], 
      Rational[1765010180, 3372914007], Rational[493474571, 1124304669], 
      Rational[1161514807, 3372914007], Rational[280755185, 1124304669], 
      Rational[557417774, 3372914007], Rational[332282434, 3372914007], 
      Rational[175913231, 3372914007], Rational[81399188, 3372914007], 
      Rational[32317978, 3372914007], Rational[10822019, 3372914007], 
      Rational[1049518, 1124304669], Rational[1132912, 3372914007], Rational[
      989702, 3372914007], Rational[1346467, 3372914007], Rational[
      1790965, 3372914007], Rational[2170520, 3372914007], Rational[
      794629, 1124304669], Rational[263230, 374768223], Rational[
      2126630, 3372914007], Rational[1720730, 3372914007], Rational[
      1251635, 3372914007], Rational[815605, 3372914007], Rational[
      473992, 3372914007], Rational[244112, 3372914007], Rational[
      109822, 3372914007], Rational[39547, 3372914007], 0}, {
     0, Rational[124123207, 3372914007], Rational[273104053, 3372914007], 
      Rational[462294712, 3372914007], Rational[691764743, 3372914007], 
      Rational[315388817, 1124304669], Rational[1199679251, 3372914007], 
      Rational[1423413905, 3372914007], Rational[530783968, 1124304669], 
      Rational[62580564, 124922741], Rational[569318710, 1124304669], 
      Rational[1647915698, 3372914007], Rational[505489915, 1124304669], 
      Rational[1325708111, 3372914007], Rational[1093221844, 3372914007], 
      Rational[280755185, 1124304669], Rational[599437927, 3372914007], 
      Rational[129736930, 1124304669], Rational[75831661, 1124304669], 
      Rational[39332810, 1124304669], Rational[53507795, 3372914007], 
      Rational[21030373, 3372914007], Rational[2503607, 1124304669], Rational[
      3367276, 3372914007], Rational[1049518, 1124304669], Rational[
      1467763, 1124304669], Rational[6187642, 3372914007], Rational[
      8045995, 3372914007], Rational[1064855, 374768223], Rational[
      3476099, 1124304669], Rational[3447679, 1124304669], Rational[
      3110140, 1124304669], Rational[7638620, 3372914007], Rational[
      1887178, 1124304669], Rational[3787895, 3372914007], Rational[
      759770, 1124304669], Rational[1226522, 3372914007], Rational[
      193684, 1124304669], Rational[73315, 1124304669], 0}, {
     0, Rational[76002355, 3372914007], Rational[169967236, 3372914007], 
      Rational[294071206, 3372914007], Rational[150221830, 1124304669], 
      Rational[210370175, 1124304669], Rational[817719692, 3372914007], 
      Rational[109780940, 374768223], Rational[1120094470, 3372914007], 
      Rational[399081617, 1124304669], Rational[403676717, 1124304669], 
      Rational[1161757025, 3372914007], Rational[1057107535, 3372914007], 
      Rational[303358990, 1124304669], Rational[81918551, 374768223], 
      Rational[557417774, 3372914007], Rational[129736930, 1124304669], 
      Rational[247953055, 3372914007], Rational[47412655, 1124304669], 
      Rational[24183559, 1124304669], Rational[32804342, 3372914007], 
      Rational[13933921, 3372914007], Rational[2490232, 1124304669], Rational[
      2503607, 1124304669], Rational[10822019, 3372914007], Rational[
      15890899, 3372914007], Rational[21843085, 3372914007], Rational[
      27770720, 3372914007], Rational[10855420, 1124304669], Rational[
      11713229, 1124304669], Rational[11600024, 1124304669], Rational[
      3506090, 374768223], Rational[2904055, 374768223], Rational[
      19728709, 3372914007], Rational[4511555, 1124304669], Rational[
      2803265, 1124304669], Rational[4705052, 3372914007], Rational[
      258713, 374768223], Rational[101905, 374768223], 0}, {
     0, Rational[13878125, 1124304669], Rational[31624772, 1124304669], 
      Rational[56082752, 1124304669], Rational[88231030, 1124304669], 
      Rational[14079815, 124922741], Rational[167939611, 1124304669], 
      Rational[206713690, 1124304669], Rational[79156880, 374768223], 
      Rational[28402328, 124922741], Rational[86220734, 374768223], Rational[
      246624664, 1124304669], Rational[73927540, 374768223], Rational[
      563699191, 3372914007], Rational[448235524, 3372914007], Rational[
      332282434, 3372914007], Rational[75831661, 1124304669], Rational[
      47412655, 1124304669], Rational[26783243, 1124304669], Rational[
      13680418, 1124304669], Rational[2247371, 374768223], Rational[
      4228480, 1124304669], Rational[13933921, 3372914007], Rational[
      21030373, 3372914007], Rational[32317978, 3372914007], Rational[
      5181022, 374768223], Rational[20838565, 1124304669], Rational[
      25952260, 1124304669], Rational[9999187, 374768223], Rational[
      32117026, 1124304669], Rational[31771711, 1124304669], Rational[
      86900011, 3372914007], Rational[72838765, 3372914007], Rational[
      55990639, 3372914007], Rational[13120103, 1124304669], Rational[
      2801171, 374768223], Rational[1623974, 374768223], Rational[
      2505055, 1124304669], Rational[1020115, 1124304669], 0}, {
     0, Rational[6718748, 1124304669], Rational[15643937, 1124304669], 
      Rational[28517632, 1124304669], Rational[15386471, 374768223], Rational[
      68083690, 1124304669], Rational[30783280, 374768223], Rational[
      115803655, 1124304669], Rational[134772290, 1124304669], Rational[
      48681628, 374768223], Rational[16420778, 124922741], Rational[
      139999534, 1124304669], Rational[124360925, 1124304669], Rational[
      310812206, 3372914007], Rational[242320112, 3372914007], Rational[
      175913231, 3372914007], Rational[39332810, 1124304669], Rational[
      24183559, 1124304669], Rational[13680418, 1124304669], Rational[
      7638158, 1124304669], Rational[5512826, 1124304669], Rational[
      2247371, 374768223], Rational[32804342, 3372914007], Rational[
      53507795, 3372914007], Rational[81399188, 3372914007], Rational[
      38229158, 1124304669], Rational[50085097, 1124304669], Rational[
      61199450, 1124304669], Rational[23262338, 374768223], Rational[
      74175926, 1124304669], Rational[73326224, 1124304669], Rational[
      201732575, 3372914007], Rational[171167975, 3372914007], Rational[
      134004155, 3372914007], Rational[10720726, 374768223], Rational[
      21206603, 1124304669], Rational[12706232, 1124304669], Rational[
      6759947, 1124304669], Rational[2832368, 1124304669], 0}, {
     0, Rational[2832368, 1124304669], Rational[6759947, 1124304669], 
      Rational[12706232, 1124304669], Rational[21206603, 1124304669], 
      Rational[10720726, 374768223], Rational[134004155, 3372914007], 
      Rational[171167975, 3372914007], Rational[201732575, 3372914007], 
      Rational[73326224, 1124304669], Rational[74175926, 1124304669], 
      Rational[23262338, 374768223], Rational[61199450, 1124304669], Rational[
      50085097, 1124304669], Rational[38229158, 1124304669], Rational[
      81399188, 3372914007], Rational[53507795, 3372914007], Rational[
      32804342, 3372914007], Rational[2247371, 374768223], Rational[
      5512826, 1124304669], Rational[7638158, 1124304669], Rational[
      13680418, 1124304669], Rational[24183559, 1124304669], Rational[
      39332810, 1124304669], Rational[175913231, 3372914007], Rational[
      242320112, 3372914007], Rational[310812206, 3372914007], Rational[
      124360925, 1124304669], Rational[139999534, 1124304669], Rational[
      16420778, 124922741], Rational[48681628, 374768223], Rational[
      134772290, 1124304669], Rational[115803655, 1124304669], Rational[
      30783280, 374768223], Rational[68083690, 1124304669], Rational[
      15386471, 374768223], Rational[28517632, 1124304669], Rational[
      15643937, 1124304669], Rational[6718748, 1124304669], 0}, {
     0, Rational[1020115, 1124304669], Rational[2505055, 1124304669], 
      Rational[1623974, 374768223], Rational[2801171, 374768223], Rational[
      13120103, 1124304669], Rational[55990639, 3372914007], Rational[
      72838765, 3372914007], Rational[86900011, 3372914007], Rational[
      31771711, 1124304669], Rational[32117026, 1124304669], Rational[
      9999187, 374768223], Rational[25952260, 1124304669], Rational[
      20838565, 1124304669], Rational[5181022, 374768223], Rational[
      32317978, 3372914007], Rational[21030373, 3372914007], Rational[
      13933921, 3372914007], Rational[4228480, 1124304669], Rational[
      2247371, 374768223], Rational[13680418, 1124304669], Rational[
      26783243, 1124304669], Rational[47412655, 1124304669], Rational[
      75831661, 1124304669], Rational[332282434, 3372914007], Rational[
      448235524, 3372914007], Rational[563699191, 3372914007], Rational[
      73927540, 374768223], Rational[246624664, 1124304669], Rational[
      86220734, 374768223], Rational[28402328, 124922741], Rational[
      79156880, 374768223], Rational[206713690, 1124304669], Rational[
      167939611, 1124304669], Rational[14079815, 124922741], Rational[
      88231030, 1124304669], Rational[56082752, 1124304669], Rational[
      31624772, 1124304669], Rational[13878125, 1124304669], 0}, {
     0, Rational[101905, 374768223], Rational[258713, 374768223], Rational[
      4705052, 3372914007], Rational[2803265, 1124304669], Rational[
      4511555, 1124304669], Rational[19728709, 3372914007], Rational[
      2904055, 374768223], Rational[3506090, 374768223], Rational[
      11600024, 1124304669], Rational[11713229, 1124304669], Rational[
      10855420, 1124304669], Rational[27770720, 3372914007], Rational[
      21843085, 3372914007], Rational[15890899, 3372914007], Rational[
      10822019, 3372914007], Rational[2503607, 1124304669], Rational[
      2490232, 1124304669], Rational[13933921, 3372914007], Rational[
      32804342, 3372914007], Rational[24183559, 1124304669], Rational[
      47412655, 1124304669], Rational[247953055, 3372914007], Rational[
      129736930, 1124304669], Rational[557417774, 3372914007], Rational[
      81918551, 374768223], Rational[303358990, 1124304669], Rational[
      1057107535, 3372914007], Rational[1161757025, 3372914007], Rational[
      403676717, 1124304669], Rational[399081617, 1124304669], Rational[
      1120094470, 3372914007], Rational[109780940, 374768223], Rational[
      817719692, 3372914007], Rational[210370175, 1124304669], Rational[
      150221830, 1124304669], Rational[294071206, 3372914007], Rational[
      169967236, 3372914007], Rational[76002355, 3372914007], 0}, {
     0, Rational[73315, 1124304669], Rational[193684, 1124304669], Rational[
      1226522, 3372914007], Rational[759770, 1124304669], Rational[
      3787895, 3372914007], Rational[1887178, 1124304669], Rational[
      7638620, 3372914007], Rational[3110140, 1124304669], Rational[
      3447679, 1124304669], Rational[3476099, 1124304669], Rational[
      1064855, 374768223], Rational[8045995, 3372914007], Rational[
      6187642, 3372914007], Rational[1467763, 1124304669], Rational[
      1049518, 1124304669], Rational[3367276, 3372914007], Rational[
      2503607, 1124304669], Rational[21030373, 3372914007], Rational[
      53507795, 3372914007], Rational[39332810, 1124304669], Rational[
      75831661, 1124304669], Rational[129736930, 1124304669], Rational[
      599437927, 3372914007], Rational[280755185, 1124304669], Rational[
      1093221844, 3372914007], Rational[1325708111, 3372914007], Rational[
      505489915, 1124304669], Rational[1647915698, 3372914007], Rational[
      569318710, 1124304669], Rational[62580564, 124922741], Rational[
      530783968, 1124304669], Rational[1423413905, 3372914007], Rational[
      1199679251, 3372914007], Rational[315388817, 1124304669], Rational[
      691764743, 3372914007], Rational[462294712, 3372914007], Rational[
      273104053, 3372914007], Rational[124123207, 3372914007], 0}, {
     0, Rational[39547, 3372914007], Rational[109822, 3372914007], Rational[
      244112, 3372914007], Rational[473992, 3372914007], Rational[
      815605, 3372914007], Rational[1251635, 3372914007], Rational[
      1720730, 3372914007], Rational[2126630, 3372914007], Rational[
      263230, 374768223], Rational[794629, 1124304669], Rational[
      2170520, 3372914007], Rational[1790965, 3372914007], Rational[
      1346467, 3372914007], Rational[989702, 3372914007], Rational[
      1132912, 3372914007], Rational[1049518, 1124304669], Rational[
      10822019, 3372914007], Rational[32317978, 3372914007], Rational[
      81399188, 3372914007], Rational[175913231, 3372914007], Rational[
      332282434, 3372914007], Rational[557417774, 3372914007], Rational[
      280755185, 1124304669], Rational[1161514807, 3372914007], Rational[
      493474571, 1124304669], Rational[1765010180, 3372914007], Rational[
      1989708185, 3372914007], Rational[2139146909, 3372914007], Rational[
      735080071, 1124304669], Rational[80875932, 124922741], Rational[
      2072982965, 3372914007], Rational[1877293990, 3372914007], Rational[
      536653235, 1124304669], Rational[431894440, 1124304669], Rational[
      967906393, 3372914007], Rational[220244794, 1124304669], Rational[
      397838767, 3372914007], Rational[183341953, 3372914007], 0}, {
     0, Rational[4717, 3372914007], Rational[14017, 3372914007], Rational[
      33242, 3372914007], Rational[67967, 3372914007], Rational[
      13513, 374768223], Rational[21340, 374768223], Rational[
      269335, 3372914007], Rational[336920, 3372914007], Rational[
      41905, 374768223], Rational[126181, 1124304669], Rational[
      341045, 3372914007], Rational[275890, 3372914007], Rational[
      70004, 1124304669], Rational[87040, 1124304669], Rational[
      989702, 3372914007], Rational[1467763, 1124304669], Rational[
      15890899, 3372914007], Rational[5181022, 374768223], Rational[
      38229158, 1124304669], Rational[242320112, 3372914007], Rational[
      448235524, 3372914007], Rational[81918551, 374768223], Rational[
      1093221844, 3372914007], Rational[493474571, 1124304669], Rational[
      618114058, 1124304669], Rational[2175574180, 3372914007], Rational[
      2419163845, 3372914007], Rational[286116703, 374768223], Rational[
      880551316, 1124304669], Rational[290947553, 374768223], Rational[
      834443105, 1124304669], Rational[2294793500, 3372914007], Rational[
      1999663642, 3372914007], Rational[1638838612, 3372914007], Rational[
      46209699, 124922741], Rational[867471352, 3372914007], Rational[
      530804167, 3372914007], Rational[82487272, 1124304669], 0}, {
     0, Rational[265, 3372914007], Rational[889, 3372914007], Rational[
      2332, 3372914007], Rational[1709, 1124304669], Rational[
      1073, 374768223], Rational[5269, 1124304669], Rational[
      22705, 3372914007], Rational[28808, 3372914007], Rational[
      3602, 374768223], Rational[3602, 374768223], Rational[
      28808, 3372914007], Rational[22705, 3372914007], Rational[
      10538, 1124304669], Rational[70004, 1124304669], Rational[
      1346467, 3372914007], Rational[6187642, 3372914007], Rational[
      21843085, 3372914007], Rational[20838565, 1124304669], Rational[
      50085097, 1124304669], Rational[310812206, 3372914007], Rational[
      563699191, 3372914007], Rational[303358990, 1124304669], Rational[
      1325708111, 3372914007], Rational[1765010180, 3372914007], Rational[
      2175574180, 3372914007], Rational[2515316510, 3372914007], Rational[
      2762551625, 3372914007], Rational[971483113, 1124304669], Rational[
      992326915, 1124304669], Rational[984645940, 1124304669], Rational[
      105252215, 124922741], Rational[2633134220, 3372914007], Rational[
      775449169, 1124304669], Rational[1936210450, 3372914007], Rational[
      1497508135, 3372914007], Rational[1056948310, 3372914007], Rational[
      655207465, 3372914007], Rational[11417855, 124922741], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[22705, 3372914007], 
      Rational[275890, 3372914007], Rational[1790965, 3372914007], Rational[
      8045995, 3372914007], Rational[27770720, 3372914007], Rational[
      25952260, 1124304669], Rational[61199450, 1124304669], Rational[
      124360925, 1124304669], Rational[73927540, 374768223], Rational[
      1057107535, 3372914007], Rational[505489915, 1124304669], Rational[
      1989708185, 3372914007], Rational[2419163845, 3372914007], Rational[
      2762551625, 3372914007], Rational[1000961600, 1124304669], Rational[
      1048232225, 1124304669], Rational[1066950430, 1124304669], Rational[
      1059582745, 1124304669], Rational[3073649875, 3372914007], Rational[
      957443725, 1124304669], Rational[2565260105, 3372914007], Rational[
      2160639205, 3372914007], Rational[1691277920, 3372914007], Rational[
      1207246040, 3372914007], Rational[755618740, 3372914007], Rational[
      119310595, 1124304669], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[28808, 3372914007], 
      Rational[341045, 3372914007], Rational[2170520, 3372914007], Rational[
      1064855, 374768223], Rational[10855420, 1124304669], Rational[
      9999187, 374768223], Rational[23262338, 374768223], Rational[
      139999534, 1124304669], Rational[246624664, 1124304669], Rational[
      1161757025, 3372914007], Rational[1647915698, 3372914007], Rational[
      2139146909, 3372914007], Rational[286116703, 374768223], Rational[
      971483113, 1124304669], Rational[1048232225, 1124304669], Rational[
      1092006664, 1124304669], Rational[1108726637, 1124304669], Rational[
      1101649589, 1124304669], Rational[3206556356, 3372914007], Rational[
      3013566335, 3372914007], Rational[2710577714, 3372914007], Rational[
      766905463, 1124304669], Rational[604928396, 1124304669], Rational[
      434876288, 1124304669], Rational[273822836, 1124304669], Rational[
      130246588, 1124304669], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[3602, 374768223], 
      Rational[126181, 1124304669], Rational[794629, 1124304669], Rational[
      3476099, 1124304669], Rational[11713229, 1124304669], Rational[
      32117026, 1124304669], Rational[74175926, 1124304669], Rational[
      16420778, 124922741], Rational[86220734, 374768223], Rational[
      403676717, 1124304669], Rational[569318710, 1124304669], Rational[
      735080071, 1124304669], Rational[880551316, 1124304669], Rational[
      992326915, 1124304669], Rational[1066950430, 1124304669], Rational[
      1108726637, 1124304669], 1, Rational[372424619, 374768223], Rational[
      1085528990, 1124304669], Rational[1022601595, 1124304669], Rational[
      922459465, 1124304669], Rational[785375924, 1124304669], Rational[
      621316286, 1124304669], Rational[447821968, 1124304669], Rational[
      282569408, 1124304669], Rational[134597236, 1124304669], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[3602, 374768223], 
      Rational[41905, 374768223], Rational[263230, 374768223], Rational[
      3447679, 1124304669], Rational[11600024, 1124304669], Rational[
      31771711, 1124304669], Rational[73326224, 1124304669], Rational[
      48681628, 374768223], Rational[28402328, 124922741], Rational[
      399081617, 1124304669], Rational[62580564, 124922741], Rational[
      80875932, 124922741], Rational[290947553, 374768223], Rational[
      984645940, 1124304669], Rational[1059582745, 1124304669], Rational[
      1101649589, 1124304669], Rational[372424619, 374768223], Rational[
      369989503, 374768223], Rational[1077687530, 1124304669], Rational[
      338045450, 374768223], Rational[304515436, 374768223], Rational[
      776485123, 1124304669], Rational[613130966, 1124304669], Rational[
      441059278, 1124304669], Rational[277795088, 1124304669], Rational[
      132143503, 1124304669], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[28808, 3372914007], 
      Rational[336920, 3372914007], Rational[2126630, 3372914007], Rational[
      3110140, 1124304669], Rational[3506090, 374768223], Rational[
      86900011, 3372914007], Rational[201732575, 3372914007], Rational[
      134772290, 1124304669], Rational[79156880, 374768223], Rational[
      1120094470, 3372914007], Rational[530783968, 1124304669], Rational[
      2072982965, 3372914007], Rational[834443105, 1124304669], Rational[
      105252215, 124922741], Rational[3073649875, 3372914007], Rational[
      3206556356, 3372914007], Rational[1085528990, 1124304669], Rational[
      1077687530, 1124304669], Rational[3130820080, 3372914007], Rational[
      977946185, 1124304669], Rational[2628735833, 3372914007], Rational[
      740280205, 1124304669], Rational[580829365, 1124304669], Rational[
      1245636040, 3372914007], Rational[780172825, 3372914007], Rational[
      369621535, 3372914007], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[22705, 3372914007], 
      Rational[269335, 3372914007], Rational[1720730, 3372914007], Rational[
      7638620, 3372914007], Rational[2904055, 374768223], Rational[
      72838765, 3372914007], Rational[171167975, 3372914007], Rational[
      115803655, 1124304669], Rational[206713690, 1124304669], Rational[
      109780940, 374768223], Rational[1423413905, 3372914007], Rational[
      1877293990, 3372914007], Rational[2294793500, 3372914007], Rational[
      2633134220, 3372914007], Rational[957443725, 1124304669], Rational[
      3013566335, 3372914007], Rational[1022601595, 1124304669], Rational[
      338045450, 374768223], Rational[977946185, 1124304669], Rational[
      2730720950, 3372914007], Rational[2425780655, 3372914007], Rational[
      676510090, 1124304669], Rational[1576197185, 3372914007], Rational[
      1115500210, 3372914007], Rational[692429155, 3372914007], Rational[
      325927735, 3372914007], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[5269, 1124304669], 
      Rational[21340, 374768223], Rational[1251635, 3372914007], Rational[
      1887178, 1124304669], Rational[19728709, 3372914007], Rational[
      55990639, 3372914007], Rational[134004155, 3372914007], Rational[
      30783280, 374768223], Rational[167939611, 1124304669], Rational[
      817719692, 3372914007], Rational[1199679251, 3372914007], Rational[
      536653235, 1124304669], Rational[1999663642, 3372914007], Rational[
      775449169, 1124304669], Rational[2565260105, 3372914007], Rational[
      2710577714, 3372914007], Rational[922459465, 1124304669], Rational[
      304515436, 374768223], Rational[2628735833, 3372914007], Rational[
      2425780655, 3372914007], Rational[2131343510, 3372914007], Rational[
      1761032525, 3372914007], Rational[1349708561, 3372914007], Rational[
      942772600, 3372914007], Rational[192780829, 1124304669], Rational[
      269888731, 3372914007], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[1073, 374768223], 
      Rational[13513, 374768223], Rational[815605, 3372914007], Rational[
      3787895, 3372914007], Rational[4511555, 1124304669], Rational[
      13120103, 1124304669], Rational[10720726, 374768223], Rational[
      68083690, 1124304669], Rational[14079815, 124922741], Rational[
      210370175, 1124304669], Rational[315388817, 1124304669], Rational[
      431894440, 1124304669], Rational[1638838612, 3372914007], Rational[
      1936210450, 3372914007], Rational[2160639205, 3372914007], Rational[
      766905463, 1124304669], Rational[785375924, 1124304669], Rational[
      776485123, 1124304669], Rational[740280205, 1124304669], Rational[
      676510090, 1124304669], Rational[1761032525, 3372914007], Rational[
      478107085, 1124304669], Rational[1082563466, 3372914007], Rational[
      744614750, 3372914007], Rational[150135800, 1124304669], Rational[
      23112569, 374768223], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[1709, 1124304669], 
      Rational[67967, 3372914007], Rational[473992, 3372914007], Rational[
      759770, 1124304669], Rational[2803265, 1124304669], Rational[
      2801171, 374768223], Rational[21206603, 1124304669], Rational[
      15386471, 374768223], Rational[88231030, 1124304669], Rational[
      150221830, 1124304669], Rational[691764743, 3372914007], Rational[
      967906393, 3372914007], Rational[46209699, 124922741], Rational[
      1497508135, 3372914007], Rational[1691277920, 3372914007], Rational[
      604928396, 1124304669], Rational[621316286, 1124304669], Rational[
      613130966, 1124304669], Rational[580829365, 1124304669], Rational[
      1576197185, 3372914007], Rational[1349708561, 3372914007], Rational[
      1082563466, 3372914007], Rational[803601241, 3372914007], Rational[
      543460280, 3372914007], Rational[107871415, 1124304669], Rational[
      49235480, 1124304669], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[2332, 3372914007], 
      Rational[33242, 3372914007], Rational[244112, 3372914007], Rational[
      1226522, 3372914007], Rational[4705052, 3372914007], Rational[
      1623974, 374768223], Rational[12706232, 1124304669], Rational[
      28517632, 1124304669], Rational[56082752, 1124304669], Rational[
      294071206, 3372914007], Rational[462294712, 3372914007], Rational[
      220244794, 1124304669], Rational[867471352, 3372914007], Rational[
      1056948310, 3372914007], Rational[1207246040, 3372914007], Rational[
      434876288, 1124304669], Rational[447821968, 1124304669], Rational[
      441059278, 1124304669], Rational[1245636040, 3372914007], Rational[
      1115500210, 3372914007], Rational[942772600, 3372914007], Rational[
      744614750, 3372914007], Rational[543460280, 3372914007], Rational[
      361149184, 3372914007], Rational[211528504, 3372914007], Rational[
      31779220, 1124304669], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[889, 3372914007], 
      Rational[14017, 3372914007], Rational[109822, 3372914007], Rational[
      193684, 1124304669], Rational[258713, 374768223], Rational[
      2505055, 1124304669], Rational[6759947, 1124304669], Rational[
      15643937, 1124304669], Rational[31624772, 1124304669], Rational[
      169967236, 3372914007], Rational[273104053, 3372914007], Rational[
      397838767, 3372914007], Rational[530804167, 3372914007], Rational[
      655207465, 3372914007], Rational[755618740, 3372914007], Rational[
      273822836, 1124304669], Rational[282569408, 1124304669], Rational[
      277795088, 1124304669], Rational[780172825, 3372914007], Rational[
      692429155, 3372914007], Rational[192780829, 1124304669], Rational[
      150135800, 1124304669], Rational[107871415, 1124304669], Rational[
      211528504, 3372914007], Rational[40647083, 1124304669], Rational[
      18095260, 1124304669], 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Rational[265, 3372914007], 
      Rational[4717, 3372914007], Rational[39547, 3372914007], Rational[
      73315, 1124304669], Rational[101905, 374768223], Rational[
      1020115, 1124304669], Rational[2832368, 1124304669], Rational[
      6718748, 1124304669], Rational[13878125, 1124304669], Rational[
      76002355, 3372914007], Rational[124123207, 3372914007], Rational[
      183341953, 3372914007], Rational[82487272, 1124304669], Rational[
      11417855, 124922741], Rational[119310595, 1124304669], Rational[
      130246588, 1124304669], Rational[134597236, 1124304669], Rational[
      132143503, 1124304669], Rational[369621535, 3372914007], Rational[
      325927735, 3372914007], Rational[269888731, 3372914007], Rational[
      23112569, 374768223], Rational[49235480, 1124304669], Rational[
      31779220, 1124304669], Rational[18095260, 1124304669], Rational[
      2659156, 374768223], 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {
     0, 0.007095468176873683, 0.016094623191500772`, 0.028265665772130667`, 
      0.04379193768161786, 0.06167163484402465, 0.08001648735778161, 
      0.0966309055978254, 0.10958522341005535`, 0.11753353574305934`, 
      0.11971598065114858`, 0.1158463462718218, 0.10611945168396343`, 
      0.091399331367537, 0.07336736587011362, 0.05435713825478504, 
      0.03679999156290378, 0.022533143401304627`, 0.012343740431447056`, 
      0.005975913989555797, 0.002519217502244492, 0.0009073296839613142, 
      0.00027191472954738745`, 0.00006520919286514144, 
      0.000011724876447465268`, 1.3984939996129583`*^-6, 
      7.856707862994148*^-8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {
     0, 0.016094623191500772`, 0.036153085654401035`, 0.06271387398581846, 
      0.09594500314220433, 0.13353657966531135`, 0.17146671566477326`, 
      0.2052910787416941, 0.23130528183667387`, 0.24708168138008507`, 
      0.2513281460009662, 0.24354860701908193`, 0.22402549796165022`, 
      0.19425560913803636`, 0.1573725763237343, 0.11795105542991687`, 
      0.08096976455172342, 0.05039180828424838, 0.02812829375522232, 
      0.013914321830500198`, 0.006012557971508344, 0.0022280926772527705`, 
      0.0006903280057444999, 0.0001722700308380557, 0.000032559976261499746`, 
      4.155753740210905*^-6, 2.635703128378037*^-7, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0}, {
     0, 0.028265665772130667`, 0.06271387398581846, 0.10707334466591398`, 
      0.16112485490947176`, 0.22076304004628008`, 0.27951278865794105`, 
      0.3307229913614575, 0.36930560263761864`, 0.39229515820857985`, 
      0.3983101559102393, 0.3867957680784122, 0.3579237530202471, 
      0.3133635508662406, 0.2571875091388892, 0.19589422695886716`, 
      0.1370609244826798, 0.08718609647020271, 0.0498821658811416, 
      0.025364683422834742`, 0.011301413531708816`, 0.004333275609655945, 
      0.001394951662045145, 0.00036363868081265316`, 0.0000723742139566501, 
      9.85557293515666*^-6, 6.91390291943485*^-7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0}, {
     0, 0.04379193768161786, 0.09594500314220433, 0.16112485490947176`, 
      0.23825132788213418`, 0.32095792058537354`, 0.400160975998461, 
      0.46731021951014123`, 0.5166120723456677, 0.5453423639566866, 
      0.5526227037308514, 0.5380466813662231, 0.5014293031159391, 
      0.4439805260057435, 0.3699062206776267, 0.28696444409529825`, 
      0.20509409417623495`, 0.13361309807030605`, 0.07847608609370633, 
      0.04105596487565596, 0.01886197183443343, 0.007474409056287571, 
      0.002493332169912033, 0.0006757687848755167, 0.00014052893107155932`, 
      0.000020150825031098993`, 1.520050611832868*^-6, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0}, {
     0, 0.06167163484402465, 0.13353657966531135`, 0.22076304004628008`, 
      0.32095792058537354`, 0.42524690876294846`, 0.5221101164587146, 
      0.6017142049242882, 0.6584338083897079, 0.6906358609100466, 
      0.6985436827355201, 0.6821153412821058, 0.640585321925167, 
      0.5740467874311863, 0.4858821210973138, 0.38414359729035336`, 
      0.28051899604803654`, 0.1871113594032402, 0.11270818177132376`, 
      0.06055626368656484, 0.028606283409466124`, 0.011669526385289787`, 
      0.0040127512803204415`, 0.0011230333747432536`, 0.0002418101968527299, 
      0.000036056952459387146`, 2.8631029370918676`*^-6, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 0}, {
     0, 0.08001648735778161, 0.17146671566477326`, 0.27951278865794105`, 
      0.400160975998461, 0.5221101164587146, 0.6318997476890018, 
      0.7191943375863243, 0.779366395806248, 0.8125433729742876, 
      0.820471079089684, 0.8036308392015284, 0.7605471410407054, 
      0.6897144434076881, 0.5928593607337704, 0.4773201159764996, 
      0.3556803548831181, 0.2424371597683605, 0.14937197685870324`, 
      0.08213951480085867, 0.03972949050046742, 0.016600079006994974`, 
      0.005849158608566922, 0.0016785290073361779`, 0.0003710841715508936, 
      0.00005694186083647759, 4.686452120390509*^-6, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0}, {
     0, 0.0966309055978254, 0.2052910787416941, 0.3307229913614575, 
      0.46731021951014123`, 0.6017142049242882, 0.7191943375863243, 
      0.8096028965852019, 0.869823111087694, 0.9020120417199833, 
      0.9095413576015311, 0.8934607667867531, 0.8515874312356876, 
      0.7806704275695459, 0.6803593258640702, 0.556579262354138, 
      0.4220131026305172, 0.2929302253035471, 0.183859140408853, 
      0.10300024378890131`, 0.050747802833029654`, 0.021595203687029545`, 
      0.007748936067079519, 0.0022646945591103533`, 0.0005101612423052801, 
      0.00007985231744451053, 6.731568001104987*^-6, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0}, {
     0, 0.10958522341005535`, 0.23130528183667387`, 0.36930560263761864`, 
      0.5166120723456677, 0.6584338083897079, 0.779366395806248, 
      0.869823111087694, 0.928224103402112, 0.9585369159398198, 
      0.9655114133480487, 0.9506783598233609, 0.9112743072076785, 
      0.8425384694368818, 0.7421859287858209, 0.6145970400365443, 
      0.47209976320039637`, 0.3320850954620854, 0.21121555975678333`, 
      0.11987168044038427`, 0.0598095814424361, 0.025764075461055774`, 
      0.009355355616690052, 0.0027662786482655797`, 0.0006305022884029904, 
      0.0000998898872905656, 8.540982645929639*^-6, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0}, {
     0, 0.11753353574305934`, 0.24708168138008507`, 0.39229515820857985`, 
      0.5453423639566866, 0.6906358609100466, 0.8125433729742876, 
      0.9020120417199833, 0.9585369159398198, 0.9872488655474934, 
      0.9937465242350604, 0.9798496967728949, 0.9424338208454065, 
      0.8757821319694261, 0.7763399753345683, 0.6474076005104628, 
      0.5009541377258124, 0.35495860508607385`, 0.2273591483235226, 
      0.12989796095919265`, 0.06521917592427964, 0.028258986977488038`, 
      0.01031750940811934, 0.00306649887264677, 0.0007023807885654169, 
      0.00011181577686750672`, 9.611273792548842*^-6, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0}, {
     0, 0.11971598065114858`, 0.2513281460009662, 0.3983101559102393, 
      0.5526227037308514, 0.6985436827355201, 0.820471079089684, 
      0.9095413576015311, 0.9655114133480487, 0.9937465242350604, 1, 
      0.9861442966221463, 0.9489869244686023, 0.8826138878197615, 
      0.7831963526249485, 0.6538086083497355, 0.5063740511781153, 
      0.3590456645164034, 0.2300641535448431, 0.13144746799944135`, 
      0.06597493370366854, 0.028566123476625, 0.010418198307775595`, 
      0.0030917767183976713`, 0.0007067737259392276, 0.00011223025526722241`, 
      9.611273792548842*^-6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {
     0, 0.1158463462718218, 0.24354860701908193`, 0.3867957680784122, 
      0.5380466813662231, 0.6821153412821058, 0.8036308392015284, 
      0.8934607667867531, 0.9506783598233609, 0.9798496967728949, 
      0.9861442966221463, 0.9712729068102802, 0.9323382299322285, 
      0.8640746052082792, 0.7634497415753416, 0.6342132958505633, 
      0.48857329139728645`, 0.344437190687026, 0.2193575022857083, 
      0.12452099316150754`, 0.062071265844756536`, 0.026680989439171313`, 
      0.009655229849445729, 0.0028413695042655736`, 0.0006435147755013607, 
      0.00010111286540131469`, 8.540982645929639*^-6, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0}, {
     0, 0.10611945168396343`, 0.22402549796165022`, 0.3579237530202471, 
      0.5014293031159391, 0.640585321925167, 0.7605471410407054, 
      0.8515874312356876, 0.9112743072076785, 0.9424338208454065, 
      0.9489869244686023, 0.9323382299322285, 0.8902939101820985, 
      0.8190400405307457, 0.7172325887880248, 0.5899077714020119, 
      0.4496022554541219, 0.31341075782131556`, 0.1972620288033332, 
      0.11061141026000666`, 0.05443315471991516, 0.02308294247597757, 
      0.008233450346604108, 0.002385472912532513, 0.0005309844829376345, 
      0.00008179574084231908, 6.731568001104987*^-6, 0, 0, 0, 0, 0, 0, 0, 0, 
      0, 0, 0, 0, 0}, {
     0, 0.091399331367537, 0.19425560913803636`, 0.3133635508662406, 
      0.4439805260057435, 0.5740467874311863, 0.6897144434076881, 
      0.7806704275695459, 0.8425384694368818, 0.8757821319694261, 
      0.8826138878197615, 0.8640746052082792, 0.8190400405307457, 
      0.745739886869283, 0.6450132364729452, 0.5232894097913479, 
      0.3930453335746724, 0.2698192032501468, 0.16712527797332605`, 
      0.09214946048282102, 0.04454761985872354, 0.018534624621397884`, 
      0.006476027836662247, 0.0018345092662185977`, 0.0003991999194778167, 
      0.00006226426157445762, 9.372904240781018*^-6, 6.731568001104987*^-6, 
      8.540982645929639*^-6, 9.611273792548842*^-6, 9.611273792548842*^-6, 
      8.540982645929639*^-6, 6.731568001104987*^-6, 4.686452120390509*^-6, 
      2.8631029370918676`*^-6, 1.520050611832868*^-6, 6.91390291943485*^-7, 
      2.635703128378037*^-7, 7.856707862994148*^-8, 0}, {
     0, 0.07336736587011362, 0.1573725763237343, 0.2571875091388892, 
      0.3699062206776267, 0.4858821210973138, 0.5928593607337704, 
      0.6803593258640702, 0.7421859287858209, 0.7763399753345683, 
      0.7831963526249485, 0.7634497415753416, 0.7172325887880248, 
      0.6450132364729452, 0.5497745184583949, 0.43891534439585256`, 
      0.324117911613274, 0.21858457033589, 0.13289266286355103`, 
      0.07184295582309519, 0.034002489764631584`, 0.013824603266857019`, 
      0.004711326457484749, 0.0013054851060126658`, 0.00029342639567626547`, 
      0.00007741673800698234, 0.00006226426157445762, 0.00008179574084231908, 
      0.00010111286540131469`, 0.00011223025526722241`, 
      0.00011181577686750672`, 0.0000998898872905656, 0.00007985231744451053, 
      0.00005694186083647759, 0.000036056952459387146`, 
      0.000020150825031098993`, 9.85557293515666*^-6, 4.155753740210905*^-6, 
      1.3984939996129583`*^-6, 0}, {
     0, 0.05435713825478504, 0.11795105542991687`, 0.19589422695886716`, 
      0.28696444409529825`, 0.38414359729035336`, 0.4773201159764996, 
      0.556579262354138, 0.6145970400365443, 0.6474076005104628, 
      0.6538086083497355, 0.6342132958505633, 0.5899077714020119, 
      0.5232894097913479, 0.43891534439585256`, 0.3443653780053219, 
      0.24971450598858982`, 0.16526296633805643`, 0.09851494384689186, 
      0.052154674158581354`, 0.024133193977393923`, 0.00958161931579894, 
      0.0032085072366329083`, 0.0009334818478815728, 0.00033588523088605383`, 
      0.00029342639567626547`, 0.0003991999194778167, 0.0005309844829376345, 
      0.0006435147755013607, 0.0007067737259392276, 0.0007023807885654169, 
      0.0006305022884029904, 0.0005101612423052801, 0.0003710841715508936, 
      0.0002418101968527299, 0.00014052893107155932`, 0.0000723742139566501, 
      0.000032559976261499746`, 0.000011724876447465268`, 0}, {
     0, 0.03679999156290378, 0.08096976455172342, 0.1370609244826798, 
      0.20509409417623495`, 0.28051899604803654`, 0.3556803548831181, 
      0.4220131026305172, 0.47209976320039637`, 0.5009541377258124, 
      0.5063740511781153, 0.48857329139728645`, 0.4496022554541219, 
      0.3930453335746724, 0.324117911613274, 0.24971450598858982`, 
      0.17772108205425707`, 0.11539303676057223`, 0.06744760836708755, 
      0.034984120483093004`, 0.015863966555018073`, 0.006235075355124522, 
      0.0022268047701223233`, 0.0009983284462668485, 0.0009334818478815728, 
      0.0013054851060126658`, 0.0018345092662185977`, 0.002385472912532513, 
      0.0028413695042655736`, 0.0030917767183976713`, 0.00306649887264677, 
      0.0027662786482655797`, 0.0022646945591103533`, 0.0016785290073361779`, 
      0.0011230333747432536`, 0.0006757687848755167, 0.00036363868081265316`, 
      0.0001722700308380557, 0.00006520919286514144, 0}, {
     0, 0.022533143401304627`, 0.05039180828424838, 0.08718609647020271, 
      0.13361309807030605`, 0.1871113594032402, 0.2424371597683605, 
      0.2929302253035471, 0.3320850954620854, 0.35495860508607385`, 
      0.3590456645164034, 0.344437190687026, 0.31341075782131556`, 
      0.2698192032501468, 0.21858457033589, 0.16526296633805643`, 
      0.11539303676057223`, 0.07351300818384605, 0.04217064671818062, 
      0.021509791488733915`, 0.00972581629176412, 0.004131122516341105, 
      0.0022149085284995824`, 0.0022268047701223233`, 0.0032085072366329083`, 
      0.004711326457484749, 0.006476027836662247, 0.008233450346604108, 
      0.009655229849445729, 0.010418198307775595`, 0.01031750940811934, 
      0.009355355616690052, 0.007748936067079519, 0.005849158608566922, 
      0.0040127512803204415`, 0.002493332169912033, 0.001394951662045145, 
      0.0006903280057444999, 0.00027191472954738745`, 0}, {
     0, 0.012343740431447056`, 0.02812829375522232, 0.0498821658811416, 
      0.07847608609370633, 0.11270818177132376`, 0.14937197685870324`, 
      0.183859140408853, 0.21121555975678333`, 0.2273591483235226, 
      0.2300641535448431, 0.2193575022857083, 0.1972620288033332, 
      0.16712527797332605`, 0.13289266286355103`, 0.09851494384689186, 
      0.06744760836708755, 0.04217064671818062, 0.023822050853726375`, 
      0.012167892189016606`, 0.0059966957230522715`, 0.003760973441265679, 
      0.004131122516341105, 0.006235075355124522, 0.00958161931579894, 
      0.013824603266857019`, 0.018534624621397884`, 0.02308294247597757, 
      0.026680989439171313`, 0.028566123476625, 0.028258986977488038`, 
      0.025764075461055774`, 0.021595203687029545`, 0.016600079006994974`, 
      0.011669526385289787`, 0.007474409056287571, 0.004333275609655945, 
      0.0022280926772527705`, 0.0009073296839613142, 0}, {
     0, 0.005975913989555797, 0.013914321830500198`, 0.025364683422834742`, 
      0.04105596487565596, 0.06055626368656484, 0.08213951480085867, 
      0.10300024378890131`, 0.11987168044038427`, 0.12989796095919265`, 
      0.13144746799944135`, 0.12452099316150754`, 0.11061141026000666`, 
      0.09214946048282102, 0.07184295582309519, 0.052154674158581354`, 
      0.034984120483093004`, 0.021509791488733915`, 0.012167892189016606`, 
      0.006793672756685848, 0.004903320382813424, 0.0059966957230522715`, 
      0.00972581629176412, 0.015863966555018073`, 0.024133193977393923`, 
      0.034002489764631584`, 0.04454761985872354, 0.05443315471991516, 
      0.062071265844756536`, 0.06597493370366854, 0.06521917592427964, 
      0.0598095814424361, 0.050747802833029654`, 0.03972949050046742, 
      0.028606283409466124`, 0.01886197183443343, 0.011301413531708816`, 
      0.006012557971508344, 0.002519217502244492, 0}, {
     0, 0.002519217502244492, 0.006012557971508344, 0.011301413531708816`, 
      0.01886197183443343, 0.028606283409466124`, 0.03972949050046742, 
      0.050747802833029654`, 0.0598095814424361, 0.06521917592427964, 
      0.06597493370366854, 0.062071265844756536`, 0.05443315471991516, 
      0.04454761985872354, 0.034002489764631584`, 0.024133193977393923`, 
      0.015863966555018073`, 0.00972581629176412, 0.0059966957230522715`, 
      0.004903320382813424, 0.006793672756685848, 0.012167892189016606`, 
      0.021509791488733915`, 0.034984120483093004`, 0.052154674158581354`, 
      0.07184295582309519, 0.09214946048282102, 0.11061141026000666`, 
      0.12452099316150754`, 0.13144746799944135`, 0.12989796095919265`, 
      0.11987168044038427`, 0.10300024378890131`, 0.08213951480085867, 
      0.06055626368656484, 0.04105596487565596, 0.025364683422834742`, 
      0.013914321830500198`, 0.005975913989555797, 0}, {
     0, 0.0009073296839613142, 0.0022280926772527705`, 0.004333275609655945, 
      0.007474409056287571, 0.011669526385289787`, 0.016600079006994974`, 
      0.021595203687029545`, 0.025764075461055774`, 0.028258986977488038`, 
      0.028566123476625, 0.026680989439171313`, 0.02308294247597757, 
      0.018534624621397884`, 0.013824603266857019`, 0.00958161931579894, 
      0.006235075355124522, 0.004131122516341105, 0.003760973441265679, 
      0.0059966957230522715`, 0.012167892189016606`, 0.023822050853726375`, 
      0.04217064671818062, 0.06744760836708755, 0.09851494384689186, 
      0.13289266286355103`, 0.16712527797332605`, 0.1972620288033332, 
      0.2193575022857083, 0.2300641535448431, 0.2273591483235226, 
      0.21121555975678333`, 0.183859140408853, 0.14937197685870324`, 
      0.11270818177132376`, 0.07847608609370633, 0.0498821658811416, 
      0.02812829375522232, 0.012343740431447056`, 0}, {
     0, 0.00027191472954738745`, 0.0006903280057444999, 0.001394951662045145, 
      0.002493332169912033, 0.0040127512803204415`, 0.005849158608566922, 
      0.007748936067079519, 0.009355355616690052, 0.01031750940811934, 
      0.010418198307775595`, 0.009655229849445729, 0.008233450346604108, 
      0.006476027836662247, 0.004711326457484749, 0.0032085072366329083`, 
      0.0022268047701223233`, 0.0022149085284995824`, 0.004131122516341105, 
      0.00972581629176412, 0.021509791488733915`, 0.04217064671818062, 
      0.07351300818384605, 0.11539303676057223`, 0.16526296633805643`, 
      0.21858457033589, 0.2698192032501468, 0.31341075782131556`, 
      0.344437190687026, 0.3590456645164034, 0.35495860508607385`, 
      0.3320850954620854, 0.2929302253035471, 0.2424371597683605, 
      0.1871113594032402, 0.13361309807030605`, 0.08718609647020271, 
      0.05039180828424838, 0.022533143401304627`, 0}, {
     0, 0.00006520919286514144, 0.0001722700308380557, 
      0.00036363868081265316`, 0.0006757687848755167, 0.0011230333747432536`, 
      0.0016785290073361779`, 0.0022646945591103533`, 0.0027662786482655797`, 
      0.00306649887264677, 0.0030917767183976713`, 0.0028413695042655736`, 
      0.002385472912532513, 0.0018345092662185977`, 0.0013054851060126658`, 
      0.0009334818478815728, 0.0009983284462668485, 0.0022268047701223233`, 
      0.006235075355124522, 0.015863966555018073`, 0.034984120483093004`, 
      0.06744760836708755, 0.11539303676057223`, 0.17772108205425707`, 
      0.24971450598858982`, 0.324117911613274, 0.3930453335746724, 
      0.4496022554541219, 0.48857329139728645`, 0.5063740511781153, 
      0.5009541377258124, 0.47209976320039637`, 0.4220131026305172, 
      0.3556803548831181, 0.28051899604803654`, 0.20509409417623495`, 
      0.1370609244826798, 0.08096976455172342, 0.03679999156290378, 0}, {
     0, 0.000011724876447465268`, 0.000032559976261499746`, 
      0.0000723742139566501, 0.00014052893107155932`, 0.0002418101968527299, 
      0.0003710841715508936, 0.0005101612423052801, 0.0006305022884029904, 
      0.0007023807885654169, 0.0007067737259392276, 0.0006435147755013607, 
      0.0005309844829376345, 0.0003991999194778167, 0.00029342639567626547`, 
      0.00033588523088605383`, 0.0009334818478815728, 0.0032085072366329083`, 
      0.00958161931579894, 0.024133193977393923`, 0.052154674158581354`, 
      0.09851494384689186, 0.16526296633805643`, 0.24971450598858982`, 
      0.3443653780053219, 0.43891534439585256`, 0.5232894097913479, 
      0.5899077714020119, 0.6342132958505633, 0.6538086083497355, 
      0.6474076005104628, 0.6145970400365443, 0.556579262354138, 
      0.4773201159764996, 0.38414359729035336`, 0.28696444409529825`, 
      0.19589422695886716`, 0.11795105542991687`, 0.05435713825478504, 0}, {
     0, 1.3984939996129583`*^-6, 4.155753740210905*^-6, 9.85557293515666*^-6, 
      0.000020150825031098993`, 0.000036056952459387146`, 
      0.00005694186083647759, 0.00007985231744451053, 0.0000998898872905656, 
      0.00011181577686750672`, 0.00011223025526722241`, 
      0.00010111286540131469`, 0.00008179574084231908, 0.00006226426157445762,
       0.00007741673800698234, 0.00029342639567626547`, 
      0.0013054851060126658`, 0.004711326457484749, 0.013824603266857019`, 
      0.034002489764631584`, 0.07184295582309519, 0.13289266286355103`, 
      0.21858457033589, 0.324117911613274, 0.43891534439585256`, 
      0.5497745184583949, 0.6450132364729452, 0.7172325887880248, 
      0.7634497415753416, 0.7831963526249485, 0.7763399753345683, 
      0.7421859287858209, 0.6803593258640702, 0.5928593607337704, 
      0.4858821210973138, 0.3699062206776267, 0.2571875091388892, 
      0.1573725763237343, 0.07336736587011362, 0}, {
     0, 7.856707862994148*^-8, 2.635703128378037*^-7, 6.91390291943485*^-7, 
      1.520050611832868*^-6, 2.8631029370918676`*^-6, 4.686452120390509*^-6, 
      6.731568001104987*^-6, 8.540982645929639*^-6, 9.611273792548842*^-6, 
      9.611273792548842*^-6, 8.540982645929639*^-6, 6.731568001104987*^-6, 
      9.372904240781018*^-6, 0.00006226426157445762, 0.0003991999194778167, 
      0.0018345092662185977`, 0.006476027836662247, 0.018534624621397884`, 
      0.04454761985872354, 0.09214946048282102, 0.16712527797332605`, 
      0.2698192032501468, 0.3930453335746724, 0.5232894097913479, 
      0.6450132364729452, 0.745739886869283, 0.8190400405307457, 
      0.8640746052082792, 0.8826138878197615, 0.8757821319694261, 
      0.8425384694368818, 0.7806704275695459, 0.6897144434076881, 
      0.5740467874311863, 0.4439805260057435, 0.3133635508662406, 
      0.19425560913803636`, 0.091399331367537, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6.731568001104987*^-6, 
      0.00008179574084231908, 0.0005309844829376345, 0.002385472912532513, 
      0.008233450346604108, 0.02308294247597757, 0.05443315471991516, 
      0.11061141026000666`, 0.1972620288033332, 0.31341075782131556`, 
      0.4496022554541219, 0.5899077714020119, 0.7172325887880248, 
      0.8190400405307457, 0.8902939101820985, 0.9323382299322285, 
      0.9489869244686023, 0.9424338208454065, 0.9112743072076785, 
      0.8515874312356876, 0.7605471410407054, 0.640585321925167, 
      0.5014293031159391, 0.3579237530202471, 0.22402549796165022`, 
      0.10611945168396343`, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8.540982645929639*^-6, 
      0.00010111286540131469`, 0.0006435147755013607, 0.0028413695042655736`, 
      0.009655229849445729, 0.026680989439171313`, 0.062071265844756536`, 
      0.12452099316150754`, 0.2193575022857083, 0.344437190687026, 
      0.48857329139728645`, 0.6342132958505633, 0.7634497415753416, 
      0.8640746052082792, 0.9323382299322285, 0.9712729068102802, 
      0.9861442966221463, 0.9798496967728949, 0.9506783598233609, 
      0.8934607667867531, 0.8036308392015284, 0.6821153412821058, 
      0.5380466813662231, 0.3867957680784122, 0.24354860701908193`, 
      0.1158463462718218, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9.611273792548842*^-6, 
      0.00011223025526722241`, 0.0007067737259392276, 0.0030917767183976713`, 
      0.010418198307775595`, 0.028566123476625, 0.06597493370366854, 
      0.13144746799944135`, 0.2300641535448431, 0.3590456645164034, 
      0.5063740511781153, 0.6538086083497355, 0.7831963526249485, 
      0.8826138878197615, 0.9489869244686023, 0.9861442966221463, 1, 
      0.9937465242350604, 0.9655114133480487, 0.9095413576015311, 
      0.820471079089684, 0.6985436827355201, 0.5526227037308514, 
      0.3983101559102393, 0.2513281460009662, 0.11971598065114858`, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9.611273792548842*^-6, 
      0.00011181577686750672`, 0.0007023807885654169, 0.00306649887264677, 
      0.01031750940811934, 0.028258986977488038`, 0.06521917592427964, 
      0.12989796095919265`, 0.2273591483235226, 0.35495860508607385`, 
      0.5009541377258124, 0.6474076005104628, 0.7763399753345683, 
      0.8757821319694261, 0.9424338208454065, 0.9798496967728949, 
      0.9937465242350604, 0.9872488655474934, 0.9585369159398198, 
      0.9020120417199833, 0.8125433729742876, 0.6906358609100466, 
      0.5453423639566866, 0.39229515820857985`, 0.24708168138008507`, 
      0.11753353574305934`, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8.540982645929639*^-6, 
      0.0000998898872905656, 0.0006305022884029904, 0.0027662786482655797`, 
      0.009355355616690052, 0.025764075461055774`, 0.0598095814424361, 
      0.11987168044038427`, 0.21121555975678333`, 0.3320850954620854, 
      0.47209976320039637`, 0.6145970400365443, 0.7421859287858209, 
      0.8425384694368818, 0.9112743072076785, 0.9506783598233609, 
      0.9655114133480487, 0.9585369159398198, 0.928224103402112, 
      0.869823111087694, 0.779366395806248, 0.6584338083897079, 
      0.5166120723456677, 0.36930560263761864`, 0.23130528183667387`, 
      0.10958522341005535`, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6.731568001104987*^-6, 
      0.00007985231744451053, 0.0005101612423052801, 0.0022646945591103533`, 
      0.007748936067079519, 0.021595203687029545`, 0.050747802833029654`, 
      0.10300024378890131`, 0.183859140408853, 0.2929302253035471, 
      0.4220131026305172, 0.556579262354138, 0.6803593258640702, 
      0.7806704275695459, 0.8515874312356876, 0.8934607667867531, 
      0.9095413576015311, 0.9020120417199833, 0.869823111087694, 
      0.8096028965852019, 0.7191943375863243, 0.6017142049242882, 
      0.46731021951014123`, 0.3307229913614575, 0.2052910787416941, 
      0.0966309055978254, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4.686452120390509*^-6, 
      0.00005694186083647759, 0.0003710841715508936, 0.0016785290073361779`, 
      0.005849158608566922, 0.016600079006994974`, 0.03972949050046742, 
      0.08213951480085867, 0.14937197685870324`, 0.2424371597683605, 
      0.3556803548831181, 0.4773201159764996, 0.5928593607337704, 
      0.6897144434076881, 0.7605471410407054, 0.8036308392015284, 
      0.820471079089684, 0.8125433729742876, 0.779366395806248, 
      0.7191943375863243, 0.6318997476890018, 0.5221101164587146, 
      0.400160975998461, 0.27951278865794105`, 0.17146671566477326`, 
      0.08001648735778161, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.8631029370918676`*^-6, 
      0.000036056952459387146`, 0.0002418101968527299, 0.0011230333747432536`,
       0.0040127512803204415`, 0.011669526385289787`, 0.028606283409466124`, 
      0.06055626368656484, 0.11270818177132376`, 0.1871113594032402, 
      0.28051899604803654`, 0.38414359729035336`, 0.4858821210973138, 
      0.5740467874311863, 0.640585321925167, 0.6821153412821058, 
      0.6985436827355201, 0.6906358609100466, 0.6584338083897079, 
      0.6017142049242882, 0.5221101164587146, 0.42524690876294846`, 
      0.32095792058537354`, 0.22076304004628008`, 0.13353657966531135`, 
      0.06167163484402465, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.520050611832868*^-6, 
      0.000020150825031098993`, 0.00014052893107155932`, 
      0.0006757687848755167, 0.002493332169912033, 0.007474409056287571, 
      0.01886197183443343, 0.04105596487565596, 0.07847608609370633, 
      0.13361309807030605`, 0.20509409417623495`, 0.28696444409529825`, 
      0.3699062206776267, 0.4439805260057435, 0.5014293031159391, 
      0.5380466813662231, 0.5526227037308514, 0.5453423639566866, 
      0.5166120723456677, 0.46731021951014123`, 0.400160975998461, 
      0.32095792058537354`, 0.23825132788213418`, 0.16112485490947176`, 
      0.09594500314220433, 0.04379193768161786, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6.91390291943485*^-7, 
      9.85557293515666*^-6, 0.0000723742139566501, 0.00036363868081265316`, 
      0.001394951662045145, 0.004333275609655945, 0.011301413531708816`, 
      0.025364683422834742`, 0.0498821658811416, 0.08718609647020271, 
      0.1370609244826798, 0.19589422695886716`, 0.2571875091388892, 
      0.3133635508662406, 0.3579237530202471, 0.3867957680784122, 
      0.3983101559102393, 0.39229515820857985`, 0.36930560263761864`, 
      0.3307229913614575, 0.27951278865794105`, 0.22076304004628008`, 
      0.16112485490947176`, 0.10707334466591398`, 0.06271387398581846, 
      0.028265665772130667`, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.635703128378037*^-7, 
      4.155753740210905*^-6, 0.000032559976261499746`, 0.0001722700308380557, 
      0.0006903280057444999, 0.0022280926772527705`, 0.006012557971508344, 
      0.013914321830500198`, 0.02812829375522232, 0.05039180828424838, 
      0.08096976455172342, 0.11795105542991687`, 0.1573725763237343, 
      0.19425560913803636`, 0.22402549796165022`, 0.24354860701908193`, 
      0.2513281460009662, 0.24708168138008507`, 0.23130528183667387`, 
      0.2052910787416941, 0.17146671566477326`, 0.13353657966531135`, 
      0.09594500314220433, 0.06271387398581846, 0.036153085654401035`, 
      0.016094623191500772`, 0}, {
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7.856707862994148*^-8, 
      1.3984939996129583`*^-6, 0.000011724876447465268`, 
      0.00006520919286514144, 0.00027191472954738745`, 0.0009073296839613142, 
      0.002519217502244492, 0.005975913989555797, 0.012343740431447056`, 
      0.022533143401304627`, 0.03679999156290378, 0.05435713825478504, 
      0.07336736587011362, 0.091399331367537, 0.10611945168396343`, 
      0.1158463462718218, 0.11971598065114858`, 0.11753353574305934`, 
      0.10958522341005535`, 0.0966309055978254, 0.08001648735778161, 
      0.06167163484402465, 0.04379193768161786, 0.028265665772130667`, 
      0.016094623191500772`, 0.007095468176873683, 0}, {0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0}}]],
  Frame->True]], "Output",
 CellChangeTimes->{
  3.6507518595551987`*^9, 3.6507519057764*^9, {3.6507520688444967`*^9, 
   3.650752100890394*^9}, 3.650752291594672*^9, {3.650752346720133*^9, 
   3.650752356763973*^9}, {3.6507524358611717`*^9, 3.6507524475493717`*^9}, 
   3.65075262959696*^9, {3.650752878093135*^9, 3.650752903029276*^9}, 
   3.650752965501766*^9, {3.650753382044529*^9, 3.650753453493132*^9}, 
   3.6507534843548937`*^9, 3.650753550097364*^9, {3.650753609089509*^9, 
   3.6507536255189657`*^9}, {3.650753704641427*^9, 3.65075372616451*^9}, {
   3.650753774032262*^9, 3.650753776226058*^9}, {3.650753813087335*^9, 
   3.6507538167791977`*^9}, {3.6507538846849213`*^9, 3.650753886947035*^9}, {
   3.650753939122637*^9, 3.650753978247518*^9}, {3.650754012375848*^9, 
   3.650754028809222*^9}, {3.6507540705450687`*^9, 3.650754111746582*^9}, {
   3.650754165883486*^9, 3.6507542490321503`*^9}, 3.6508161144747877`*^9, 
   3.650816186348418*^9, {3.6508162304537354`*^9, 3.650816243762968*^9}, 
   3.650816293779784*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.650752879338224*^9, 3.6507534904071627`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics", "Section",
 CellChangeTimes->{{3.4918227736578217`*^9, 3.491822775548459*^9}, {
   3.492095476578125*^9, 3.4920954891875*^9}, 3.492095672484375*^9}],

Cell[TextData[{
 "A picture is worth a thousand words. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has a powerful suite of graphics display functions, both in 2D and 3D. In \
general, these functions fall into two classes, ones for plotting graphs and \
ones for displaying general geometry (e.g., points, lines and polygons). We \
will discuss some commonly used functions in both classes."
}], "Text",
 CellChangeTimes->{{3.492095511125*^9, 3.4920955363125*^9}, {
  3.492095583859375*^9, 3.4920955869375*^9}, {3.492095691359375*^9, 
  3.492095803640625*^9}, {3.492097287515625*^9, 3.4920973260625*^9}}],

Cell[CellGroupData[{

Cell["Plotting graphs", "Subsection",
 CellChangeTimes->{{3.492095597859375*^9, 3.49209565540625*^9}}],

Cell[TextData[{
 "The function ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["Plot",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Plot"], "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      SubscriptBox["x", "min"], ",", 
      SubscriptBox["x", "max"]}], "}"}]}], "]"}]], "InlineFormula"],
 " is a simple way to display the graph of a function ",
 Cell[BoxData["f"]],
 " with a single variable ",
 Cell[BoxData["x"]],
 " varying over the domain ",
 Cell[BoxData[
  RowBox[{"[", 
   RowBox[{
    SubscriptBox["x", "min"], ",", 
    SubscriptBox["x", "max"]}], "]"}]]],
 ". For example,"
}], "Text",
 CellChangeTimes->{{3.492096952125*^9, 3.492096955515625*^9}, {
  3.49209698578125*^9, 3.492097091328125*^9}, {3.492097394921875*^9, 
  3.49209745053125*^9}, {3.49212617447075*^9, 3.49212619459575*^9}, {
  3.49212663172075*^9, 3.492126633392625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", ".001"}]]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.391442586820806*^9, {3.391442695709552*^9, 3.3914427659319267`*^9}, {
   3.391444206061451*^9, 3.3914442147741528`*^9}, {3.4920959454375*^9, 
   3.492095952828125*^9}, 3.4920964925625*^9, {3.49212608265825*^9, 
   3.492126106048875*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 1}, {0., 75.12389841725523}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.49209583159375*^9, {3.492095945875*^9, 3.492095953171875*^9}, 
   3.492096493046875*^9, {3.492126087767625*^9, 3.492126106517625*^9}}]
}, Open  ]],

Cell[TextData[{
 "Note that in this particular plot, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has detected that the range of output values of ",
 Cell[BoxData[
  RowBox[{"g", "[", "x", "]"}]]],
 " is widely varying and automatically restricts the range (the ",
 Cell[BoxData["y"]],
 " coordinates) to values from ",
 Cell[BoxData["0"]],
 " to ",
 Cell[BoxData["70"]],
 ".  If you are unhappy with this choice, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " provides a number of options that allow you to control the style of the \
output.  These options have the form ",
 Cell[BoxData[
  RowBox[{"Option", "\[Rule]", "Value"}]]],
 ".  In our previous example, we can add ",
 Cell[BoxData[
  RowBox[{"PlotRange", "\[Rule]", "All"}]]],
 " and force ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to plot the entire range of values for ",
 Cell[BoxData[
  RowBox[{"g", "[", "x", "]"}]]],
 "."
}], "Text",
 CellChangeTimes->{3.492126051502*^9, 3.492126210752*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3926529229395733`*^9, 3.3926529347266397`*^9}},
 Magnification->1.5],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1mnc0EH7UxrOlQiQjZI/IDCG+l1Qos0jIKpIVUsimSEYosnciQijbl5C9
996zMkJZ8f7ec973n3vP59zn3H/vc8952M0eaZsTHjly5OJ/5X+7EDq9fHi4
ik8q87N0/V1Fj3Y4X+7sruLvpOdCfh1ZQ/mFojwbW6u49Knk0ibJGhLjUzOb
/7GKD6M/YArqNSR18vlw68AqnrnSTXWTaw3BzHpzTN4qvudjGXZbbQ1pB7Rl
ixuvYgsp1R8yKWvIueO57YOqFTzD5blTr7mOenuPLdeY/sJ0/6J9yjd/I5bq
R6ekmH/i0p/39Tm/bKIv1nUkVGPL2IYioXIq+w8yCRZdG/Jdwmw0vlSvOHbQ
doTbS4wW8Z2vP3jfde6hBeaa5asyi3jmcekmx9ge6s8gVWu/sIgbaeRQ8dIe
KiwLPznGv4hJyehtdgj3kd30h9hd2kX8SqX336zEPpoR7c2RWFzAkRp2s8YJ
+6i9U7ArO2wBD03vfWF5/A+lUY4zRk/NY/WnWQopsocowgCRSY/O47vE2WQq
qofINzN5c6h/HqffJjm7p3eIzBTvdZxpncf7B68tPZ8eIo6ni8+Tvs7j0rdU
roQFhyh17PdqRtA8FqqVS3tOdwSSc8i+f5GYx8sCQ5M5EUcgXlXUsSdwDruN
rR4rTSQArmOqzZ3P5/BiOe3sUgYBZLeYcbR7zeGJb2GObHkEUHbjbXfjkzls
9nq0IRETwJD6X7Eq0zkc2Eu4PDlJAKdvVm5kSs9hmebnPV5chPDaQOWJ59Is
nrUPa9bIJwRfG1MXfpVZ/G/UrTZohAjGQ43iyy7PYsOc45cF54lA5rNB9XX5
WUz19odq3xoR/N7SIbcTn8VmlgIMCqTEYOqlGl3AMotVA15le4sSA0SIl8j+
nsGbfV+3PgQSw0ExybZa3AzmJmCtHwEScCP66Oz4axo/k7UWEmwjBbsYI1KT
xWlMSusSZDJECmbCtJFqM9P4oE/6S+IcKagauBfwDU3jzzrT0RcPSIGhUP3X
eN00nuOmaJ4RJoMisw2z6/HTOLSXWY09kgxWai6pc12fxk3/CL4EPCAHU+8O
rv7MKSwUUqSbK0QBukNJ8mNpU5iKaifJQo4CVMXs9WYTpzBfJNVNgRsUcGGW
Ovj32yksPhQrNPyQAsiVtTcoff5jhb6rHe8pIJeqr+banSlM7GIcx8l2DPYS
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.492126121892625*^9}]
}, Open  ]],

Cell[TextData[{
 "Spend a couple of minutes browsing ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s tutorial on ",
 ButtonBox["Options & Styling ",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/GraphicsOptionsAndStyling"],
 "to get a better feel for ",
 StyleBox["Mathematica'",
  FontSlant->"Italic"],
 "s capabilities."
}], "Text",
 CellChangeTimes->{3.492126234986375*^9}],

Cell[TextData[{
 "For functions of two variables, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " provides three functions that provide reasonable visualizations.  As a \
test function, let's consider the function "
}], "Text",
 CellChangeTimes->{3.492126494002*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], 
   RowBox[{"Sin", "[", "y", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.3926531760460463`*^9, 3.3926531839775305`*^9}, 
   3.49212665903325*^9},
 Magnification->1.5],

Cell[TextData[{
 "The simplest way to visualize ",
 Cell[BoxData[
  RowBox[{"h", "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 " is as a height surface drawn in 3D using the function ",
 Cell[BoxData[
  ButtonBox["Plot3D",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot3D"]]],
 "."
}], "Text",
 CellChangeTimes->{{3.3926531957045097`*^9, 3.392653231957*^9}, 
   3.392743768939888*^9, 3.492126469423875*^9},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3926532348912487`*^9, 3.392653251164811*^9}, 
   3.4921266614395*^9},
 Magnification->1.5],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
1X2NHL8jj5zXa5Lnenz2vG3sd9UjnvMX/OHVLaeclPXtiG87zBh6JHF/87E1
Kz7/h3E+e0l+w7f3rd5dtrTl+80bMyWST4Ij/7raxffWUz5aX7VmqazRZ+3v
m5IH5/+Q5zvyK8fu256yB5zP5Ron+BPnAYT1Y+L8pg1G9l+Vx3Y++u7uqiPb
5Ty35v9+Detrt5f/e6nuqp+TVdbbf6Jf66Bk363nLvvknxweul34+YJIv/0n
+leG/Su3C/0Vuwy4am6V9faHrOMqhPVgEjl4aHHBVZ1T+rEfuyaG9bv5xK68
Bc7smdKPHPr7hPVdAjn0r3+rYN5n2+Xsa/N/g8P+mPnn/2rW+Gx+pD9x48Nb
Dx6uvMrxQoXx33Z8tOqXiSL5/i54uPIfjkuLt3pzQL9tY+qBI3/vyeXHFxmy
LNFv44AF/Vfttny/MzdOee+Sl+uBI1+y5epfviy2KtFN627kx9cd1yN1Lhoc
+b9u6PVU6lz6be8NbvNwj6OWr1m5zS0p/eDI7276+6iUfvhHvlzeob89GNlf
8eprdn3yT07dhis+7vDZlj1P1CsbqyeQEf3NHTcjs/hZ186s0yinnkDvcc3X
PlL1y2ShEo3KPdyjmPWUDvrngCN/drsahSJ+koMGvTGnfeOceg41gv1zwJHf
Fez3vlmMnzngyO8L/CQf6vNm5fH3lLJ8/8D/HHDkywb+kw9qHCBfKvTvnAfu
emvo6mdz6kVsP3RX5617npjDOMEv9i5dcl3Fo0s9TsD3Pn9Ny5adf/N4AL9v
YaWlWzI2ud/BC077+tJUfgf8ux5C9Jf1YdL8g/c5f+9TFY4uNf+uP3HVnEUt
Ov9mnr3Psa7t8Oi65jN23STtYh+lxsW3FLhi+gq3C7zoXec2/de7G9wu8H9f
+vvMdtO2JhhX4N3K172tVqSHdoGn2pXR+XO3C7x1kHe7wJdP6Dypz7sb3C7w
mxZ36hBdN0l/gTcI9rtd+L1JbSb+cnlau8Dnj2z90do/c9rl54qFxj2R3i7w
zxo/eWl6u8Dj7XLefZB3u8Ard21UIrqu2wW++/9KX5zeLvDZwX63Cz86Ju/Z
Vx4uvsztAr+mZbXWHcfkjEPwPZuONk4fh+Ctnmr5Wir/C78BXmBiu67RuDIP
4KetWF82GofmAfwYD2Vyxi34WTNnrvm7+DLzAH5Oi0Xf3zEmZ9yCl8y4KiN9
3Mbs9P3rfPyDazenxj+8gR/9NKNXdJ+aN9bT7a/+s3T/ND8PftmHBe4pnObP
wWvcl+eWL9L8tvPTS12wbmiafwZf1qNIoZQ8/IDH/Sp4tRvvG/twml8F/61U
hZWF0vwn+JKg3/zE7LE/BK8V7DcPPGfb0KTZf3pvHJ4JD+Dzr114wbInxmXC
A3jvUV3v6r76tUx4cD74w5dPTeWVwwP4D29cnyclz7gC/+DmSfcvjfTDD/gx
v9fhwdrwA37lrmem379xeDb8gE8LerLhB3xJuG42/MTszIYf8AdDu7IZV+CL
Ag/Z8OY87DB+kvAGXiOMnyS8gVcT//AGXlj9BW/gi9W/8AOu8ZMNP+BVw/hJ
wI+fl4bxk4Af5zdrfMJPzJ4E/LhdGv/wQJy+Q/cXPIC30f0ID+C7gv8xD+At
dF/TXnDNg24veB75H9prXP6K9oIXD/7E7Y1d1+3iuYHmC7cLvO7l68+J5kG3
C7x/mC+S+EnwufL/tAtc84Xb5bxpzS+0C7ziA5UHRfOg2wW+K8wXCfwe+CzN
d7SL+PlSzY+0C3xQ/jxrUvMR7QJ/KMzvbhd4D83XtAs83i7wWxQP0C7wOWt2
X5Gaf2kXeOswv7td4NcoPqFdxPvF3nh1cjQPul3gJYd+MieaB90u7w+FeMzj
0PKKi/BX4C8rvoIH8KcUj8EDuOZB8+BzcDfUuvFQNF/Dg8+3PHZ7ndR8DQ8+
hx7iN4/bmJ0J/BX4UcWf8Ab+pOJVeGMf+PKw3jFv4EPDusa8gddQ/Axv4KVv
DHE4fgy8xHUhnocf8LgfA386rC/MD3jtsI4wP+DFgn7zA14m2GM/5vZq/QUP
7G9vObr9WJwPD+BXJCo/lloXwAN4RsdhU1PrC3gA3/t443tS6xR4AP+4y4Fj
6x3GFXjdnRnrUusm+LH+Y+Onzyfw47pT2ZuOrdfgB7x20FMPfsA/CtetBz/g
+4Kd9eAH/OTQrnqMK/CrAw/14I3PNp9+Pr7m2587juI52+FymYX3v7DIcdTC
vpdlfrhnSeLZrFkzxvz5veOoEjpPdMdvhxsPK/mt46VhaevQjnOnOl5qquve
WXtr80vf/tzxUn5d96vlBWvte2GR46XvdN2TSr41Jrqu4yXOMa18asiD0XUd
F13UqNuBEdu2JNbNqfDJOwNz1nd8Prbv4ukZGWvdri2fP31GjzabErfVKv1O
tzHrbX+TtHVcxrTZOesd6b/ovmZ9Jg/MWccV4DqHZtWJ9Nt+9K8ZNbNnpN92
jrtg26xT3/or0W7Ih4fS1zUFC1wx79rknsRXI16/LKN6zrrG9k7aedNfpf+0
neenrcvmjpuXE7dLf3xdll/6J2UPH3v0kpz1C/pXLqiTEem3neWqTerXZtmh
RJFbjl9/DS+y47ER2/5OzH1netPNF220fQe3XDnsiwJ/J37staLJeXW2ed3x
Ubd2kyf02vc/68q3T7D+Ol3Xja+/hum6u/Y0fH3TRRttP9etsej2befW2eZ1
xCe67s/Vjl9X3jBuWrnFA0/KGl7wtZdHP5qz/mIfa8L+Ai9O/GKd2zWn34Gz
87+ckVW57uVluo35w+266r5Sd29+9Z//WVeOTVtPzX0yp1+a67pzhlxx2XOP
5qyn8um6a+v1LhBd1+3iursPlv7y7jF/uF11dd1Lph5dmr6ufLbcMwd3l82X
9cdVb6+sMOSrnH0wPTfo9cbovg9fv8LtOnLwh5MurHlyVoNSTQ5M/Xmt7V+e
tt7JeGWm7R8p/eWqTrjozCFf5ewjSf/Jl++c89D1K2w/+q/pOuazSL/t/H58
t5VlphXUc+3RtpPnFRuO5cnOsJ1Z/Wesbf5NgaxB1WsdKZf43P5nv57r9TtW
F+Vbr+Omtft789D1+bO+v2XRkdGRv6JdZdPWKR1fesbtwp4Wx57vj3a7npQ9
rY/lHc9wu7CnY80eH0f22C/xnHHasXo433odhz2NBq0r/3zkx+ChhK5/j/wh
PPB8ZviCNc/9FflDeBh4ZESyd8ciWVnSAw88l5yg69LOtmnrjsgPe77ms993
pY5Wj/w/7eW6Zf8z+ZM9kf+nvYN03W/EJ+3lut3FP+1qNbHyCx1+LpbVuk/n
hpEfdrsK6zrF5Cdp17yBPV4du//UrIUjquVP+UnsX5i2joj8sO1vKf1NL3zu
8NsDc9YRjjvyPzP86NFfbT/6221dtODuMTn7xt+UeKxO/dklss7UfYSdbzV9
7vCigSWyZidLH0n5SexEH34SO7emrQsiP2w70R9fF7wp/c12/nNHpD+HZ32u
2TF06p7Iz2PnH622VV32+GlZC6sdH/9/Ofzonx2bnZZ1U+akDpEftp0T55V4
b3vJKN5esrl15Icd9xZ//baPzru45P+sa4qeIP7nuvH4/wtdN//jdWZGftj2
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
PpLwwTpHDQ+sLw71HPx1VtSP8fULdWWxH7zFOQ1HRvK+74jnDysu5b4AH654
GzuJW1pKDzjnxslPgU/w85TPwvgBr6b8F9qL/n/ULu9/Sn6v8nTg2e9JVl4P
4wf8deUBwRvzck2tH08U54DH6x3RXvA9ykuiveDnxvKY0K91rtuF/CDlVdEu
vz9NeVjYE69HhD0+T678L/SDD1A+Gjy4Dqvu07hfpS4f9vv9CPIbjB/8TyXt
PzN+XC9I++r4vapp++Qd803OxK9y7uv06zZO61V2huUPpq1nd17wgtetyN9U
bOmw+8vOsF+tnba+i/R7Hcp5hsGLNw3pE8mDt+haJP8ls6YmZg86dk7Dfp59
+NuDvMfVKMnvD/L2V09KvqP0Y8/KtPN+qfO64PvT2pXigftiqc7LHW117Lyc
/W09tbdfaK/tWSz5jeG8n+2pL/nygU+3t+OnZ33/65hCWSMlD856tqTkuW4H
yf8e7DG+W/K9Yvyfcfw5wGzwK9P6JepHz3fYc3k4H+h9FexpFmtvJ8kv1PlG
cPYTSsXGzw1p53xS5/Rym39T4wQ9nJPpFM7tWD/j53GNB5+/lV+tFdaznkfY
5/ldeUboQb5PWPd5vnC9Z+VJoZ/7bl6IW+xniE8ylUeMfuQ7hfjK/gT5p5SX
jX6fYw/n533e3u+tCOftr/a6+64w/kfMCOeIwKdp/Cc6LWv/QBr/AxeVnIye
1LlQ8EJpfiD9vua654X86zngvXTf/Ryu67juWV23XLiuxzNxyOXiAXnXuRef
yDPvtFW/IA9eTv1Le6/XONkve8BP0jjpInvoL84/rwv7G57379M+p/ZbjB/V
+V7tz3hcsf/5TFgXW568zlLK56LfF2u/uqPqGPi5j+z5v7DP4PmCfdclOi8K
znnja8M+ifW4Xk1Y51oee/Yrrw37OX9YMTyP8/zFOuJPnecH53zd9PA80XpY
X3wc1imWJ6/nD+V3YyfrwdWqhwDOucR+4bmY52Xs6ab8BXDsWROe61kP9uQL
6zjLO79Jee65+Z90f4ifydJ95PxrPU9cqOsy//J8s4fsBydePbwl2ON8aul5
U3z6fLL0lFG/gKNnmnjGHvbN6ms8cF328V7VuAIn/pmicYI96Gmgcc512Qf7
VfcLOHqe1PhnPBAnnxfiLuP4W+1b5pz/4X25Ib7yOPla90uX2P3iumJh38/j
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
PtdI/VHp4bvfiyvenF+q3/8U/v8hyuBD
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHn8F9P7/mefITsRIllKimypUGT5VCglJFGSKEu2spaUsktkKUsSyRoJ
RUiUihIha5EolH2P+F3P93W+j98f87jvOXOfM/OaOedervs+r/qnnntM/ySK
ogZFFKWiTfMo2imOosZZFB0q/nPxv4h/XNff0PVdROeWUTRInb4WfaKKovvV
MRH9VXLbS34X5HU+Xu2x6Dz12VN935X8Xuq3m2RW6ryhxq8nvgH3ktxbamsk
2cfE36m+/0n+EPFz1b6j2t/U+ZXqv1r0Up3XUfs00Yt1bCr+KdE7JP+0+tYS
vUTn74t/VvweuseXknlP5410voX4kbr/Phprpp7hOtHddUwXP0L0SfV9RzJN
RMdIfob6bSg6WccD4lPRJ3U8KD4TfU99dpX8HRrzIZ33VfuPattN/LZqv0Xt
++kZvhb/Yerxd9C9npJMWx0fi39YdJLk++n6T+Ivk0w9yd+qvs3V9xvxH+na
n+L3k3wr0YmS76O2HyTfWudrJLNU54PU93PRabr+qI6fxV+vtn8k00p924k+
rfatRCeo/QodDdX3GY3zmvhG4u/UfQ/T+/5S8vV5VsnXlvx4XV8suaaSGSuZ
wTpvIP528UPEr9S9XpDs2allPtYY7dXvR/Ffqm1Pne+i8b7Q+Rz16SJ6tfrF
3E/tXST7MO9L7V+p/RF+P99O/CyN20vXPxY/Ife8mi9+fO57LRN/oe7RWvwK
3Wdx4b4f6HmXlB7zXsmel5r/TDIn6Z5H62ir81c1fm+N/6n6XSKZw9X2tWT6
qq2tZLqKDhK9QW1n6lq/xHyittNFr9exVu1ni96o4zLmvcZqIXqS7n9OaK8l
+XNFb9KxsfgzNW570RNFt5DcUMnfo/uXahup4wKd9w/yXLuc+SP6tGR7qs9B
kjlS9EIdncWfKnqIrr0n/sHS67eu+CeZ27nfz+dqm5b7N64Sf6n6nCCZs0Uv
19FNfH/RWbp2qOhLejfP8Y0k/7PaThF/gZ7nZNHekj1eR0ddO1P0ZB3H8R5E
e3JN/JUa4xTxA0VPV5+L1Le36FSNuz3fXGPO1HGw+BfVdi66h/em43W1d1T7
K2qfqT5HMZ7anhLfSvx34jcQf6H6DJfcq+I7qf1/kh8m/lfx3+p9ns934vlY
k7r/rToO1fnbei/11TZaso+oz2rJDteY4zTWerqei96u82sl841k7hB/nfiX
1G80c1fX31G/20UzyUei9+qoxGeiLXVtOHNJfW8r/A35zq2ZD5IpdIxV+81q
XyOZBjq2Zd2p711qH6X2mZJvoXEGsy50/dbC82tDtac6zhZ/ruhNaj9LfCR+
ex23iv1e8vur7w3iV4v/UO3X807Ej+Hd6T7v6vom/DbmjM7vVPt6oovV/qnk
b+E96/qjzD21f6X2R8S/pvZ6oit0tBE/VTILxO8t/kHxs9X3CPEvil+t9nbi
XxB/nfhu4t8UP0Xv4SkdF+u4LvMa+pVvkLrvarVvJLm/xf+mthvU90TxC9T2
ifj9xT/O7xLfUvxj4t8X30NjvY5+Rg+ynkSHiB4qmZUac1Zp/lnJX5J5DvcT
vSLzHL5A9IzEa5tn+lpjnqe2NzTO5RrnALV9oWtLC/NPaJx3xO8r/iHmeGp+
qWSWq/109Z2nvu107S+1/6LrI8T/Kf4n7IrkLtV9++h8Jz3bWNFPRB/TtfvE
7yY6SccYbLHo1ur7oORfYM3oGCN+kmhd9XlU9EPdaz3d9wnJ76+2p9S2iWQ2
EZ2q/pPVvo/ox6XH/FHjLSt9r1+Zh+LHoydFG+q4X/wVoos0xuY65uh8oOgf
or1Zb+rzG/NEY9aX3LPoaj3DG5J5ScfLrGW13Sf+aZ6B51XbH+o3ERso/i/x
i3RtEvKsKx2PiJ8lOjm1/B6ijTXujuJvk/z6hX9LU93zhdj8Otp1fqH480Sb
690O0bV/dT6qsE4t1X5mYj2ODm+uPsNFR+ley8SfIZntdZ/54ruKb8tcEn+K
+G3ENxN/BfZA8heLnqPjNNa22u9F36r9bt1rM9Elkk8KP/9uuu9Zuf2ovqKr
0G2S/1T0/Nx+Tn/RL3T+vNrfF10Q21eZie7O7Ku8K/oE91Hbv5JPNf5D4pvh
U+jaFF2bL/qa6HM6prEOkceei7856EB0H/SWwM/Us3ZXv7c13rFqO0vHJaxb
fC/mfG671y/YwRGxZdCVX5a2C6+IfiK5Abp+XOE1fqmOE3TeEduYWC8/V3qM
tyT7tu57q75tF8mvwwaorb3odMn0k8xy1peOc8QfLZmTsOUap3tu23husI91
NMYw0Y30G7qr7fzEvulbGutGXeugvgvFrxO/Q2WbfE6w1ycmHnO72P4vfT9W
+2aSvZw5ozE7qe3yxOv2H/U/R/d/Q8/4N/6b+HaiT+j6QB2dJdMr2CPs6Z+6
dqrOX5P8ytJ2EP4btS/W9daiq3ScJX5P0e91/J56vj0rue68K9GvdT5AMnvj
k2qMAeFeX5Xmn9E9ovU0jvoepN+biJ8gvo/4v9TntNzzuXP4LX15p+G79BK/
Vtemin+dNST6eOJ5/6/az9A4+xeOAQYFmYnMkfB9V5XmZ7CGwtrB7md6hofU
tx92I/fzfoO/m9u25pXXy6Z675eUtrP4SsQXufo+Ltn1KtvTezRe/8p2ef3Y
sQb28Ta1nymaSv5hyRf44Dr+EH+q6EaSH6ZnW1F6XvUV/3yw4zl6Tfzbep4e
ep6/xcca53z1/V38f3xr8b+gI4P9Hl86biF+2YTnCrrmXtHbQ8xzh+hijdmT
+VI6niGu2ajy/MfGTCsdu6Cr9xY9VseH2AH9np0kP0/8xsxVHTenfrZfxY8R
f2Lh7813/5y1n9uGrCttC+7S7xpcWiffL34Y8Y76PSiZaZltBrZjUGl/A590
YmqfZKPYMU4djfmA+OmZ/Yp7xF9Y2Xbclfg9/ymZOzXm+pX9ig0lMwCfROej
Uv/2p4P+H1raJ5mAzhOtp+MfyZyBv6FxTmeulfZDNuBepfUP+nqG6HY67o5t
00tiGLV/UXrOMfeWi/8lt09VVcGuJZ4/u+o+92Kvde/fdH6vzntqjN/FPxZ0
1x/ie+T2IYeKHoIvKvlxun5/Yn+IefRIYt19VeBnYZ9K6+2rS+u8iWFdfFnY
r+4b1gft+MTjw5iPid+39HjXl/5NkxKPNSTwL2ics/U8z0e2C88RE+n599HY
O6X292ZjdyR7T+JvxjrAl2iQeo6gL3iOO5mbiWPX2xKfw/Ms48NvZM3hAzRO
LYvMkeq7fWp/kvnAfbgfPuV09Lau/arnX1P4951d+t0MC+/nAj3/K5Ht3bOJ
fxu/a01pGdboafiCieP8PoH/Qfy7ie1+58xrkRjwE7UtKh1/oRuf0TPsjG0s
jBdgT9HPzyf+TjzD8aLDdWyh5/swccx7cua1Tsz4udpe1jjd1PYW303nIxLj
AgPDO0R/nRDa62ic3qLX6lit9q5hfHCThRrzE+6JDgoyYBYLUtuW44hHK+sc
dM/Y8O14n3zzK8L7aR98EnzF3dXWQcdXsXV2x6C3H9Q47+j6pkHvncs8QdcH
v4U46AG1v51aX7HuLsLHy20HOgVb8Fhpm99Nv/0YtXXRERNnSm6+2rfM/PuO
D7/xZ41zssbcQ/I/iW+o67uK/oK9ww9W+w/i/07tU/HOTgjv80d8Ock3wG7q
vteo7bTgexyX2K+YXJqn/fHSz8OzsV5Zm6zRb8KaQR90wJ9Q+3Ya97bKPjR6
AHvePdj0nqw/HVVkXAoebKqj+n4U2a84Nq8xo9Fxokfnlj1G9CTJ9uD967xL
bp72TnlN6BXN5t2I75W4713q+K2epY3oPLVtjR+lZ7pH5x/p3oej6yr75Rvg
B+m4I7UOHF3Z78c+sg76hHVxe2WfGH17C7Ywtc5/Udc3Y12knmu9w3wbL5k3
U9uR+/DLU9sg3kOv8NtHl8ZobhP9t7Dtxv+9JrOf/wNrTtc+0Ply9d2Yd87a
kex9OrZQ+wq1H5g4tj1f18aqbUjkOBldfkPs868yxwUfidbnxYqehT7WOJuL
/0L8aOw8Opz5WrpfD/Ct3PMU/23T1L5bIdld1L5QY64U/73kesXGB4hLiU/P
Cb/jktgxS5vSurQ2GCg6O3b8fLjG3U99vqvs2+Ljsh52Utvr4pdrnFrqezE6
AHueG/P4vTCuOEX8hviZuTGMG8V/IP5U8Xfpel763dyiZz9M99hX19aIZmo/
jzkm+SW51/SfktlZ/Lu672rd92gdTdT+X2Z8hW/0e7AnlwabUit1jNOauDj3
b725cMxDOz72+qmf4UD8r8zvk5gUrHUq/kYR1Uxm3gc+M7EpdjlJjRWdEduv
nZlafj/Rp2Lb99tYe7ltGvZosujjOkbzmVOP2ULXt9NvXqvzm7Gz+D08g37D
L7pf39hYE7RfbKzwZfXpgO1V+8+i58X2iduqzz469tb5xpL5L/K4YA1gDvjJ
vKv+4X3dkNpHikX7l47d+HZ1KmMP11XGLPdS+3aim1fGbjvTXhib4hlGpP6+
f2GfwjOBTR2jMX8Sf6j4r1KP0TIztnQMOhybr2szxG8FtpR6bvyr9t8Kz9Fr
C/vH2Jkf1X51auxqbWKdj79ODPUrvktkHLW37ttGz9xe/Cu5MbmfxL+e+90y
5tPiD44cX7A+To2NqQ1K/W7XaNxzSmNl9L0mDf5w4m/DON+rbcvK+mAEMRq+
ktq/kfz/Stv3uoXHYsxVfAsdj/NORadI/iB0IHqeuDm2HL+f97A3Pk5uXPbb
8Psuin1tos630bv8svJ3uCD2NxiReb2AP9TVtb9ER4p+l/g9fK3z7qzvOPwG
yW8lflvRrStjS9dXxu8bYDd5dl1rzHOJzim87g4RfVTXjoiNHy0JuFNbcIXU
eO/y4CvdFvylU0rjzB9I5t/YPPNyQOr38KXkPtO1LrFx7MnYk9j411Gx/ZOP
1DY49W/hN/UsfY37XpaGd6X2R3M/A/e6KjX++hs+i9r3En88MVJpjIvvNSy1
7vpVMs0rr4uaGKL0twErHpsaYyyIPWLj1djdHpLpEBufBzsHiytz4/S8k4K1
GBuXbq/zFbnjaGKWlrn17a2SHR8bm7pa17rljunQ5z/n9tXPk/zDseOUm3Q+
OHfcMUj0Bx13oNvBP2JjYjdyb12/PTZmOja27cF+3Bkb58RujYuN1YwQv6V+
25WitXTfWwrrQ+zMRwFjbCf6Tmz9/7rOzyqtU5ifm+l4Vm33FMZb8cOJc4kv
jwm+04m546kNM2Op+NfEWesnjqfAiJkXPcLc6Fd6vtbg82lYX5KdXXhOthFd
mRvrIH45TvKHx86JtM2ce3pL8keVzhkdqPYDM+e/Xk2sn/bFlxfdX+2bi76i
9vtS4zYbMXdK52UOU983C+O68ANT65CvJD8uNc62oWiv0vkI3tURGnM3ta8T
navzQ5jPhbEmsCew95d1vnPkZ+ufen5+mniOwif6fa1y+xJj1LYQ+6r2w0XX
xs7LYNePyRwXvKe+B+XOm9wFLlr497UUvTJ3DDhE9Dpdvza2f3x9bNweu4t/
wHjrMb9SY01lGvI/4V74/sQAxFArNe6JsXNVV0juaPSKrp1eGk9Gv4Gl8cxZ
7niCd5jy/XV9VGz/+9bY+QL8CeKnZqLL8JE1TovYv/cgsABsjeiBattG/AJi
mMq5wWOCr3Js8JkPwx9Cb4MvFuZb8bzE3rr+P75J5ve/FlyrdH6QebUM/Y4e
Vnvn0rYQvbe7rn+PzeKbqX1L1pvaZ0t+gdqOEG1VWq8+VDhnSOxyQOp8I/bu
QPGv4WeIb586p0qcvgM09hphHZJfJfdRX3SOjoXij2QdxJ6TvIu6meO5Q9Q+
K/W6PDw1fgSOhE5oLn6z2GvzldS49WHESJn1zXjw29L652zJtCiNb48rjCuS
ewMT2Tiznrgv87pl/e6YOg7qGmJJ8nZDeT+pfeBhsfM7t4KDxMaXyHe9KplD
JXNNbF0HrkqMc5v4rUvnhLfWsVjtE8CkxB8kOkbzZvfIfsXUInwj9E/l/HaH
ynngRrGvgW2SjwRHIydP3qpu6rw98eV2qWOxbiGG/S/1mliP9R37u+O77K/r
V8bGyDYtvV7ww7+NPRfRNWnmubwJNi34zMzD9YP/TxwAjoMe7qu+VWYdfKdo
ndLzv7faW8eeh3XRubHnP3P07tz5FOZty9i/k994Qu45uTx1PgA9AD7ZPLbe
q63zlaLNYuu+pXpHz6TOFZwmWkttb+p5m+p8D/Rz5PwBeRBkuor/FpuYOkdY
X/zpxEGxc/obRfY994mdp7+msH+0AJ+2sO/zpvhhmf0V/JBauf2ry9TWGxug
9vka46/CPjU5zKsK+4qzxU8qPGe2F30Dn0n9ZmvMRUEfTsyNOYPTXhjiWmJa
wqoeqes7XkLv5o49icf/E/905DzB37l9s0fFr8Vvj5x3iQr79k+L/4SYMTNP
zoacETmcj9T+aua+5CHGR85LjMudF8MXvU/8gZH1P7UF+DPg0p1i2wvsWZ7b
VwKH2TV2zQaxdEPxDeKaR4l6pjVhYjQzcdzNb9xLDTfmjnnBH4i7m6h9H7V/
qmd7MvVzdoztL2GTLpPM7cRLuXNO4GPkoKjhAANrjZ9ceO7sJXqx2kdJ/qLc
OpF5R30JOMoy8d1El8euaQHrAWcgf0DeYefCmEmDEHN/gL1KHYuD8XYR/V3j
ThQ/AHuovsvU732dfxI7F/xe5HzHZ+J/xkZJZik2gN+UW1fUU/v1udcxuMdO
ibEFsOldxH8h/tPI+NBnoifyLLHj5YVhTjO3F0v2/dg6vEana8za6CONeU1u
PQf+Q8xM7Ey+A1//lcj5mjriX4xsF8AfwLzAxDqUXrPYoD8L53OJiz9N/Z73
xO8qrTMr8N3SPv/fkrk+dW6NiXxd6nj2P427IrWeaJG5dqah+CWJcRIwRDBD
apaY21XhOp9Hmdbi/ykcJxIXM9fviTz3p8XOP97NPImdqyX/BMZIvPmH5G8u
XQsSl573+Kisod9y4+oXFsbTyK+QJyKG7xU5RgG/QjduIPpW5nk3Q3RUaR1b
lK7ZIT/+p/pvmDs+HUJOL/W9wLA/SK2rFknmw8xrbk5m7BNMbg32LXFOi3wW
65ZnYyHNSz2/Ook+pPst0bVDwd4CPsa8Pbj03HuMuEdtn4b59kLAk9CHTXQP
PV40S20vx84tTtD5yMy5VmKw5wt/o+aFa7bArsCr5yT2Iz5DOeX2B8F1Dyu9
jiZL5oXC9qcFei53DvdGyayKvMbB5vYFVxJdqPFeD9gYtmBk4XcOjjKjsK5m
nLdSr4Ouoisi17ypW3ST7ttY/HOS2UMNO8auUzpc/VeI/z2zXu0ZsLKRpf3n
l1izsW3EJtjjgENgCxoXxiHBQqnV2oH1p+snJ8YQwQ9PSv0+ea+NNeZC3ecz
yb+bWue9hi7P/Ix7EGcnfj7qqNDdD0TW5Y0y46k/ZK6H2zSMDVYMTkwd12eZ
c8Fviz5TWMfiP5DPZT6TB6f+DjwNXO251HOGfNFuklsUGVumjgT8n3zitzo/
Rde/B3vPjP1sSZxXOhbrz/rKHLdtpvbnxN8ufqvcuShyUqyXHcVPiK0Dn888
fr3UugCdQE5tcMhnEQ9uK35kZF9iq9K+HP7DlqX9tFMLr09+F/k18lvEj+cW
roEZg34U3ab0s51B/Jg5dtw09zpkPY4NviS+Gdg0fuLo2PfbsXKNz7mVfb6h
keO7u3UMFL+x2naqXEN0nugDmePR2mp/RMdd2LfU8WakMR8tHQtepdNtUn8/
5iA1mSeH+bpYdHLmeHHb1PWTv+l8AuMX1tXU9VEnMUkySzNjTeht6vdapdbP
dTLPMeYANZLUbm4f9MBjmd/t5rnxFvx8/P0pmTG82rlzeGB9F+j6DqW/Kf4z
NULoCfxV8hjkM8hDUS+EnaLWC4wI2wT+TW3OOPVtlBqLwe4QQ1D/+ZPOx1X2
f7Br+PvUUFEb97JkapeOGcjDblTanyY/+Epm/b2tnnOX0rqd775NYt2ODdg2
sd7H12lUeh3xW+Zl1mHb565fRS8dW7pObKT6vCP6FN8Pm5Xa92H8upJ/KfM3
3QbfKrFtwPaQUyN3CB76bOr6i2apMVGwgp3BHkqfn8+3SqzPx+vae5mftz6+
SelnQ6Z2Yn17f+Qa1NHYbdEnUrc1ET1A5yvU/3O9w+2DPNg0tZE1vlbpHBM5
OPKM9RLrFPzC6alrRlqIXsXajl27Qv0t+ndq6fpGfCqwqOkhPiTfvXPp98/a
v1/3HyR+i9Q2D9s3Dhy6NA7DuqOeDfz9RbVtnNgm4pPFan9GdGBhP+5h8U3R
S4ntGb4p9RfTsPnkKdR/RuxaoClBL5PLuDZ3H2TwYfnW9XLHAdTP7Ct6dfhm
1D0ML60nm4g+r2vTJdMy9dyZFuYPtcesxyn4KaVxpLMK50r5bkt0n3ql9SHt
2xSugWqNfU+MZ69J7eeD44L1UqeJj0f+idgBPBlcmZiB2AHsmXwnec8+xKOF
a66oV3wpd13cUYVr1cCOwJBW69vfjY2tHJ/j07HWyXGS6zw38/xjXTP/2ofY
/JDcOWO+w4KwLj8MPuEbifGHS3LXtoETghdOxodX+5FBZ+BXMNbWPF9kTIDa
PDBDsEPqdKlHvSgzBkGcRw0zMd+q2Od/BxyDmuY/eG7xh+WOs8CFwb+JMak3
eFh0keSWqv0E/MHCz4svQc01dpz+1HZjK7GZW6fWt1fk9pnwnfB12ye2ndRA
b556Dl+eG4evwf8lc2RpHOIAjfdB4tiBmOLlxHjawNwYDfExcTK4y9exfw/4
cgP8C43TpHJN97GV6/F5ZxNL++L45MQdxH3ge+B8R5eOYw4ujAvDsw53r1zf
3ZWYrDRORVxInoK5NDTzPGO+URtLbpa1vCR1HQF+DXFT0xCDdc5dJwV+SV0c
+VvsFLUao1P7z+Rb8MnwzXbLXZPCWv43tR84VHzj3HlD1iZrlLpD6vTQTZsU
riO9qHAukJzgtaV11YtBv72Ueu0clNpHQhehk94O/gzrFR97XeR6PGLK1bHj
yh+CX0R8RG4RLAhMiLiR+HFXPdsOhXEhfF3ymOA/4EDgIWAd1PaCP4JDNgFv
zowbHpC7Ph8sYK/cPjl+JvX+DSvvb7hf9MzUsQg5X+Is4iHys8QvYCzUyBPX
1ORxMtfBXq4xG2nMH1PHENSKEgeRGyIfS14JDPeooAfQJQ9XjqeIs9gTAI73
nfg2mevI/olcCwX2Ag4zUbRd4ngS/36+ri2RTOfU9hl/r0NqbAd8hrpmMC4w
LfDVdnpHs7Fv+FCpYzpqdampwUYnmeuowTfb5PZp8FvwcagNpv6NOjhqg8HS
wdT3qLwPoFtlLBgcGLyDmjVqhPtg0ytjffXV7+DKdZHbFs49gNVTLz4rNx7b
rHJe5c/YuqZj6XfCHg1wWPBY6s6p3Rus8c/MXUuAHaAODtz6u9i4GzV0+I3o
AXI85FmoM6a+H578D9+deHrXwusa/YCeoJ5xqPqclxsLBrehtp46IzCbnrnr
96hpoBapS+nfDi5OHoV8CnX+1NDdm1hfrZ87V3Bq0HvE+PiCr6eO68mHo2vX
xc4f7FW5rnlY5bWGH7KBnrNp5drnKyvrmL9i56XAwdtE3ptQ5cb82QdBHoLx
qIcmZ0FOq23knFKcOJ+Eb4GPwTvZt3L8erXog4lzQuSDwMgJbMhpobvQY+i2
bqVzTNTeYKvQ4ejy7qXzbtSmkjPjGamrxj/DT+NdMX94b7y/rqWxe/IJ+1TG
266qrCt/iY1D7ZDbl6PemBp68lwd0UW5MYf1SsctxAjUxC/KnYdN1H5+6Xjh
dMkfULl2/oLKcUaZuA81rbsl1oFzU8fSu4u/tLSvSBxAjTI5lGML15AQH6J7
iXWq5P/74lDq9Q+sXF88oLIPXiuxnzGwtB0/E9+ncq33wMp1Bo0S62dirA0T
58wewM9OvE+kBn/HB8gck22Q2Kc/ODeey/olZqONmuZ5uXOL6wr7yvil1PdR
Y7trYt1FrSg+M3YQXxyfkHpD/IzNE/u+1EeBOwzQ9VaV69kvqly7ik+Lj0Gt
FFjGhblr0LEJ+Ln415slxkTwv/HDqX3Hr9808Tl1N9ROUEOB/7ZJ4ucAE6yT
OEa6k1he/Jhgd/Ct+T175o7n0e34i/iN1LU3CT42eMv+ufFxbAE+6VaJY+am
wV8lnsef3TrxecMQ94H54GtvmXjcCYlzq4dE3hdGvI5/Qn7pn9h7ddgXQCx1
Wel9GeiBpaV1HzqQOqKDKtenjK1sG3dI7Mc/nNi/x7ffMXccQH34Q4ljIeIg
8O66iW0zuhUd2760LkOnHSF+i8L+MLVM2Or6iW0z7wos/G2dHxVsyruRccqD
E8eE7I9g/bKOG4Z4h7iHPSM1ObbSdbPgQs8G3U4tz92V93ega8ilEwvhg7Mv
AAwcXYHO2Df489QnsX+BeGtI6Vhqu8TX1kp+QOxvDYbTMHF+EB/5ysh5YLB8
2sFw2BfZNDH2wl4P8vKnld4/Qq07Ne/U4lAbwP431hp1NdTXsC+mplZGMkP1
G65U21rxV4i/GLteGmdifOJ8MCts9COl97bU7OcKc5L47f/iRij6G98UH5W5
Qu0W+NMNQc+AGR8tOqd0XRA1+OA0vNs5AT/aI9y3Q/B1l/ONA76Eaq5ded/e
CZXzUHxHbD2+QpvwTcnPHpC4jgi8BD4Pc7Qm7k9dF807ycP8ZP4wj/AZ90uM
FYL3wlMfdWTinMrGkWthqYn9JLN+YO2gO/HFyLHhi7AGyd/elLmuoGXi+qI9
Q5yOnwi2wDwlDsPPAWMHX6BeZk3s70fNLnEwMTd76MBNqSPlG/At2HsInsT4
/7dnpEXiWrEhYb6hl6hHpEYEW85cYc6wrxBccJ8wr9A51Lksqvwu24X1Qk0U
dgf7Q10Ktgabc1XuupDhufGwVuG3s5/gydDOd/tf+HbUqDOfNyuDntf1lZXx
3kMTxxc8S9vwntHz5J9vyWzLsGvYN2zN6GBbqF0m702efFh4/3xX9sI0S1zH
Rv6dZ6P2DNzx8DA/J5XOZ+5eODfCM4A3ga8iQ0xHvThxHHts8RmwL9gZbDe+
HD4dsQF6Z6/S+zPRi4P0PFlh/UrMfk3lejVsE/sKiSfJpZOnJi79LvPeRuIx
8uHXVvazt6qMaZNv2l10uM6vyuxDsu+VHBD1/3fl3p/7c+ncK/kL8kXErsSs
1DWAxYGxTdH1yyvviUWeGgzykuzlpVYc/UvtOjUY5CgPQOdX3j+GfiCvTTzy
TeY8OHE4tUvYBt4ruDR+5fTEWDO1t8S6u2bGQFjf4Ijs0SZHhZ1lXzffAHvK
Xiru2aVyPQDv5ITMODk4PHu1f8yci8JvIW8OHjo1cz6deOrrzPuOvwv+9aDK
+2x/K70Pupmud6r8fohNyAWB5YHpkbNij1xNbjdznQPf67jMtQ3g/+QBsPWv
Zc43ssZYa9QYghWDM7MfDmwNXU8+BCwOe89+MvZ98z2PqowN4h+wt2xS7lqL
v0rrKfQVex3Y10fuspNkLqmMgw8MPhV+FrgOeDX7Jz6ojMeC/7D365ngP83N
jHvjw83MvGeBPQfvV95nDR5wfGUsEf+AXFC/ynUnJxXOa5CP5t29in8Zu67+
nty4Ae+WPdfEgNQbble4FoL3Sr0iORdyL+dUrunpVdj3wvcBnyPf0SAxbs/+
aPKh7HN5NXWNE7WuxAv49dTinV251ueUwrbrMLWvUp8FpeffwtL77r+KnEPp
W7lurHvh/ezkR9irTu6JvBL7XKn7BvNinws+Oj4A+63BLIiJwDDeyL0/dEo4
2EtBG/VyYGCvBbsKngauRq0kNZPsTUaemBEb+ENiHcIe5z/COOxBppaJmOeM
zHVE1JawH536JXAE9lgTVxBfkKd6IozPHqYOwX6ckrnGifkyo3KdHpjYxcSG
lfedYvep0yMeO1/tvSrvi+msfr0r4yn4/1ODL3Z1iEefSZw/nlf6fH5pPBM/
7s3Mc4i5BBZEH/qyTk6pvFeoE3FT5T2r4HLEkMSS1C1SN4yOJfbuKZmRqffW
EbMRu5GT71E5ticmOrnyvlwwxv8K50fZP0VegDiE/Z28F+oQeE98J94zepU6
QzDJwZnrpsAd56j9n8T1pezdPr1y3XvXwvOKPRvflbY32B32pvepXOt+fOE5
Pz3I8F8E1IHw/wnU5VCfQ63X4Mr/C/BH6b3zYC9gMNRGEq+y33dI5T3/6AHW
Gnro+cr+DxgSNXfrEu/hIk6nvo4aFf5T4cjKdQl7Fp5rzNUzJJemrpcGr6Bm
uk9km0SsfXDkOly+KXtgvi299wcfnb1p2Hri49M0/paF5wAyR1Su52hauC6X
GhJqSTpWriNppvbT0FGp912yjxD/k/391KcRb7PXmb2D1ImzL586efDXuZXr
rrGl87G3letj9uM7V67zBqM7LuBZ1Ei0Cb4+Pj4+Kjlg4op/cud02MvA/2eQ
byLvNEvXX41dKzlN58+JNud6any4dWp7y15+9vRfXDnnzX96kDsjX8A+deq3
wOvYi479oT5qts43LTwmtVvUst6s66Mq+x78nwX/s3Fp5Vpk/tOjTeq4ib21
7Csn189/ZYCfUDdxVOo6Z/AMavybh2dmf0K71PvywIvYY0PdFGuZsd6KXQ/B
Hgq+Of4IGD44B3XZ2PPFsX8D8Qi4Jfjl5oVjtZbo59wYMt+a+jnq6NgvnBf2
adkr+nJ4/oNT58LwB8HnZob78/vIi+Gr8p8q+NB8H+I/9mSxHwrfmv0O+H7s
aWBv8dzYtR1Lc+cxWWvs0aBeiz0f+6f24dmDzB4NainZe8k+ImrAWL/8rwrP
sXfp2jnypuxBpxause5LPuLL3Lg6NiJPjb2AG5M/pTaSfZ7kT6+OnOPdr/Qc
Yo8z+yv4Lfwm8rAjIud+mftXxf72G6TGVcAh+f+F4ZHtIHmxebH3xYMl8l8L
94p2TI15gtGRt6J+mD2K/OcCeVvs8v342ZH1CXs3iDvYtzEjcZ0V+Vn+X4Za
M3QCsQffi+/GHkDifPZpghWgv6mr4j8usCPU71ObQmxLDMIeOvCy5cFXr4mL
YtftUb9H/TMxO7km6trw/4nfiCnBzMHbv8xs0+fiX4neWBobJA9Fjg8sfVnm
98hcYD8675m88bLK+VBwCvaUz01cq0a+oHvqOiL8THAf8BLykzW1mJH3sDP2
7Nhrhtw6uBj/VUBOkXnOfiH+H4f8yH7BNmFzqSNmfyk4MVgW8xyfnz1Do3Ln
ntB1YDjkpqjzIn5tH2JY6jOp2WQPOHs9qJ+hjoZ9Ab0j74m5obSfw1oDAyWm
Zq5iAwfjl2beD8LeAvbxMF/mx9ZlHYJ+ACNvHXQXexJqFcYYiE3Yz81aYr/+
qtw5Jnwn8ongMtRivJt7fxM2mm/1Zuyx2obvxX4f6oLA7sAVmBPEp/w3AHsG
ecYbKudFiG2Jcf8ffc9F6w==
         "]], Polygon3DBox[CompressedData["
1:eJxFnAf8V+P7xs98zsnMykqpNCijkK2k7GSV0UBbRraQpMjIzo6MEqqfkUJD
C5WRvTJSdkZDkhD/6911Xq//6+X4Pve5n3M+53M+z3M/133d11O97v1POC+J
oujJLIr0X3R4GUUn62+fPIrWqv2RTk6Jo+hqdTpH53rouFTtU9Vnjf6+Utju
rfN/qv9stYN8jXRNM137vc5fJHtUquvl/0n9J6vPVJ2rpY415Q+yr5I9Wv2b
y24he6nsfWQfo+sWqL1A95ur9ve6/mn5j9K5V9V+RW39ib7V8YH8dXXNtur7
mY7las/W8ZTa26tfPd37HnVurvb36v+SPv8V+cfJP1Hnhsn/ovx91P5L/ljt
Xjp3mew+slPd/xQdX6j9ta55R+1r5X9G/iN1bqjax+vcR2ovkv91te/TPfaS
f53O/aXP+1X2S7Kv0fGW2ierz+fy1VX/t9V+SOf2ke9fnSvV3lb33ET2cNlT
9Kw76NhGfU/VufbyHaBjf7VznbtHvuN0jw/Vd3vZ89W+X/fYu/r8oPbr6vOc
fHV1rr6u7atjoNrT5D9A/U9Sn+Xy7yF7vp73MtkbyV9L/S7R77eOdyJfor53
yN5UfZ6XPVP2FbJj9Vum6+vr3An6rJPVf4XsFrLfUt9tdW4r2R/q+CXz+5ii
+8+Wfwf5Z8q+Xe0xut8zut9tut8GsnvIPlb2DPkZsNfo3F3qX0v32FL3Olnn
jlbfWfJfqPYZav+h/jfrry6Nuul/R8neQP6h6n+X7J6yr5RdU/23Y1zLviX3
PDhd/qNld5X/d/XfR+fe1+et0vm1al+hczeoYyr/VWrfqvOnq/8XOjdL9lDd
80Lda2M+P/E7G64+k3SPnXm/6tde/Q/TubnyzdW5OdxD91ut9r6MZ/V9UnZb
xq7OHa72GZV/P/k/lX+G7vOE7O3UZ0d9Vnf5/5C9v/yfy99T9hrZB8j+Uvap
slfK3lP2O7Jv1/Gf2iP02T30PGfL/6/8R+jcz/J1zf0+T5C9Qn/fkH+w/l6g
8/+ofx/Zf6n/IfJ/o/4/6PzFaj+s+50r/zbyj5D/YT1nf76vjuPkP1P91qj9
s/wvJB5DbzKRdY8x+vOCrh8g/xU6t6n89+tcA7VH6dhXdqx7bqT2EeozJXJs
+lvt04k3/P46t05/ryv8bsbJ3lXtb3QMSfwb7aX2y/q8vXifer4TdP2b+jsx
9jPdwHdXn0LtzWjLP039m/P7qN/xsr/V+XN17wf0vGfJHqz+W6n/ozrXmLEs
/4Zq95S/g/zfyD5H9v2y+8q+Wn22VP9HiJlqH6PjB91/re5/EuNVn/eyfNPV
f7Hsl+W/UfYjsifI3kz2cPW/V/3P5vlk99P9Ep3bRO3pOs6RfYWuuVP3+ld2
7yqW3an+28q+S30f0fXny95Qz5eofzf1uV59psjft3rf/+n6zrJ/493J/57s
TwrPjQvUN66h31vn3pT9iuzndL+7db9GsvvKHiv7MdmtZF8s+xXZqwv7P9Zn
DJQ9Sv5msjvoeabJHim7oey2rEOyj9b9j2Zsqn9n2f1kj5C9k+53kew1ut9u
sj9jTZH9rK4bpee9Tuc2ZT1R/9PU/lP+rvJ/p3NvyT9T52boHn8X/u7/yH+z
/Lur/xb4EsePhrLf4PN03STZk/V8h8q+Wtd2kf0ac1D2DbKfLD1/WYve17kn
1N5V/s9jx+h56vOt7vOG7BmyX5b9oPx7q91f7Zd0/YTcc7mH+s2R/XjuudtZ
9kzZXfT3KF0/jpjIZwd/1+11/Xnynyb/kfL/raOG/B8Uju3nyv8f95P/XvkG
sd6o/ZCOO2RfyhjJjAvuZ/2XvQFjJPfa9a7sY3WPQ2TfKf9lslurPUDHCPm3
lf2G/rYi3hGrABkaH5fIf6vam1fv9BE9z226fjAxQ+2xucfWpbr3aXq+f3Tu
9Gou3wI20TMcHjvmlOr7HtcTH9XnXbX3D157PmANVf/n1f8R9R2mc5upfamu
uZ1YSTzX3z3Uf0u1ZyWO90cWjsfE5VGyl+qa92Kfm8070/Wj+W46/7n8l+j6
SbJbVvHqH53/CbwBllK7k/yXqL2J/L14/uB3u6ns3rL/BCPFfoYDiSny9+e3
kP9M+TvLHih7iyperNbn3018VN9PZF8se0lsDLFAfS4F06h9aLUe/8b7lj1e
/T+SvUh/X1H/F8E//H4695La+6v9ALFZ158nu5B9huy/dP2DsufouoWyS/kn
yJ4q/+Wyv9L512LfYwprbGG8Bm57TP6/df1Dsp+TfRnvV8esyGvjOuK/rv8A
rML7Yg7r/GLwG3gBDCC7vdoD1Z6n/pvomFf1fVjtmjrelt1e9mi11xaeP1/p
97xa9lO6/jDZl8v/muwXZZ8k+xrZr8tuV3juH8LcI57qeKca22PAN6Wf7QjZ
j6i9RP0HsL6AX/QuFsu+GDws+1vZy/hdYr+D13RNy+Cx8Fbi+N8lGOtuWa0X
n6n/DPV/TOfmq/2jjndkv8aY5DdQ/6Fqb1vh571lb1fNLfDQr/yu6v+Wzr3K
mJH/WrW3q9bf83Kv13N0ro3OHa/n/UX9/9V1p8jfW/1vlq+ufBfIvlH+Our/
nM7tqfbfxEm1e8deD6bnxt7Xpo6fk9SnseyzZD9BvC2MTd/TuWd077Xq/yRt
cLP8z8nfnfVU5y6Tf2LhudhL/sflb0y8T4yxwcNNWD9kfye7uZ55A/W5V+2G
8t0N3gTHEc9i4yviazPwnOwV6t9MdtMKH98nu5HsnRJjdPDx8bK7VvffXf6V
Oven2seD6eXrCS6InXOA7+8ifqr9NWMa7Cu7p+xtGGOy+6nPVbJfr8bM/3Jj
rytTr1cNZNdPPIbBe1sHY++twR1VfjQp8T3mq/1MYWzLmjNBfesE/5Z11P95
9f+xcO7CnJyn9hgdbWTvoGduUzjHItfaSv2fVf+5hfH+2XqOv8C78v8t/y16
lm6l4/HB5HC6fiu1B8m/XP5+8ncEH+XO/X6TPY7xlXnsX5IY012SeW5cnjiH
bKijQeI5Sv72lO7Zgb6yb9W9j5P9s/qvI1fQ/V7NjTV/pq/scYV/i746d0fw
etNKdg1dM0rX3EjOJntiZLz2k677PfJnHC57Zx1Nqnzuxszz9THZbWRPku9r
1hzZ44l5uv8H6vNSbExJTOxOTAb76NiA9Ub2i2qPZH6q/bGOqeBb2U1Zzwuv
xWCC2bxLYlBkbL60ih9jqnxxms5dTjxPPIc+0d93dL/Jut8D4AHmNvhM55vI
/lDtT3VuuvzPyp6sz/tN5+qq/Z76XFka3z5ZvY9N9H3eru7HMzxbxddh1fhY
lXn9uF52Hdm/g4UYV8wV9W+k/p2q/C3hd9f9T9Q9L5RvQ/neLf3+BiXmCHYD
b+r6sbFjyli1vyqMbSeof671v6nus0uV394q/1m6351qN5A/k38XfrMqX71Z
/kGsH7KHVDHwatkPJ84R68tur+vPVjtT+23iof6uln0xmE/Xf0nOoP536NwX
an9eOJd4Uv1Sfd5GYE7Zu8i+V+1ewbl2HdmJ/Avpr+tvAsOoncj/gtovyr9I
/WeCkfRZt+jcU2pfqee7j9+iWrP/hR9grKn9JfNPfZ6OjVmfU3ug/A8kxvQ7
sMYxT8lPuQa8os/cUP6tyKtYm9TeRL4fGS/qvyr3848j75f/d+a2ru+sYwjx
J/i3/q3Cq08G8yPH5I4f4/S3i+wL5J9beryT+3XTuYsy40dyu5Nl91P7F92/
u9pnxl6Tn4MTAv/JN5/4EZyPX5873pyj8x2I78SEzPGC/K+P7CvVXqX7naV2
39hr8q+ye6p9ko6rwBDBfMFRuePj73ofB8hulxkfd8zXw8qomc51ys3pwO2c
qWtfANvoXD/uBc6W3UJ/m8r+VX0Wqc8J8pf8/jp3Iu9E1zeJvRZMLp2nk6//
wvhJnSeSL66U/Z3s3ciXGL9co/a7MlrE5rD2yJ0nki+uUJ9v1H+W7r8f+TJx
pMKzreXryDtQ+035D1O7I/OcfEJ2a34v4gz4DAyg9m5wEsE5KJ9Rm/FWOofl
GXcAY1Tx/vnEawRrBTGH2ANn9UPhGEgsHM8aWDgGEgu5Zin5qO6xa2Y+r7l8
3cmx9D3+UZ8TgjkM3tFWsjcvzb9wL2IgsZAYRCwiRv9SOEdaWfEJ5E5g/O+r
eAn2P1H2Abrf3nAWuvaL4PW3Z5X/jM79rvrIfhX8FByfGauzZS+QfYTsU2S/
DDYMzn8YuzPI3wrPV+btp7IXsgbJPgPeRvbn+m4/R8Yo0xPn4OTiDRhjar8b
nG91qfIv1izWrl3k37V0jCRWNpe9W2mMBdZqyhqs9s6F5zfz/DPZhY6Rsidk
nr87Fs5XyFs+Jj8g3pLvEINK5w3kD7ezBqnP6uD5zry/jt9G9vnwB8QU8Fww
nlmh624Aj5N/sJ7Jfyv5iuwBsiHJbgNP6/Nvis0lvid7Re614An5R8jOwODy
n5abnyNPIV+5gZima2rIPp94zGekxpWsBWNi85cv6RgdO6YSY/nefP8a5GSy
t0qdi94Tmw8GJ4OX75b9qOwNdWxMvNVRixxXzxvr2tU6hul5Ns78fOSUW8u/
b+71YZjs/dTeRP5NY3OI28hfcM/YHMnmsmumzmXL2PlvAHMSz3RsJt+rssfH
XlNYs8izybcfAiPK93tuLDBe5+/S8/ThHasdMSaDeRr4mo1i59sHqv8FrHWy
D1J7+8L5Nnn3B7p2u8L5OXn6+6U5GLiYdbrngtL8NtwWmARsAh/IWs+aD5aY
lhlLYIMFXsvMTYEhwBLr+eDIOQi5COOA8bBGzZvU3kfHHNmzY695WXD+SB75
FbGHdyJ7Uux88rbCeOvmaj3+RN/pavn21N93So87xt8f4DH1OTg3nrhV51qp
fUdhfHBnhS/gpeCnNoudv9+f+bdnDMBHwCvCL9aMze/coeO62BgRPuIW2YNj
c+T7555HzKdVjAl9xlwwq+xhYB/mamLsAIaAw5khf3/WJmJz6XnF/PpN/utS
413qJefp3GA+S32+SxzTd1d7kI5FiXPSJ+BOZP8gu63sFyrOEu6S+srrhWso
1FIGVPF5eoW3qbFQ79i0wv/kdPClcLBwsUOq+EpOTW4N/7ygcL5OfgHmJz9g
jkdVzrRDaQ52PW4nRywcE/iNeshfu3SOQK4wqFoPqAmB68H3r8GNl543zB+4
RvjJcxPPqXv02atLzzPmG9z928QXtXvrmKz2r7mxHRgPfMb8AduB8RbJ/ik3
lgJTgb/AiMw75h/YjpwSzAqmI9ckXoGlwFSfFcZwxBniDViO+kL/xDHggWA8
ODJxTIJfnlzlH3De4HfiKbkDz/xO4ZoCtYWLq/US/vMetY+OXR+AE1rPIUfm
iv6nz95Bf7dQn0GFxxBjifFzTfCYY+wxH64PXgOIibdFxnZwFANlt4vMXYBh
wDLgux+D5xRzixrTvYVjBLGC+HJvMCYDm4GnlgSvKawtzKeRwTGeWE9+PCI4
5jxZxdj7gjmj/2XmcOCSviudV5NfjwuOAcQC5n/Twpj4S9lPRMbKH6r9tY55
8odgDEzORE4ANv60wtAPyF+7MMdETQ4MAvf0lN7fNrlrYJdX4wEs/ijYlvVa
fX/Q8TYxQff/tjQnUouYKXtJaY51muw9dP03pTm9LWQ/HMypfwMmj8y1w6m9
mLkGAdf2dWlOZnP1f4jvkxgLtI1d33ood+5GDvex7j8iN7cJxwkfCWYHu4P3
DyxdY6LWREw+qHRNjdoaeH+nssqXEq8x1AOWMB4Tc/AvyV5empcgJyY3Jh8/
LvEaz1r/uM4dmphDaxTMuTVPzQ/AxZ2qcycmvud49V1WOk8mXyY3J/8+NnEO
PTS45kHtgzX8gNIc0WOZ12O4o/OrGA2/2qA0RiHGwhltq/ZwzmWukSWFMQkx
tIv826g9RMdP5Oqym6s9VMeyxDnDnqVrPKx3PPOEwms8a30n+fcqzUEemDrG
EeuoMbEmsCbXL42JwEYdZddSu5+OuzLjla7BHPmDmfEU3Dk1FNZoMEi90hwy
XDIcM1xzT/XpCC7U8b/C/FWPxJjxSvkeld2a2KT7HUF80/Utc9esqF1tUXiu
wUndqfYDOlomXiNZK39R/71y12yp3YLXyJXpM1L21/KdlbjGMxWskJs/g9N+
v3DNmP6soayl8P13gK9j13NJluDi4RTgFu7JzdXD2cMvvBDMhcG53SJ7P9mN
1d5T108PrpdRm+fcrfL/Vhong5fh9uCnTklco35C7UMLcwuMybFqr1L/+Yk5
M7gz+MNeiTkmuCbqUXA7vOOn1V5Zus4Npwi3uKJ0nRdODG6MGj3xGcwB9oBP
65Q4B300uOYNlwCncDvrT+61hxr/C7JbFY5l/GaPFa6JXJb7nfHujs/87vj9
GQfkneSfS3V8lFT13sjxhzi0WTB/S8wgdnSA94zNSVLvaaXjzdjxiHpPW3BO
7PgC33swvDS/Veya34bB9SFiGLFsx+D6ETGYWNxZz7pQn/8VOYnaR+uaT8G+
sfnnLYLrF8Q8Yl87nXs/dvyjnrFtMH9MzCR28n3rR67hR7ljCLHkULW/L41J
yB2758YqYAbqrd1yYwn0IadExi/gGPj9eZE5z53AX7J/BI/paJM5t6LeuS+Y
Te226rOYXFl2O7W7Zq4frZKdy/5P9q9cG7tGSG4Fn32IjvZq/535t+E3omZI
bga/2ErHUWofpe/8cez1Ab78yNRaBDgGapbfEkuJN7FrlMSmddxbxxXgnML8
5sV8jypWQQB00rlB8i9V+x+1T4tdcyBWkZ90lT00NTZcy3fTcUnq+vkpap/N
ewBLwUckXg/hk1g74H8ejs0XsVagx3g0Nj90beZ6JTXbjcAZuXMpcipqPlvL
3pixHbtmRD0cfvP9zHzk3uATYllsPpG1CT0EmgL4xzqyayXWjFCf2F72Zok1
NfCf5EPwd+AbcE5t1r/EmhpqRmBE9DM9c2PHuvq7deIaOzW0PRiDsh+PzU/u
paN2Yk4Vzmx31v/EnCQ1BPJH+DnwALhgP53bkbkcu/7UWkc92S/HrueCieEe
zs2NldG7wIeDZ8G16BuOj4znwHXkYwckzhk20PUPZObCD0qcn5Cv0B4SmwNt
mrkWsHti/gcyidhO3eHn0vwQvvrqv4v6LiscW6lr/AR2yyq+KjF/1VH3PC0x
R0v9674Km/FM5IdwosQz8B64j/x2P7UHxuZAiZE7qt04c+wkRtaWXT9z7Oyk
Pp0Tc77UC5lv7cCy6rMGHJpZa8I55h986pmRMcFhufUvfSNjjiNyYwa4oD9S
Y4k7M2sPeCbybTAKue/fqbEL+h9qGcRoOL1XwQKJazDH5eak19cuEsccaj6s
R90S83Pou6gtscbAYcLfdavu0SE3VkGvcV9s/vn2zPiB9Xcf+YZX74/1de/c
ORe1lrOqXIwcgVzjsYr/HVjhTXKEq3LzqDzf+YnjLXzDNZFzCjgRcpwCrJg6
94E/QHtBTnSq/EtS14pY806RHUrnKtwbPpo18Qf4p9RrJTlVChZPnWsR7/ls
xsixuet7syPnf+SB8ONw3WDIwcSC0rkUbfj3z1LX3sAsJ+euh9eLvN6x7rGG
fyO7a+q1HQzCXCCPBpvAtzJWTwcD5cY05Nvk3WCdVYWxCPdiLSUHRS/QP3du
Ss5Grje24vvBVGDlPqmxFvWQJpFzqityYxSwydmpscsfhbE2PvQm1HvOkGsC
czJ3zZva95zIuTI1EWojYCSwUuvC6x/r4ENlVe+JXMNenFV6x8j5CnnLzYXj
CXFlpPo3IEeQ/43U9eem5ECy30tdL95F9iLZ76auR6/LnVs8n7q+QE0fzowa
+we5+RhiLxqgZjq/k67/VL43U9eb2xZez1nXHy3Nv9aoOLftS2sI4ATRGHyZ
W2OA1gAN1ue58S0c1bWy9+PzC+vDAlghc42YWvHQyNot8HOWmf9CuwW+zzNj
MrDZP+S06jtR19xTugaMlgaOAq6CGmKemnOjtojGbuPUGlC0d9RA0e5QQ6Y2
iuZso9QcEFo0NHQhtUYKbR0aBLQIaKzey82n1aw40Lq8C10zXe1pxErZhxTW
E/yUWc/wdWpsCd4Ed8LBwL1clpqb6Vd4fWedJxdhfi6Tf1edm6tzX6WuFVAz
eE32nMRcd8vYeg10I2g34Kv3J69ljZB9UWr90bmF8QE4gdwGPANXAP4Gh7+d
mLs/KLZehDG6u+xzUo/dtfp+F4EdWOvJzXNzAQNS6xvgkE6UPTg1txSX5iuJ
NejD4P9YW9HQNVaftHRuD4/6tNr/FY7XxO3xspPS3A28KPn18MLrK+vs/eRy
wfpHYj/13+Xk5JFjCfX73oXxDTgHLmxF4ffHe0T/tSY3N/B06vr9ysLvm1iI
fuDaYO6NtYb6L/l1S9nnp9aHkX/CKYMB9i+tiaHOBkeEtu562X8k5uT+Dda4
oXXrI3tRbg0RWiJixoe5NaxoWXvL/iI3P/ZXak0k3PjtpTUGvWTvU5ofW5s6
xyI34zuelRn/8d3h2NdU84F8nDF1YWb816/KX6/OrFeAu+5bWJtFTRr9CPnx
76lzGrgn8unVqWv01ALIp9FkgPlaltYcoT1CP4l2Ej6hZmY+FO0uYxAtHGOK
sck7RGsHZ8G7ZQyhleEdM7bAt9S6qVGjb4G/eCYzv00t8vHUdVc4OvgzNHJo
5dBovZ9bg4cWD0xYh9hfGD+CIydm5j+mZq4HoL0dWBhPgiufyKxxoc47JLJ2
fGlq3SmcHHwEc2B54hoic4P61JxqDu5cWsPFnESzh5YXzR46MzgZtMBocNDi
oKFBm0k9jTmIRmeX0vW0T1PXV9F6orFBa0OOjBYZzQ41CTRZaD9XVmPrWfW5
Lje/QA2DmsW+petjH6bWp0+q+AUExtRH0G6iX0YrguaDmin6brR1aMRvyl3P
W5g65yb3RoPxSfX7kS+3L5xPkVd9mZqvGZO5foJ2dUVwPZW66o+pY9AVmfU8
xCb4keWp+X5qSZ34vMQ51yvB9a+DMsc7tKm9U+vmWE/hO6jXwYnVJ0aWlUYg
Mz+GdoD62BGZ4xtaD+ph36auh6JFApOATcArcF/UxKiNkd/UK4yJwEbgL7ja
ZoX1ROQM16q9e+H1lZzh+sJ8Izp/9P7DCuc4aC/QAJP7nBOsnyOHYn6Qw6Hr
YMwz9n8K5qLQQKOFXskYiBzDeV/NC9fzyZluUPvczLpK5jBzeWmw3mxdNd9/
CI7X5IRnwd8E61/XVvHiXNn3RM7RBhTmM9Hlo8+/ifU3mHslp7qqMIdMrjUh
tr4YfhncAH5AS9w/WK/HnGJunResVSGnY75dEKw1Q6OMVhl+lXWB9QGtdYvC
2hI0YGjB9iusFWQNYC3YpXD8JicbqvaFwXpI5jhz/aJg7pQcb0jhnBadJnpN
ct0/grk4cmLiX59g7QSY/cLq+cHu1Gip1cJn18jch1oY/PRGmTWN1MrgIOEi
2UNyQXU/xj41M/qjD36QXE7+SwpzfnB/N7ImsjbruDKuNFAV303eTP68Q+Ea
FnkV+RX80saFa4lgcvTUcJpwm5nu/07u34vcneeDL4cvvD5yDQs+q0cwVzqi
wlf9C1/LPcA7cEZbZNaYwCWdzxxJvGcB/NQ3+N5wBBfJPjuYO4YjID4vDsYf
cBi9ZB9ceO8MmsTteBep66LUR9F3dQvW9g6v4hEcKFwoGuBahesDceY+1Ia3
LFyrI8dh/8XmhWuXaMbQ7x4ZrHdjz0GPwnzoq5E5Lvg19LXsjUGDV4/1I/jd
8xss0Pt6ixgbGWMM57cKjk3U6KjVDQmu3VGTozaHxpo6HZjhOvjGYG1GHR33
yT84uNbSWcdM8LD6fpF4jwt7XYYF1166R9Zuvx6sj8bfsTA/i4+aJfzrbcG1
MWqk4IM2wbEMjQZaDfTuW0fGNFfJbhEc+9GUoC15MJjr451srvaoYC4OzpDf
m/uDPa6R/WluDT28FPzUaOZWMHeFxn6b6vvuGpkTO6GKb6z9aAjQEpCDoI1F
00pusm/w2raH/FOD4w+1IMbocn3enTpqRsZ0VwRrPMjvBzHGdb+DgrUwaFjQ
slCDZh8M+2H+q94H+n04OeL7IcHah5+r+L9z5n1ZaOLZz4L+dmFsjeD26ls7
+Fk5d1hhPTF7rdCENuHewdwgHAf60l15v7H3yKCvP1D2TpE5RdYrONIdM+tp
4U7HB7fJAckF4TTb5H6fcJ2Ng/XUaOEaZtb7w63CoaC/hEPdMnNMhFt9Olh7
S45GrrZVsF6YHIRc5JPgvTzs2WHvzhHBen5yMHKxw4P38uBn70+nzPoRNHfs
nWoXrPdnz84pstsG76VaUa2vHwbvv2CPUjfZhwXr59mjcVphTne7zHtI4Hq7
FOZSj4m9v4h6Ed8dTnRs9fs2jIwpwBbEDGIHuubt4QBya/XRWNwv38e5xwZj
BD3nOh2Xx97zNF++vUvXcsBsYDf4SvIZ8CK4kdonc5s5hR5gEBgwdn0HvpTa
Jfoy1mD0YAMya8m4J3wrtVD0Xawp6N2I79RuwGBgsSHyXxC7HkW9n/gNH3Nv
6nznevkvi10PR+/A/hm0HpdHrq8Q3/i+I1PzedRuiT3Ur6j/nxSc25LDksvu
FYwVyTXhbz5OzeegUZunc3sG8z/klujT2O/IXETTh17s2ODclxyaXHq70rkK
NTr4NeYj+ho4ALiAOqXxJzVB+LWDg/kTMCJYcevSfDw5CbkJGhT0LeTQ5NI7
lubzmMPM5Y7B3AE5O7k7+wvRA/GZ6Cfuzrx2wj+g7xmTezyemllftUdp7QNr
Pms/+j/47eOqMTA+93g/M7NeC90h+kMwF/w6ui70XdwDfvx02cfG1lfB35el
a+P1UutrWpTWK4LhwHI58Uh27dR6JXRd6LuIQe2r8cv1o1Pnv+jwiGW1IusB
Wwd/FhgYLHyw/PvEzvnR/7E/FCzQL3L9iPHOWCXnJPdkvxSxkDWMem2NwmOL
HJJckv2dcMdofh4E36Tm23R5NC0xnmCskuOR66H7Y21Bz4feEE1cg8iYG+zd
IZgbgTOBO0H3hv6NGEh95UgdB8fmGNAfoitEX8g9qLfsFpwbUcOD7/s3NbY5
uxqDTTLH2sWsobLzYK6MfR/vZl6/wCpogPYtrAdYkBmjoxWiZvVJZsxMLWts
cCyiBnaQ+m8UvP+KfVgLM+N7uHw0RlwP/mRvJDWsLar1c3JkTdI+8u1fVLWy
yFwQ6yNtamgHFq7vU0ejzwFVvrC+9ha53g+ep1ZAjY3nA//OjP1MPBv18gGR
Oc4J1e8JFgOTLdRYWqzj2jhaz3GjT0eP0SI3ZqCemxeu7bKnl98bDQTcIjUY
9iMWhdd61nz4rztS1x3gXKlXoqdAd4X+qmVhTRR1B8YQ9d29C/t4J2mwBoJa
JN+B/RvLcnN7YGDy8ddzcx3EaPgR8CO5PXvk6lb5Ark5Gu6dZLfUb7K72htH
1hvvJrtx7D3e7Ldm/wTYBigNf49GlLlCTk5ujkaVsUeOTa7N/mu4NTDS3Wqf
FszdoCGC325SOv+l5kv9YnJw3zNS10vYf7FTbIwyQu0GmddmaqAnqU+j0vk0
NWLqHacHcwlokODjk8zY9cIqZi9I/N3Q0+6V+Tvz3dGxw0eQ31B7Q7O5c5Xf
kJuSQ6IPQS9CXY36Wn35Lw5uk9P9kTtfQhvDHEEPg/5m88zXg8/IdydnzqG4
/5a5cxX4WvSE6GPGZc7pyIfg78FmvIOpYKLCenJ05fAr5HfkhpzDR7xnbDJG
NyRf0/VLEuOFrhX+h4sgxoPvp1YxBwx9dfAezOMyY/pRFX6mLkx9+MTCGmVi
CvXbmcH4pW8Vw9Hqouk9NLJmlv2icIhwiXDurUqvwXCP5FSszS9XMYz68Oxg
jTc190aR90YS/+Ba2TN3dOE9Xf0zYyD2er1YxXQ4x4HBGmHWFOqtbwRz+HD5
7PlqXTp/R4eOHv35/P/3VLaJvNeS90XdGcwEdmIP6mGZMRZ7U1nz0Bajj2ct
ZLwzlpgzU4JrDNQa5vL7ld4TtzozpgXbwnHCdVJfQ3uDXqt3Zo4AbT2cP9w/
+8kal+bcd06t+f+nyofYHwfHA9cDJws3S30ObRB6sfMzcxJo4cm3wC5oIOET
ya/YD4eGGP4HvQe5Exp39B2sWbdljnnEPvgQuCMw1azcGAYsw5xGe/9isBYf
zMN+KPZQrsyc85H7wdG3SF1DIF6Df8GirPEfq/1b8F4AOG24bfAttffDqt+X
34jfCkzBfnP0cewb4JpVVX7DWonmHv4OzTjacTTv7KVlz3GvzDkee5FrZ+bZ
4Nv49wfYE0FdkfoiWhbyQcZOq6o/+TR7dakJURtiTwU1QXKEhtV8QZeAPmFe
cD6MNqFZNX/YU8Degu9kDwjG83BlrMlo/8mPqMGS45DrML9aZ8ZY+Mmn4NJY
018NHo/oHNA7zAnOL9A6gHnQtpMPMJcaVuOV+XVo5pwCrTzz/fvUz0f+em9u
bvTA2PwfeIg2e1o7FJ4TzA009fz7AUcFf1dy0Ifl+zN1jZWcgNyAPRvUean3
os0hnyFWgFH4fGoM1BpYA9D2kS+DxdhzAV9KDYNaBvVTtKXkW/xbGeRo5Gpg
OGoZgyNjOzTp1GGpx6L1ZP1gbwf/5gfrzawKE/KbzA3GoOwdYL/L+Crf3iYz
hiC/5vf6KPUzkb93SR13ib/s/2OPC7wt/C177cg/4UrBjDOCD9oHV/zss8F7
RcB87H+Ej0FjAKcCtzJc92oYe48h6xvrKXsvWHMnBvM/aDvRiMN/wcejaWeN
+7XiQ35JPX/gM+A3aLPH5vfg+Lg49Xggf6dmS+2WnKBdaUwGNkOnRL5HvPw+
M4fEeIdzhXtFtwH+IydC6wAHRK7EGo22gXfOu6dmTO2Y/KFtaT6fOi312ldy
7+m9NDNnxV5fOE+4T/aw8e8zwJ+idSVGoX8l3qOrQV/zfYUn0TqhYSK/hV+l
FkPOSPwkJhOb2TPOvz9SN3gvPnugngre80QOQoz5KPh52NfE/qZlFR5jTxoY
DixHTZF9gdSIye+Jb+wVnwfeLl0TZm/y/Mi1Ymq47AMFk1DbhW9A14C+YXTh
9aFe5n+vBT6CeN8o8xiHT6DGTa2bejhaY/Yos1d5VmR+hJoye9fYc0CtmfV1
SWbMDF+LvgFtOf/mDvtJqcejDeffXOHfn6EGx15a9nisqeIh+4TnRNbvkWPV
q+o9aLPR88EVoKOCHyHHItdCc432mhoftb71+E72d8G/FRw49SXqB+yxIedA
K8ucY+51iP3vmVBDZ+81GJDa+tLcuTg1zbuD4wv7+tDo8+/pTM2tvT899r9X
Ar9MbY2cfl5uvod3i2YO/gf9OVwgGn703PCDx0Te07Y8uAZJLRJ9BtpE5jsa
H+Ysc5c1j7UPXoF6Cus5e93Z33poaX33D6nXZPhJagTUCtBZkd9Qk6A2wZ5T
9kv+GjzWeIZnc9cf+C5wIFNy87lot9tX82NObu4EDmVthW9OyrzfCLzFeO6W
mXNibx/1iPW1x9jr/6JgbRvzjXogNVtqt+hBJlZ8Fb8FOfm4ar1EB8c1XwXX
7KndsyeLf0+GNZu1mzwdPQH8NtoB/k2IrQuvuay97NHi36Mh/h6bmQNjfUL/
viz1/Ibf/T+jxZ6C
         "]], Polygon3DBox[CompressedData["
1:eJwt1gmU1WUZx/E7c2fuHdlEEFGbUvZNAWFmJAI0pNIoMrAFMEBkqFEEjF0Q
JOgQCrIJAyKQuGZJZoVHPB6OWwoeA0lIEQZQRBQF2RQVsc/TO+fM7/zf5/v8
nvf//ue+W7PhY/qPLsxkMmupmL7OZzLV2UzmHJpTkMk0ELctyWTaFHnSHp4O
uUymO/2aZ4Kixtg9nlXYw9h07VnYYc+L1K/WzxNqG1JLfb3I1wu7Rryfvwm2
iLeemjKsnNpjV/DdLD9Z7kK5as/WeHP5FvQm1pKnktbyTZWfhh3yHIytwHJ0
C7Yfu0btGM+xtAUr5XlTe6ax3K2/z3lLea6mKvwmeoWvCd83qIV/VCvsAO+V
PO2w3fJb1J3ErsIupq/EC8Wz9buX/+7i9L+9BLuU2vGUqR3Ot4PqyC1gKPe/
eli7I7abr0LcnR7HumLvYt8RN1X/ifj3ap4wps2edfPpfZdrV9D3eLp6xw18
XdVdIveUuB/NxxrwFKkdo64j9itsG/nLzJPron68ujtotNoNWC9sm3gvvYQV
q/su9mH8rvLN9Xcudh0t0dHZ8d3YWO/ozHcz3xSqVPukXDO+lvKto4234imn
Wdr1sEK55zzb8rXSbhO/v1wbnoPaE4x1pfg++jb2HjYaWyK+h7rFXFG7A9tk
PEex3tggbLn4DI2Se1fdg8b4RsxJrLf4AfFQvlXiQnXj+A7gA7DFWIfaeZPP
p7kfa6B7/D7UwTu+T0PwoSG55z2X845Xc8a3dBFX59NcjTl7v7q11F3dj71j
nne0k5vKn+Hrhd2EvUMXQMvkzsbnyi9Vl6FmajvxDeF5tvD/KDOfrwD/Y8xt
+gO2lOeH1EP7Hb5rGV8WF/Ldz/NNmhvvwJ5WP8o7pvP8li7jaey987EV4gJa
wnc93asun02/QfwWb9NO+op/KV6p9jPtcTGXvbdnfLf859hk7CDWB3sE+wK7
AzuGHaXr1e7Gd9EZuWVyI7Fd3nujMeTxz4xpRD7NrZhjk/Eq6sR3Yz7lw9cP
+5e6Y9go/ezUf0fvvVduA9451hHPW3Lnqu2MDdXeWJjWcazn42pvwd7GOmHb
xK/gWXF9zxnqy0rS/I15XNfzNqwr9rT+OnlHRexh+miMjVNfwteI7yy8mucU
Nkn+ffwADeJbj3dQ24Vne+yN4iN8ldqv81xkLLdhE7A6sR7191feHmqnYA2w
C+I7sZ7Y69pb6Uu5BfoYhv1HvI1OYwuxG2Iv1t7qvX3EF6t9zDte5pmEzREf
wc/jG8B3GCuItYJ3xLphL2Ld4v+JrVE7kTaKK+gfxtwwxkzrxZfSQ1iBeBit
Ften8dj7+p2jv1LfUYb9V3+dxY/yfSv2YOwFvj+JL8efj98y/sdyq2I/pDWx
/2XT/hH7yCy+8+N3xF6L9Sv+JR1Vm5W/Etuo7ifYh9hp8dWxl8e6wpvEulf7
TMxn8eOxr2EfFaU9pbe6+rwbeC6jLrRcXJf+pt021jotE/flPaDmVPw+sW9j
O2Pc2jlj+VRuePwW2GCsCDuGDcZ+wDsi5j6NjD3P8xP8N/re7vs+4Osn/rfa
gUXp2+IbB+bTXJsY5w5fDU3XVw9sk3wv/EL+h3JpXc7IpvkY83Im36fYrdhe
cYX37hBvjvWh/7m0Hj8kHpRPY40xX6W/5/RXR/26bDrz4uw7Jfe7OONiLmv/
M/a12DdzaU7E3HgKa47VU/v3bDob44w8HWsH+0vsz7QGq+G7nRrpr1T+MbWl
sdb4/szTnlbzHZc7iY8V7+Etx+7DcnyPYq3jN8N2xv5iLG18R8f4ffFGPEX0
oHYzWsC3gqcvTc2mPTb22nX6uzaX1tm8krTGYq29VrvPz9XfCbnz5YrpEe1W
VK32aOz32KviATHvsRb6aohtFQ/MprtI3EnOiXUtHkQ1WHusPPZJ8abYi7CF
+mvAtxnrn01nZJyVFTRC/Gphuo/FvazIN083vnLtMupTO3efrJ3LMacniSfH
PFfXlKeRb1mpr59hR9Tuwq/DNsf5hJ3A9mFDYh/LpfXxjH56Ug+aIv5pLu0/
87Xf0Od2ujP2bexU7IfGd5f4F7l0Hizmq+HZU5zuIXEfaaG9zzuukPs4l86c
OHsmYofF443lLHHjuH9iy7Ef0Wz9HcL78j8rdyTua8b8Ucx7uZni93Jpvse8
H6P2gPio/qri/xn3GrnbsS21d624c52M89tY+vN9rL+vow6bkUtrM9bol3HH
wqZhWd4HYs/NpnHGeN+qvVfF/eqLOK95bsVzWMO4y8R+hP08l87dRSXp3Izz
syaXzqs4tyrjPi9+Qe1wudm0Ls6a2MNpmNqXCtN5M1+c0c/K2Oez6fxfHN9K
p7U/iHue/g7GfTz2E2w/NhLbh52gKuw4dlj9HPF5fIuwVbGPxZrW/7FcugPE
XWAadlzclG8x32pxcdz9+f4HhxiMmQ==
         "]], 
        Polygon3DBox[{{1668, 1003, 753, 754, 1004, 1669}, {2036, 879, 734, 
         733, 1094, 1730}, {2055, 938, 809, 808, 1197, 1821}, {1615, 910, 
         1162, 2102, 1488, 1489}, {1698, 1047, 828, 829, 1048, 1699}, {1621, 
         916, 1167, 2103, 1498, 1499}, {1493, 1492, 2074, 1014, 1015, 2075}, {
         1503, 1502, 2078, 1019, 1020, 2079}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j1PU2EYBuCntMUPFBp/gI0kLiZ1gFVWRFus1spHa2LCQIKDrvALIDEs
DGpcjIMuBOKgkxpj2sQYVIwgCrR+EB2YjIs6cp2Q9OS677bP+749PScmblZu
pCJi3nW+IyLJgzwp3MpG5PQF5nmPp/mAA3zMEl+yzqcHIibNvtev61Pyjjwj
73KOf3iH//mI6U5zPMYmh6zRtnfJ7FrS2dLL6Yh1/SI/8RI3WOFnXuYXVrnJ
C9avmb2ib+l1eUTelkfZ4hjbHOdX1vgt+S6/818m4pe9h83+0M/xp15w1o96
ng3m+IQpPuRfe9/mb85yyW+qmp2WF+VKsp7PpvS3yTn5gkUu8wzvs8C7PM7n
1u63d9Fsj36WffoHduurPMp3PMIVdvEND/M1DyX3x3rX5INyWb4qN12OFQ3a
Jl4xm/yvzCRno1sSz+gVp7zZm9p/XvYALspHcA==
       "]]}, {
      Line3DBox[{1419, 1939, 1940, 1713, 860, 1712, 1655, 1969, 2290, 1582, 
       1420, 2122, 1583, 1421, 2123, 1584, 1422, 2089, 2124, 1585, 1714, 2066,
        2125, 1716, 1586, 1715, 2229, 1656, 1718, 1933, 2030, 2282, 1717, 
       1941, 1942, 1720, 2230, 1587, 1719, 1657, 1971, 2291, 1588, 1423, 2126,
        1589, 1424, 2127, 1590, 1425, 2090, 2128, 1591, 1721, 2067, 2129, 
       1723, 1592, 1722, 2068, 2130, 1725, 1934, 1593, 1724}], 
      Line3DBox[{1426, 1658, 2031, 2213, 1970, 1659, 870, 1427, 2000, 2001, 
       2302, 1594, 1428, 2091, 2131, 1595, 1867, 2092, 2132, 1868, 1596, 1726,
        989, 1869, 1597, 1728, 2231, 1660, 1870, 2032, 2214, 1429, 1661, 2033,
        2215, 1972, 1662, 2133, 1598, 1430, 2004, 2005, 2304, 1599, 1431, 
       1731, 2134, 1600, 1871, 2093, 2135, 1872, 1601, 1732, 2069, 2136, 1873,
        1602, 1733, 2234, 1663, 1874, 1603, 1432}], 
      Line3DBox[{1434, 2034, 2171, 1433, 2002, 2035, 2303, 2003, 1736, 1876, 
       878, 1875, 2094, 2137, 1878, 1604, 1739, 2236, 1727, 1880, 1605, 1741, 
       2237, 1729, 1882, 1606, 1435, 2233, 1730, 2036, 2232, 1436, 2037, 2172,
        1437, 2006, 2038, 2305, 2007, 1746, 1885, 882, 1884, 1747, 1887, 1607,
        1750, 1099, 1889, 1608, 1753, 2240, 1734, 1891, 1609, 1438, 2235, 
       1735, 1610, 1439}], 
      Line3DBox[{1441, 2039, 2173, 1440, 1758, 1759, 2243, 1442, 1737, 1877, 
       1738, 2244, 1443, 1110, 1879, 1740, 1444, 2238, 1742, 1881, 1743, 1445,
        2239, 1744, 1883, 1745, 1446, 2138, 2040, 2174, 1447, 2041, 2175, 
       1448, 1765, 1766, 2245, 1449, 1748, 1886, 1749, 2246, 1450, 1751, 1888,
        1752, 1451, 2241, 1754, 1890, 1755, 1452, 2242, 1756, 1892, 1757, 
       1453, 2139, 1611, 1454}], 
      Line3DBox[{1456, 1773, 1774, 2247, 1455, 1760, 1893, 1761, 2248, 1457, 
       1762, 1894, 2176, 2095, 1458, 2096, 2279, 1895, 1763, 1459, 1133, 1896,
        1764, 2016, 1460, 2021, 2294, 1984, 2020, 1985, 1461, 2140, 2042, 
       2177, 1462, 1778, 1779, 2249, 1463, 1767, 1897, 1768, 2250, 1464, 1769,
        1898, 2178, 2097, 1465, 1770, 1899, 1771, 1466, 2098, 2280, 1900, 
       1772, 2017, 1467, 2023, 2296, 1987, 2022, 1988, 1468, 2141, 1612, 
       1469}], Line3DBox[{1471, 1664, 1775, 1665, 2251, 1470, 1666, 1776, 
       1000, 1472, 1777, 1901, 2179, 2099, 1473, 2101, 2180, 1785, 1474, 2118,
        2295, 1986, 685, 1475, 1001, 1667, 1476, 2217, 1668, 1669, 2216, 1477,
        1670, 1780, 1671, 2252, 1478, 1672, 1781, 2181, 2070, 1479, 1782, 
       1902, 2182, 2100, 1480, 1789, 2183, 1790, 1481, 2119, 2297, 1989, 689, 
       1482, 2071, 2184, 1673, 1483, 2218, 1674, 1675, 1484}], 
      Line3DBox[{1486, 1974, 1975, 1793, 1935, 2254, 1613, 1792, 1677, 2142, 
       1614, 1903, 1795, 2143, 1615, 1489, 2144, 1616, 1491, 2145, 1617, 1493,
        2075, 2146, 1618, 1796, 2116, 2284, 1945, 1798, 1936, 913, 1797, 1948,
        1949, 1800, 1937, 2256, 1619, 1799, 1680, 2147, 1620, 1904, 1802, 
       2148, 1621, 1499, 2149, 1622, 1501, 2150, 1623, 1503, 2079, 2151, 1624,
        1803, 2117, 2285, 1950, 1804, 1964, 1625, 1963}], 
      Line3DBox[{1505, 1976, 1977, 1791, 2253, 2080, 1504, 1681, 1962, 2287, 
       2078, 1502, 2194, 2046, 1500, 2193, 2045, 1498, 2103, 2192, 1801, 1497,
        2077, 2191, 1788, 1679, 1496, 2076, 2190, 1787, 1947, 1946, 1495, 
       2255, 1943, 1944, 1786, 1016, 1494, 1678, 1961, 2286, 2074, 1492, 2189,
        2044, 1490, 2188, 2043, 1488, 2102, 2187, 1794, 1487, 2073, 2186, 
       1784, 1676, 1485, 2072, 2185, 1783, 1999, 1998, 1973}], 
      Line3DBox[{1506, 1978, 1979, 1806, 2047, 2219, 1805, 1682, 1980, 2292, 
       1626, 1507, 2152, 1627, 1508, 2153, 1628, 1509, 2104, 2154, 1629, 1807,
        2081, 2155, 1809, 1630, 1808, 2257, 1683, 1811, 1938, 2048, 2283, 
       1810, 1951, 1952, 1813, 924, 1812, 1684, 1982, 2293, 1631, 1510, 2156, 
       1632, 1511, 2157, 1633, 1512, 2105, 2158, 1634, 1814, 2082, 2159, 1816,
        1635, 1815, 2083, 2160, 1817, 1966, 1636, 1965}], 
      Line3DBox[{1513, 1685, 2049, 2220, 1981, 1686, 2050, 2221, 1514, 2008, 
       2009, 2306, 1637, 1515, 2106, 2161, 1638, 1905, 2107, 2162, 1906, 1639,
        1818, 2258, 1687, 1907, 1640, 1819, 2259, 1688, 1908, 2051, 2222, 
       1516, 1689, 2052, 2223, 1983, 1690, 933, 1517, 2012, 2013, 2308, 1641, 
       1518, 1822, 2163, 1642, 1909, 2108, 2164, 1910, 1643, 1823, 2084, 2165,
        1911, 1644, 1824, 2262, 1691, 1912, 1645, 1519}], 
      Line3DBox[{1521, 2053, 2195, 1520, 2010, 2054, 2307, 2011, 1827, 1914, 
       937, 1913, 2109, 2166, 1915, 1646, 1828, 1191, 1916, 1647, 1829, 2264, 
       1820, 1917, 1648, 1522, 2261, 1821, 2055, 2260, 1523, 2056, 2196, 1524,
        2014, 2057, 2309, 2015, 1830, 1919, 941, 1918, 1831, 1920, 1649, 1832,
        1202, 1921, 1650, 1833, 2266, 1825, 1922, 1651, 1525, 2263, 1826, 
       1652, 1526}], 
      Line3DBox[{1528, 2058, 2197, 1527, 435, 2268, 1529, 421, 1230, 437}], 
      Line3DBox[{1537, 1653, 2168, 1536, 434, 2267, 1535, 433, 1242, 446, 431,
        444, 1240, 429, 1534, 2269, 442, 1533, 2199, 2060, 1532, 2198, 2059, 
       2167, 1531, 426, 2265, 1530, 425, 1233, 439, 423, 1213, 423}], 
      Line3DBox[{1539, 1845, 1846, 2270, 1538, 1834, 1923, 1835, 2271, 1540, 
       1836, 1924, 1232, 1541, 2110, 2281, 1925, 1837, 1542, 1236, 1926, 1838,
        2018, 1543, 2025, 2298, 1990, 2024, 1991, 1544, 2169, 2061, 2200, 
       1545, 1850, 1851, 2272, 1546, 1839, 1927, 1840, 2273, 1547, 1841, 1928,
        1241, 1548, 1842, 1929, 1843, 1549, 1243, 1930, 1844, 2019, 1550, 
       2028, 2300, 1994, 2027, 1995, 1551, 2170, 1654, 1552}], 
      Line3DBox[{1554, 1692, 1847, 1693, 2274, 1553, 1694, 1848, 1695, 2275, 
       1555, 1849, 1931, 2201, 2111, 1556, 2113, 2202, 1857, 1557, 2120, 2299,
        1993, 1992, 2026, 1558, 2224, 1696, 1697, 1559, 2226, 1698, 1699, 
       2225, 1560, 1700, 1852, 1701, 2276, 1561, 1702, 1853, 1051, 1562, 1854,
        1932, 2203, 2112, 1563, 1861, 2204, 1862, 1564, 2121, 2301, 1997, 
       1996, 2029, 1565, 1052, 1703, 1566, 2227, 1704, 1705, 1567}], 
      Line3DBox[{1581, 1959, 1960, 1863, 1065, 1580, 1711, 1968, 2289, 2088, 
       1579, 2212, 2065, 1578, 2211, 2064, 1577, 2115, 2210, 1866, 1576, 2087,
        2209, 1860, 1710, 1575, 1061, 1859, 1958, 1957, 1574, 2278, 1955, 
       1956, 1858, 1709, 2228, 1573, 1708, 1967, 2288, 2086, 1572, 2208, 2063,
        1571, 2207, 2062, 1570, 2114, 2206, 1865, 1569, 2085, 2205, 1856, 
       1707, 1568, 2277, 1706, 1855, 1954, 1953, 1864}]}, {
      Line3DBox[{699, 978, 861, 2290, 700, 987, 870, 722, 1398, 1399, 2303, 
       877, 731, 1125, 2243, 884, 740, 1126, 2248, 1143, 893, 749, 1000, 1154,
        902, 762, 2186, 1013, 1294, 909, 2142, 773, 1022, 920, 2292, 786, 
       1031, 2221, 929, 797, 1404, 1405, 2307, 936, 806, 1228, 2268, 943, 815,
        1229, 2271, 1246, 952, 824, 1044, 2275, 1257, 961, 837, 2205, 1057, 
       1318, 968, 848}], 
      Line3DBox[{701, 862, 2122, 702, 1397, 871, 2302, 723, 1105, 1280, 878, 
       732, 1108, 2244, 1127, 885, 741, 2176, 1129, 1144, 894, 750, 2179, 
       1146, 1291, 903, 763, 2187, 1162, 910, 2143, 774, 921, 2152, 787, 1403,
        930, 2306, 798, 1208, 1304, 937, 807, 1211, 1230, 944, 816, 1232, 
       1247, 953, 825, 2201, 1249, 1315, 962, 838, 2206, 1265, 969, 849}], 
      Line3DBox[{703, 863, 2123, 704, 1082, 1083, 2131, 724, 1106, 1281, 1107,
        2137, 1282, 1110, 1128, 1111, 1288, 2279, 1131, 1145, 1132, 751, 2180,
        1155, 1292, 1156, 764, 2188, 911, 2144, 775, 922, 2153, 788, 1185, 
       1186, 2161, 799, 1209, 1305, 1210, 2166, 1306, 1213, 1231, 1214, 1312, 
       2281, 1234, 1248, 1235, 826, 2202, 1258, 1316, 1259, 839, 2207, 970, 
       850}], Line3DBox[{705, 1068, 1069, 2124, 706, 1084, 1272, 1085, 2132, 
       1273, 1087, 1109, 2236, 1088, 1283, 1113, 2238, 1130, 1114, 1289, 1133,
        1147, 1134, 1377, 2295, 1374, 1375, 765, 2189, 912, 2145, 776, 1171, 
       1172, 2154, 789, 1187, 1296, 1188, 2162, 1297, 1190, 1212, 1191, 1307, 
       1216, 1233, 1217, 1313, 1236, 1250, 1237, 1388, 2299, 1385, 1386, 840, 
       2208, 971, 851}], 
      Line3DBox[{707, 979, 1070, 980, 2125, 1072, 988, 1086, 989, 1274, 1090, 
       1112, 2237, 1091, 1284, 1115, 2239, 1116, 1409, 683, 2294, 1376, 1373, 
       752, 1001, 1410, 1002, 1351, 2286, 1014, 1015, 2146, 777, 1023, 1173, 
       1024, 2155, 1175, 1032, 1189, 2258, 1033, 1298, 1193, 1215, 2264, 1194,
        1308, 1218, 2265, 1219, 1414, 691, 2298, 1387, 1384, 827, 1045, 2224, 
       1415, 1046, 1355, 2288, 1058, 1059, 852}], 
      Line3DBox[{708, 1360, 1361, 1071, 2229, 981, 1074, 990, 1089, 2231, 992,
        1275, 1092, 2233, 1094, 733, 886, 2138, 742, 895, 2140, 753, 1003, 
       2217, 1350, 1005, 1157, 1016, 1163, 1333, 1332, 2284, 1165, 1338, 1339,
        1174, 2257, 1025, 1177, 1034, 1192, 2259, 1036, 1299, 1195, 2261, 
       1197, 808, 945, 2167, 817, 954, 2169, 828, 1047, 2226, 1354, 1049, 
       1260, 1060, 2228, 1266, 1372, 1371, 1358}], 
      Line3DBox[{711, 982, 866, 2291, 712, 994, 874, 2133, 727, 1401, 1402, 
       2305, 881, 736, 1135, 2245, 889, 745, 1136, 2250, 1149, 898, 756, 2181,
        1007, 1159, 906, 768, 2191, 1018, 1295, 915, 2147, 780, 1026, 925, 
       2293, 792, 1038, 933, 802, 1407, 1408, 2309, 940, 811, 1238, 2269, 948,
        820, 1239, 2273, 1252, 957, 831, 1051, 1262, 965, 843, 2209, 1062, 
       1319, 974, 855}], 
      Line3DBox[{713, 867, 2126, 714, 1400, 875, 2304, 728, 1117, 1285, 882, 
       737, 1118, 2246, 1137, 890, 746, 2178, 1138, 1150, 899, 757, 2182, 
       1151, 1293, 907, 769, 2192, 1167, 916, 2148, 781, 926, 2156, 793, 1406,
        934, 2308, 803, 1220, 1309, 941, 812, 1221, 1240, 949, 821, 1241, 
       1253, 958, 832, 2203, 1254, 1317, 966, 844, 2210, 1269, 975, 856}], 
      Line3DBox[{715, 868, 2127, 716, 316, 2134, 729, 332, 1887, 501, 1888, 
       335, 510, 1899, 351, 758, 2183, 377, 770, 2193, 917, 2149, 782, 927, 
       2157, 794, 412, 2163, 804, 428, 1920, 533, 431, 542, 1929, 447, 833, 
       2204, 473, 845, 2211, 976, 857}], 
      Line3DBox[{717, 1076, 1077, 2128, 718, 1095, 1276, 1096, 2135, 1277, 
       1098, 1119, 1099, 1286, 1121, 2241, 1139, 1122, 1290, 2280, 1140, 1152,
        1141, 1383, 2297, 1380, 1381, 771, 2194, 918, 2150, 783, 1179, 1180, 
       2158, 795, 1198, 1300, 1199, 2164, 1301, 1201, 1222, 1202, 1310, 1224, 
       1242, 1225, 1314, 1243, 1255, 1244, 1394, 2301, 1391, 1392, 846, 2212, 
       977, 858}], 
      Line3DBox[{719, 983, 1078, 984, 2129, 1080, 995, 1097, 996, 2136, 1278, 
       1101, 1120, 2240, 1102, 1287, 1123, 2242, 1124, 1411, 1412, 1378, 2296,
        1382, 1379, 759, 2184, 1008, 1413, 1009, 1353, 2287, 1019, 1020, 2151,
        784, 1027, 1181, 1028, 2159, 1183, 1039, 1200, 1040, 2165, 1302, 1204,
        1223, 2266, 1205, 1311, 1226, 2267, 1227, 1416, 1417, 1389, 2300, 
       1393, 1390, 834, 1052, 1418, 1053, 1357, 2289, 1063, 1064, 859}], 
      Line3DBox[{720, 1328, 1329, 1079, 985, 2130, 1081, 997, 1100, 2234, 998,
        1279, 1103, 2235, 1104, 738, 891, 2139, 747, 900, 2141, 760, 1010, 
       2218, 1352, 1011, 1160, 2253, 1021, 1168, 1335, 1334, 2285, 1169, 1344,
        1345, 1182, 1029, 2160, 1184, 1041, 1203, 2262, 1042, 1303, 1206, 
       2263, 1207, 813, 950, 2168, 822, 959, 2170, 835, 1054, 2227, 1356, 
       1055, 1263, 1065, 1270, 1349, 1348, 1271}], 
      Line3DBox[{847, 967, 1325, 1264, 2277, 1056, 836, 960, 1256, 2274, 1043,
        823, 951, 2270, 1245, 814, 942, 2197, 805, 935, 2195, 796, 928, 2220, 
       1369, 1030, 785, 919, 2219, 1170, 1337, 1336, 772, 2254, 908, 1321, 
       1161, 1012, 2185, 761, 901, 1153, 2251, 999, 748, 892, 2247, 1142, 739,
        883, 2173, 730, 876, 2171, 721, 869, 2213, 1367, 986, 698, 860, 1067, 
       1327, 1326, 1066}], 
      Line3DBox[{853, 972, 1395, 1267, 1347, 2278, 1346, 841, 963, 2225, 1048,
        829, 955, 2200, 818, 946, 2198, 809, 938, 2260, 1196, 800, 931, 2222, 
       1035, 790, 923, 2283, 1324, 1176, 1341, 1340, 778, 913, 1322, 1164, 
       1331, 2255, 1330, 766, 904, 2216, 1004, 754, 896, 2177, 743, 887, 2174,
        734, 879, 2232, 1093, 725, 872, 2214, 991, 709, 864, 2282, 1320, 1073,
        1363, 1362, 1359}], 
      Line3DBox[{854, 973, 1396, 1268, 1061, 842, 964, 1261, 2276, 1050, 830, 
       956, 2272, 1251, 819, 947, 2199, 810, 939, 2196, 801, 932, 2223, 1370, 
       1037, 791, 924, 1178, 1343, 1342, 779, 2256, 914, 1323, 1166, 1017, 
       2190, 767, 905, 1158, 2252, 1006, 755, 897, 2249, 1148, 744, 888, 2175,
        735, 880, 2172, 726, 873, 2215, 1368, 993, 710, 2230, 865, 1075, 1366,
        1365, 1364}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
/q+T6XtmnxP6N3f3Z6m/6Nh5xpC/pVs+qymQv+R6v2jgSe3Gw2oL8KxL+C4t
zuG/3o2f/SLAb3rQNxbz9eyeL+stmO+bBQnPoZ+l3fphXwv0k7xkwzTos+jV
Jz5PJn1S3kl5KOWflCdR3kT5EsV1ivMU3ykOUVyieES8STxK/El+Tn5P/k52
SXZK9kl6JL2SPgNe7zBAf7oalLfx/QPtC9QhnymwWA87jJrtehzyX90ZYgk8
3w0cgIdddeYHj+fAqvQVwK+2qT/wsx9+hPD4D0zfOAnzdVsSfg1ynJxCt0LO
4YdhbdDPgIu/vWHPUxamshg3qtuemafjPwz7154pj6e8nvJ5yjspD6X8k/Ik
ypsoX6K4TnGe4jvFIYpLFI+IN4lHiT/Jz8nvyd/JLslOyT5Jj6RX0ucK7ZAs
yKfrnBHfXkL+O/+SVcDzrl7DCjz8qzxKG3gkthgaAL9yP2ngZwPWHdXh86jb
F3sAX68oUTvws6zi+jrIERYvVYF+OhPqmjn9sGns1qh/+Jmp7spf9y8/U11E
dRLlG5THU15P+TzlnZSHUv5JeRLlTZQvUVynOE/xneIQxSWKR8SbxKPEn+Tn
5Pfk72SXZKdkn6RH0ivpkzWpfcvhYOm6V8I3BXjOTt6kgnzOPFhsOvBaDm+v
QfsKLRsh2AebPK0Dcq6ZRjtCzokfnsg3mCzLbSeQbwy66fdvvsEoug549Pmf
fIPqTKo7KX+muojqJKqPKI+nvJ7yeco7KQ+l/JPyJMqbKF+iuE5xnuI7xSGK
SxSPiDeJR4k/yc/J78nfyS7JTsk+SY+kV9Ln/doAN3ym646x8sLAb/6gzwjM
d+DDmY2QcyEvyAlyeq0ZgvyZ0Zc9FYj8udRc6d/8mdEID4r+N3+mup3qeKrf
qc6kupPqTaqLqE6i+ojyeMrrKZ+nvJPyUMo/KU+ivInyJYrrFOcpvlMcorhE
8Yh4k3iU+JP8nPye/J3skuyU7JP0SHolfeYcv3oev6erzaR9bZDTY63FHujn
4KeZ9eA3pzZjF4xb3l0PMmLPJKegHjwmqAdpH+Tvvohgf4PqdqrjqX6nOpPq
Tqo3qS6iOonqI8rjKa+nfJ7yTspDKf+kPInyJsqXKK5TnKf4TnGI4hLFI+JN
4lHiT/Jz8nvyd7JLslOyT9Ij6ZX0eSM/aBT0Q9eZUdbhGLfvH35/g7lu/hn6
1J0p2N+gfSXaZ6L9JdoHoX0R2g+hup3qeKrfqc6kupP8heoiqpOIryiPp7ye
4gXlnZSHUrymPInyJsqXKK5TnKf+FIcoLv2tFwS8STxKeMjPye8JP9kl2SnZ
J+mR9Er6jH+4/yr0SVfSZ0z1+UtDOb6i66+ttw+Dry5pGm6Cv3v4Bh4FDyg5
R0jBj+QzAsTdOP86Os5WAe2Lo4UN0f4j7+l37vfMtvwIi8GcnPPKz29Dzt0r
pV/Qfqj9AdqZ0t1f+fakb6/+oG5fUhsOOcxF+eW8HJmMYGeMmzC+CuMyqdse
9kP7S5voa8A31t3tIuSV/tzB4yR8hJdwvpIzagev0fVEdUgO/H3xbtdo5Elm
Y06IoF1EuaYU7fKflydhvCkSLb8QL/Z/yZWBnALlskS0vz3i8xu8ouYSJ4v2
JI+YUMiJMzWVAJ9ser6mHHJEbof8hNxj/arb0D5C8m4m2jt2S4cDZ1abog3m
PevZekm+3hTokfRK+iR8hJdwfpbechty6Rp904jnw5AxOQxwtqzVO+PMydm0
4Ygp5NRXT9VFe/iqFrSzc5r2m6Hd9MStq/j96Br9uxjHIFOnAXJ265wdjM9P
y1pPgHevfwzj63RpnWujgPNHnJqYG9ZnzKBlkEPrTetP6056JL2SPgkf4SWc
X0fn34R90NX4YgsfN+9lH7+Oz5OVPqCdZZZK8/s5S5+InoSciS86IYcNX1XM
y9lo5t0H81Q6Wn4L7acX7+XHLZ+zxhq/T4s6CJxsRJ03j5PskuyU7JPWm9af
1p30SHolfRI+wks4O3Pv4zNLV9UPunz7vfxnJyAnsNJSl98vbMvh5dQWJvbF
vFaP3oBx2Ys3jfhxP1ruBX5m354w4GTzNK7yOMl/yJ/Ij8guyU7JPmm9af1p
3UmPpFfSJ+EjvITT2zL0GuTQVbhcia87pj0THQq59481BcF+1o/bVsLnA1fS
YT+M65Ww3/DTReOcePshPye/J38n/yF/Ij8iuyQ7Jfuk9ab1p3UnPZJeSZ+E
j/ASzkMTa7/jM10fPv/0CO1jNCqOA2eclOkO6Hn9xa6+kEN8RPxEvER+Tn5P
/k7+Q/5EfkR2SXZK9knrTetP6056JL2SPgkf4SWcrxKWAd/f66yFQ3icp93H
JfvFRae+uevusz//Cdv7uHSDg847Rm5qa3XlrGz2q5hWVIVPBVtr8UZl5Y92
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
RaxHL14Pm38p/UI9NfbT/MFYl1m/B7znz1mV+6Ziv6m4skEE6zJdQ08cePZW
PdmDdZH7UD4G68Lu+dULevA9ZJ4KOwvy26WAdem6ZX8SeJz/4R/YP8XBtw+U
YM/sOuYO7IdZsbCYt5/F9iZRuJ8o1OCH+4lscXBWf4xr3PPJUuyb1W2x8MY5
jjVflVyAf2Zp/A7oZ6Bke3/UlXHLn0gCz+2AhyNxf1Y2QqSAvy95qXk45Lgs
NJfAfdJX/bc1/l9l5x3VxREubFCMiFiiCIrdKAbsHZWw2DWxi8aKxl4AQQEL
YMEuFohYsGDDgh1jRBFZe+9YULEGGwqiCWD37vvLPBzDPfd85/t3z5zZ2dmZ
nbLzPK+cz9yUGttH8hmxp/w1eS670dtmynqw1dCcp1LP7069XyH7ZoO8u7SW
eujiPuultIew1Mhjsn/VuV92Pzl3Nqjg5/GST8D6q/I/Qru3/OEHqZ99IQ2K
SXmWLva0k33I7n7+NtKukjZ2eS/5HF+cPUWe62rbOgnyXPN+9+4r+czdqC+X
5xp9rZenPNex5FHPpTw2Z9unyTwjpHBQaZmPlE618JX5xjy/ORky7/TuMsnE
Vd870s9H5odXnKqEyTytZ4E//5D5VT4Lv62S/o3qL7Xz9JfL3Ytrsv7x9jra
Wfb9fv61qml96jn8g/x31yvdmGIr82iL+y99JJ8O6y4cl/lol1WTn8l/7XZ1
p3tJ+jdLf9wl5TxRYNw+WRccPljAdN+Tqn3ezdM+3Wpa2Mi6eMrbhbuk/CFl
Rg+QfDgPwfkIzkXgX8DHgIcBfwE+AzwG8P/4APAAwK/Cs8Kxwn/Cg8KBwk/C
U8JR4gfBF4InBB8Efgi8EPgU8CvgVYC7hsOGv4anha+Fq4VHhU+FS4Vbg2OD
X8M/go8EDwm+EvwleEvg3uHg4d/hwOHC4cHhnOGe4Z3hBuEI4Qfh6ODq4Onw
nuBBwX+CJwVvCj4QPBp4NfBpsB5mfcy6mHUp61TWp3gQ8CLgQ4Dzh/uH94d7
h4OHK4frhvOG74ZzhnuGd2bdxTqM9RfrH9ZDrIPgVOFW4VXhMOEy4THhEuEU
4f7wxeCPwRuDXwbfDJ4Z9k3YR2H/hP0F9hvYZ2Cdz7qf9T7jN+M54zjeBDwK
+BPwCOAVwCcAJw83Dy/P+pz1Out01rGsa1nPsp5kfcm6kvGV8ZZxFq4VzhW+
Fc4T7hPuknNUnKviPBVeHjw9+HnYh2Jfiv0o9mvYv2HfZuC1Dx7yHfindAsv
+Q50j9VD5DvwcF09M/muzupaMVK+q+eHRI+QfJivM39n3o6XAU8Dfgb+L/K/
kf+M7Hew/8G+B/sC7BOwP/DO3rW/fPd6zKg/X7575QoEzZByPnjiXF+e1z7i
+1Yy7hR2chou+TDvZx3A/B9uFo4WfpbzZ5xH4xwa83vm+8zP2ddjn4/9Pfw1
+Gzw2MC347PBY4MXBk8Mfhg4fzhF+ET8KfhU8KjgT4H/g/vjfzz/5/kvz39u
/nvzv5v/u/zv5T8v+1DsS+XuRylPAd4CfAWUH28BvgL4f3wAeACoH3ggOCA4
ebh5eHk4eTgb+Br2tdnnZn+b9RvrOdZxrKNYV7GewpeEPwlvEr4h/EN4h/D1
4O/B24NvAv8E3gl8Dfgb8DbgO8B/gPcATxbeLHxZ+JvwOeFxwn+EDwkPEt4T
PCj4T/Bf4MPAg4E/Ap8EHgm4cThy+HE8XHi58HHh7cLjhb8LHw1+Grw0eFjw
suBjwT+CjwQPCTw/fD9cPxw7XDvfVfxf+MDwgOELwx/GPAHvFR4s/Fd4hfAM
4RfCp4Nf5/V/x30drwzjPv4UfCp4VPCM4B3BN4LHAa8DPgf8BfgM2v53HM/l
+BnH8ZrhOcNvhgcNLxo+NP5P8L+C/xTs77Pfzz4/+/Ls07M/z7qXdTDrX3xD
+IfwDuHZwbuDbwe/DL4ZPDPsg7Mvzn44+8jsK7OfzP4v+8HsA7MuZZ3K+hQf
BH4IvBB4EPAi4EPgPDHnizlXjD8OnxweOf738P+H/z78L+H/Cf9N2if2/CT9
dLOnZ3Hpp+7zjsZLP326suoBWWdNO7fnjqyz6t8PHy/5sI/Gvhr7aXiL8Bjh
L+KcDeduOG/DfwX+M/B/gX159unZn6/mXfyjfJfuT/u7lnyXSn62OiTlTD4d
+EKe99HyYjNlvvFH/HDT+Rn249ifY18OrwSeCfwSnM/mvDbntPlPxn8z/pfh
fcMDh/8NbxoeNfxpeMHwhOEH47wa59c4t8Z5L85/ce6L80mcV+KcEv9j+D/D
fxm8PHh68PPgtcFzg98GbwseF/wt/K/l/y3/bfkPyn9R/odmDp0+ydz/rD7D
ftWdS1GP9CulK+3o8uaFtqJVC8u2Rnms4mqMcXmWqjdbr7lmVn2u2dxZFGEv
8xnznXXaG/U2sFZcRSejPPgO8B/gPcAXgD8Ab8A4xaXDqcOnNzFznpTP/6zW
6fg/U43yaPvL5r8j5cmo1qJoe+O+c8LydTLKo50pkt5dyjN04+qw0kY5Sww+
5GaUR6uxKr+tlAfuFw4Y/hduFo4WfhZOFW4VXrX8sK5Dp7U8rUdFf5l9wuWR
XnPmtvIBPdI0/BT4KvBU4HfA94DnAT8CvgQ8CfkVr26l+HVbxa0XrejfJ6Tl
aW1+YlY/477asNU1Ksh94bHhs+Gy4Znhm+Ga4YHhg+GC4W/hceFw8Wvg28Cz
gZ8CXwWeCvwO+B7wPMCHw4vDicNXw1vDWcMnwyvDKcMDwwfDBQ+vMMPjxoEn
+tdB/Td+nb9Biz/WP/rHic+0mVm7T/ktSdU9PGt/Caq1Rd/Xo9Iic+Vn6J1+
NAF/DN4Yk0dj2MEEvCz4WCR9pYAtCXhQ8J+Y5rHFFiXknbdLPmZfN/yv+Tl8
Gt4LODXzf8vjgkcBf4LZv+VxwU/Q5Jt8jPK44APAA6DK45J3Xm32b3n+1/wZ
nhb+++E39SD/J+CnWQe1f7VsyVe/s9q1gb2sLxv9cY+dw1bpj4NDv0xvbfTH
o68sw6U/rj21uLL0RzvXmK1ljP54Mbmyu/TH151OmUt/xEuCpwQ/Cb4P/B94
P4r88GiJmfFdWhaxcq98l5KODLoh9w3KvjFbvksd3o4fL98lC8sjjeS+DaaG
bLATj4xz2eHyXToR0S7H0bgvHD5cPjw+fDu8O5w7fDi8OJz46l0zZk01+qPn
jopPpT96R+x66W/0R3wx+GPwxuBbwb+CdwWPCV4TfCYtz7gGTDe+M65VOx+U
70wZ68h0yR8PAl4EfAh4BPAK4BOAz4fXh9OHb4d3h3PHa4PnBr8NXhg8Mfhh
8K3gX8G7gpcBTwN+BrwGeA7wG+ALwB+ANwDeHv4e7n7mj0cGGP1dc2hXJsM8
dIN+d12LjdLfmwx98NpPePsynvaTa23RJuxu6i39HV4dfh1uHa4Yzhi+GH4V
nhWOFW4fjh9+H+4dDh7+Pd/cwIInjfYRs9m2jIwbMy7suSjvEb4X3hfOFz4W
XhZOtk+XxSnSDjKPjHCScSDkdtgFyQdfAP4AvAGf96X5S/qJ1ZqXn2Gkt6g5
IJ9pnFIcPlw+PD48OXw5XPmVZ6HR0r7DHfdYGe1R87WvbC75wFG3U1w1PDV8
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
nfE94X/C+4RfAN8AngHizBF3bvY380OJu0McHv5zEbeMOGbEL8N3g/8G7w1e
GDwx+GHgLeEv4S6JB0N8GOLCwGnDbcNrwzPDN8M1w+PB58HlETeOOHLEj4N3
hX+Fe8VzhPcI3xEeH7w++HzgTuFQ4U+J00PcHuL1wEnCTcJLwu3D8cPvw6XD
qcOnwyvCL8ItwifDK8Mp49vCv4V3C08T3iZ8TXiI8BLhI4JfhWeFY8UTgTcC
XwR+AXwDeAbg5+Hp4ejxf+EDwwOGbwL/BN4JuEo4S/hKeEj4SLjIXD5Trafg
U+D34DJ7frPeEY4R/hKeET4TXhNOE94S/hLuEt4S/hLuMpdXVPwi3CK8Ivwi
3CL8JDwlHCX8JDwlHCXlh8uk/HCPcJDwj3CPcJDf8o9wj3CQsk6k3trmWfdR
z/CIcIjwkPCRcJHwkPCRcJHwqPCpcKm5PKriU+FSTytedJjiR48qbhReFH4U
bhTeEv4S7hLeEv4S7hJ+Ep4SjhJ+Ep4SjhJ+Ep4SjhLuEQ4S/pFzy8QF4n89
PBV8Fe2W+EDECyJOEJwV3BW8FXwmvCacJlwlnCV8JZwh3CG8IXFwiYtLPFw4
Q7hDeEPi5BE3j3h5xKMlPi1xaTm3AGeZtx7gLOEr4RXhF+EW4RXhF+EW4S3h
L+Eu4S3hL+Eu4SrhLOEriXdL/Fvi3sJVwlnCVxKfj3h9xOnbVGO+08e4R1pp
i4dtfy54TvN977HB6taLXE4SbhJeEk4SbhJectaaSjc/xD3SB9cv2u2Xguf0
08lTzks+cIa53KHiDeEM4Q7hDX1tvwwwyqOPOVxrcnsjn9YX7FZLPnCScJPw
ksdVHOfwPHGc4SfhKeEoqzlPKCTPe2HBbyEdjOf9YeuYk5I//CE8IhziWxXH
2UHFcR6o4jjDJcIpwifC8cL1wvPC8cL1wvPCGcIdwhvCGcIdwhvCK8Ivwi0S
95c4wMT/hRuEI4QfhBuEI4QfhD+ER4RDJJ4i8RWJqwjfCO8I5wjfCO8I5wgn
CTcJL0n8YOIJE0cYXhF+EW4RXhF+EW4R7hEOEv6RuIzEaSQ+44LrxUosfJ+i
uU19PGDVrSva3VLrp39p+VJ7U+1M+QXvU/RBgb1uGNd1Cw/bPXI9ZfDhKUZ6
vX2Mt7bSuN5t55cwud7rY+RcI702tIF5nHFde7o5XZfrta6e2y3zoqh9mTZy
nvTh4Vb7Zd4SPNxxTkCrh1pIow9VGoy6pHV1m5LTPThNm97zxDCZ54zOblZB
znU+O7T3rqSfnqBVMtLrN4efr9hw1CX9bei8qj2CJf7sq0eS/tPBFV6ynqpa
ZMR2ST8woFGCpA+cM6R8PSP9u0/FPkn+V1R/mZOnvzy/tn+5lLP/gZTxMp/M
f7HaVcnn/ZAUdylnxu5T9vWNcl5s0tNR7kt887KqX3iofkGcJOImES/Jt/c2
+V+vD6xuXkP+17v8WOqy/KcmfhLxlIij1DsmU/6Pa6OKbrCX/+N65Tam9JZR
J17JebzfYrzPTqq1RR93p4qvnM/Jn3kkSvaRFhwMqiH7V8V+avVC9pGIw0Rc
JuIx3Zwea+m/JFXbGvTbVP9aW7TXK/cPkHwiapbOln2wn4KOO8l+VIDP7sOS
T589Vv3kfGCr0W718oVu0NJGLtok54VcT3b3lXNE3S+nLf06f4Neoc2X3+V6
qMtJb7le6OIZRyO93uZctyVyvWPm3Edyvuj3Gn32TjTuO+3amkC57/iiR0ba
Nd6j/5XSb5Scc3MO/fqPnDf7dOr14baN92jXnJ0D5FzcwZun6sv5tNJ3ArzK
GNfPPvP/Vc6nxab6fJX06VWPxLU28pnZ8fASOc/WJHtLBUm/XZ2L9VbnZIln
t0jFkdqg4koRT+rs0wdy/ke7dSunkJz/8Vvkl1/OY3CulHOmnC/9XcWdqqvi
UBF/aqXNqg2m82ea63s5LzHJYoApn2JtKh+Xevg53Wl3kFEPf5QbFS714Phj
MS+p/6CMlGxz/7OaXdCtDKl/4letV/GsiGPlaz3pgbSHZ0UnDDHqUw+eGx0s
+VyaWvO4tIcq9p6vpT3M7htyQvI5ktBD3qPWONb2sbyv3Q/Kb5H3Mv52mI+8
35Hrc56YG+93xod74XLdY2X4WLleMcA2Wc6FmseNipDrOTP+tDLaj775eq8L
RvvRLfYf6if3PWN/v09p472sdrrXRt7LV8eCJeS84tlwnzbtJT5c/6nd5L1E
aAGd5b2kVn/Tx964/qLAuwby3i2Hzywn6WcHJbnJe+9xquBYee9JLbs2k/Sn
XRqGy//IuLXfT5PnC3gVkCzPVbamRbjsU2d1KinnrrXiDQpvl+t47fHc47f/
v+KScL6H8z71/x9xOogfQzyZOur8W3baonA5N3DcalgxOee5Zmj9zVKeCi0S
YmQf/3PC8X1SztAn4dfker7/nlPViDNC/AniURCHYoRV498ln4sW4/+UeuhY
d0GS5JPYb/E2uW+3kVFFjfvq7U/U3STX1TnYBOIVEKdgtzq/0lmdZ8HPv8sj
aru0G5ukF7FSzlO2Q69LPgXjUnfIdyFxYc/Ckn8p13Zb5Hqg8vjfVV5/fP7/
V3yHXuv2TpD2PfXcjvtS/gNZE2MkH88lvouM96sXb91jplxfWDPRdE61dvYT
f7neZWf+WVKef+JP35Trt3z8F0k++v38ko9m3nO26Tytg/IX11M+4w/KY4wv
L0j588Ypbx4e6nPKS+2ufNTXzLtHyLmitiVb9JF+fMEytpz03w7BT5ZLf75f
58sc+U6cN3Oyl+t4xrsp73gN5RvHL49vHs/8G+UHP6R84UWUJ/yG8pxWV95T
fKcNlcfwkvIa4jPMnO89bapRnk/5C2dKeeofnfBExou2lYJ85dxhK++1x6T8
7ecdeybX7ynPON5xfON45zOUhx7/vI3ynOI9dVO+U7zMl5Sn+a3yM+MBxAt4
SfkATyr/NT7slcqDPenYup1yrrHHktVxUn47i82m88Dz7iXvk3PCQcObP5Hy
n07f/EKu91R+87LKd47n/IPyldsqf/kK5S3XX3kNkXH05PuY3yWfNxYlbeV9
DWvxtoeMxwUzs4bJfafVS7eT6xnKY47XvLfymX9Snnq89UnKVx+ivKh4Ugco
P6o6J++Ct+n4N/9t5fw8PiE8QiNOrd8k76vU2E5HTecBtyea3qPPMfdYeb+l
jrbJkPI/bpP+l1w/97xfqJT/Udn+Q+X6l3pppaT8YQedl8rzflq9Klzy2fSj
hY1cHzS/6+Ph0w7qr80/7jVrkKo7eXuOK7XGmD/0rTPCKjREK69Z9XrR5om+
IKjJh1bPjHFha7LlqkuHtLDFKcEO/VL1pMbl4x/4PtcmPV5ccVbMea108tgI
n6cP9TSHt206tkvTVm+f/WzktIPa8Opps438tV2rGy+S/O9O/qnph/kheqXn
G3sa+Wu9Bvf7KPlvCH6RL/LSIT0ord5WI3+tb8vv10n+nk3mO8yMOa+Hju+Z
Y+SvLSkXbyv5V1Hf88nqez5Kfc+nlCo5NsMmxHXK1+1ZnvUf6w6rgqfM756m
/VbA6UGoUc4oP88PPY1yNnmZ/Lq/kc93avwumIcTuRFboOuRosGuFeY8yDby
0azyxQRLPgHWy97OM8pz4OnR2r2M8qxuGZkh+bxT48iOPONIZLfmpv8Iv+f5
j5DUwvdKlvH8qXvffz4dFqJPjDJb4WzUw/11lXYZ1/XvIzdVOhMWog0pPG+/
XB/pGvXgQv1UbYDN+68vjXq91rTDtZ+M+pxyOeWAcV2fO3BAmQzjfS6YOeSF
XDdtD9WIT8BvgdfCxDtsi0nAJ4FHwnQeYEtEAn4F+ErT9d1RLvgA8ACo/F3g
1+HWuQ4va/7NdbdtMS7wqdo3+Rj3dYHv/Pa+brujEuAXPb4ppzwXvB2c3fqi
k88MNeqlQ9Fbd6S9ZY4c01faW9KquD5Ge9b3nx49Sdrb0xoJd6S9bRzv/GaF
0d6u1ti+SdqbV4+gDdLekg7PrjDDeL85C4qclvbWaE21dtLePJxXXpT+Mnri
nN3SX4b1Xu4v+W89t7Wa0Z41y9jTkr8+PrL+Xcl/2Fq7tGVGfzl4Y8oV6S/O
UdZzJf9i10c5hBjt0NPZ29HXaId99AalJf8gNW7eUOPmOjVulul6KmxX4ZBE
m1+GdPEy2mFs8Ylu0g5vetjcnW+Uc+Pzi72lHf7p0uqEtMMFPYZNOVA6ODGy
/zxJr0frA0zpf13t92aucd8bLawWGun1VVmPjkn6g2pcvp9nXM43zs20D++e
Zx8+IslG2q3uHzy0XrLRPgcumLdc2mdF6xM7pT23zhjW1Liuvx5e0tRut6d8
trpotM9JNY+/f2HU3133UnHSPgcVqJ0q7Tmp1quSr4z3VqS18yW5vnXQnIfS
nssvj3tgtHM9J7KYqZ1/6PabpZGPFvjc+pSRj9asZfF4uR4TtSNGyqP92MLy
jlGeThXWH5T75npCpH1FRyTQrgJvW12Ucp5Ic3t/2yjnoQvVV0r6Qmpcdsoz
Lqv2qo37MiLDbl9UrgfjrhqXHfKMy+XN9+lGPes7gm4ul/dy6afGutSz6zMr
9xfWIa4hi4v1kfeYUO9MU3kvaWqe6ZlnnpmS7b7WeL/aQi17iLyvhustjko+
Da8stPYtFeyqFzrfW97vnrAcUz6L1Ly0bp556SI1Lz2k5qV11by04Bhfa6Md
6mU/etQy2qEWMHyQnbTDi+5me5dJvxj9Okn6xeoFtWdLu03PSRn4zvhujy15
OUj6Udq8ZcnSzit4tc43wngfLWaXl3FE+3xijWkc+UfNVxeo+aqfmq/GLWtl
afQvbUfGuHMyXmwb79VW7tvxl+pxRn/UOo8pFCP9pfnM/abv//DYf8ItjfEo
Y5+f3Fff+Ka86b5Fwx0/Gf1dP9vA7570x2klfH6V++orvfZJu/pzguWTdKNc
v2Y9SJd2UveK5T1pV+c7tj8v7WrVwJY35Hrnfu2l/Wg5KR+TzxrtwT7wePw3
7Uc3ncOKjnCh/VS/Okraj97ldspxI70W8OdqU/vhO5W2+Nwro50kDFTfqzKp
z48Z44U26HKhZvIed1sFpsl7/PygQrMRtiGJNQe8N5P3WGnozgB5j512L19r
jFP66n5/fCftJ593lVeSftDOZeU/fgxKdPk3veas0v9dKsLaGB+1t/UzPkp9
ekRMLiX1Gdq67SWpz6g1TXdKfd7wu7Ja6tNj6odpxnvUqv8Q1FfqM+VdpRyp
T9cX18uOMuolO6tPqNSn+eGD86Q+t/W2tjTGd725jUukfA/j249sLflnX+1z
aaXRTkY2GhMi7eTi/X5xkv+jEmNWGO9Ld1hbWfLXjl+IyZb8M9Km2Eo7Ke6y
Yb+0kws7I7wl/+QzxwKkXubkT2ohz33rb5dt8ryMW39en9w6pkF8rpcpeEZY
jNSL5ztHN6nXem37b5f0jEN3Dr1vZ6TP9ahkplt2kPSZkX6dpT9tvbXllqS/
GnjFTu5b9m3DLgtkPK+z5IZc36b2B/zy7A98cj9QUvKJ3X3KxUiv1d425rak
Z97wXZ59gHZq/Ludpzw5LR61lftWq5nfRb7f8a4t7kg+9NvFefiLfGqcox6a
qHooUXzfdsmnRtMvPWU+MnnKgq2mfFoMnSzlLLHuaE+Z75wNWb5ZrrdQ67pY
tc6zV+u7ePVdWKy+E6xbef4deTji+JLLdkj+06OdXOW+vj4LYiR/ezWfeBdp
1i96Z0zCb6r9f3FbsT6f0T7edP8wcciVQ/rM6+GTsox2csqhWqCU/5cDbq5S
zvVdt2yRfNwrpU420usNwyKXDrtySNt7vU6YpOe7zHeaOD6eQ9aVlu9XtVWv
F043ytPI06qWtE/OB0wr/st/4vvUuh3mtrzhY+2oTd1f5hUNcXUIDKtZuJux
fve7ES/9Z2+tSuEyPr972Lm35MN/WbOINv+Jp9O6UMLzZQ0f680L5fvNvHRI
4hyHHqMkn6lB4+/J9aZDf6odYBvi2nJkZV+5zvxv+pVmpvngLTUPLLX9ZWMp
z8wzT6trRUISn651aSDp+f9t9lb7T9yfcQOCf5H6STrseGWEUT9Dd87YKfVz
M6tJoJR/xOWxO+V74FhvxwAp/55eP4+X+k/3rnvAqE+997anSyX91TvLb0t/
fn93YIzMd5yibetL+vCcaGnnevSlFt2knW+rUTFZ3ovl05bSbrULtdt0lXZb
9Uk3U/vfp9rTT6p90a5kmvau5LEE+BK4Evw52/Zd93ljdyzXn6PSu3Cuk/Oc
oWr8YDxhHGG8TMvDYXmEbJX+rrcsbdZM+vuR+EhT+Zl3Wnv07W+0z1wvyvvL
WwOkPh3tyk+R9rbpQqUIqZ8QD9/S8rzZgxKayvfh869Lb0o+I7tZd5X6tD65
dalR//ok52PbJP2GbkdSpf4tf1jjJePb7vLJtaU+29zoKO1Nn2PXNTS0dLBr
5Fzd1N4m5UyZI/WfFJfiJeubxLVZfST9qnGmdqXd2/XlV+evQYnn73U3tauj
FTfdl+sBIzPWJn8f7HrnXScfuX5w4fdNJP+JVwd+/lg2OHHL6Cqm9rPDLcVf
ynnsjus5ee/m0T5LpJwx9Rfulvv+OuHaERn/t1l59Zf71uhePUrqoYKXTazR
T7Xj1j6Bkt7/XlIRmafe+3ufbvQv433sryvpB38Kle+2dnyJc2/5bv/x4anp
+8P6510evmy1xaat8l78dlftLd/tIncGmr7zE9T6rapaz7GOC1b+B4dPX8ca
7SThhmo/b8P/7c9f7/z3/E8ztR9yMc9+SPFSbU399pbqx31V/6Vdkj/tc5Vq
fztU+zySp33mjXNEO88bn2ha//3lpB1YBSedlfo+szzQtC4uk9iqqtT7NMfg
mlKvlUcPMq1nPzabUV7G2RI9Vq2QdhRZfXgrud47rGRV6c8zN9aS8V2L3jLa
Rq4Xd3IoLu2mVYUFsi7WG5UoblpHHMoqVVjW44sdZ8h6XBsQ6Wpav1SM8ikq
37UK8/o4yfeyap26ZeT6015traT/P762XdY7euALm/Zy/XX6ssPHvj7UBnea
VS2n+QXt4/P2nWrXStMc3WOTpF+1DvIcLO+/0YfFifIeX9f8OtBIr5fdOdjx
XfML+p5DoRMlffs6Ma9kPpx1cOYy07qjpf1hSZ+QePWNpNdmVXDJMtK73u7X
UdLnxDW7Je1pXeIHC0l/Lj7ihaTvduOfJVKe2K4dtGyjPFbrb02Q9DZ6erq0
pw3hOc5Sno73ej2X9GfeLDwq49O8M2XrSD7FWke+kevvHZ5J+9drTD21WN5D
gZZeA+V5q5/rsVnGoebR9p96GvkUmjf9ren7plUoJvVV3/H4Emn/ifEnTd/J
LQtnnZT11JrJ7ovkvrVC35jWX7M9ngZJvbsaEw55b802ug+S9CVenN8k380a
Odv7SnlWNg4/JeljzQPuSnkc59j6yXtIWDW0oaT/H7TqmiU=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 287.4900590697329},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0, 2 Pi}, {0, 2 Pi}, {-0.9999999999999496, 
     0.9999999999999496}}, {{0, 6.283185307179586}, {
     0, 6.283185307179586}, {-0.9999999999999496, 0.9999999999999496}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{1.5973004334667964`, -2.13794259658031, 2.0803443895120233`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.3926532516354923`*^9, 3.392653258455367*^9}, 
   3.392842323124848*^9, 3.492126661877*^9},
 Magnification->1.5,ImageCache->GraphicsData["CompressedBitmap", "\<\
eJykvQV8Jcl5r62rgbXXMWzWnNixk6yT+NpObF/HTm5uku/7cmN7be9qeDTM
zKRhZmZm2mFmZiYNs0YzYmbp4Hufgu7T0rR2/eXO71eaI51Tfbqqnv8L1dXV
f2g/qFvn3u0Hde/Y/nu/HtC+X7fuHQd+7z/7DuBPdf5bXFz8n8fF/bfd34tT
ryUuzvkR+/dd9cP7l//LPzTTr+tIYWGh83bcec/7P/K8X1paqn/7gf5ZT65e
vSoNGzaUtWvXysSJE+XUqVPV6v5Qv64vJSUl0qZNG5k7d6707dtXunXrJsFg
8K/12+9IUVGRvPfee/L48WNdrby8XH784x+ranHnfA7XuHFjmTlzptuc9u3b
y+TJk//anql666c//an+Ld7+7de//rVMmTJF/3bWc8i/s+/fu3dPdbQkJye7
dZYtWybf//739W9/Zf/28ccfy4cffljt2J07d5ZmzZrVeuz169fLu+++K+Fw
2K0ze/Zs+fKXv1zt2D/72c90U7zHHjBggPzkJz+p9djz5s2TunXrSiAQcOs0
adJEWrZsqX/7hvoZr5r2rn33V7/6lbRu3brat/Tq1Ut++MMf1vIt78jZs2d1
7zRv3ly/nj59usTHx8vRo0fNN8TVFYfSLl26qNef9xz6N7/5TbWvU53VsWPH
Wr6uvpSVlUn9+vWlQ4cOehDGjBkjly9f/rrbFudA6rtM/bi4z9m/KRb/4R/+
odoX/vu//7usXLnyrS/8oX1/4cKF8tWvflUxHhf7lrq2Zc632G96x3ZKRkaG
fO1rX3OpdX5//fp1NWr/u/2SVq1ayUcffaQxeN/9kvr63XrVvsRp0jv2PdXl
qvaGDRukbdu2cvz4cR+J1pXNmzdrbfC+AuIr9os99sN+Xd2aX6dPxenB3Nxc
9/Per/mJfT81NVXrRf32Rbf252sc2ZouZwi8J3Hdc9B/cQ/wBfdVPZ861zx1
/tn95J94Pmm/+DNr/5PP+1+0f/N0i+9xrnqO80v3LL7iU7u+T+0rntq/cGv/
qU/td3xqX/bU/rn6od9+36f253xqX/LU/qn73XV8PunXms/7fO6i54j/4PN+
XZ+/fdnn2O/6fO6C59g/cc/Wr11f8jniF3w+95Ze9BH/zKf2n/jUfssL6drf
8an9RZ/afobb+/53/8jjnPEc52/cs/i+T+0v+dQ+7an9gVv7r3xqf9mn9ilP
7b9ya3/gU9vP7Jz01P5Ln/f9jvOez+dOeI7zPfcs/va/UPu7bu0f+tTWbdCV
vWf+526dH/nUMb1Wz/uN5g3+eb/52+5RjPycCnGOo/Ae9Ks+zTjqOdi3fN73
M7kOdt5jf83nc0c8x47FDj/1qf11n9qHPbW/5tb+uU/tb/jUPuSpHXOQv/Cp
/U2f2gc9tf/U532/4/j13gHPcb7insWvfGp/26f2fk/tL7m1/9mn9p/51N7n
qf0nbu1/8an95z6193pq+5lAv+N8x+dzezzH+bx7Fv/mU/u7PrV3e2q/49b+
f3xq/4VP7V2e2vXc2v/ff6F2HfODt//Dp/b3fGrv9NQ2GvIXs9/ZOEbYe7wd
1Y7HO7/xqehnDbebihG34oe1faOuZ78n5H7897U22L9B9vuCPqfid6gPfD63
xRyiyj2Hj30q/sCn4iemYoVbsYFPxb/xqbjZVCxzKzbyqfi3PhU3mYqlPm/5
HcLPYW80hyh2v7vZH1lxg6l4076lkiCV4YnDsz5Yos/BfuhzsPW1H+w77sFa
+hzsv/scbJ05mAlwPyerV6/WWZ5TfvGLX8i//uu/6tcVFRUxH9ba5/g/8jn+
2urHVynh4MGDJSkpSZcf/ehH+jvUa9I/Y5jrVqOV163+K19WX+7evSsLFixw
j6RyKHrqW24j/EJVv1H4sc/n1pjvMhlGPVmyZIncuXPH+z2eJLyDz0F/4nPQ
1dUPGo1GZeDAgVJZWekeNOZfO/kc9O99DrrKHPS67dvMzEw9aWMP6Bdp+B3Z
L9Q3mXXcDfvWvn375IMPPtCn+afuaXb1OdhPfQ62whzMwbpr164u1l92D9a9
toPpd1dWPwS5sOTl5enfYglrz9q6rdoUg/fMlpnDPvd5y+9g/8Pnc0vNIZ66
39PHp+IvfCouMRUfuxX7+VT8R5+Ki03Fh27FAT4Vf+lTcZGpeF/9p9/p676y
gauTcftl1AtNbTNL4O92ermnxAc2PhBZz6fXJus31bHj/qfPcZ3s7OTJk1Kv
Xj17NubnuHHj3M+NNt+S7H6HXzrfNXYG78hG+nY9Z7GWs1hFvZW3RZbf1K10
Q6e3z+Qd2bJli55AevTokS43btyQkSNHSiQSiRtjzuK2+z1+KWxn/fML+m8b
IWM9J7KG8VrFiazgRJZRfQknsui6O7vm2zUmZayvbfeVK1fcvg4Gg+pk7Lnc
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
drHASERtCqM2hFGbwagTemDv2n9q7781EjF3uqXr+yHNsuocZymr9ifVl8MY
1MuVTlAILz0aUdfO9Ays8ifhmE9R0og6naIko69M8DOWqjhPrlXPNa+0Ra94
FbX8GtXYSRWlG0E3gm6i6CZqdRNBN5E8qx10E8y22kE3lXiXCnRTjncpRTcl
dGcx3VqId8nHu+Q+dmKwf5W0ewaflNvEZ+TxT8njH+FeHlyMyecmcdm1E1Y+
xGVnSV9OIZ/je4x8DpC+7FXyIX3Zjny2KPkQl20gLltL+rJ6uXUzpC+LSV8W
kL7MRT6zkc8M5DMV+UxGPhOQz9gJxGfjcDMk9MOQTxLyGYybGYB8+uFmeiOf
nsinm0pjBloJ9XtbQjqVqRGfeSRUJ+Zq6nvkE7sAh3ziVYCmNq/3ZjN+IZqr
nhI/BSn9KPUoIeUo6eooLb3WaxFGPf7P+7bSSfSp5nni8N/I2pdWRKlmK+gd
b/Q2w4iIaDrL7E963O6CeVbvkKhEFJXLdjO1G3ZHJbWbkvqSR0pEFbGb2L0i
UjdWZekbYqLOZbjYRK5nDYQ6TrmWhdLRl6r5Gm9cFn4rNos4IrIpv9ZRVdS4
HEc+ztyqqDkwV0Rff0tEgoik0AgpipCiVkgRHFCYbgnRPUEcUIDuqsQBVdB9
5XRjKd1ZQrcWI6LCZzYk+zfJeYgZuW9nA+ymPy9wQc8I0x4rHRGm3SNMu3PG
6ogw7Qph2kV0dI4w7TT5zQnCtCPkNwcJ0/aR3+wiTNtOmLYVHW1GRxvR0Tp0
tAYdrVxqvmMJOlqIjuahoznoaCb5zTTym8nkNxMnEa6ho9HoaCQ6Go6OhqKj
IehoEK5oADrqiyvqjY56oKNu1hV1xBW172u1hI5aoKPmNV1Rl2q5jlWSisk6
WD+k47bq64K0L2odNMvVHTW1qFRqildyild6UtJoZvf7blaiDt6sWO0G0qzI
7BzSTO1OlG92KGqW62xnpgO3WpT0jlWS30PurZKaqf90La0fcy3tB/KJ2oAZ
zexU+/VmmI2atW7UjqC5ZnfYs2oDSbWZJOUKUF0rNvGZo5v7NvJ5onaCsbuE
qI0fnNusMzw3I6obyWrqxru4TR0H1aiV6lGaVTOV8UhG5/raz7jPEwx4HFBd
LRx+ImLX7zhzZvbz5aJjNyOgujUFFK8UpKZaaLZY/UTpjijdEsmxGqK7gnRb
gO6rpBsr0E85jqgU/ZS8cJzPr6SAAC6PNCfHbquXnkz34Ihe2T2RnhHHPSaO
e+iIiDjuFnHcdSUi4riLh4yIzuw1IjpKHHdIiYg4bjci2oGIthHHfUIct4k4
bj1x3FpynVVWREsR0SJynfnkOnPJdWYhoumIaAoimoSIxiOiMYhoFCIagYiG
IaIkRDQEEQ3CIfVHRH1xSL0QUQ9E1M06pI44pHZ9rI34nLRAQ83RUFM/f9RZ
tIzqahnZ+bD2Ue+SJSWFNiEVgmkJ2XAu5pTi9T1Jnzd+KdHu5Nzcub+8xNxj
3lzt2qSe9pDQvEAdqnm+2f6tuVVSk6xPV1FdyczMlIkTJ9aI4pq4bsfvKcGe
u33r2qhOP5dAtqeJ8+zJo2qHZbXjbr7RlNqR9xJ6Uju4Xoe5m2qHPvi7a3bt
M0f7qt6wy268o3fESPPsWuBISt0mV6BvTfIsgfLMNqtTVcugKpViqnQkV0NW
8Xr2uU7MGWlZecUV0b+pSYIIyVBVRKVA0XpaT5/TWtIf49y9mVA1LX3J1ZLQ
BWK1FEVLEbQUweyE0FIQfxRAS5WvrZ5SLF//S4rJh4rIh7ScHtqr7nfpDvzR
m1tYHeK6l3Y/oCfEdQ+J6+4T1yUrORHXXT9m5HSJuO78fiOnk8R1x5SciOv2
I6c9xHU78UfbkdMW5LQZOW2wclpNWrTCbla8GDktQE7zkNNs5DQDOU1FTpOR
0wTkNBY5jUZOI5HTcOQ0FDklIafByGkgfqk/cuqDX+qFnHpYOXVGTh3wS+3w
SW16mVuW33OulDirSYyrUTME6jk+1abWWgTqKK0oZ9LCbpCr72K2e8c0LzE7
DxmJKIEolaiVqTGFZH+6OurIvn375IMPPvD6lkYu/J41JO/qZ3B84sRl5vEP
slftEa92Fjdbyis9mAvc35XLxTEp3CqNSUHtbqh2M1Qno3Yje1llteDZGcbR
Qo65T1lrodDex+5dDuhML6tjmXtPonV0fvNONRdTIzLToVg1IVRF9DX3CAqp
1DpRXqZCFzPTbHxKPVcH+n+jhTgjhi++JQahP4R+iSKGKH0Uoa9C9FkwzQii
KtVxKP8kZWQ5JaihmCynCDUU2Dm0HLKcLJxLBs4lDeeSSoSWctW89xRFPFKK
IEJLJkK7jSJuEKFdPWwVQYR2lkznFIo4TqZzGEUcINPZiyJ2oYgdRGhbidA2
E6FtJEJbh3NZgyJWWkUsQRELrSLmoIiZKGIaipiCIiaiCPVAijEoYhSKGIEi
hqOIoShiCIoYhCIGoIj+KKLPYK2KOGcPdxWlJeJVmnX3TKbFZqLVZUxvhGbX
BHaQWNKjIi73qk1IfbhlsI7yLOryTku7gVvLSrthid2jK7HEbOamtgFMLDT7
iCbmm82GE3OdDYc/TSpdu3ateXmmgSsQs0HXV3TFTShlS6p5CoqOxNJjkZhH
KdU8h5WLcS7fdFXy1G7vqFUSiO2+5agky+wIoVWSX00lzp3T1a9PqmMF9P0w
ykcE1Y/YTFmN7KW6TqqMTlTuEqmrdcLPioijE1QS1flLHSWVeKUSp2Y1ndTz
04l6L0e/p7RCT0VwHGGllTexoKuCXi1HJ2UkMiXopBjPUWR1kk8mk4PnyMJz
ZOA50vAcr/EcKQRiLy6ZzzwiEHuAVu4SiN0+brVCIHaZQOyC0gqB2KmdRitH
yGYOopV9BGK7rVa2oZVP0MomtLIeraxdTEBGILZ8vjn+IrQyfyYB2XQCsqkE
ZJPxIBMJyMYTkI3Fg6CV0WhlFFoZgVaGoZUktDIYrQxMEud2rp7WeXTBeXTq
gwPBebTFebTuaRKcREhrhmyaeuehbWJTV8km3isbz8VPFQ64k21tI/begfeM
y2ltt/jh/4TWlWZjqVZ2C0S1eWaLYrPVqo9y1FFqXTHuaCcQCKgd9b3aSfCR
mmcy4Kuy5ZV5oszON1ZCGeahJOoBJeoZJm9JqKiGx8Hb3Ct3PU4de1ivjKoF
X0gmN+juT2DuxA2ZOx+r3Vdm7yFT5x1Ui24/Q0VqqllFV1VhJympCjuF9yrD
WkhhKyZKufp0eVQLqU4NIcWZuYLPEFJdLSTB3IgSU7qNuH4pAaxSFTqqfGm1
hM8pRUsl9gEBhSQ0eficHHxOFj4n46bV0tXqWnpMFPbgtNUSUdhNorBrSktE
YRf2Gi2dJgo7QVJzVGlpk9HSHqKwnURh24nCthCFbSYK22C1tBotrbBaWjyb
aAwtzUNLs9HSDLQ0DS1NRksT0NI4tDQWLY1GSyPR0vARzsq692UgPqc/Pqcv
kVhvxNRzgBUUkVgnxNQeMbVFTK17WEEhpOZKUF1rEVScznFienIm4Oo6q8mc
Sbi6ahJbJT3qefDOXZwm3DMpQ0KbSrP9n9pdtJXdwbhlsdnYukWh2fK8BdJq
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
SZESKaqwiUXsFCmxiaTEAhAkARB9v9/MmrX3PgcHJJX39H0D6qBsHKw1M781
a82asTbibkkatEjXRuepdW3S2nddT/3lwfdG/iJagP9OMH28FnQKpjS4YZKS
exMqXfEnKQI1ttQVhRpfIu9RCkXdop479NrmubXan55dSs2pW/RZzmv3Oq9t
/a6lpoorX/XZ8IZp5LlNLeKe25oj6SCEDjsz7rAzXJmtvx7UcUsW1SJz3FIR
XMrYxh23fF6qfcUd99pP6Lj3Pu96ksuzQse9Th2389df0iLoUgz9HJojVSWb
8duX0vhtqUapftsqAsvNuD5/aHnUJbWZ3xZveEJ7BUT3W7zjdktzvYwX3zRJ
68Hdqrz7uh58aBoP7u+uxBbpsRzA8OLL1bAsqKtYpzWar3kHf7HTVuWxlbn3
3678s67NtUie/n4xAq3r9LHcIw6dd9yBfxg58N7jrlRflzlwKZ8qZVSvMLyt
+1x5Ve/ApfzfmXciBy7lAd/3Dhz8HljnSrjusaKfUtp1Gw5j8wpXaHsTjmQj
DvxVc+BrYw58FQ58JZr1/FRX0lAcuJQ4lFKHUuB7aYMrgSiFvxeaA58XOfCE
1E7M+Izmrcqj0/rv3NB/p1t7Z0Y72r4xxLWwJYSvRJbUdNd5if8dr9Kg25tR
+Owc+CRz4JPzY87bHPg0c+DTpbW5bpy41uazWRvONQe+AAe+yBz4EizySRz4
MnPgy70Dn+kc+IuM50vmwNc84dqbiwPfgDW+zjy8yXy8jQPfggPfjgPfwXzt
Yt72vOac+AHm8xAO/D3m9/2t7tkniI5P7bZ9bnTi3AHnxVvEi2N2l8WLf+C8
eDs61YFudaJjXaedF+/Fi/ex/O5XT95/Xkyy3xczv+jEVkjN4sdbbN0t3c1F
5AuXVNUv9V7Xrf+Bc+vxAs3+S5n2sbm5OfxcIs33+WIf8cf+WYSEzwQzcYPT
Uc5p0oiFCZlsaJgAGsaBhqZyrY6Np4cGX5TyrY4QxSZFjg7JZOjXurBNtqaX
erHaBsHW9EYGqTE7AA7+dMXDQUrIqJ53a9lEedz1uKA1yHneoHCI3UKXZ0kd
hqcbbTD+ILxfk8SGma4LhbJhXsSGtzwbnnLlf5PYYLV6pELl0bXGhC9rQwxp
jJGWDdtdJWKpSBxng2+8IS2MB7Ah2lB3bHCr+sw4HAwMn0kFQ3QImkyGzOtA
QQs4ZyVRwJEhvNp4RTdZXJso5+6VAurmNd0wWsNn+EW8q+2v2zNa9b/PV6OW
ytQaASjXxLiiCtYKhYx/0611faDLZgm50J/ChZ7jrny2NC+4ZucRyoWDrtx2
M0N9AS6cEy7sdFyQEt3SIOHYW44L0jjhkHFhrxXg37nKNVrYalx482nHhQ3G
BV9AcbX4MfFn4temuxK3wgUpN/60cUHKkC8xLkh58gXVrmSudNuZI43NpHmE
dOLBx840MERt9VLAYClhbgPdeDAqpROQr/br6NDh1/RGAtdUKCtswK7X30YL
a3IkhWVSruuRMtkaUUECJgsOZPzfwTQjgfVhd8t4I8Ec7cPOMh4SLDQSLBYi
xkjwDKOzAhI8a+2CV8ZIsHph1DL4VSGwjLgQWWYAEmyVGYEEO5mhd2WmmLH9
Gx0N3mMmj1qi4XEM7iQz/SHGdtba156HBBeFBBhaq5AAI7uK1rRhZO1o0DUh
wSlHgh60rPdsSIKwzq8orPUHdpqpCYieBAkFwBABgLp/J+7iaLo7OHbf5nP6
z5Bg27Ztwa233qr9pKqrq4MNGzaY2/90sG7dOrebcPCg/my6702Hg6/oR1c5
UdrFzMTxTccBTpvoeh9ID4SJTNIEK04+Fio0QoXGMu2fkJBGCtJhsdi1Vxhn
ZBgHGcZps7CCfhyEgEH73khfMTtqdVAQtanP7sn4fQVDne/3ONw1gqi327aW
7qrn7uNzfMjgCunaRk941X261uH1OEhY97R4ZZIBTKhKZoLuAI519SBCKEwZ
CIVXPRQWJENhWwwK78agcOglg8Efan1NqbMZh4I09pQGdRdToHDVQ+FdBwV5
e9rwzjZ7FAzxO0GSmC5UGBoetMYT1N3axG309LukmKEDeGBRQsJ3mOrUZPHM
kAMpdVMdOiw1JuEPVqOOgYKCqAVWh3bF8oskrcvX3CUoENHPadcX7aolV0Iv
ak1Xre7qaw3q+/NdDmRn51/V+XvH33fKdafpPu661YjjlxZg7ZZHfJmhu5Ti
+M8yzKdjjl/ajEk3R+/491ufQOn6KI5/uzn+t3E/b8iCVHYWlrquPK+Y439Z
diBijl/6SkhXH+nuI7s5T411rdOWyIK4znUDEscv3YGkX8Vsc/zSPWimOH5c
6wyrcuYdvyUuRo7fbcnHzkkz4+ekGXG/nxQB6KeyHAHkW34nqUG8SzOOzM53
xJ5aoOt/yWso6s34x2A6b3OGeX5tFC9/hjWKF8+/QDw/RvZEzPM/JcMR8/zP
TY88/yqJqSS2Ms+/XjbNzPO/YZ5/C55/G1OyA8+/S2I2id2E1RLLbYoathyT
qcWqTmFVp7Goj/D85/a539UsKiGeHxW5gqpcRWXaUJ0O8fyoUhcq1Y1q9aBi
faJqH3nti5V4txLUFgdkqfvXDR3XID5c/Q+RbsbSzNjEbaqmiwIMAa5dwH8O
WltbtXW1733V3t4efPOb39Q2AvLf5cuXg5kzZ0oLget9b7o2rX8aBQZ/FMyS
fuDMgnRlnDbZdRaTDmMTmbEJ0kvcioQ3goOGctedrJ7IoL7YdYJssA5m0s1M
upoZD7QLr3SKkL68Ce3b82ltjOaA0KddJrShr/RJVyB0CxAyXKO1z1mo0BVe
Aw73kcLoNIKC3bmPxQauleZXDQZRNZS0QNCLoZaG1RiEQEi6nBQHwmwHhA0G
BKkNJ+1CNy9NA4QX/Nb+H+vzpZ69J4I0HZHmI2dTiCAtTONEkKZR1z4pEbJS
iaCpN/4kIMq8cVjIcliwy0q26x8mvafECNqb8FNBrK92fOs/y8BwUTJsLmpC
pN8iahbpsNWSBQjNssnfHI8PMqP4oFmPbZuj7jVqbBkxRsRaN/rEm4z/5QBx
xgGi95TrASmtdqXlrvSGlBa8bSmAuMjonmeUP94dAUL6Th6PAULa/kr7X/m5
PWtdQ/UdeKNtAGKLbDEbIDYaINbJVrTsaNgVYgHEypmuV6b0zFxugJBemk8a
IKTH5iIDhPTenFvp2sgJIGaV9oeAmCGAKHSAmJYCCFeV1QCR7WvNDwaI5O19
g0XGDXqH/CgJGfrLwiO5ZGRM400CDHAhPZwdMmbGkDGn0iFjPn/wQsxwEQOw
GMezRM4/5BzEkLFcQik59JbzErt18hIm+DImuAYTfGWxQ8YGOW9hEt6U8xdB
BpOz3ZCx25Cxn0k8uNE94+hbDhvHZXtQznnkvEfOfWT7ULYRLTK/hLldNmS0
oUDtggwChk5RLmysR5TNkBHWS05uyeSMxaKGTGVGlmvZ3OJFdnJbdCfXcOGk
a1BsfDGOjUztZfDd77qWtX6j6Ic//GFQV1dnr27u+/Siqv6mP45o8YVgDgM+
a47r3TudiZjGhEhT9MlM0kQmawKTNq7e9f9trHZ/cR3UqCt1vYLriuXX1RXJ
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
8wuI80uI8ytocwe0uQv5NcS426hxDwS5F8Lc92gyeR66AXkkGpKfl0gI8hht
fqyRUOFwoqARvUEp1CmHOpXYQjU2UWvUaTDqjE1DHal2OFWpEyh1ZqdQZ3Hj
QOpoY8M01Fk/GHXsTpjUwEhLHdT3+GsuaWUAdbZG1Lmy06iDJ7u216hzIKLO
IDVq0kU/scbXQ2PE6Xcl1F0NW4GOfLgg22YXZdusWbfNWnpioJEjGWt746/6
d7oDFw12rily9FsvX0tYxHNFv19wczWGm0ylTJYLc9pDEbr069ZYpiFG8KJP
7NJXhpiMbwZ9gEwI4ynTjXR1OsJ0IO1IG3LVvauIMFbX42Moc8aaI5yEMseh
zAcXg+AIlDkMZQ5AmX2M3buM5S7G9R0os42x3ozreJN52MR8bGBuXmWeXsHl
rMH9vIQbepH5fAHX9BxzvALKPMO8LyMCfvJFv0P3R8F8dGUeOjMH3ZmNC5yF
Ls3ALU7HPU5liT4FxEzCdU7EhU5AD8fhVseim43oaAO6Wo/d1mK3NeXu/Vdj
t9XYbTU2Ww1CqjWOqSmQZXQtKKlD6pEGpNHFOAWy4d2EbTfm9wtlggYY02Cx
jmdMnV5TU87IFtlIuf8irelrhruYp85SnMNYZ3R3xJpczxrfCrhHWRPe2XQ5
ZY4yt4R5zGloY9Hgf7PrNO6o32+axXOZV6Whzc00JUlKy4nV3JXfkdqUZABt
YiWl5PuTrhyk0CaNqdp1g88ld4Wzsh7q4WMLRLUD13Ax6gM8EDe3xKqqGW00
Cmr3l2vgy2di3enbI8602BaG7oZ3DUYbVzTAlb7hS5cuXQq/lKUfhwTNzc36
icuXLwcnT54M+vr60LeBdPoze6CSxlOpyqgkRCqLUQntHoZ2D0OLh+VbTtiw
XGli9xOg9FOg9DOg9HOgdBtQuh0o/QIg/Qq5AyDdidxlYPk18Lkb+c0jwAm5
/5FkOPnQaBA4eR45PvVpVFQAl4rgUglcKsNuKrCfKuyoBi7VGZcajUvjjEty
101tI86lSseluSlcWgqXnvJcQtmfQ9lfmOaawie1OZwfFa99c6mrG5ham8lz
6WA6Lm1Mk9eyNZbXIlzaHePS/kESKlOS9wffkQvC7qIouuzI9WsYpBoMFS6o
6LpI2NTcqzFQj6HJiTurcXjKjKgUhj+Z+tFnAHQKlUQEReHxTVuPSEZIpvbe
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
SsPLfWnodd1bWZ8fNP3dn3ElVxzzBfG6PMKUYFlWFu9CmBl48ZqCS/GVqeHX
EDvZCvcKwyL91/xty0tdfsPQUyszTi2lVb8iS4mVEhL94Y25Jdnv3/nOd5K4
JZnwc+fO1VdZ9nHUqFHB8OHDg/Xr18u1rtTseHmTf5tErvu7IFOfp9OD4a4h
9Bn2W6WZ++heB7eGpPp1cOsD+trtGPLvr/ieOx50ORpCrl+nUCtNdmFIrREQ
axTEGj2yP8iFWHmYTwHEKoJYJWP6gzKIVQGxqiBWDcSqI+JqwJKbSl3Z/glG
rGlY/MxaR6y5nlh4hsUTkom1YrojltoA+i7EWpNCrE1CLHR9y4qbJBa6fhLv
9iG6fnaLEesdI9YuIxa63rbPiHXQiPWeESsWcfXbReEYsQY/21KVOC9fuKBf
EGQ1q+hmgSjepX6/wxCuo7QTq34Q9lzR4MtuAjvpyrQUDNsi9FGWfuc13TC8
1mu86o241SUbhl39bs39X8NAyx9n+QgrFVm6O+hRZcdYEl15XJ2155zE3I4j
72OnR0DWIczxALIX03wXZO0EWe8QaW0FWW8zEm+ArI0M06sA/hVGcA0e4yVG
diXe5HlGe8URH3P/l2CJFQ5ZyEzNZ9bmst6YzUzOZA0yjbXIFDzaJGZ7Al5u
PN5uLJrQRLjVgCesQ0tqWd9U4yWr8JaVeM0KvGcFmlU+xz23FI0rQfuK0cIi
tLEIT1yIRy6EWQVoawFam896K591Vx7MykOr89DwPC3dmlcsa8c8uJVX6J6X
B7PyNOEiL1dWrXlAKG80P48UIIVI0WgUo3i0OIcSXpYiZUi5fLpitHSKq7Ty
/9WjHboctvq0pnKILXDl0eWiLlfgwqIuG8EfaYvzcS7qCrk1Ob8PdvURecXY
VRyxa05p/3W59UxTf7BCupCn6Yy05pNc28KW3/XcSrlNfMxzK+Xalvye5pRr
W76BWdceSybcf1PXtgZLiQ+RlVRtJsol9O7bkcvtI2b67cMLnT7wUmIpkC76
mhQKKRdyuWirzfUwC/uZXYvTK4JXtJjtE255ES8h/Lrq6OEr9A1KrVuCs2fP
Bl/60pfCPHn/+tSpU+G+If+v1Dp48KDKkSNHwnSOOCT/zgindPrNZffv/bzX
YQ/IjtKwB2zL8AH5Jj46St0S/IQv/BT5yf2B/v+t9o2/UJLBrIy/0bOuOLH8
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
hXjjb0tv0SOlwBLTZOW5DYJvC2va8bTHADpgCB15OgGGzkk2+JJV6O6yHDDU
/t7yZ3e9A9Y3pivHLwMfeS9pTG/hE7LgSQY8QGcs0BkPdCYCnUkAZzLAmQpw
pvPMVOjMHhP2oDPfDx2Mc4kPOp8CndUfgs78CHR2fwQ6p3WLDuhotPIHJoUx
0MFgczHY+8x5PgHhI+b/yfEY6GC0bzHa4ks+6FzHlm5a6NQDnUY01XRfoZMf
gY4Tk774gKPpS4L/3L98rcgkD+/CQhz7lPCUhrRJfZlZ6JIm9eVeOfMKU/fY
JDDe+V/FjGzsSAbhNqyvsRoUD25+l9qgKacRbxjTyp7gdM/zuCvsLQHmtwxc
mhUwbmd6OaIpxQSlT2O1vd9vTjDL66XbaRG/yRsg86qW0cAPPcMnPQYy+fiq
+/isuyUWNL/yFaAx0/j7Hl4MaLDexHZFPCXWyjrU2L2cLu+fDPDhRWvC/J2X
vriLaB2HWSuSBYEeWFhvLaYn5/GHjLJlL1Kw2HSsd6SkLxNsY0Rp9JsNWqaQ
dE9HsTkodjZomYe3WLgQdYOW5YqWNXiTz0DL56DlC9CyGbRsAy07Qcse0LIf
73MYpR4DLadQ6tkDFi0XQcsVVHr9pEXLHdByj7DoAWHRw8sWLc9uuGr/kfMG
dRbdV7SgznKUWSFoQZnVhEM1KLMWb1kPVhrwno0oMgBWmooULUxLM1gJMUWh
cg8tTth3KNhxN+T0hFiEKu+JyLbedLPgP1bAOO8B5r0VM4VLdUA3aQBJmQJG
4OKtmAGXV/XNznNCqCeEUg9rmp371c3O3aqgc7My6FzVzP9McZNzvKjJOfQm
QBpidz6X3C0zv2mCc04q1JwrE+Gd5bOfkQr8jMVxXweZg1jyPsZuD2O4C0vf
7nWR+YGzITdyiMJ4NzyI1DzOwatMJSzIxtuMxfOMlvIt2/GwzPcg5r4vOuiB
JjrrWeE2eLg2c3QXZpruukzQXqBfdxKTG71/InHwO/vnCKKqkTyjGtzsLDET
5eNzoxhj+SIWkCERrzAGstge8qleriPVWRJTzPobptCGpy2QaYdpdODpmGSj
MFlz7mKa93Ylq/m/ze/ReYiewXcLw/pKKf0ywJH3SksKe8AZKcABNpkpIScL
2IxLDzkTMkJONrCZBGymAJppgGYGTw6wmcUHn+ODzYLxFjgGNtkKmykKG8x2
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
/NWoZp0egJD1BFlX2IVi9uIcDuAkjuDyj1+0axCyFnEBpVxGKddwLLdwMHdx
NPfE4eDy81HIIxTyRJzRK7vGIWsdr1DGm2K7/iHrICUooawy0q+6qtaumVSb
LeYa8YA1xtu79UtrjLe3qy7iT2vkMBOePu43zcE7s9YSjLkppFmiLO+8NqXi
pDlxyHlSGzI176UCcW6V9ffXy+rN5XZ3qWjf81LX1T/DactWdKEegyrW7epy
s33tRIX6RqX1ZsWoQXe7JI8NyK8dMI7ebIQ0aANvsy7GJ/5nm+nW2F2Uukq7
qyI7LLLTUq6LbcWFdjdGdmVeYoHPn9kdG9m5eQB272G1d7Dem7fsLs+lKyBa
UM38ncDyj57Eaxy3C4PyftuY802K+zVoYSWaWIpnWbgW70TgmYPHn4YHmrTY
bkiNweOPxOOn4bWG4/GH4PH749F6qwY74/E6jLI9JNv414+8qx1uOuDY+LyX
HnaSanldGiJXPsT1J4rrL/IqZST+2xP7sx1JDTri/zuSGnSssGlEJ3vJM7Gz
VuCLrSeubS1MzYne4Ti3Upx77sk8A5xIh76BvpIwgy0FuuL9ewyz/S774v0H
aEIwFHtMwvun8JnTRrre/l+dLJKAcSQBExib7AmMId5/KmM1HTvNwU7n4P3n
MY4LsdUl2Oqyefb9VmGvaxnvdXj/DYRpXzAHW9T772Re9qwjO3e9P0nAcUh9
chtzLN5/N96fOb0s3h87vsk83zlmvX/eafv+j9HCU5KAAoKAl+jjNfZcSGBQ
dKtl71+Ltuoeq/dHbwFsu+mF9f6h1+r9v8Lz+3aaXc9v1otaeS2WEty2sWFb
bOX37M9GTsa23PsCI6zje3XaHTb27KIsE4vtm6Affy+3rOTn3Ebkp0pC+Htb
XmzHy5Cz7ontp/qfPuzw3f0GvyOP9xx5B3X2iW2LbN7aXfNVOXFhl3VsGzRx
9oRH7RBIp4m6CTDV0TKDf+JMWGm28pxpoD6HyZ6DYS7AQJcw0SvJ9tYwyev1
dMEWnPUOJng3E7wPZ30ItB+9aLcQTzO5X+KsL0r0J0sDOOtb+Xbb8R4TmseE
5uNIHr2wW5OyRSlblS+ZyNey5FBqtzHfMYElVY42/qg05bFk71NrTMeZPVGz
O9pavCHZSlUwuvKaWcjQy5tF6pblaM5rr4KnNO/FLeOa8/DnuVVNzp1K65ov
E4Z/+a7GLsq8KleX8G2z4v8CvyxHhd7q0aFSvSdRqfivjcTbGkI0Gucc0OMI
pvubOOcms6krra3lUFNTg3vQ6UfmfK38GnIQSg5E1VfZQ1K15fbQVBVqr2DA
yuyxC3PAqlC2TLCUF9Dw2WN7GCsfi7rPJNwl1b510x7cuiJraljjWWKyU0zg
sZOa/Px3Z7csxxHKbWa+N2yzb70aHaxAD0twBAvQxxx0MhMHPXWxPWMmZ80y
cdAjcCwpOOhhOOhBOJ1+OKFeY9VJE5p2GGmb/LZN84Xl7nqNPyyXUw3RTtqc
lzN/b+s5aSfxf9n9lMT/+dT+2eGdduwWR11u95Vx1NaB10YuFkVF6s26BRD2
bQE4v2mG41+cNLiSwa8+EsaMJu4Zw8cZi/mM56NNwL9mY0ZT+KjT8K8z8a+z
8a9zGYYF+NfF+Nelrn8lBV6zxPrXz9W/boZ124isdzCsu/Gve4mPDjDUh/Gv
x4isTxIjndlp/euFffjXA+pfMb3b8DT3pM+/Yn5PMb/nzOxLIuvXcLjwpvpX
Zr4MBVRoOehqVFHzyPrXepTSIP4Vc2zCtwZRUTPmGC78St9qrmm7HezkfY1z
0qC6ldfwIcGtxB0mwWvJvfrDabfJQy3fq1H3ao7rBdxw2qa9b0wVxbA5351X
q822ca0ni3GtRbbR9o6Xze56y59+hWd1IwD5n1tBuIv5/jftYmD32ohDda8C
RC+IWP/6105vAuH+OY4zmMlPYvJTAesIJj5zmT1AJwfpJjPh07GnHCZ7Lv51
IXa2jIn+FLtbq/51EwDdJsumTPAe/OsBJvjwJXuA7ySTe1aWWmWjjom9wsRe
Z1JvPbKH/+7jAvKe2wOBcjBQDgg+YzKfywYgE/maSZRDhEUKx2LcSwluprTO
0aqy5SYG9roumxi4Ss5YVplzM34XW64nGkvV3b7TU1WF6mpfaeYjrvYp0+U2
qr2Hx75DHHuzwh5nulBca0tnvKl0u/7JMRs5+O96WTmoKTfRBLQCXAFvnXrZ
RvW0CfYEaNAse4ibbbaPnAozvlbuJwTtAdI4c3kh7odyj8G9RWf8rdyua2Bw
6lF6XZm9D1GNFVQxiBWAqkyvkModijdYz0ugViDb10TDD5mMPKKZ3Nv2Lobc
ybjKxF1kAr88FznVeQQrPkCuvAfL3oGFb9lhr3zI1Q+TkyOQZYB4keyfIJxZ
y+y1Ebk+MgFhZeFwR+Fp0vE4yTjcoXihgXikvnionrrD3xmH2yHDXlWRKytt
/OsgblQctRaiTleiWIloO9Z6wXEbfOrP38nhAw02CY47FFtfKyc4O1SoD67W
4mt10aVCo4LiKF9r3i3e61kdb4p6dLBFRAfaotWmZu8Q017E9E6Ufr29Mb5+
fKgB2mB0GB90OB84FZedjssewSCMwmVnMiBZuOyxuOzxDNBEXPZkBmsqLnsG
LnsWAziHgZyPy16E1S5hcJcvUPJhuZ8x8OtXMDlMwiZc9lZc9nYmZhcTtIdw
eD9WfGizumwm8TSpzbk96rKZ4KuHEYG4bKw5l9T2PilR/pf2/Z9eet9lv0M4
JQio7J6uTmLZVYTDNbjrWoRWh+AasPBGxBcQl/1aXXZL4XB0KGwPXJqLYxGX
bVc41Fu38ipcy16ldORQL2y9dfSWqdtptF49drX2qq6KKUQqZyZeNVjzz68N
O3er7c+dKZG+1M3Ofrz1ukeNEScc46r/+KsC41auo3c/UDfz5f9hU7butmac
uZnvnqz3L2vIsQPZTUIn7TUq7o4meuPF+8uRBfSQhNGlYnwjltl7N+PQwUS8
+BQ0MB0NzMJo5+PFF+PFlzP3q4mi1ukJ+i1gejtefBfB1l6cwEHm/Ahe/Djz
fYr5PosXP48Xv0igdoW5vo4juSWH9Jjj+3JoTw7vvbH3ip4yvwXM7Qs54Me8
vq6w/wYhqvOWOS2qsY3oi+sd0zlYvif3l8oa7SmW8oDZNTSnS+JNp8oEz3mX
mLXh4qBbXNJcLNfN7ldap+hZg8TL4sTD6sSlN6y072vy0uizxMwnCqv0b9aT
m3WMBl3HMPFyiN8lZLgu94xl2azeXbgIuh4haGJmKYwRijzxcotZKmrwa4UC
5naz+PYGvfr8O1KMwzh0+QzmenS1OvQKe4VarlLLlWq5Wl3NmFZCx3JsSK5f
y2sKGftXciBVDqYyJ4+wwwfM0b1b9jr3TTnMetG7fXoGkz5JNHaU6T4IvPeS
JO3EBWzdbm+Nf67+fBVSWYHbWIo/X4iE5iKlnCX2BrrcRB+P1MbghkYivTT8
eRIuajDuqj+y7KObLN1wbZ3J+Duk27bmbZNtJ6aoILrFlY4mG/SKQxbH3KHG
8+s/L5a1bt9s/YaT2B4/3544uj3W015PHcvaeIdYvx5pORBZ7Ijy695RGnXt
st7d1q52DLK9CKSjmnQplFbsPeFTb8yyn7r0wbj0YXzeZD53Ki49A5c+krEY
zZhk4tKzcOnjGKMJmO2kSZgj4zadBCSHIGw25juPMV04F7OcD0u1DP0qxnwt
Y78Ol77hU+aI+diCKW9jbnaqS9/3hXXpRzHpE+LS4fM55vUCZn1JXPoRXPox
69LvYtr3z1qX/kgLlxQgkZfkWa/hfyGyeYd8SrRfQQUxgnHpmHkN7rwWudVh
6g0EbI1IMIC5BzH3ZmQZwtzDH47ArTf/xPPmxN32qdMVQX/4bRoUYS8Rhx6O
Pi4Z02PN1J3BVKv0591bmRKIvcGhPyeekxbR93EDt6qsQz/xDmf+2u6Kf60F
p/2RJW3ryFv7v2W/73nzf7KLcN100W2AenP3uIq7Lzna3nhsgzQ6aJGt7sih
D1IYgJkNgezD8eRpSGAkEhiDJx/H9GeTgE1h6mdgrnMg+QI8+RI8+UqmfA1J
13o9Br2V6d6BJ9/NVO/Hkx+UI9N4heN48lNM81mm+Uu8xkWm+ApTfF0u4xTY
m6D38TIPmNqHeJ3HTOtTucAjF3l0m+IVIedrPNVruVmK53orN03lxinPuwZv
f7LEd1ywVBxiieks7xapetcUKQwi7/pGb2rLFYfn6sMf67LUg1rrw+9WNTu3
iOqvldu1j7NA5MRb95DQ95w1ua+8eMG/7lGiS14VWqRIRFNnRORE1jo0MWjW
okd60dxXEcnoUvx5uFELJ5nYXAoq/Uyq/RmXLm8hVZekHqCpwlRpawU2SGWM
EltHUCo3SRUnqTEoVZ2kulNxgX3taybjRb6tT/iYSconzLrPpN2Vi2xaFu8K
NnzhjK0sdYqQ7RgTfwgB7NtjayNKjUSpSrUB/7Bug33NSsSzbLWtrzh/ua1s
NRNfM1Uu4MlFPPxQJj49A9+UgiCH4a8G4bv6ywU+PVPVVS724dM7ptrqWtLF
ta0/Tn9vz/KDfl0qqERWtN3Lhv/2XL/2G9qMuVidu73Blti+UgP3Wls1+b1F
kqDPuatj9x2sN849rmNkJXtQdMNmaXneHSPtyWfrg3/vn2bfYwifexjhVzJG
m8ZYZDAmI/HtoxmfMRjwWMZqPL49m3GbzPhJec6ZGPMsxnQuY7sA374I376U
8V6xWHcUmIN1zMXn6ts3i2/HuHd8jtESqu/DwA8yh0fg8/Gd1refJVQ/D7sv
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
7h1G62+8GK2SW76TsP76ul0wer1Oq0u7i3CPg1Znf3VTv/y3D+XunH76jeTH
b99tt6y1M7ZOkJC1Bn3VeTev8q5eG2q9bNO1t/p7tkTSK1tvjPSVk3B5sf7q
I4r0dkkOo5oHWAsA63jAWjpVb6LIjRS/x/oswDrXwLqIQLgUy32GBVcC1jW4
8Pr1CtYtWHm7gBWr78P6X+7RWzHf2KXlk0xqTqOWc8f1Bs0lVHRFTrSQrd5E
XXdQ2X2bk8rtm6Q91lFsU5X1V6+J768uN3za/SXWoLV6Writeorrq56qOxWy
EvCbAVB9qPrNxASqje2xHuo1lqo+CvVOv0KqKj08pG3tngf1SU/I/qRroP5x
fKaa8jtq9mGtwdqkoymi74GJXp6kf+AbxLx3iXcf4jR9cKABxLihONUIzJBF
7jKGJHUsJijCBGXkNxOZQ0752i+n9mveYoZ92bnY+udqHHwtw76eHGojTr8Z
5/+cod/C0G8DCjsY+l1AYg9Dv7eav3efa/cmPaH317iHUd1X4/mn9KSN2l6e
3QBmx+MozIx4nz+IeBvvaW2NFTfavaVXtdLQ5FNV7ma31OOQQg93/YrFrRrB
9L5v7CSW/EyT46ecx/rec1P9zoCdmn1GgozUsVRbmLra3hEt2edKuEb9kyrk
o3/+3eEplyvl3rxcypHLOfe0FErbbb1nLyVSpFSKlEx5amXNa8/rHX25q+8A
So5xm1zjhpx4tNxDSrM4gMrpSDmZvkVrAnxJpNyHu+3G1ttXaMkXKf2yHtdc
g4uunKflYZbgugsB6Dw7GS+lZKQ+wSRcvaJEy81I2RmpZZCfpyVppDSNlKgZ
JSfxs1wdhF935vx7jjxOir1ewMFg5VTTzICDr9daoQdbPf0fV4PpvDSj+NvH
snBqkfTP4hdO30kAoZ9h2v5TUE7FasxKiQq51izXm+Wa85sjYk29P8jSq9C9
5foF73jg2Fhjb7k2nc3IjMHD8oFgIRAsnqpXrCcykpPnaHPvmYzwnEWx5t5L
gOCnWGEF1lgtENygV7i/wPu2Y7Vd5DJ7yWUO7PX89dCjcvqZSHkao58lpbnA
xOTiWb0ofk1OTCOS24jlHlH3od1ekcvlcsm8/r729n72yPp6V4f6etfF9/XW
pNJv6u3uuKd0147e/t13d7jKnf22pt7MJfz7lnFtr9pjW/v+JV6Zq9+xHt7S
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
AC98hCKl1ryDYVV8t1/XHr5BKyG3BHPjVnetHgwGpe3bWrXivev1m+bw92tB
50+/3a9DYIc2TPFb/Lqqsu4evbboclJmRvzl46f/IgncfrtrFv6rAJgf2qd7
5KKRQjRThk0rsSfj3WO2F8CPIf6A5KA3caY/wzuExCED8I1ibEcztrmM7Ti8
rAjwleB15QSYSsA3hQAznXGdhYfOZVznM64Lrnj+MailN8Kzl2U35c9dwucW
XI2GgvtvecXHmgIYyin0s8+UXFcY1pt2JfNeW6xjsZSdknYz0hQvvKncYsRr
c8Rrd8TreC7P8+e13cJJnuf+YKFeN7VUc/DIfohgsFEg+Szqqp1FgzW90OQ2
VaCXKtRL+b/9PlBJcz4HvrsGPoJDJ2PScV2/v+WyNruVprf15wx8UsDthLY7
dOBD3jeI99cOGPisyclpqfP5hYLv8AZtxLt/lYHv0xj4pBXjBsC3dq429pUG
v8uk9D7gW4BHzp1oZ4d/4k0s0jbBJflkK3CvUKr6j9GWwtItcnRW1MvMjHoj
R2n74eEZ2mFykF+gY7C2EZNulNLKuKfPvk+Ufa/5eyZ9hHnQT04N9/Zi3AvO
rweXPbvZIotLBX1WvduiHTZdv7Q67bzpmuVYDogL/C1T3h6P9QymrCi+6dqq
6Zf/QJsQul7moRa2CWmfq/CWro19pMHP6wD/LSt0K81/pAlQX0jXn0EbDOmG
lcba2Y5mXPMg3Tg8rwjSlUK6CkhXCemmYJMZ2GY2wWn+SpvirvNzk9/31m/t
uqftwcPa28j1tD2ZvKftdSkOjMZuo7W7aO4+2nuIBh+jx2q7Kv1cP9unQT9b
bcnUTbozBZ2aWoVyrUK5Vnd5IwCcPtqiUKt4+pwTj9WOZLoyr4WeOrzL1opQ
WpfvflCv9PoOsOuusPuTAHa93Cf+gdejGNBNwJxTMSXy7jHPtjuY9ry7HB2S
C/Qmm+6PmwxhaDN2QDpcaDSulMuwjiWCFDKsJQxrOcM6gWGdiAtWEkUmQ7sp
DO80iDedIZ5x0dPeBd/3Jp3t8MpOtnuFR1u83EO6dC1HbOQQ47nG4PT59VYt
3nHXKlQ/slp60r/FNVVp92LF+60qR4ruJrm8WhK2ZBPXNJfB2TxU4oyaIs1H
mHxo7JTZqnDsqdvViPErRfO278cW6BLmre77ZMkSiElGLhi7Zxi7rb24I4b7
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
oWAABX0o6EFBJwraGUlbGEmbGEnrGUlrUFCJgnIU+FFQql+ny0dBLgqyUJCR
RU6hIBUFyShISpbEOGIc/4047iVWxIXCV50b0L6Kn5P4eRk/x/BzFD+H8fMc
fg7gZx9+9uBnJ36242cLfjbiZx1+VuPnSfwsY251grlVCXOrQvzM1/fhsvAz
Ez/T8DMlU56pP2Jc+Z34Fn9TqPfLxA4Hx0npMRwcxcFhHDyLg/04eBoHu3Gw
AwfbcLCZ4bgBB2txsIorkgqm0mVMpUtxsAgHC3Awr4Lw+wl/iTiZlrcTmjw0
GXHPLQLavc55/BjCj7P40Y8fp/GjGz868KMNP5oYGBvwoxY/qpjSV+CHHz9K
8KMQP/Jrab+KAOJHpl+gHDZty7NWEc+Ny7h+j1wZ0OwZmu2l2S6aPUWzrYxV
TTRbT7M1NFvJlUQ5zZ6g2WLGqYJm8qWBHkuzx6sipLpHf1OaS7HE4A1P9F1O
By22MX4002IDLdZy/qtiTlTBBNJPi6W0WES/y6fFnOadouS5Al/qDlF3uqIa
Oa3WcmKpYmpRgQg/SVZCdy6iO+fTnXP1ut/e4eTepy/t1k7f5vhxshgnC3Ey
vy/CKdcHuYnjS9/hlEwl8wZNT/ba/ZvUyLS0+3pEmXuFw3+HTMV3peJx09Tr
lkMcMN/Kr1S+bFPwmsX8I3P0f4p5rsXoVUvZh6biv6VinmnHZr7XfPuhmBdY
jF6xlH1g2tknFQvNkWzm7xvz/WJebDF62VLm/ZR6SCqWmAKb+TumHVm6znfC
YvRDS9nbpmKsVPSbdmzm3q3dBDEvNwUvWszfMkdPEvOTFqMXLGVvmoqpUrHS
tPM9i/kfzbfpYl5tMfqupewPph3Jf1+NOZLN/PfGPFvM6yxGz1rKfmsOmycV
602BzfzXph3JS1+jxehpS9mvTEVJNF+Tacdm/kvzreSLr8UUPGUx/4U5epmY
t1mMvm0p+7mpKAngazft2My9FeYkjr4Oi9ETlrLXTTu1UrHTHMlm/hNj3iDm
3Rajxy1lr5rDNkvFHlNgM3/FtNMq5qctRo9ayl42FU9JxT7Tjs38JfNtl5j3
m4JHLOYvmqP3iPmgxehhS9kLpmKfVDxr2rGZP2++HRDzIYvRQ5ay50w7Z6Xi
sDmSzfwZYz4s5uctRg9ayp42hx2ViqOmwGb+HdPORTG/aDH6mqXsSVNxXCqO
mXZs5k+YbyfFfNwUPGAxf9wcfUrMJyxG91vKHjUVr0vFSdOOzfwR8+2MmE9Z
jL5kKXvYtDMrFa+aI9nMHzLmQTG/bjG611L2DXPYJal4wxTYzL9u2lkR8xmL
0RcsZQ+YiutSMWDasZl/xXwbEvM5U/A5i/mXzdG3xTxoMbrLUnafqehIA27t
BdOYrc4Xzbfu/7dLnSWL5WcsZZ+PblF25/Utm2Pa6twdXedOqbNqsbzDUvbZ
aH/vltprptRW59PRLQpz34bFcrel7Pbo2vdI7U3Toq3O7mgv75M6W6ZUlp6P
rOLVlx7hzrkdbyFi6Y8+36f+Bx/9SCQ=\
\>"]]
}, Open  ]],

Cell["\<\
Note that this surface is a graphical object in 3D, and you can freely rotate \
(mouse dragging), translate (holding down Shift while dragging the mouse) and \
scale (holding down Crtl while dragging the mouse) the object in the viewing \
window.\
\>", "Text",
 CellChangeTimes->{{3.392653272285391*^9, 3.3926533232091236`*^9}, 
   3.3927437736166596`*^9, {3.4921265204395*^9, 3.49212653228325*^9}},
 Magnification->1.5],

Cell[TextData[{
 "An alternative way to visualize the behavior of this function is to draw \
the contours of the function using ",
 Cell[BoxData[
  ButtonBox["ContourPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ContourPlot"]]],
 ".  A ",
 StyleBox["contour",
  FontSlant->"Italic"],
 " is the set of all points ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]]],
 " such that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "\[Equal]", "c"}]]],
 ", where ",
 Cell[BoxData["c"]],
 " is a constant. Contour lines are a standard method for visualization used \
in elevation charts."
}], "Text",
 CellChangeTimes->{{3.392653272285391*^9, 3.392653422863413*^9}, {
  3.3928423519645157`*^9, 3.392842367855825*^9}, {3.492126546298875*^9, 
  3.49212655684575*^9}, {3.49212659290825*^9, 3.49212660372075*^9}},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3926534268391695`*^9, 3.392653444424632*^9}, 
   3.492126664205125*^9},
 Magnification->1.5],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJzEnXd8V8Xy9xOSEAIBEtKIigXFgmLvouegFOFiReVaUGx4LYCKqChe5IoK
YsN2QQVsWNBrQ1QgKhYsEBUUVCQoEQMGIyRAqCE8eZ6c9+4zn8O5/J6/nu8/
39ecmZ1ts7uzs7Oze102+Owrm6SkpLy2R0rK//7XX/jsrBP2mFEWWLjKwdXv
l1734321gq9z8Jddz7172rrU0NJnOLhtp67nbN0rK7Tpsx38zn0Txu21f46D
G/nlOrisPmdYt4/yhH+Bg9OHjO5/9XlFkl+xg7WeO/6vcjD1tfg6B1NfS5/h
YOpr02c7mPpafrkOpr6Wf4GDqa/NrzhM6scd19P/2/pWSX2rpL5VUt8qqW+V
1LdK6lsl9a2S+lZJfaukvlVS37ic7rgffT31n/oCU19Ll+Fg6mvTZzuY+lp+
uQ6mvpZ/gYOpr82vOEwahzuW06pYvSze/9v+rZP+rZP+rZP+rZP+rZP+rZP+
rZP+rZP+rZP+jc8zOx6HVbF+03oB6z/1Baa+Nn22g6mv5ZPrYOpr+Rc4mPra
/IrDpHl0x/NMVUwutd+0Xpbe/1t5zgitPGeEVp4zQivPGaGV54zQynNGaOU5
I7TyHF8ndjyPVsXGncql9pvWC1j/qS8w9bX8ch1MfS3/AgdTX5tPcZi0Du54
naiKzSs67lQutd+0Xja9/7fjNzu04zc7tOM3O7TjNzu04zc7tOM3vs7veB2s
is2bOq/ouFO51H7TegHrP/UFpr6Wf4GDqa/NrzhM0mN2vM5XxdYFnTd1XtFx
p3Kp/ab1svz8v52vcmW+ypX5Klfmq7ietmM9piq27um6oPOmzis67lQutd+0
XsD6T32Bqa/NrzhM0kN3rKdVxdZ1Xfd0XdB5U+cVHXcql9pvWi/L3//b+blA
5ue4nr1jPbQqprfouq7rnq4LOm/qvKLjTuVS+03rBaz/1DdpH7FjPbsqppep
3qLruq57ui7ovKnzio47lUvtN62Xza9Y8isN+G9MX+HgRv5pjq6RX6aDD1q5
vccDfzV38DkX3nLIW6NaOXjL41MHPHN9oYNbnTnggsM7t03MV//JH5j8gckf
mPyByR+Y/JPqqfnqP/kDkz8w+QOTPzD5J7Wr1lPz1X/yByZ/YPIHJv+kftR2
1XpqvvpP/sDkD0z+SXKj/ajtqvXUfPWf/IHJP0lOVW60H7VdtZ6ar/6Tf9K4
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
Tpon9Nw5qd1sO3s7T9I8TXmS5PKlTTnzXr6teThx1yMW/PpYlvvnu51vimU8
+Plbv1u/Ct8O1v8kTmfL7edz8HacpMTsFvZc3tshVY/T8aT5ajq1ZyaVg38d
X/odfnxXe2cSHXJq9ZuaGKx0SenULoic2X1ibgwmnZXrallHPD/NT+mS0pFv
UrnUTgqd3e/lxmClS0qnds5GOMX9799nwFt3/pKf+F3/mVesn0ttzG5g7W11
Ds/6qvsla/fKCS2/3Ni+1fol5jk88yz8ge05zCKn5/HdwqWBtWN5vVD3WexX
dN9l5+d0127sL2x+2Q625zhVsXVW9zHsK3Rfo/tL229l0k++H+05yTrxi6yV
8tbIPYdalx/prR9NrbRvXaB+D7b+deKfUuf6j3nO9qfXl60/Roab56ydJtXt
9+Bn+8frkcDWL8nbDdTf18pJamwdoVy0N3KE/Fs7Q0FsHic97W3TVzu5tHZm
387aDsDMF1auvR+lvQ+W6cqnfkgqF2ontOeLvt9pD7UXWLt3jvi/xu1U0FNe
8LQX/O34yHbyhB7KeLFwqZundJ+ndhTaUe0qVj9Kd/WiXDa/bAdb/++cmN6s
dgrmB7VbqH3FzrtlMTu09c9Jd3qulSPf7mrnBE9+pLfjx+encqb9CGzv9eS5
/kP/sH4zBTG7hh2H+TG5pj/gZ/0UCmL7PuYHtRuqP6idx1NjeqDlk+76kX6y
dseCmB5Getrbpq926wbjU+dZndeAmR/supMb6wett7Xjezum2u34h472tuce
3m+f83J7DlLs8NYvYZ2sE5vdOtIoV1ti9xZof4svcHjkArz6vdL+4PUeD/zt
Oaz38ya9tQdtduW0+r73e9D7EcBWL/d+CHpOqfcX7L1a3y/0n/qX6Xd7DuX5
0n/2XKrY4ek/8HY9bePq3zenfV3/3nmxelNPiy9weNoDvPoV0z7g9R4U/O05
uPeTJ721T2wO7LlkasxPRcsBDB/1G9FzZG1H6y/G/feKwO6PvV3f2vuz3Dmp
PQf285LuT+Fjz/WbunztOC6PlQPY3mfLcvy1HMD2/leWW/fAI4fWX7DQ0VNe
8Gq3gY58lK/WG3ryUb60n56z6Hc7f6c4vy/0D/x8kCdg67eRrDcr3q7DaQ6v
fkSsN5QHfYT8kVdg68eRvE4rnvLY8/hFcn7OPa+Nbr/GvKv7N+RQ5ZL5SPVo
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
rqFXP0z169N5jfx0PgOveoX6gapfoc6DpNPxCp7v/DN/NMqnX2cYL9bvb3PA
ug098wkw/Ud66/e2OWBdhp788ydM/WB1G7+u6fpDfckfevIHJj/SWz+6Nk4v
gB67qbWLLw6wb9v7EBtd/Rvn701u3gIPf/Ckpzykf3jqrLD5M94vFDzpwds4
LFXOjxaY9mO80R7WHlMWqH3H3k/JjtlzwKMfWH9h/74d+gIw8wWwnrPwXc8n
gJFTq+cXC1zp/B/sfb0cJ8/MH7SHtW+UBWovsf742TH7CHirT/n1EdjqV349
tPF/1gV23triYNueiwK7HvrzAPhYf6Y4X7s+AW91coMewjyDXgDexsVpJnFU
vJ/9jvNp4doDmPro/K10Se2wYz5bndxrOakPeNabxv5Y6dYnYP6hYx4AXtxz
wGuPb2zlYP0OP2DNB35KB2zHRWnAPgM+7NfwCyL/xvltbcC+AXr2c9CTD/TQ
kQ905EP5wOMHBB4+lCPl19VfXdQj17UL9dD9s8aD4DvrrD3fbBvbf0NHuSgn
5aKcWi7aB3raB3raB3rah3S0D+ngAx4+4Gkf5av9re8RoS9Zv5Ntzo8BfQg8
sPVT9XHj9Jzf+ml6u5P1D64Uf91Ktw6o34XVu/08Z9eTGjlPSxG/Ux+HUO/N
6b106O37Aj4OjL1Hkxs7F7P3B1Nifg3WbzRfzjGrAl137L2ljJificaBUz8H
8OpHr/c+aR+916f36qGnfTTOjearftbMu+gl6j+BHc/at/36Y/2BmoYK6zoB
Xv289NzB+mvWu309sPXLqo+VI4lPEl/rN9PUrTvAyIvCem9A28n6ofl9KfZQ
8MgJsO47+Z6UTvtR/ZK1XvAFr35twEntQL2BoQdO6lftt53lq3zVXoFdB327
MZ9VAfoYePRt8PyTDjr48p1/1nPg5ft2ffHipa0djP2H9OQHnu/QKR/KC570
4Ckv3ykv6eAHnvIqH2DyIT3f+Ve9nPWWeZR1z8aF8XFMwFt/21o3b+i9fuwa
1r7j5Vrv+WKngJ7/RrrlTs+hney6utz1OzD7aWDKQ7tj3wGvcU/RC8iPdRp6
2hWYfTkw9SE/5AW9wtp91sfu+dOP0MMPer33a8+H6uR8CL+IBW7/gDwpbO3i
8XMQ4MbxvjrAr21Dau78Ry/NcX5ulMvGVa9zMPytvS5X7nn4eY38oUc+vr1u
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
GkdHPja+6KoA+QC29wJ83E++w4/v0PEdfsCka/ye4v7v/XfHR774OD/xu/7b
8blI4u7496k0TpPacW2cZ7/PsP4Fnq/tz+YiB2Wx/Z/qv1bvz47t/9Tvh/0g
6bG7Wn/EOreO2f15sp2d+xngmVdIvzO7Lvca9H09q9ekxPajNq6M3tOqjdll
gamn3mvSd2nUbmnvM+XF7hFpXE09d9H3jDSul9r19X0ia0coicmdprP4stj+
V/V3u8/Lju1/1R+MdrL7Mb8PsfHHMsSek3zuQjuCR55IvzM7P/Kk7x3qO1y6
H9d3eDQultrxgZEntcNbv8LcmJ3bvjOTF7NTW/5VMj/5+ceev1XJPedKOY+r
cnFKNY6SHTf+/RvrB1cb2HOIzc5uRLtw3qr37qyfo3/fhvNY6K1enRpavdq/
c6Tzjb5HSDrWXWDahXZiv8p+jXay9xVXOTx2JtKzvwVP/5Ce9cr6tfp+tPfU
/Ps3Nn53ZizOlZ2n4nGowNNf7LfpL+SQ/tJ7kNaf079nQ39Br+dM2u56zkJ/
6TuS+h3Y3lP2/o/Yqe29Xe/vaM870p3/IOUHxk9G/eKsn6XfZ6nfg8bR0X23
7pPwJ1I/OOvvXu/y1XWaddX6Z2wLdhxvwJcLevtee1ao8zbzLPS0J/w1Djn9
ZfmnO/862huY9lY/QuunmuXygS9yCWz9bLxdQfeBtLf6EQIzLvGLAmZesOff
y51/G+W2cUT9u5zg4YefFTDzBvzBqx5I/cjH6uXL5B5ndYxO9QDaBzr0aK0H
/Njf6n7AxgVYHaMDtnaveL62fNmu/0gPneWX7dIpnX2HY7u8y73dnXsg5+CB
kV/WO+QXGDzjEjwweOZf8MDWz9fPp8Csi9avfEssX/teyVaHZx7RuEj6rhn8
8SfVckHPPK/3MDTuT9I7sNifOfe094oyJR5CprMTg7f3TDLlfmahax/tBxvf
f2ug94o0DpS+2wZ/2kf7CXraR++laJyjpHduaR/OR2kfYH33kvYBT/sAs+7p
+qXn4+CZT/V8XedjPf8FT3rGD/R8x3+ucb7z/nXA4Ju8ckLB8tO9fx1wYz5p
zh+SdRf5e+qsFXef/0Chw7NOgCe9+kvSP6QHT3rwNg7llqCxvVn3Nzu4sV18
nCroz9j28Gm7Dypw9MDQwx85g9+QpYMmHbWhjYPfPWdF2UuH+LhX0MMPemBL
X5twnlgW6D7OngeWOf2Ied7GdyqL3YNVu709v1gm72VWOj1J7y+qHk5+Seuu
rsuU18abKovdg1U7sD3fWCbvc1Y6PUPvC1Ne275Vzr+d8lj/nCo3TsFrXB3a
Ez7Adj+W6/JnPoCf9fepCmwciNWuvuRHe5AfsNpVdN8LrOdWes5AOazc5MT8
PdXfkn7WeUv1cOTLvg/l79FY+coOL3hh1iMDL8xy/4wH9d+EXuc91UuRF/JH
Psjfyot/PxqY8ab6EzB49CQ7HrNdOyadg9EPwNbPNduth+BpT4XZr9Keer9U
98Hwpx1UnwMGT/3s+M2O3UPXcxjkGdj6mWa79Rg8/aUw9aO/9L499UM+gRk3
lN/6w+U4+dXzE+SM/mIc2/t9uY4OftDBz/rX5Th5BU/7wIf2g4+9H5gbs3uq
3UrPhfUcj/Fu592cWJwD9DTaA5j1r1Eu6hwfay/yMOsf9Mijrvt2HvX6cmP9
/b/G8br8vd5d3jyuyOGt32+W+LlmufqhJ1I/YOp3wimLzr//uTy5l+DXe2Dq
B70tt9db7LydId99PTQOGd/5V79ma18ojvn1WvtAsbw/U+n2Bfbdr6Zuvw29
jTOY6WDoOd+DT1I+8CUdfJLygS/0zAPQA0PPPh565ivobbzDTHfuB30SX/vu
WFOXTxJfG5+zaahxoZP8PDlHsu220fkZcs8W+4eVh0qJT8c96S2O3voXrpM4
7zWxuGKcQ8DfxheqCLinCX8rf5USD68iQE+28Tny3bxt7y3UxOJ4Qaf/0LN/
g57v0Nl3cH08DtrVvie2Ts5papwflX3X19Pbdxd9/A74J/Wrje+8PFB67Vdr
l1gu/RzvV2DKTT9bOd/o/D6BsYNRHmtv3+LogW3cjC2u/Wz+Hqa9bNy8jbG4
pthHKIe9Z+bjjuq7asinxg1n38z8jx1Q/aiZ760dcmNiu1E+2oF2SWo32gl6
G/c83m4a14/6wt/6pbdy9Yc/4xF6YOgZnzY+Sr7TT4Apj8bR03Fjx12uGxfQ
I5/6fqrGQ6EeVi/z/86vNkpn3732dHzX+Ckav1XnOStXywOl13nO2vWWy7wX
n+dsu/p5L6lfgeknypPUr8DQ2zgI8X4Fpr1snMqNsbjB2OeQf3vvs00szi/0
lFvthdZff5vzK7bnTRVOj0DvBbb7f78eoX/Dz55Pxd/9Rv9gH8G8Ys+N/H6c
dd7GdyqU9MtdXFdgrTdwUr01zhH8gElv4w/XOb9ja+doJfErNwRqd7fxz9cn
tgvnSmp3Jz37GtIDk17LTbmSyk1/s88BtvtBP9/R3/Cz9pf4u+pJ5bTnhH5/
Rv/b+E2Fkn55wP4BWOUUOElONe4U/IC13sBJ9bbxSTfEzllsfPr1iXKu54y0
C+lph6R20nc+kt410XdF7PxR4vQeG0dmnfNTZh2yfovrJU7IOud3Cr31I1zv
/Mf03of1x1gn8VPj+QJbe0KKW6fA017W39rfKyGdfU82mQ/1hZ76QQ8MPfXV
eyjWn2GdxEONtxuwjbuanC+wfde1MtB5X+cB9vvYsax9o0W0/jQJ1/cekPb7
BB9nEXpr32gRLvxzxNwm5QWOXvel6jdv43LE/dbVDxp5TvJDpv3s/qMmUDmy
+x7/LjLzmcajtvsn72dP++u79tqPpNd3fhnnGs8aeuYFrQ/tRn66/lk/QX+v
CbnQ+6WMix3fy2jl+k3v5dCvGqfa+k17fxK996D10HsG6sdO/yf5jdPuVr/1
/WTr7dcr0tPfGm/b6uf+vgF8gfW7vWfq53Hyo781Xjf09L/WR9tB1z/r5+nv
qdH/ev+V+WXH92BauX7Qe1b0v8Ydt37u3r/F3vevCKyf3Eonh0lyC17nC72H
D3/r17XS1TOpXcDr/GLjltTIvahqN48kzRs6r9h5JFf8Af296iQ5VDm1/FJd
v2nce9ovaRyD1/GocQzgr3Hjab8kOQGv49fGdakJ9D6KfT83Pk/qPGrnzVzx
38tx4zBp3Om41HeBaWf6gXYEtvpME5l3UmXeiadTvknvCFNO6Ow9jZRY3Cf7
vnKaaxe7X/Gw1e/8O8vwUTrlQzo736TKPBgvt9Yr6d1j6OBv9W4fP9761Xo+
SemUL3z0Hou9j1Hh1mfmF/uOwEqHt/f3/boOH3uvamUiX/iofgBe77XY+yAV
bp20+fh7seBtPl7fYR6gvIx78MDWft46pi9ZO6y/1wNfq4fE+Wq+9j6/z8eu
Ozmxemo7UG9df8HrPR/4Ul7S2fL5e8bWvtva4flu5/GcWDrlCx/VR6xdGb+N
BXKuu8D56Wk8cPxE8Quz971KXLwHe56eIufP3t/Yxu9Mj52jgyc/jW9t34mI
x6cGT3p7/6vE+RFZP+d88cP185Xe0wCmnLQHfn9JfoT4vSX50bGPVz9BYPKj
PvBP8kOEf5IfHvmp3yCwjR9V6fxYqK/1I/HnlvZdsfi7kxq3T+8Pa5w8+KIv
6D5X40FpufT9ST3v1vdqrZ9ha0dPu4Nn/Nl3e72/ub4zoO/kQEc+fE/KR9sh
6d1NjXuo8T3pZ8alvR+Y4uYD5B846d1RjcvIfl3jeNp3EhbJ/niB09+Bsbcl
2YXRR8if/rPnrWkx+zV4e4+u3MkveBu3v8LdLwSPPS/JbmnjppQ7PRW8vadb
EVg9c7nYzapcezCPcp5g9RIft432As88AmzvYfnvSemsXavK1R86ziuANU4a
7QOeecbeG8hx54CsB5QHWM/toae9bFzFeNxuYD2HpH6kT4rTbP1xFrl9KXKr
8cH++7gqd3KcJLcq11aO17n6/ne/S4/X+6ukxx6j70rrPR3yZ3wnzaP2fliK
Wy81HhqwxiGx8aLS5Jw2Tc7vPJ7yWf+EnfmpeTz5a5xI7Cz6LrZtH/+uWJKf
sPoR2/vAFQ5m/bLvxlTKvY1yuScZn7d0XtN3rGx8d/+ur40bl+76U98NUD9L
4CQ/S/XDtPG9WjmYdc/6J7SW846Wzq+I/rdxwD0MXt+Ngh/jQe+r2XclvP8u
cm3vQ8flWPVdG6cuXe51pSW2e9K73BrfVd/pVn8FvS9H/fQeG+s1+bNeUz7o
VV+nfugZ4FkPge192hZuvk46t6V9qK+Oe50XmAfAIyd2f9A0UW6QE/CsB0nn
ivacrqXT98DbuJetnL5oy7fRrYO0B+se65fd129x9EnrJDDzj/V/WJ24LjM+
4E/94cd6CAxf6OELHr72Xp9Px/ekdOpHZ/3Ekt/dAFY/H+vHkvzOgvVPXSTv
TC6Q+DulO9Fry51emKQHqp5o9cJ1rr5J9x70XoTGFyA98xv0Gjef+YX8mReS
9jWMY9qHca7xOZPmEcYN7ZM0bnRcUT4bnzLZT1z9yMnfxuvw7wJAr+8GWH/F
5Hs2eg/HxmuocDDrvX33rdLByLt9P6O5m3eT5lV9p0fvDQAn3RvQewU2fmQr
B7Nekx/81d8J2Ma7WBnTg1j/wNt4vnG9yMZ7qXF6j7Wf+njB1h+m2vmZWXuG
7yfbDyslnnC832z8mBr3Hgn523gyHq9xlqwf5erEfaDdJ/h7HqRnPk1aV+y8
4+NV6j0wYPK376lUB+qXpPdKgMnfxsnzMOWgXoxvPV+zcX+S+53yWbyPt4+9
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
hdgnKiRdRphWWjBy1fdrg3kj/9O385AMZ4+6sO8L4Q3Xt3JyhvxdGaVnH5QS
pb/xx02Lnurl43lRD+o14Kefz5w5P9vdd4SOfBnHjMcFS9Lue2PINnk/JjeE
nnEB/Z0tn7+/8q8812/7mfb1+VIO5jfsq4WmvbPdvccrI3rqTTvQ3sC0t90v
a79khA+MuarXpm6+HtSL9ia95kN73x+lp71Jj1xouW08xhrXT7Q388PCqL3t
Oyo+H9ob+pFRe0P/eqtLjxvfsH5cX11c1rVh3frogVOmZW+oCUaf37P03BdL
g5q7O7Su/WxTkPGPz9v8Nf+rIFh42YTUEZsdfOwFt71/eUN+pK/bvPaHO1vl
hqRvduuffx3/SZsQ+qfn3ZbzYbWHGY+7jnjw1bKDKgPGGzB8KSd8Kee5707a
3jk9NWz+9CWXrnp1XfDKLSWbPmjg1/TXeyZN+nRdsEdpxnMjGtZX0r/1SbO3
+jfApH/vhpoDdssrCFtE6fuffeeLZQ35k55yJrXD+M+L7qoalRlWR/gJj17f
oflHzcMagaH/afN//hzSp224JsJTT9qBelAvykG97vz3iI2PN+hnxw54bsv6
Bj3z19L9Rhw+sLWb1x7cNuzkTbfnhn2i9Kd/8+lZFSNzQ9L3/q18ypcNegDp
KTf14Dv50H/gX+45ZL9bG/QW8LQr7Uy70s5J7QCM/JAe+SE9+UOP/ABTb9oB
+QFGfsgH+SEf2ol2o51oN8pFespF+ncj+SE98kN65CVpHNCuWs+keiM/4HXc
IMfINfJDueg3+lHbjXpQL+pBeuSH9Mgx5UJ+oKOc4EkHfu+ufd9t+/cm4dB5
f3WYMWJBMPH90zKaf1AQ3hTBl55Z8fH2rLbhT89Pu+W+/f4MoCMd+FaFh61d
+mdrlw4+pFM64H1e3GvsPUNTw8P+9to9p5y7LDjg9tTmf2/QY369pvV7tx1U
HUyO9Iwzxr/ar6pZdYCe8e60k058pFN10HuXCTdOzc4I5+963z7fv7U6mFT5
9prZfysID4/4nTf0udfyGvQe+KGH9In4oVdMj/i9/fyg5WcXFYXfRfwyo/4j
Pf98p3/43rWmou9uT+eE4KkX9YSOenaM/pH734M1R/U+pqVrF/hBT33cfFJ2
0aRH+vl37mgn2o12ot1oJ9rtwCuWbL1ks3/HbXLd/R8f+2hOSPphn95w3GUN
+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
4Iuj8g/44pF3/2zQTyn/d2N/euHreZ4v9OQLP77zr/bNi5c8f/Dpl6W4c3Hi
oz7Tf+JZzb/eHpyQftPH+3yS7/DEQ30hwl8Spee8lvTvDBpzUjgqP+wcpQdP
+ukR3vkTStwejaOicU+AP/g6f97wgpRww+jywd1OXxrU3jIjd8uSuuCeFgtm
79XN+/GgF1x7x2utS57KD2sj+jE3PXxw3Rd54d0R/ZatPV48/NaMcPqHF7fZ
1nZtcMyq1r+/PT8tPP63b56ou8rH5aHcY/K7bys8rcjRv9yi4259hxU6euKW
JMX10TgoC4Zd0/H8jvOD5974tM+WGanh3K4dD+m07ptg41mvXzP2sNTw7OHj
hnXfr0UI/soFR+93cG6LEDz30tGnfqpNbZL+zF/BL0s3HPzmbpnhvdf1ffGj
j9cEpaPPGvnl4Zlhj3Mv61jfNScE3y79r0lHjckJwVNujaOkcWs0Dg0w/XPM
xWGTz+Zlh/TPlsG3fnbKkFax+Z7+gZ7+gX5z1D/HfT5jdeei3JD+2fXbRd/W
rfJxkSgX/QM9/bNLRK9xZzSuksahoX/6rU5buGVggeufe4Nhl3x6QIHrH/D0
z+gIT/+gL9I/t9898eNz92jr+mftz3NXXdqxresf8PQP+F4tR99yb99M5+e3
onfKYYNdnIOa4LB2K678uLOPH8v9fvxAuMeu/obQsZ++YXTdmHHZTcPsAw4K
B85Kd/He8PuAnv30jRF9mwOP7fXO6sLQxuGsCZLKzToOHhh80ndg6gtMuSgn
9VX/Qr5T3zkX7Dm4+7+LwlZRfYlPp3yoL/R5UX1tXFHfD1rONeJv+JXYF9X/
UO2J6meo9kP1T1R7IfP6L3UfzzvxpdJg5e6XT53dsP6/MLXdyAnHLwmCF/YZ
euqZ9UHVZ9efPXzlEjcvMQ6YdxgHzPNlEb/uv8xc2Klh/X8+4vd0cO0XrTvk
h/BjnMCPcQQ/+oe4Ep/dsuc+LzfoQz1P6FB/1IG1we35G75qMSUjrJl++RGv
r1vn/JKgH3T24SVnNegdPSL6uXu2e+iuy4vCdRE9cZmWr/xj78EXbHB2lcqu
a6sXPbLB+d2uuORftWc8uymYX93713dfSw3X7zLhtct+3+jiIJEeO8cfUfoX
Ij/Viij9+ge/LD7/qgKXnnJST+JfANMv9FOvLRnTXnzO+wN3DtZsffSSLa5c
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
JIrLcuSxUx8/4bhMJ+/u3CtKj92Y9NzL/SVK/+LhG296qpO3I7M/Uzs3cChx
pdfJPoJyUU74Uk6NK6x6521RfBjSM05ITz/QL/QD/dIp6m/w9Dd4+hu5oL+h
Ix18SAf+9qi/2d/S3+ih9Df4pH0G+jH9zXkn/Y3dn3agXWgH2oX+Jj39TXr6
+/YoPf1Nevpbzy2Au0hc8HWyj8POjl1X40Crno/dF3ricGrcQ+Cm98x7dOR1
mW78ECeR8fPQ4sybTurR1uGJawce+yP37tKn33zA4B/Twuojq3+eN7ouuDIz
6Ff4V1p40qYLcw7pudXZb6FvdcPSk6YPLwzXRPQnPfnxT6PvLQyDiB59CDlH
/0mJ9DD0H/Qw9BHoWVehZ12Fnu/w5Tt80RvAozdY/bEyWHFy+g8HD2oRPrf4
p8kfZ60Imkf27TGdxv41/NQ/A+y9hzTvd/vAt1YF2G+xG5H+zsuPL7n2hVYh
6W/b9OJDu6xv7ezFLwzeddp537R29l/ipGqcSmD6l/GicTLpX/Aa15D+5R4l
/fvl3r88c+i0vJD+fTr/uEE9L89z9mfo6V/o6V/o9dyIdqbdaWfaXc8x6F/o
6V/o6V/o6F/oSAeedOBZN4hr2Wbc7gNeqa8LXm//wh9f3z836NXjnPemn1sf
rEl5/rZTusxz/sHQz5/5StrLDfvl/0T0F++/sejaffND6GnPsMP4rzvOqnXj
Ze2lB43/YssGNz66RHjarybC4yeHXxR+bfjN4ccEHj8m/KZ0n6P3vJPwGscM
PPvo9bJvYR+D3xx+UfjN4ReF3xN4/KTAM5/quk6cUS3XuUJP/50y+JvDv5zb
PPxb1H/79Vs9tvUPzf/H9QRmPtd1h/JofDalRz4ozyWRfFAe5Nz6X/r0ikee
yvYY3e/L7blufDY7pNPDb5zRxo1H8MgTePwk8ZtEnvCDQ57wk0OewCeVS99V
/Z/WCzuH7iuB8avEbw6/SvzmkCfw+NGB/6TjpWtu/KxhHu3zc/teZ1S4eZt5
vP8nnffbtJ44fMuDSy7IavnpB8uCF198ud3z1/p3iO17NcuCsHb5Xb3HZrvz
i48WjN39ymOywyNz+p957JPlway3Sz88vnu2y3/Zx1vKvh7q533WAfLnHXf0
sVHRvvmWqH2w67A/xa7D/hS7DungAx3poCMdehnpaP/Ho/zYv74U8WH/Ch/2
5+THfvzgKD/24zdE+UFHuqFR/djXkw4+pIMP5aTclItyUi7KCR35Ub+TovxI
R36kIz/SwQc60kFHullHfDlt9fdpTn+65tCm6bW3FToYvIsfF+GBwbM+gwcG
7+KzRXhg9C7W9ZXRe4H4qR/4wjO/14/cEvR7ZvbU7FqvxzGvoMcxrxDHgrgN
+OnjJ47fPX776AXkzzt75P9E0OvyOw7LC8kfvYH80RvIn7gQ5I8fPPm7d96j
/NFj0Ys+vfTZN9tvqAlGjjx4wzN9M8M5m+p+e+jxdUHrmx85sOu1mWG7r64+
+bRutcFfq2YMPXhYZriyzZE14ep1Qda2CbutHOj1KvhtG9TrvHta5Ybw++Cc
8ucuvTk3hN/3o0u2nPlbbgi/7rsOXvHA/bkh/Ogf9Kg/ov7B3/+AqH9mDvjX
9rvGer2ZeR29mXk9XeKMcC8CP3z6h3sS9A/5d4/6h/zpH/Knf8if/iF/jeNB
/5A//cO9BfoHvZT+Oa3vcR2+adjPfBb1z2Nn/fnR5O5tw92i/knL3v77Y6e1
Df+I+ie3YPCxNf+XXgs/+gd+9A/86B/40T/wQ+9Dj0CPQw+09yLqnZ4BPev6
34Q+SW9Bb0RPID/0SNUryA968rtE6Heml2AH395m/HOrHk4LWx1xddmA8vpg
fEZJvw/GpoU/dHt17dVp24PsPQdtvfH8wrBlhP97ccr5ZecVhj9G+JS8xvRn
XN750r4988MJUfrUP0r3/ems/JD04EnfJMLP/9tD56+cnxbuf8L7dZeV1bl3
bHinhXMM9M2bSirPu2FYwziJ6Hn3BPqrI7sw9PA/r8OZVxd+mefej+E9Evij
b8AfevhDj90Z+mP3f3OPu99Kjd4n2eLisc/LGVS5bezm4OLzl3b4ZWpquGFZ
bsvBE7YEL3fcctzsqwscPfHJoT/h05wPrhtQENZG9PDPnzD1g9Vt8ly88w+f
vGOfbevahPCf++CAgecfkxfCH3r4fxTRwx96fUeCdyqIg8J4xU6n7wDwbgD0
jEfsPL2Lmx7/a36TcMbacW+nDy5351LoM+xDUl7Ly7v3sPLgmjcn73f85+nh
YWds+sf1R/o409gz0MvQ09DD0MsO37tDj4FPFbj86C/OHdBTye/j1TUf7LK+
0OVHnFryyyq+bNJ79euDJxf1uyft2DXBfl32bR502xZMiOC333vtxi19UkPo
iD9DuxJ/5oBR/+w+tdmG4JunZ457dX5uSPofXnz1utN+ywvHR/CVN966fMvx
BY4f8WrgR7yagyJ++k6GvmPAOaOeQwGfuWXoyP7VfwX4M/+w6MyZWWfkOP9m
8mW/k2Xkw9tlsdt1ET+GPrI/29m+884fUsfdtzY9pJ+Jh0M/Px3NW+oPzXfk
k/Ja+fR2RWtXzkucJ3e2rylNfX7tyc2LXHmJx9MlKu/A0r3/dtJpPwdv3nVP
0XVntQy7dKkfPqbXkmDOQ1PfTzuoZcj4+PyVP+4sucOfu6IPu/Zqm1Xcb1DL
cOy0X+/r81NG+EbEj7hH8GP83Lhnl/fGFvk459iLKCfloV1Jz/ihPIwfyuPa
IyrPWdXjBu93R5ErD3GI4Mf4ojyML8rTPJLzYMFfu9TfkhPuG40vYMbX/2rt
3sO9nLIHgDvKaUx1OqfOOcllXFNIRhQqvq9BJCU1ch2TGWNmVGPyIwwj0ZXE
z62Sy/RTkchlROg3LpnJJSJFRSlKMnW6C6HpmdZnn+e8np4xz+Ov7/N+197r
ttdea797r71e88b8Ms7m151Pv9iueaOG2axop//cmF+ezS/4zC/4zK+RgS//
nZn8d0DMr/y5qeeOMb/kq8+N+eX51D17D31pRFHU99tcOKz7kVN/Orwoq/jb
gLFNPttcOHz/M6vOO7MiwffPjimuPGOrfw+4uCeuiXv8rLgFLm6By8//fY9J
J158SnXdrVSHKvLzwY0vuPWs+WB96Zl8dw0Z3fadQY0y8jUcfF3DgTc2ysgH
Tj5w8onD5BPnyQdOPnZLvhde3NS59RHVdcJS3ayQ78WAkw+8eYsNJc2fL856
xndMmt3bZ/3ZtxRn42P/oFPjgbNnzC1OeTLay5tuHu0nR960/WT94NUPXnTg
1T7hjfbwomO/WXvfTdF+QOw7wC9/R3v53Np/HPnc8PsfXnjghQde7RPeaA+v
POp8XrFneeALn+x0wKqXlxZqP7V8+qYXNxVWtyqZ8OxflxbYH3iLeH8Ct05v
/26/K9sdsqZwQORHD1t18sSr260pyB//+58v+fkTH60pyKuGr37t3cdcNaBh
Bh/7Bh8Z70vg4gd68s/Rk1/9j6AnfmpfJ77vqf38I1qedPzkdYk/7fTTTj/t
9POevVPoTfw7OvDcFN8DHR54rht38LQR7cuyGYFnt5n9h868uzTF+aq3L53z
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
vQs3Tm20qDK1XxD01dscGPRr1vOsncFbN/L84MVf9+iPP/3loekvD07/tk2P
7tZl0rxCzbq28wtNDz33d8OG1s/I51wXHu3h0Z582rsn5h5RqlcY94jcKwJP
9QsD7l6IeybuhbhnIg9RHp08RHmO8hDlOcpDlOcoT05/eXLy8OTJycOTJycP
T16nPFP77fJM5RXKc7TvK8+RfO7BkM89GPLJ6yOfvD7yyesjn7w+8ulPPv3J
pz/59CefPFbyyZMknzxK8oHXvH++IlfvY2Wu3seKXP2QZbk6HSvSPtGUqDNl
H+imqDO1vTrO/+m7cdurA40Ouuigq34VuPpV4D+U3DXrYFTLmc8nysPzcuXh
/GfNPM3S7cLz9bDzcOuk7eUP5eH5+tl5+A/Np3EybsbJuGn/334XcHt1wLv3
m/tY6407ZCufXrCs9/Fv5vLAvv93ELdXx/ypt4dfN6puRcJfiP145wLrYz/e
uYBzHHDnOOAfvlzy1z+2rJU91+K8e4qPWFoYcNysRxaMqJXqUnkf2NKq14iq
u5emfYB32h6+4tTCx4XWz3Va1Ka4VrpP8odDmj1zff/ibK+4f/L2yE4Dvu1S
nOD2//Gzc+z/48e5BrhzCfCvr5hYq03zymxa8Nt56s5Fvc6sTPxaxxcdto1f
9jU7+G224cQmTcorEz/27fdbeNLK5jtWFdQdb7pl/cQuZ1YV1C3v983yXTtk
VQV1x8f/+x7GqoK643ut/eCdsrmr0rk+fJ0vuW/gkBWbEz7fm4NPPWn41JOG
Dx544YEXHnjhgRceeO37w6vudrPAq+72FYFX3Wx41c2G17kqfHut73jjL29s
lOHT9+rwqf41fOpfw3doq0kzfnZaaTrn73tnz/51zi3NOoW87Sr79yneul49
OeTdVr+kNDsl5H3syXuW3tepNGsb8hrfWRsPbdJ3bHVdenXqja869erSqztu
fNUdpz/46E8dc/pTx5z+4KM/+MxjfsN988Yz5jwyb+s6akGH01qvuv6NtH9n
npq37N68NU/NW/PUvGX35q28W3mH8nblGc5b98pBi19fn+rtOM9TF7t55C/q
ry629s5Ptf+h49rIeWP3+Vlx3eR33cevCP0NPnZ0s7Zf/TjtM5w4dczmaYeU
ZPQnbtDfvC8XbWrTsSTtg7zR7n+7zFpbP9Fzb43+5FWSX14m/f2se/mUjdeX
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
ubgI//53N2ja8srqOlHqRsEP/i8iMWbL
   "], {{{}, 
     {RGBColor[
      0.33397672886243995`, 0.12792855345845727`, 0.5864250111696041], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1mG+Q1WUVx59FuPuHe++ul+Ve2L33Llih9UKYiUqzorJxIVZgHYkVZBdB
NMhAyoKcxIDJP2AlIPLHcmjSXRYctRewLGn2z3whoDPZjJbM1NQLSjFBQOTP
2vfj9/DiN89zn995znOec77ne87vjl+4/IZlw1JK+2tSukTj36qaN6b0d43T
RqT05UxKvXpXafX8eCGl88NTyundHVq/R2svadytvcVcSruyKb2o3x2aT9G7
/DC/3x8yS8spjdS7IelbprW89PRoPCjZvRqf1DNQl9KEWunQuwH97tPzmPZe
JpuO5FP6mMYHR6e0Ve8Xa36rxkUjfM522daqM/s1bxnmvZx7fyWlr2nvAxr3
1vluT+jd3aNS+pXGf5W9xl1Zby2mdK9sqm1L6dLQhw1XN6TUOMK2/1F+as/Z
LxvHprRAa18o6T7SNU9++Jbu2KbnK3pf1fhc3rKc82ntu1zz97RnY731ovN7
krtVew+XbTs+2aFz5zX4ni+FPwbiXh/qLiuk5049K8MGbHlcerZJzxHp6ZaP
qrK1R+ObZd+Xe6MLvxGbLfLn05o/IJm7patd8rv0e5LiUCv71siv9fLFP7Ve
pzHVe46P3m5J6QqNfxY2aqS/UXf7nMbhGj+p9dM1jtsY/V4onSeGW35G4AK8
9EvlOy2WP6ZxrHw+fYTxgDyyHeCj3r7A9iWSfVgy12s+v2BfoYe7/jTe9Yev
iF2fZKZG3JsCG/i2UfNHs55vzXqOj+6UzdmcsY4vt8b6TQXPwfak0cbD88LV
HGEmL/telf3tRfvtUIvxTa60S/9Z4eMdxeycxmslM1wy2TEpHdD+Tp23XeMK
xWYbWJAPH5fMKsWgorWf6F27ZB7SuErxvU02rGz1+d+udS51ybZdeuYU7P/B
Rvv0SNXzN6vOy8G8fbG16L1No5xP07R+Uv7eXOez8D24wwawsjjrc6fLvocr
lv+Zxr+WvY5dezLGJZg8o3se0/wDjdfLnu1Z+xv/PxFxGcoYa6w/q/27JTO1
bNlHQ568rs04t4k1+AAbB/LO54tx7Q2dc3PGM3LrZd91ktugcVizeE7vzrQa
0xls1Z7Lmo1b8LtwtO/8cfnqFcWvbqQUau3dgn1XZq/8tU/71kr+Ozr/kPR3
ac8v9W6HbN6psVD1+qVV32N74OcRybcp7qd0/ni9OyiZRo3H9PxJMXpb43/0
/EHzo1Xv2xF7T1Qcu+MVcywy2HRBcq9pfr5q3tsfubA6Y47Gb+QDeXFS7+6T
fT+Qzvs1rtL4Dd1tpcaWNstMEC7uCi6Ck7YHPndULH+Nzr4gPbfrvCt07m1V
nwUfDNb4HTgiN38RXAQnwXPfzRuzXYFT8m6i/DhfsnNG2VZsht+oBfifegBG
NmeMB/jjUznzAjHcE3FclDW3wqv3xx0nSfdAvTnrqYxx9FT4BD65J2zeV2/c
7gmfrY71apvPvbzofatjL36anLM/4Tji2VnjWBLTpqo5qq3Rvr9G9hzV789r
nCm5m/VcJbPay8YSmJoxyrn1mtZuqXrvAo1rxRGbZN86jRcUg99J/5DGBXWu
x3DMRv3+utY3aZxcay4ib8A6mB9HLSg4f8AG8YTb2L83OJScuqTeOYtfJ2rv
XzRe2WpOgA8+4mHJHo85uUU8eAcuwANcArfBdfh7nc4u6V2txmcix8l17OmJ
fOb87pj3Z71OP8HTHTb/vs75Bhe1SdcUnT9NPptdMIbBHTEi1sRpcpt5GD7e
JN/1Eu+xthMbkR9XdV26RTn+csZxAbdbdM74Wsf1+zrrIdnxiGz+b9W1/62q
bemKGtpd47henRx/dPJuXcRulc5drz2ztPdBYivbrqOGwhNlx5340wcQz6nJ
+9FDjeRO9wb+mnLuK+hNBiuO40TZ35BzHlNv1lZdx9dETd8V9ZQzN8fvH441
xjeNNWdiG7yJ3o6on1NKPpeeaFPIf0lrny27TlGvyHWwjt+IHbqIY2ub6zE9
SG/BuJmhZ65kbso6f6nz2IdtcAL1NR81An6A179Ycp9TkA2nK+6l3q+4DiMP
v75QMbf8tuIa2BV6eNcVPEN+YCf23hzxao+6D58ij2+oVfAMGHi3wTggvp0R
l4MtXj/R7P5teca9F7l0R8QPPmIdeWrhipBZHv0a8z0xR5bekH6SGkZsOyIO
1DZqHH6A6/mNndyxLzg0nzMmkP9Mm3N/TtT2UfXuDW4s+M7cl1rHHuIHNwzL
OZeeLfnOvy45NsQIPH+z6F7wZd17fdZ7OYvcpO+Hv8ApPR5YrY18n9js/qs/
+lXyFDuwgW8AvgUam80/fVGzeD87cpnzsQ1+BeP0Y/h3adEcd1j2PF1yTf1f
i20phT0bsrYVf2JXMWw7VWMMwl0zA4/wMDUpH709PcnBwCQ1ZZZkFmb9LI7+
h/nM2Ntcb26Cl7gLe8EbmEeGetQXvRmxA8fg4VzV8eyLdWRnhTy1hbOoL/hg
ePihK/hgf9QQOOuq+BagB1gRNYZa01X0XvxIfKmj1ATicVfR3A7Hw5HM6Yng
7IGolegnHuT12YzPYk4P/o+8+6SjUVPRO6Hq9U9UXaPI6+nRP+Ij/ANHEXfq
PXXxbOjke4nvpqWttndu2Dyo+O6UTQdK5lHyjdzh/byQgcuGIl7kKljlLtRx
ajzfC9Q0avyeuMfZ6IWI1VD0FRujRlysFewdjJzlXLCBnzLhq496uFrzwozg
t46wYU30A/QvYPXiNy0j/h9X7/6GNfIKm28vuq+ZG9yIvt7AA3yDDLqpvU/G
Ov09doCNV0rW+WrJfdBAo78zwRQ4Rp56Qw34UdU8sy9seKNq+der9gv4Blf0
gIsC82uLjje9DLnYEPnInSYHtqg/DRFfeOhoYOO9ivv1kxoPlXzuuFZjvjfy
cFHkGGeBw4v92n3ac632/rji+zA/HjimF9sd/2G0xPxw6Oec10vOzTdK5gvs
XFI0b/ZFfaHmTY/vhZ7oQ+C2vtAJL9Fr3ZA3x18ZfdHUYtyj3j6E94eiRsyM
OVz3THAUXIV+aiRnHYt+Ezz9puJvzucq5nK+BYhPZ/QW8HBn1BX0w2vwG987
jPAxc2rIhuC9Fwv211st5r2O0EMfQz+zudWyzLcFBzeFHuI4+yJXR63kXP4f
AqP0fB/I1udl85mKcxQfwaHH4xuyI3rjzjh3nGrTOe0f3+bvCM6YH3bNCBlq
HTr5n4T+fVXI0N8xvxAcjj3gE/zjW3Lgxqgb8An9HXX+QuydHd849ItwRnfZ
9+qJGJVl0/uyraLxvO7zgmw4p/HnFcf9sYr7VmJHfQH36GMvvEYvCAb5ttsS
9vy77G83vgv5tuEeS8ruWbqibyE++IvcxDf0HvQgM+Oe+IQavjN8C698GD4l
7hsidnDm6ZDnvy78j96DwW07ApPdEUc4bVnMz8b/JeQ9ZxDHnsgL/DA9ag45
QS7MirpGrn616G+GkWOcw6ciLuRXU5xLv7A+7FwcOc5Z+Js6x7dUf/T6+6Km
nQw99EfLo0f6Pxu2rEo=
         "]], PolygonBox[CompressedData["
1:eJwllm1M1XUUx08Ilwtc7iXAe4l77/+C5kO9gS2qtR6obEHZo6utcAqSD8EW
Vlha60lKEzUD0WFm5dZq1QutF2GQZs+vRN2yTUu2Wr2wfAhIQwWqz3fnxdm+
v985v+85v/M75/z/lc3L57VlmdkWJBs5V2rWFDbbifQnzBamzGovMZsfMWsE
r0ub3RY1G8H4FXBr0nUNSAv4TfbmRZ1DXOsCs105ZvfFzNaDt6O/H/0E57eB
j8A5F/6lnP8RPFJsdnPIbC82/6DvDPxsQ6FZG3y5ZWb/wd2Xh5SYFaE/gO1D
+IiC2+JmGXRbsNlN/OPIGXA2e3PQNWITwNeF/QLwHjj25LnNRWyrieEZYllA
TFXgMP4sz21ke5C9xRGPeTDlPuV7kBiKwQvxUYLtY7lmveDXucMd6Hqx6Zxq
1s5eiPv9gKwAD5ZzJ+yrsX+UtWETLsAX8Rwino2cr+N8D+vL0f2Mj8+Ifzbn
T3F2HP3+qOd4K/rNrO9kfZb8bgJ/AsfWsOdEuTmccO4K1svjLsJ97B1EdxrO
K+Dux8eQ7ob+BOsoNldnzG7Apom7P8HejeAN+Lgdf6P46wTPIIaWkMfQzXo1
53NDztEhf7zh/Hyz9+DrKvMzOqs7vgZu4Pyz2H7JepL1TmpqO/l+A3kHvOoy
7pjnMawEV2FfmOM1NYD9yqTX0hLkaXAjPkuxX0V+3457zan2VKM7wEO84TZs
34XvOLg+7m+jN6nhvr+lXKcYfpce+Qjcx14d+HlieB/bftbPgS8NvBaeVM1N
9TfQW6gGusBrdIeI19ha8E0JP/siPmvBq8lJd57fsQN8QW8C1xTWt8adU9xf
IUfRfV/staA3WA//A+T3+kL3IV/HA3/LbPamoBtjL0sYyWLdkfK7JFi/DD6q
nsD+Ktb3oK9GysBD8E9Dt4PzvRHP2VtJf0O9pXLQDQ6Ts19j3jPqnapS544j
oZT3nHovg80i8EDCZ416Rr2jHlevfwj/LvgPl3vt1fB+regfRH9dvudIuToF
x7dwFXFmOrqT2M8K+R2OBd4z6h3NrFfJTz02VxZ6D/2Eflnce28YzgOcvRd9
Dfox9Cnu0hJ33+rJQ+gnOHMk5jNIs2gG61+iXtOqbc1AzUL5kK+iEp8FMe5c
TSyz4OvRe8GRgb8SGY/5XpDxO+vuqrHd4EkkH64IUgTfX+U+29SjZ9T/gfei
YprUfZHFOR7TTPBoqd9NM+Bjcr2IGJpzfGZWoi8o89rSTNJsSmf87ptYl2e8
BlQLjxBPe9J7UL14N3ut+lYgdeBvOPMnfGvI8Zyov8F31GakzGevZoBmwV70
j0e9Z/vBLwWeiw9YvwA+y94A+nrWw+DpgdeeYq4Anwzcl74R6aTXlGpLNapa
HeFMP/a16IeLnUNc2hsFP6V+p943aj6A/037rJmLzUWwaabDFUOmwVeR8l7R
NzAD7kn62Q3IZvDD5PPTsMf8d9q/Sfo2qWfPJ5xT3JrRE5qHxF8X8xmnWXee
vX1R5xDXOX0vcnzvQtp9yJdyrFwrR8qVODrAFUmf3bfAlwG3pPzbVaD3SXnN
qHaU88/hO5bw2aGZqNkYJP2seug0fPvSXqvt2O8Hp0t8dqqmmolvZtxrQ9/Q
ZMb/AfQvoDdfC27B312FPiM0KzSDNYvVU+qta1OeW73BNSmvIdWSeqACvqbA
Z4O+IfqWfJH2WNTz6v1U0t/2a2z+wDZW6ndVj6hXNAM0C/SGesvcjM9WzaQ8
8InAzypGxbqU9eyYz0zNziWBf6u1tww8lvZ/Eb2J3kYzVLNUM1SzVD2h3tA/
wQrw/zKoQDM=
         "]]}]}, 
     {RGBColor[0.4150981865873199, 0.26897686037537194`, 0.7004510335088123], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmgmUVNW1hi9d2C1tV3dXV9PV3XWrGnFKnKMPfc9nYtSowFvBKCpOqJio
gTBEQQFBEBQZZdDEAXAWwQkcnmNUHEEZIoJGBBREzXPCKKOz+T//7Xpr9V3n
9LnnnrPPHv+9T+167qATB1YkSXJfJkn0l5zVlCRbKpPkyUKSHFObJKfUJMne
Gp+ST5JV7ZJkksaX7pIkS/Qclrjl/y1a5KSM//+d5r2s9pVd/O0VxSS5WOss
VXuTngmaN1vtIK35V81drDUv0/vfab+r2ifJ5FbN17fT1O4oeu1MY5JMVX+c
5r1d0tyM9/hE33fLaQ31T9PYqJzH2XdpQ5KcrHZvrb9M7+ZqndF6+jYnyZAO
SdJP7af6f5Hm/0XtJK0/SutPVvuI5hf0dNL4XRqbo6dZ/SqNfa/5N6q/LM4O
H9ifdX4Or7JJcm51kjyquWXRUNLToy5J5mvdazQ2UGcZrrP11fzLOKvmDtYz
TGteWeMzwpdBWmeL6Jynb47bye8YP0l8O13twzrX3RnzAj5AI7Q+rP7HQfM8
0XOR2gtr/E2pzv1DNT4053cvat9xou0PWuck0faqxoboOVZzFmlsjt4P1/N6
0DdZ41vaew5rdt/Je7HvupLndRFvR+U99obovEPvb485f5Ocx6s/Rev01pwZ
VdI/6d2l9dINjVdWWO8+1x6Ht/PY+Dj7MXVe50Z9uyD4CV+hpWutaf6l1npU
Ovwr0TCjZFr36CiZas7/1liPR9b7/87aa2mtxx/Xt8NzpnW1xp+QbK6RjB5X
+/XO7s/Vugv1/3y97692e0uSdND4VrUV+i6jp1Y03SG5ddG5Gio8xrvZWn90
xv15oqGX9mpSf6XWHC1Zd5AOLMj4rMib876mOWP1DBCNT+osg9QeoLMMrHX/
lMRzBkb/IrUX6uml/pUaT4LP31Z4jXZqR2Q8XqV+V+37P9q3u54d0tPH9OoX
kteJ4t0fdIaeaieVbE+L9P5GnelyffOA1rgkdf/i1OfoqKeb5uWq3H9N5yrU
+B3jFcEbzr4RH1BhO2offIM/Seo5uzV6D2iFTuhtF2e5P+PzcJaeGjupxnry
XPyPDb4q2dwhufRtsmxvbW+5V7ZZvvdIZ+7U+9v1/F+lW+bfoHkHi/5b1L9c
/dt2cR8ZPa81H9Ieg9R+JX2YofG7NP5Yq/uPtto+Hq+1jSBHdB1Zbim5Pa2j
17s11kfHewb9y1o9foFo7lVjG2A8L3o6qf9P7bVrjfv3av1uVeYvvP1byTyp
F99eyFgHsNm3pJdfSLZFve9c4+/59jLJdarkm9WeP+xinwbNx+f8Pz76tCp/
w/xVOevW+RrvnfM68O3QKvMOvg2V7K7W3P2lP11l1xP1bq7OMrXZ9nCg9ppd
sp+/oeQ4s7jSPv9dffuadGmj2ulF2/wMtWdqv8lVji0Hqf2FnhPbmQfwBdpo
G/U8rPP2a7JcV2ivIzX26/iGlv/hOXP5Bln+9A4ffrTaQ6p8FtpDo39mzn34
P6/J9HTX+bY1mvZZJccYYs2KBp8fPnQT7/dV/1T1n9d3G2vsE9BzznJw0ANd
B0WfPdj7Hp3xpRrTB22MdYnxU3L+FvviOSh48scm6+vyVo8dGWc/Q7ybpPYE
tfV1lkuP8OsvZhx35on3I6Uny/X/16L5Lo09pjN+qf6d6j+q/k0ZxzRi4juS
4SvqP5E4ri4h9lZYBkuj34B8M9bDBXpeir0+1JoZtTfBQ9Gzvc7xaIT2/yzj
WI3+osf4sd01fx/iuPi5Wd9tjfmfFRyT79I6z1TaHrCFo6osS2Q3tsl6PEbt
3tKnPtrj91rnuUqPoz/w9aiQyyHxLWOftTrG/0vt6Rnve53221xw3Lhb+45S
f7h4f6nmXFqwHI7X+JAm0zO4yd9tC5oXSqZDFXs+Jgbpm+XYqOa/qfHh9eYL
doncdrQzLhhSbR3aRzLaX/399KwNu8a+lwT+AncRr1fmbKfEDWIDcYH48FrE
EewYe4bHT+Udy4hpfLcqvuUd/yO7p3SGn2mNas29KnACeIH4SRzFv67T2PUV
xlHnFe2TB8guGmT7qc6TV1uvp6h+rtl4D9uBd8fl7efmFswbfB/8GaHzHqkz
ztfaQ4rGd4Mj1l8c2AOegdng29l5r4dMGGMP/v+6bJwzJnAo33/bzn6IOfCn
WXZb0LOn5LRY552ksYLWOxm8UWXdX1NjjAI+OVPnOLLeNkXs7F5vmz9Cezco
NvxKbf8OHh+pOecXjAXu0Jp9Cl5jQ9myZB30u1foBn6fGEws/kY0Haz+k+BZ
0fVL9XNa/3C1mzLuY8PYDftihwvz9m3Eq+4F83JF2T4V+olL/TVvqs51rtq9
64zBBql/T5PHT9EaB2v8BvWHa3yAnmnqn4cvyRgHcK5Zem5R/1r8tJ6ZVcY4
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
0eTTx6XGr13j93u9Iv+a2NG1h2ma82/DQVPH
         "]], PolygonBox[CompressedData["
1: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
jCvWh3FHS7F9LmdYGLkGqxarpqu2b4jt+/PxwVvY9mrKuiRzAXvV6Jyc7Z7m
CeDfx849N6gnA94Ru7dQjlCu6J1y76YedyL6ekSuJS+xHlH/r3qVdAyWq/eL
nLs1A2gW+AIfNKjrHnA3cIRN+/BtLj67lvzRF/7F0A5FRj/pg+Zb9HWCvo/8
x7dlCesYDVzK6pp0zVLtmhm5V1NPrt78D7HPop5ZvfNDkWVdhcx22Ncndq5f
JPuBb0/5rSomnoT2mgLbJh/JV8cz7rX1pk+o147dm8sm2daoxLPLHs6UBfxo
7LNMxh99U77D2rvk28LYOVS5VD1dN+z7JPbbqeC+NuCbZ7BhCfTD+fY4e2Wx
4eeR9yjy9rF/IMc9nnq9p8GHJMwj3v6xezv5VL7dylqfdA5VLlVPpd7qZ/gj
7N0bOZYKdQbgedgwFl3N1A8i/+XYtiuHK5e/zH5VQ8+AmgUL2G+VdI/envPc
G3t2m4++u4CvUo/byG9Wb1c9n3o/5Qjlis9Yi+q6JuwEXphv3ymHK5dvizxr
JqCZjv6fiInK4Jx9CPibXPtuovrJIs8Emg0GYEMP9DeP3dtp5tPsl4ncm9dj
lQCfFbt30cyg2eGfKedy1ex1yn+xe4Ve7I9R/Y0tWz2EegnNPJp9lHMf1qyU
si91R/sjz9CapdVjqNcYRw7dWsc96XjVd+5jK2fdpjfB2TvrDSR9B6XImgo+
LekZbDF4F/C+Sfes6l0vBb8p6Zyk3NQ6z7VKOV+5f1mxZzflWOXaKSnnPs3k
myLXANUC9VT9I+dk5WbpnKZeM+PZUDn22TOdo2pzlWwCPq/Qs7N6iA+5i48i
35Vqylbg71PuvZXzlPs0w2qWvZ/VsdAzRe1ske1ZQjO7Znfl/F2xY0ixJJ/c
HXtm1OyomFPsqUaqVs4Cn6NcGts29WivIGt27D3NIJpFVmDTazm+g3Hgc1Ku
bepJP2dvVJ5rR23NwLYDGc/OemPfZtzTq7dXzL4F73LO8J+EZ95BiueUe1V9
017DEucG5TzlPuVM5U7dYVfl+8i1VDl9aMozjWabPsT3G8DH0q4lmuF/Bm59
pvc0I68AP5lx76kY+g24bcq5Tj38A5q/oHkg4Rl3NfDXkXsR+eAb4E8j90rK
0TP030ux70b/sdRwn1V5flsTWJVFnjk0eygHt8P+1bmuNbU1lP0J0FdmO+d8
xP65+c416umL8UVPvg1OOofcm/J/DPqvQTW3pMT/Kei/BfUU6i3aF3n21czZ
ochvUG9R/wmNjpyjlKvWcIY1kXvu2t472/+l5BR6VtF/TDfk+ww6i3oM9Rpx
5P9OlFN+zHWOVa7Vm/qTZtXIslWTnk55xtOsJ5+OBO6X8mytHuFy6L8r9uyh
mfX7YvcU6i3kk1rfpD0baeapAB6e8qyumewx5ca0e1/NUGPSrlGqVfJZL+Wz
yLlL//Hovx7lDOUO5dirwd9PeXbTDK9Zfk/K/03pPyj9F9W40P+1aGa5Ht4D
xZ6l1HOv4/z/BxPz/rg=
         "]]}]}, 
     {RGBColor[0.4962196443121998, 0.4100251672922865, 0.8144770558480204], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmgeUldW1xz8YpjIDM3Pv3Jl77zdDLME8LJjYRfRZECUaFLuALZa8R1UJ
2DV2BQsa0NAURIqCCtJUpFmoKtgCFqS69CWxxgaul/f/zX9nvbW4nG/Ot88+
5+yzy3/v8+1xyZA+g9smSfJ2SZLoX1JWnySl+j1fmiQbK5Nkk36Pqv+DSv89
TsQDm5PkoA5JMkjts3VJ8px+N6h/34okWVmdJKM1dpPeL9PfF+v5oVySbGmX
JJ0akmSy2n7lSfKx6Feq7V7i51mi66u/p2uu14rmMzaTJC83JckGzbtE7b5q
99KvIJqrs0kyr02S3CKaK7WOwzTfVWp7dEqS76s0Xz5J1mv+DfAR7956/4ae
d2v+D/XuG9F8oHZ7xntbI/4L9Vun5w/U90bRY8fp+R09v6/nt9UeUGb+d4nP
cdrPk5pjbbN5v6nfg3o/on2SbBafVVrnp3Ueu6fWME3Pa7XHSdrzn2q19lrP
t1g8povmHNH013yDtK+BaZIUtdHLxOO9OJN2+q3U3701pkpjLtMahop+rOiv
FP29te6bJ3k+qLke0t+nlvhcOJN6vRut/ofV30f9h9b4+e8af4+ex+l5g54n
1fmZdfIeOugPLLPcbhOfYeJ5jv6equeXJLf1WtOiFq2hxrwmiH5gjddwtHie
pHV2V3t+6n0vEJ+1GnNJ3rTDsl7/yNhDmfre1Pu3tZfZRcvnZvFYJxmcKhke
pL4XmkyzSO0TNdbDKWoHtDfvyyWru3LWtx817nvNVaV336m9Lmc+8OMseV6t
uT5Tfy+N69OYJPlGn2FbzTtdcywRz2lqb9C5DBSfG9X2LLMNoP9f5zzn++I5
Xut4BjnW+De7zvPcmVpGt6fug2a4xj6l/f6sNXRW2090FZJvtxLLgrPGTo4u
+PzbaD27NNcNeu6nNWb1m6XnAWpP06+bnmeonSt+XSp87v9swLiT5NyCxzA2
k/E+2e+OnGXHXrDRZv19h+g7yp6eE487Jf8jpENVop8o+ivUdimzbsEfPWEP
6NIg7e1azkHttpzXw7ryGfuSLyWfOaIt1dhD1M7W2U+TPkzSuSyVfN+WnLeI
9ifx6F9hfVurMesl82+1/ntE11N7W6q+wdrX1VrXUchGtD/JzoeVWlcZx97u
zNm33KF2jN6douce6r825+drcta3c/T8TlufC3bOeY3Ku/9zzbWP/i7RHF1F
+43ksUtzjRC/Y1o879Fqr6zxOSKLu7WH1yWPO1LrNfo9X/w7iU8b8dm/xPPM
Dh04ucz6OV7vh8S+uolnX40fJL7nqT1R59FRNLvz1j2eW32q3o8usU9k37fG
3v/W1rJaprZ7pWX7qJ4HNVheR4l/h4zlsareP55rJc9N+j0t/hsL9j/EBvbL
3ssiRmA3jZW2nQmp9X5caj/NWHz1DvnH2ZLPdrUdZLdHat01ahdI7tM0vk5n
XqtfV/W3Vd8xFabvVmrbbap0jLhOe16lPd4mfXlNdC/p3RLpVb149dB+6+At
PqeKvpvaf+ndHI1bov0lTZb9cj0fKBn+U3Pslgz+KJ4r8MdZ+wjmOwY/L5pv
RLNLNHO0rgvaW6fw5Q90sD9/IPwyMiEO3Kv+TnquLfPY5zRfV427UL/j1Pdz
vX330VrLK5LT/Drb5KvqP1SPW3I+o3fb2z5/LPj5h4L935oOjhHoztvq76w9
f1fw8/p6+0BsGBktrzIvzrpMe9ncUWtVu1Nz7qhzXCG203+D1rBdfPZQu03t
TZLJJ3r3lta5U3+31zw71O6SrmwQ/U9qp6Web6raPbWeWZJbuei2tnOc5tyn
q+9RrW1emc95bHvLcmWl+QzW81ki7EJ8r7c8Fug3Rmuu19wnoSeSyUj9LtT4
UWovbed4QZyaXuUx0A8X7e/VP0D9r9aYDzI+Qv0zJbcjJbfvdZZt9feFmrOh
zDpArBwfPho9QDfRv0fE5031LazzmMc1/mj1H6v5t+t3Q/hqdLB79D8q2rGy
8WtKvG7Wv0hzfVdvXHOQnk/QGlrEa41sYXWV+YOp0Hv0f0HBfYuiv33Oa6qW
Tq6TrJdyvmp7q31Ec1WI5oYaz8uascnSwAnFjOdlfmIJskNu1RnrG3qHD1tQ
bR1eHHGceP6XOvO/scQ6fXO5/RU2eUu5/TZygR6feY3WMEb0I8T/kTo/Dy2x
L7613PN30R5qwWCa927p2Mfqu092d3zIpEl7762+f7Q1Zri/wvoEdtwgulWS
10t5x2PicrHRZ805w4u4yL4bG60vH2v83Di3xR2tC78p2q9/Ij7z9O6joLk2
bywGBsxLT/u1d3ybqb+X0S+d3yGaH7WGnWrH6N3GCuNW9Pvi9vbf/bSH40X/
Wb3jHPGuQut5s9n+4Y1m41IwKbHoZp3vaVprWnDMRz6cE7H2hEr7gT5lxjRg
i+tF9996vk7tWzXWE/R0a964FPx7aYVpGNdZ8/1L7/dpNo7E7r/UnP21phv1
nJXMHig6vg/O2MaQ3TEFx5Dv2zl+HyCdO0589kuNtdF/7OBwzbmg3LbHmaMH
nPvuassTHLZ3hWk505JOttWc5tmqNc0Sr21qJ3e0z6wNW8OewLXoXHWp7Xql
zmCG6FapLTQbHxTZX2AGsMO51dabbRpfXmV8SGwfoXX/SfTXqB1Q6ZhOf1Oj
MWyZdPDGGttShfpXSa4r65wvsHZsnfXjs3a1s/3URdxZK92sKxhLgCm+wmep
/4es/QN7QdZ/qTA/xhNHyA0maG8zcsbndzTYlyyOMVP1/sk65wO91D9TNKe1
M7aiH1nvn7d/xk8vr3S8J9aD2dChw0uNA8Fox4rPUznr3t2aa6FkN1DyX6T2
4LzP8Ayt+dgaP/cV/biceZzR4HnOCIx3XYnlhM85UTLtrzEnpNYB7B973pmz
Dn0rnhc0mb6n5plJXCZ254yTOgfPOyrtl8G6Y+qMkzh3cB8xj7/xSfg+/FJW
utBZ/SNLnXOQX5GzkGPxDPb6RZl1oZjYj+BPiE3bwq/Qv0z/3Yuf0h6HNthn
dZeOHSb+x4r/ZP3dodr2CTY/P2+sNUj76tFg/7hOMvxKc35Wbd+Av0Rv948c
iryLvW5JbbebU2PJheXGk+RJ5GzEYHAx8sXHQot9b9fzHyTDHJgx63XgU19t
Y11dXefc85S8dRJMBD4YXGKfTH66OvQZvWYMOA+MPzr44DfwGeju6qCBHuyC
3oH7kQf8iTsryt0/rs3/80W33xPNi3o3Xvvfq8JnADYYmfc+Rmftd4lV+N7T
ta/d4tchdI+z59yR96WxzxrpzDhwc4PjCXUF+smNXo86wvtF+477GxynDgn9
JLcnxy/V/ENT2/mw1POMrfPcXQOjnVpqPRsT/egdcuQciSfoFmsmZweLnV1q
vN879Bi/iD7y/JF0Yobs62O1E+p8Zsj5Q829Rmv4q9rVareUOM+9pdL+D31Y
0WKf+EqL4xexC59A7J0ce8Mfs35kNif0hXPhfG6K53cr7GM4i6M032miPTw1
7XUhH95xXviZSXp/d62xK/Phi/DD1+ct57U5y/r1qOHMlmxXUD9R7Lin1mPB
3PgbbJzYgZy+qLOssDN0gVrAQZW2AfIq+sCQ9MODPtYwrcZ5EziNPGBlzMsZ
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
dpKuF/xMHzEev7B/J+MG/NWorNdLboA+glc/j9oR8QA/MUvj9kztp3tljFF5
D16ixgEum53zdxbEu1ej3sXaqG+tipoQvp1ciZjOPrlH+iy+N+CbBerRD4Zf
mBex47HU/nay2mHNlvPVzT4f8ANntDtjHenRFD6rynGWOg61k/1T49+dUef8
vGh5fla0jyQ3wEef0eJa3plqn5J85qv/xaxzVnLX4ZEDgmnguzjj+yTuD8F7
S8PHrsoaa24Vn3Z5x9hPtIZ+eeP4/nnfp+LTuDcmV6JGTL40M2L302rPa2/d
QA7s9b7YL3fR38fdKvVT4uC6ouuuX4f/QT9YP/5ku979XfudlvG3M8RK1jRV
e32io/33soxxIveT5I7oDHEfvMbY2VEXJl6/WjQ2WRM1I1r+RuZPZRz//iaa
mwLTcLfA/f+cqP9iB31jnW9FvvxOal0jNoE1GPdePP+c9/0yd86sGbkgE+SH
L8YPUzSopz6r9lrNfQV1k4zzEuor5FzIjX5ktz7jfIe8hzsS7koObjIWBXuD
H/tEPZC6IP4XP5xpct0Kv3ZkasyzocJ4ZIH0coD0c77ao4vOHXeBzxtcQ9la
8Hmy/p5Rm4WefJm7grOqXRfeUO+a1D5NxmsDIpe+vGiaEzM+w9PbGwdwb4nd
t9ZDajwveQS1XOYlTySHwybJ4w7IG9d2Vbum6DrD2qLpBwYe3hr3sNzH4i+p
meEz53a0XcPr5ArnBeRSlY2m6d/guPp95D4tLf4Gq5PaRxuMiZ6XLPu0OI6f
rnZjat353ybXvsEa00VTXXCOXaO2tpP9y0V6/19Rf6YOjY8HJ4GRLi5YJhcV
bIvYJGsAv7Bu1ky9Fj74KNbKmifknEdAj/3yTRl3x5wF98HI9xdNlgNxjTF7
Ew/U/0u1D2eMk5YX7b/Whz5wV4Ee7Rb/l+Oei/suYiCYgFiM7pwSuJm4R12I
2Mi3A+AYMMxyyehxPS9rMV7jfgKMDp6lVts17qaI3wMi72YsNtKuk/sPaLCt
T41+dHBq2P6U8AP0n8/9kd6dV3B8Ik79mXpMk/3LrCbHfurvxG5w7Ka4fyTm
EUuI49wZdo97w9uLrmOelbGPxlf/Ku/7Y/LVNanxyPD4Lo74wBrIZ0ojRwbn
Ev+hY03sG5lQp2YPrB+Ztdbzoh6FPwAjgZXAe+SJnBkxCXvj3qUZ/dN5py1+
N76jv1cZH3llh8DO4+MZDAQW4v6wa8H1+gPVvq7x00XzWou/L4T3u6J9PGqY
1DLB6eD4f9/z0RYarXcTI4flToH1oKfcMeC/2jf6Dg+M+I14Xhl3Qle1+E6L
OLA95/VOjHUSL4iRjKEGQ20KXnyTgx9kzID4Xqu60d+S3BzfB6KD2DZ2Xdbs
s16T9b1Er+i/Ir6/WtVofWTvDVHjPSBiJffkG+O7Tfxez8A5+BiwHTUi4if5
CfUG1oivbvXZJaaD5uCCv5vi+ymwxxdRT/tH8GqtS9e6vkEMe6FgXDWhyd9T
cM+OPnBnTqwn5g9OXcPslzX2bf12oY3zQGLaB3q/sODYP77JdcRpUUtcERgF
e+H7uwFxx41NoYvsk3vRqXE3elPGmPjpovOkjuH//6dof4hfhB4sSl7PXQ32
Q/2CNcIDX9Ev9Z7BOxWxZmpZtDfG+tnP4KjRXp2ajprEsYFZ/zNvGXOWnB/1
Q/rBsSfmnQ/0UHtR6m/ILk79HRXfpkwCY+vdyaI5We0Tgc3AaHxbhG7Al5ot
fJArdjklbJO7AsZy31Md31/xHRb3O9TX8I/kVdynEdP55g882ZJzDQ169vtM
4Hri3aiog61NXRcgFvBNB/aK3WLLozKupb5QNL4H53dL/S0GdUjmpqbFN6WM
WRK1pimp7+DIefGr3NVvj5r2pIxz6feK9r+1UTfjPopaHvEXnaHWRN3g0Ly/
UThM7WMZ1zT/WrTNjg+/BC4Hnx+Rsx11DTy5pWicvLVo34ZOo89gFvAuNaLN
cZ+7LfV9HphsU2rf3DdqDXzjyTlim0vjuwPG0j87vhElZwD7HaU13JW61krN
lTPBJxE3iT0NgQ+XB26clfpbFb7DpH7MOGyFcwRv0Uc9+f8AXax4Aw==
         "]], PolygonBox[CompressedData["
1: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
z7B6RvWOmfJB4DuWpXgY9mxG13Sv4LBzmWYwlcA7w66dVIOoFlHNpdpLMatL
xD27enfV0KqlP4g712tmoNnBcmxcU9UxaEXCPbZ6bcXsDtCn5jp3a2aRptgf
cmxRzbpYs4aEY4N6hOc1bwl7VvEjZ3Ijstawv8druCZTbfb7qGtjxQDFgoaX
+2nVdKrtbgt79qIzbgR/2eX+TTXE7mzXtKptVcOpllMNpVpKOtbmeSai2Yhy
/F+Bj/Pfihru0cvgr2DdIsX/nQC+J9u1vGZq12PPLPYwsqp7stnAj6GjV7Jn
Sn8BXpjwW1DMWwT8ZsJ3XTH+LeC+Md+trdi7B9mz4FmVZpnvhtzzqvdVTVwX
XLrma2meyWxg760i7m30pvW2W0Rce+tOZOP/07U9u3uc/3Llz7h7K9koW+vw
bUTXJ+CLgCvQ91O6e2713uIRr2Zspcgvwd7pGX4zG8EtQ97bmZ4Zana4sbZ7
bdkoW8dCPxj6LuBHAW/km5bhN74BfOuYY4lmMq2As/iiGa7pVNt9EnEvvBcb
PwSuFXNvfS88V8Sc45TrzmDzV8BHo54daA+VwEfYw/509/zq/dXzq/evjQ49
kt/xX4M0+0C+iOc6N4inDP5jea6ldQd0F9bGHJt0RuuA18ccOxTzPgB+NebY
qZit2L0oYt+q5lHtczbHvZd0Pgj+XI57J+WsXqrno97LI8gYHPOMQLOCdPkk
6hinWKecuTTiO6O789udZ30uatp+fIWyJWxf7eY+n8y1D+VL5eQNwDdqPxmu
IVVLike8OmOdtWK2Yrf6Jc2mlDOUOxQDijm/KjH7UjPHoeD/F3FvsQf6SxHX
fKr9pOMG+Svi3lQzDs06tEftVXdCd2Nq3LMUxTzFPtWcqj11JzKBR/M9luGa
R7VP3xzPLtVT5ud7pqvZrnrch2KuIVRL6A6OYX0hx7FGPVppvu+k7qZkPh1z
D69eXnd6HLwVIe9FMUexp3rIsXWZ6hOAlKhnRZo5JavejLo31ky4O/ShkGft
+6D/JeYaULXg/ZzJuLDPRGejGla1rGYkmpWox1SvqZmmZpvKsXNDnolrNq6Z
9Kdhz6A1i9b5a3a1Ke7Zg2rmYuD9MduqGKjZdyJm3ZrJxYF/jtk27U+zynLe
754Mz4g0K/ou5Nyvmku1l2awmsWK5lzMMyfNnjQD0ixIPaN6R81INCv5P/m4
r7M=
         "]]}]}, 
     {RGBColor[0.5737613661287864, 0.5435370519035628, 0.9097253540741592], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1m3m8lVXVxx/gXu6598Cdzvice8854CfAAVGQUQgUp4ghUUSRKEohKzXF
Icv306yImmlvWWZq8r6iaL1FluIIqCmWOSAOOIKCDJZgIqBovb8vv+Ufh73v
fvaw9tpr+K21N/2//I0Tzu6ZJMmkhiTppfKFUpKs6pEkC3NJslcNA/Qbqr+X
6fu6xiQ5Xp2XZ5Okf7Q/pPZX1D5T7TMySfKq6ierfn7d/VcWkmSB+g9Q/RD1
faAjSe5oT5Jvqv56U5IcqpKFB6f63qKfygdEw1LN9aDK42tJ0tmmuVXWy0ly
QHOS9FP5U43boTnP0lp/1JjD1X6g2vfXmERjD1D5Wa19mWg8Q3u5uWY6/6K2
w/T9JdWna+x3iknyhMqtjFN9v95JMla0T9d874m+s7TOaaLrTJWPqssDnUly
l/azvpIkizTP82p/Tr9aNUmu11qXaJ4mjevdZF7drj7f76P9ab2B7d77PLWf
oPnfV5+zNXZml+l5SLT9LXXbprz2LFqmq8+P9ff9WrNF5RFa43tFt68RLd9X
+w8aTeca0TBE9Sma50ytcbXaLhbNwzXnSO1hlMq52tt7fZOkTX2z+p0oOo4Q
347VmCWi9Wm1LdLY0/XbrrHHatxBmvM7iWm8s8F8a9H6zU0+9yt7er2saMs2
+RvtzVHPq31n7LVbZ31Kb/ebGfNQ/xG8ak2Siepzhfp/qe4z/lh8OEz0TRSd
w8uWi1H6HSharhTfrlf7ZWof1st7Z+zFPc0z6JxSt+y2FLyPwbEXzuSGZv/9
Vmpefai1VpR8ZitVHqe/7xV/f6453pTcvqHfZaJxhH6ZBsv/f7eaFuRslWTs
JsnqCpU3tpkOaHhVa72m3zW9/Z1vbaqPkCz0yHqfWzXHBQ3m+zCda7fWOlF9
5tTdvi1v2dnWaPlpVv1RtT+eeA/1vt5XZ7fOWrw4ucvr/rjDf39X+5mvfX2v
5L79+ppnb2X9N3X4QTvzUfaP9gNaLOOael/5fNS/Lp6eq75nqhwoPqxV+xDx
YUWzaUR+jq+bzpHSwQVae6ZoOE9lueC+49X+k3bTCX/mqf+L6l8pBB/6WA+u
1ZxNWusMjVmsPl+TzPysaL2c2tu6OVs6OVX7+YLKxb0tZ8jYYZpnf80zS38f
q7WO0e8P2tNlFdumSyu2Zy/GmcJ71uT8zhMdF7Ku1rxTujFf+1ym8ubePh90
vNrH+siYgs72Lc3zF7VvVNth2NVellPkZIT+vkw8KGfMr82Sve1q36B1ltZc
f0P1I9V/mr730djjJN+7NF9GMtAi3r2NzpSsd+80Wve2ZjyW+jnq/y2N76F9
9dLee+q3u9W2mbPAPm/OWOaQt+GiebjWuU57T0vW1YrKW9qsl/T/Tt329s2C
7cOWGDtIvNzSYnt+T+gp+vqQeLiqw3IxR7K4SO0Xq32I+g0Tn07XeW1UfVAv
27Q1mqPSan9yn9at9XW/GVW3n1i1fbpIbRep/8SKdeFl0VNKLbuXl32WnOnl
FdOH7uhz8l917/cl9Z+shilab5rKV8Wbder/b/W/vmJ7elPFNoUz20/1vHix
QzwZq7YBGdMNzcj+4aL/KdW/qLPZorHXaZ3j2i1n77fY70HPD9Wnhn/SnNen
lrFMk2XoYNEwpNN2kv6jm+0rR2bte5DtE2u2/7flLWvNzbZxDVrvVfGrWPRe
N7V4v0fqn4mqT1A5Rt8rmn+0yhvqnndcxbrD/OvFp7TTffBhg7Wnl9X3AtUX
VUzLCq377aL92peL/j6q032OTe0njlZZ7bC+oWsb9ff+nGfe9nVvi/1RtcH+
aEZi/UbP4cOSNvMBuUv7mH+zEsvsjGbbuon6fqR+vdttz/Dl8GGKeLtb+5is
8lbx6mLNcZvKERnLE7KEH0BfmfPkNu+fvc8VzddlPf8rbd4btP0dPVX9ykaX
xajzQ8/R8Rznpt9E8WGGZGucvm2quo3+tPcsm6c3i29niH8Hay8dWrujzdhm
R2JZBdtgM/ur3yLRu1Bn9XaL12CeU9pM92uqX5gx3lrSYFt4iMYWVf+lxvTT
XsoV08hY7NETnI1oaKkaW+CLc2rboL2f1Wl9vDtrXR6kekPWMoE8fEP72iUd
HCd+ju40j7La51yt295sGmh7NdqHpObNmpxljnnGq32L2j/S/FtVjstb9z8r
el9Xfb7meFJ8eqRmOVhdM//gI/vYqfUvUP09lRvzxjudmqdHp9vRkc0qN4ru
bJdlE1qhh7nBOdXAsx3B8wtF/2S1z2ywbtGOXj+neXP6uyheHS6a5qi+MrVP
+XbWfuWnFdevUXm+5pmkeT7XYAyLfLB/7Cg4D15zJugjfJ6Qtb3GdoMtwBhv
aJ6jxeeF2t/fqrYl6BQ+HZvJWHAqWA9syv4XtRqXgEnQS3DnnsQltgX/9QkO
uy+xXqKfn+Av6tj39VrvDs3xRtV6mAnsOgGdbbSfwbegw/gXvmO/mP9y8ezb
+n3Q6PamGMsPmtC1xgZ/x29cpb7js553Db5B5SvooPic09kciB3t8N6f7GmZ
PzV09WjRf1Snsc8J7bYJnCu2BJuyWv03ae7js/af0Io/ApeCuQ7qNM3o0Ckx
J7gAvsCTk0TDx8QxZe8Pu4RPn6X6JK13RrP9/tlZ84m9Mic8HyH5GCU6ThT9
36u4z3crlk/wyUTtbWRqGtfmrJP7dFvl7WVjpttU9snZRtyYes2xzY5twI2D
O70PbCptPXoZPx8cvoPz5FzZC36Us+fcsaf04ay/2mrdQC+QJfwd9mRxo33i
Veo/VWuvg5c5x2hjmh2ngf2h5yvq85Oax12VMw8GBx+YY2rMMyV1/TTx5JGK
bezDKkfkzI8j8qYZXwFtJ0hvh6p9epcx2romn8fJYQtOUlkCfzbZ1m8qur6x
aPrWN5kn8zKmm7jy9tTt7xXtx16L9nmtxnLgyXH6+5xG+/FG6cA2YY8GlUvr
bv8qsVHdY7djw2MsMndVzbJ0tcqtHZZdYgLoLYS/OCFiWGJZZA++wzv84Vta
a4XKu6thOwu2ddi5Bfr7ac33NdV347O03j+arCf/EQDfrLH/Vtm35PY+Kkdn
3D6KeDVjjMK+CnnzZhW4sbfpGkzIq/aear9TfMpr3DbN06m/m0uuZ1R+I2PM
ybr4sVqD/eOUduOici/bIOIjsBn2jtgWeztUYw/NeMw52ltO3w/NOcYiziAm
2609vK61d3U7HiHmII5DNw8I3P5n0dmPM07ty/Fb2FLwDmNvaPGeh8fY2+uO
30sln9W8OC9yGnub7AfSnG33fZqzK2d/cGvdtFZjj9hZ5iFuXZ16X12a80ex
36ro/1B0bxANH3S77c1oB6v21D6HaOwD2Pi+9jOMhX5kHR+Pr99PclWKs/hB
yfpB3LGmh3MZ5DR6yT5ckLFfgZ7RWfsC5Glvt+dfqjn+2mbeYQeIW5hnQcH8
aciYR/0yphnb/HG35fCjbp/VGcErZO+pDtuMpRXHYJeKhvsy5hVy0tVomQAH
fipnvzpdct5VcDxFPAdGnq36Xfo2OWMsML3B8QFxAjFlEjLCXINa3U7s0Jy6
77sqP9C3+Vp3M/FH0fZhgOj5SN9axYsPU8dMnClx06/U51zyDzmvf2rQcEqX
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
Gpjq
         "]], PolygonBox[CompressedData["
1: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
PdQvM/oU+E4Nxv7GtHOPcnCvqDGNsI16qpnQF2GjM/6GkemofJg01qggPuqX
u+dW760e9Sfh6aT3ein/vZ/0ndDd6Iq+K6CXJIwtdUc/SrgHUy+mGhmwfnLG
2F493yToHYylzNsjM4L9jSxzbOmOjSgzZhJ2EuaqZP4wMmNC7nnU+7wQc++i
mFXsfhxxLtObwQJh0bRjXTVctTwLmQnI/gi/nvBmxr2a3rj01qUarVqtN6NE
9Pc3G9aXsOdm6N6BjpNhv0m1xZ/mEfNU80NJ97jqdfWGdgDfeqd8NqqZqp26
87r7ujO7Y8aQwpJ683g4ZUwibCIbu9DXJOncqZoew5fdUWMH5ZwF6DuEvs0h
5wTlBmEQYRG90S3h282I+y6ph1cvvz1ibHoSmXXoXp3x253ecD6F7ga/R45r
hGrFoDJjQ70ZDISelvDbl2r2SOyF4u5V1COqV5wSd20Zgc6X8TUed+zqTuhu
7Iz7LVE1WbVZMpJVzn4G+2Vx+6acp9wnzCLsoh5jLvybk+7dKjmPPpxH45Tf
vtoLA0HPx//d9YyxhbWXZNz7q2dR77KL/z4qcE39TW9D8E8VuWaNY34qYV26
g0l0vZQwllMP9Tj+nMLmjnrGSMJK8yLGGrJ5Ft6etGu5eviatDG+sL4wVouk
MZmwmXyQL7+wZlc99+xvoSsVM1YXJu8d9Rue3vIkc6bcPad6T72RzFF8l/st
R3dId+myjGuveqaJrB+Udq36GvkfWDskbmzVhjEMenLUvZK+eXv290nEvbvu
2ENxv9HprU4xdph5QZmxn95Q9ZbaJeVvIUwqbNqd8xqcb4xUErUN2dIbTbO4
fZAvekNbhf/rI36bU8+6O2MMqRSnHDYE3adTxjrCBLUpY15hX32zCei/Lere
Wj26enXlLOUuYdx40m9qelvTG8MxzvaVmN8i1WOr1x4Zd+7Rm4/eflYyXxAy
5hH26cZ+BuV7T9pbYdy5QzVCtaJxzG8D6jnVe4bTrqVaU5A2xhHWUcycxrdO
aeda9biDy1wzVTv1RrYXXW/G3esIcwt7/5ryW4He/PT2VxB3LVUOUy67MOFc
rByuXC5ML2yvPaxAtqbUvb16RPWK/4gb26onUW/yf0nNPvE=
         "]]}]}, 
     {RGBColor[0.6334044084039064, 0.6393668249866483, 0.911085031734951], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3eclcXVx59dti/s3r17n9uWe1cUIqiogI0qxV6SiFFjiSAWLLSIJTZs
iUbFaIxRQUXQRI0JxQLRBGNLNGreRGPDgiAYCyqJ7xtRDOr7+/I7fMwfz2fm
zjNznpkzZ075nbl9Jk0fP602SZKa+iTpofKybJL8SM8pakw7kiSvZzvVR6ks
6jlbffaodf2HNUnyk+4k+VVDkuyST5JtNK7U4feMK+h5VnRXN5jWxeo/oqdo
qz4z8Xv6na7685UkGai+B6ZJcktzktzdlCQD9LtN73vpWa2xUzNJMk31l9R/
H9GZqvreKkfqObXDtHfTt3tr3Fnq/37GYy9T27sqX27VPBvcBt1P1G92W5Jc
pWcr1ad0mOaxdZ4jNOs1doDGvdWYJDurz6D2JJmr+d2m+qqWJJmkPis0nz07
zCP482u9n6D3x9a7jXdv67slzWes6h/p/Ui9u0NPM7xqdbumn1TUZ5zqO2v+
xwSNpWp/QH32UvtAte9YVqnfO5TNvzR4WN/luX5D7d+o9xqY/33i6WyNO7VT
e9Zguneq/yC9H6znBf3O9k6Sfr2SpFPlspjD5z3MX/iyXP3/rPbTVM+K1uSo
n6Syp8rW4Oc2KvvqOVP1R/SuT+z7SM1rhHj4kdq37nD78YlLfsP/vfS9NSon
as77lj1mb5UNrEPPB3r3qtbyrsaty/k7fO9P+v2Eyv763i7ImGTyOX3rFcnk
q1rvCj0DtKc/6Db9v4lGP73vSx+9u7OaJOdoX3+h8j/iwWmSvZ+r/5MZ03+9
xu9/oOddjX9K43urbTfxc6nqP1L9JNU/UP91GfPz9qz5O1ZruUhrmKq1zFJ5
m9qv0DNQ77avdXm1xn+UWsav6fS+sX+cEc5ZKeTqnEbvBfKJDJ7S5H7ICPL2
uMav1/c/0rNCv6/T987Rd69VWQ46z9V7z5nbs6LZJdnfWfUXazy3HVW/KGRj
5+hD207RDo1yzOd08eP7el4Xzf+pdz/W9Gre/K/RHk1osNzWac6LNedzNedL
1XenvGmPFc8fSD2vZSp/r/JGjRkkOm9rHf/ImPah+v2O6jWa57sZ1+H7Fd3u
P0D0FqXWN02qr9V3blb7cI2rUd9rWv37vYzHM/ZSrb2xzfoC+UWOX9OcrhTN
m9R3B9Ep6P1YnYFHNf9d1TZXzzDR/KPGzFF9qOpzs6aJ3qPkG6znrSbTQSdN
bvDaOL8rpOtuFt0XK5YX5Ia9Ry+9H/UPYx83JuYBvOAMP5J6by/Unm7f6feP
Io9t3ssnNM8LtCdLVfZQ/93Vb4jWPrxs2uuC/rcrXts3VR5R8fjDVJ4b3z6F
s5n32RpcSJLr9a2P9G616qOypoNsT8y4P/PYVnv5lugMUHlbzBl5WJr1tysa
v330oe9q8Wd5vff6NPH8D6rP11pO7Xb7PNWHxvxZxz+0pqvrPY8Fzdaf6NHr
61xeozkc2uh9elK/vxQ/n9J3p9d7356q9949VOf3V4rOfaI7W/QXlS2ne4es
Lm11Hb3bpPIA9Lva17S6fnmNbRGyjD2a1m3692jOa9XnwI6v+x4YY/+iuTyb
sW48LbUe3Ul8nZ6xHZmuPlO7LVt36v3Fqg/RvOu0D9/v4fahYXuxK2v1boTK
kaH/34rf2Nsj233eHtSYNeLzYyp319gJ7T4vyCJ2Y0SMPb2H+Y+sTul2/1+k
5j1650TWpr6PBp1dVd9Fzw8Sl0OiPl1jn1af32jseI17Q996XL9LjS4vq7Eu
QVdwrocEHc73zB4ey5ldK56syfg8837X0P+Pqm1l2A7qb3bYzkwX/UHi31mJ
1/ZZg8/aczXW4+Ua+wCPZexXfBW248mg0SfobNC4T/W8k9gfof8VNe7D9/ju
Z9EH+pSfhb5KspY3vvmQyt/padacTsr69y7R/qCej9V9VdDEV6HvQ9Fe1FoK
emrV/mrOen1qwbYWG/zHxPPnW5xPZLl3o+X5pqxtGnrydsnNLLUvyNv3Yf2s
/W9q6yOZaKjz+mjHL2KfH2/yXh+t9mNiPnflvI4+qe0+88An2UZzqrAP+uZR
GY+h/4CMbTFjjlCfUzSXwwp+T7+B6vNdlUfq2anGJb/fS2zfmAf+xtCC9fEH
+u5SvT9Cj1TH5pL+MtXJL3M+rxvlt9yas88yL+fvwOcqNq7R/OHsU3YFr6bo
/TN6umpcPhv11+P3ixq7SbRa9Hut5rBHxn4B+uYMrfnp2Otrui3nB+Ut49TR
v9jma+psxy8KX+SAvM8/3+I7H6ltvZ5nEvtdvw0+4H/xGz/wWtFfpT7f1tgB
jR5D/1Xo6gbr1b5Zt9MG7b/EWujfv9H98HnwhU5O7A9Rx4enfDXay8GferW/
0urfFyb2UcrRjk7knBSTr882emmzbgq5HdnoOucdPYg8nxuyXYr2i7WZq/Er
VO5QY5qcu6nt1m2J2qZrXdOy1mmtzeYD+hudDv/RoU/HuaB+WN6+ydtZ67Y0
9CH08MEfrrO+5B36clT45rx/PPxaZJvy5KCJnzs56nel1sNTQ99f32i9tTC1
7poeuvNnjdapxEbXNVp/H9fg87hB9H+Vejx2oyFvm3WJ6nekHj8lbOCPGu0X
oxvwcdEhi1QfrXX8WHTmyW5dKv7eVrZ/j49wgWT2K52HFWr/Qu2Di+6/vmQ/
Fd/nTX2nucO2DdvUP+hzZk9Qn0vUZ7H63Ki9uUHPbmo/tdaxIft7p2j1Uduy
nPcPXYYeu1N0lqv+yy02LeP46Eut8QxsVNa69s3Q4adVHUtdrW9dobmeoTlf
qXKE9nqN1j64zm2/V6x1uHhUX7F9bVGsMyPo44tTTotvoVOZT0l0H25x7Ham
2o/LeM5Hqd6jYH9hUsF9V0f/DXl/9xN82NTxAnHD9A7Hn9h6vjUjvtuzzXNd
VmffHd/qQY3rW+v+nMHz+Kb06rkqd1LbjnpGJC75zfsPW1yn/QvR21n1CSqf
ynl/6rTu9aoPZ6/RN/rGCGJC8eqJnPfnS+15qvV8jC1UW//QvejgSRmvf2Pw
YdIWXhQcI66qWrcR+6Df8PmwLafoO9sXvFejVB9YsD5Yl7XvBy34iQ84MfzG
jTnrvaTgdQyKdSFj2AZsxuhu78ka0anXOoaqfZ5+V4u2S89Lvj7vbT9sldbY
Kf4Mw843Ww8PDV1MuUeMRWdPCb2NTwcfFmI/VF+nZ1yd7d7COn/jFxH33a3y
9IL3rD0fsXOT13BhwbpyudY0rNXxTF3sF+tir5j/8IznuFr9Juv9n1PPd3jM
bVLI27e0+Fsz9qXwo8ZLjkcpvji0y2uBFut6RrQ69NyIrIoXbar3Ee0XWmwf
N8eAar9dv28u2XfHhz9S5WDR3T9r2zFb67tKz6mJ6WVbHPvz/oDoA+ZAvXfG
undau9eM/wMWg8+A/M5utg/+ip4rVX8BPRz90dWUU6M+j9hHfZrqfb6JV+Fr
7/ANkAF0Lv2xQWAPe4kP4/TcX/W8mXNLyfz7g8oVqePv11LHnedlHfPkRGyD
xqcV/z436ziohG+g9W4ouu/5elJ9a4b4c0HWtvKfGddfTexPfRl4wlDtR7fm
MkZy2tFtOXpEc7ivarv3S5VNJfNzQM7rgqfv692YnuYLfGD/h4VsNJdcbqf+
W3fazpdT2wdsCjZiZWo/d3DeMRaxFnjC3Krj74F5x+a0E3+t12Q2wWfR/Cjq
H6o8sRnmKfZIjKecqflMqPUezYj9pe0sPU34eFXzFh7/W+N7aOz/qTw7+kAD
XXh21P9VNP2OnPkKf9mTJ9X2pxbbG3AB2sAWwLfAucC+7uE8qmzlbDLfqIOP
8Z429H1ti20GfgHYC598rej+n4l/Z7Qbg+A7nAP8Ws71G6qX9bys/hnpkKrq
efH+8mycB83/kSbjdGAnb+p9l55X4AN7rPrdKi9p9tiLVW5qsu3GhqMjFwSG
94HWv0H7dnPOsRYxFzFhrxafWc7vJ8HPYs7zndluOYRvp0edeV0dc9s26/Xi
E1GeE2sfLP70bbVMw2O+gQ/wYJ3nSJzynsr3mzdvzWba58e+gG+0dBgL/Zfo
zMpa9t8X4f+wFsl4Y871dUWfBeIZ/KxzY3/TiLuHtTv2XpS1f/ZVYl24c+hD
9EnvOOP4K9Q5F2dWPfaMqucI35jnNanpzVR7GZuZMRY6M2s/Gx87l7M8/K/m
1pbaj7upYJmi/9/rrMMq4TNXM64zh9sLjjP2lMzsnvNed5Yc74LREPPuoo5N
0h27qjw+dQx0b9k+HVgSMen2eeM54EOd3Y5R9ijb92SuxGW/TX1ed87bL2X+
vL83dbx7v8rRte7PusCfZ2SNQT8asTp2gRgdfIS4crec5TmrOQ+vhM+h8uTU
+zMFu6zfPdS+o8qxejKqj1P5/dTxxtZ579WM2C/4Ba+fr/PZLAXP0emXN7kd
7Pfc2PclKhdHbgB+1GaMp6E7Z4Uu/WZqjHxg2WtPYo34X79u8rtHCpbTU7QX
+6TGfct5y9tXEY9v1236A7odo38VOhkMCfkl3unWN/pp77cqG9PmPINrT6ka
o5+qsloxnttdMY4Mnry/ylRPVfW8yiY9BdWby47Zzm8ybsYZBqu8B1ufGtte
p/Kqgu07dv44zeXSrM8pNJBF+EoMR+xGLFrb4T6oY2R+XovlHr8Z/6sFH7vk
9htU3iD6v1N7L7X3AccXza3LpvHD+BY8x4Zhs5DxanyrRfQvaPI6jqp1H3j1
YNbngHh9lt5f2OQYCr3B7zr1+XnB7dcX7Itjs48ueB7MZ18RuAcbJN6uUdte
+t0hGdtH5f56cqofrPLjjPULvjElv+EX5w/ZImZvFu0zG+ybviZ6lVb/LuXt
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
Nc8PPwTdtDzytv8PgzLMOg==
         "]], PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[{{6391, 2564, 5145, 6233, 6234}, {6216, 6215, 5128, 2556, 
         6381}, {6379, 2555, 5127, 6215, 6216}, {6234, 6233, 5144, 2563, 
         6388}}]}]}, 
     {RGBColor[0.6930474506790265, 0.7351965980697338, 0.912444709395743], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3mYlMW1xr+ZDLMzdPf01z3TQ/coiCKrC6CiuOGCW/QqGuNCElBEISqo
UR/FDdcs5kpANLIYQE0ENzAxqBefe40met0VNBoQRVwxbhBFFu/7m/fw5P7x
TVXXV9+pqlOnznnPOTU7jj3v+HOrkyRZX5Mk31PZmUmSb/VkVf9DmiRXVSXJ
uNYkGd8jSc7Us6Jbkpyhck5tkryg+uTOJHlR5VL1vTTafq1vdhWBvnoe1e9p
6jNM7+oLSXKRBnlObSM06Oi6JHlX7c/q9+sac6We/1L9NdFaq/E/zCfJP9T2
lp4n1b5B5Vd6VqueF+1WPU+pvklt3+h5R/XNMf+1qs8RnX6ay36a/4KK39eL
7uma/4MNSbJMv8/v9HweUN939N0aPX/T7/fqva79Nc9r1WdvzbNB8x+vcoLa
C6L7P+q7l37fovpbuSQ5T7QPLIuP6jdR9dfV9nI3f3uA6Jyl+tl6nlH/2bXm
CXz4mXiyXu0TVZ/a6fpqzedXqi9Unz1Eb6H6vKb2kepzSUm0mvSdyidqPMZ0
0fytfl+p9ttUTtG3r6j9T6Izt9Z15nBBp+n8We2/VH2e3u0m+ifWeZ7Qercl
SW6IdS5QvytFe6x4OEs8/Il4N1PlLZ3eu+P17bF6ztd6/5HzXtL+mOa1SuVq
PY+ofnYP/96ifmdp33ZSv0mq76P63nre0rvhWfen33TRX6fyJNH+sN58gD/I
F3I2WGVR704TjZ2L4pnoD2nyvO/T3j6pb65XfYbqv1V9iuqfqM+LjW7n+3Eq
W7S2v2vPhun3canboI8Mf67yC3iiMbo3eD7wu3+d39HeW/Veel7T7yH6/kvm
I17NzLltq343qP0BffeAxqlXfbHqY1Tvo3KF+lyhsZ5T+w4q99a3i3gPH/Tt
5dqLy/QUunks+v8kcbky6n1yns/aKs+tn57P4jfljlXetx/reUJ09hTfLlfb
jzXWER1JMrQ5SY5UOVF0ztHzZq33pEfW9aP1bm/1OUblHxrNyxEa9/4GyzNy
3a53m8T/NpUjxe//1hpG6RnW5vKzdpXap531Xf+y+36j5yi9O1ntNdrb1ZKr
A5u8B4ep/SPx5GD9PlryfAD8R0bV/kI+vtP7u8SbhXr2Q3+J7hr1r9ccHlR9
rNoXq1yg769X+8KS5Yw1Paz+e+pdrfrsrrKfzvKlartET71+f6H+raLztXj1
U8357+LLMq19leZwrn7P03cD1Kefng/rvGbW+XTec6kWjVsq1jF3pJYj9mii
3u2o9Yps8rhoDilaH0xWOVjP9Wr/p9pb9c0F6jtS/NtftJo03vCyZR2Z30Pv
txbMky0q12vcj9W+Ep7p7Hyk9m7qO0/tW6Q77lT5XN58rROdc/V+YI11Fjzo
1mIZvV19Nqj/b1WO0/6vbfQ89hKt59T3otS8XNNoGa0reqw+6v8DvctqLYMk
V19r3QvrrLfQPbfWWc/dJ55cIzlcFOXVer7Q+8f07l/YE8nBJ/X+nvpnqW3R
KyoPUds9erqrfbIar1P9H3r3svbuJT1XdrNev6ze767sNM1PsGOdpvlP1W/W
ek6s9b7ObzBNaGfExz6ifZDWcmuN225Vnzrtxwuif4l+N/ZMkp7dtR89rYsv
U9tKrXmb+Fdu8e/V+vYmlR+pfaDWd7vGmItd05wfF52M6h9orDfEk+4aa2rB
Z/mIgvUi80M33tjkPoeoXiXauzVbd9yptRzE2SnZRs1Sn4vFvwFl9+unsr/G
+bjRMr1B8z253vUVBZ9BzuJWtf9U7bPUnhetnqKZw7ZoXd+K7jnq9yPR6i2a
p6rcL+O+8OY/C5bp01SOUHtdk9/Bd/QX+3KtaE1W+3Uq54kHizXWHt1sV86s
tQ09Ouvzjr79VLJ+uvqNarNtz+kZqrnMEv9v1bNK4zyscqme2XoeFu96aqzB
mltO9Sqt9wt9W11n24otgi/7iUat6NcWjBd+LxnYoH5na6xTVL6aGi+8rPLN
TKxf8/+5yvF6TlV9jMrTqo0fKE/Xo2G63tMfXoEvxvy/PtTXqX54zv2pg39G
xHxGqL1/1phnJ/3eTe3vqs8glYfpUVOyTn8OrbYO36hz9YHmvFJzflO/D4n2
96L+ivrPlJ69Q3yYobJSZ5vfoPfz9HsomEQ8uDJnmmv0e22D+3+ueW1qsH5H
t/crGLvNFk+uVv/B6g9OXCw6f1afRSrfEd0b1Fip8nl6pNFnqleV+7OWPrEu
sTXZUms8xdrvbLdcr9da1koO79K3g/T7YLVPVnlrxTb/5WrbffTuPWLsLprT
IznrT/RoFcohax23LGddgc7YPfU5G6pyeGr72aaPUsljXs8zkpsjUtPbSfL5
VNE47qfi8cOa7NKM9eDRkq2C5P8YlX9Q2za16fglU1Prm51Es1fZZ6m3ykOR
RfU/TOWp6vio+k+VbHYreexalT3qrZfQecjnoyGjmbLPalblJdqLi8ExsUfs
D/h8tPqdGHs6Oef6DYnL0VEfqPIIPe+ArzR2WbxNxde9Zc8q0iEHaF6nVlu/
snfo5YlBk2+PqbbcIYdHVns/y6JTKzqbtV89VU5tMD4ZV+O5Ms+P8p7nLJX7
q+3QRq+L8a/Q79WJ18y4jN+oOeX1biT4Om+6ebX1z7u9qd349LLAvXyDvL2V
2K6MjPkjd1Uhex+1Wc6Rd87mz+MsD9TeDcA30Dw+bHNZq3E2qd5N336jclve
ehX9Cp+Qc2w9OowxkPFvo39P9f2gzWemm+p3qm1Dg2XjXbVvVH2rZGlpybwY
rLYDs5Y9znDfinH2rir3zBhHwN9vGkyTM3hX/OZc9JecjVX5DLhRNHdR/94q
70rtG9UUjI3nxBlbV2/ewaNnUvtMt6t/74LtOPYcPQxeBn+A/eeGnwJ2OyOw
8V9q7POgq3s3+RxyZvCZZof/8mhqv/Dikr8DW/Pt7BbPid/flvx9uWQ+bYx1
zW+1PV9ftF5GP9+r8mN8gSb7V9jPs+ptG3/R6TUO1DpatMepeNRd5bXwXvVp
YNKK7e45KqvqbAdurrKMvxznhDP3fIPl8/ca5z3VtdTkXwXb32/ybns32l/Q
nxtVf1blAo13v8Za2O73nE/O5u8aLQfoCN5PqrN9WlqxPf1c6zorZ5nEpmDz
wfH4AdjnXzQYO9TkvfebOowfwTTYVX7TPqfduvDc2At8HbA4OPycjM8k5/Hu
FvOlXmtfXmPeoOPAbpw1zm9WtNpVH6oxM6oXVB+o+gGis3/Gv9FD9HkY2W70
eeYsZ3ua5236rkfsxQB9u0Ky/r6+2aC9XdfgOjxszVj2aXu90XqDuYJBwGHg
rb82Gk+DpZn7tJg/mGsPncndm42lkAnkAb8NbAGu2FHjvadxCql9vplq/050
nmr3OKs0twkVf/9L9TmmYH/gKJU/0tzG6BmrsVZK9pYHThssHlbh81XZznyX
sa0uprYP4GXmBDYD7/1Ke3SN6hNbbfNPC7u/RPv+kJ7p6GzRGJ3xXMGtL2Zs
SzuDNnbzMWyafs/P2Fbjy2HrL9LvCzPG5MgGcgFmxW6xt79sC+wdevZ/4+yj
A2r0bqv40q3NWIx57q53yzs89+mtfqivxrZK1zyp/fhTu3EmtgrdAq4o1znm
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

         "]], PolygonBox[CompressedData["
1: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
3tr/ADOsjGk=
         "]], 
        PolygonBox[{{5164, 2581, 6414, 6241, 6242}, {6242, 6241, 6412, 2580, 
         5163}, {5148, 2565, 6393, 6236, 6237}, {6237, 6236, 6396, 2566, 
         5149}}]}]}, 
     {RGBColor[0.7526904929541466, 0.8310263711528192, 0.9138043870565348], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmnmYlcWVxj96gdt0w+3uu363+95WwKiAC8giIIogaBQBISg8mkTBPfNI
dAQEzUwSMXHMpmGSGI0GhfhMJqCYmMloAioRTUQC7ia4JIZFAujIEpUozvvr
9/jkj9tVXV99VaeqTr3nPed8h8+ZN/2quiRJJjQkSb3Ke7qS5IpeSbK0mCTn
9k2Sz+hX1rPjMv6f+uhCkizX/09Wk2R9KUnup65yTUuSrNXvGz2TZENbkjyt
33nxzgyVT2qi4e1um9fDbYx/keqHqTxcv2fUd39Hkrytvh/lkuS3GneVxn9C
5Z363aT6j2LOGzXX8MYkORTjM85devY1Pbtb5bX6naf6fJWtknWMni9QfbvW
9rLW2L+cJFt7J8nrfZLkDpXvdybJn1VfkU+SHur/luqJyp83u71O83zc2+3r
VI7R2DtVH6v2Vo37tsZsU/lYm9fDWg50evz9Kp/VvBvV5zmVu/TbovpulVXN
cVB9OlW+qrnn6L1Dqep69pz6vKayvtl9lupZD82xQ+11KvvpnXu1rq9T1/P+
+p2gg9ygfl2S4RHt4/5mP6P91zq7l7RnZ2qPfxP1O2tJcrPKT2lNR2jJgyRD
Xn3naH/WqM/LenaX+oxSe5fa56v9UdbY2+OfqPaa2q9V+wPNbtdrST+t4UjV
J+l5Vb9G9fms+uzVuW7Ve/+p54l+Wcn/mNrXl12nbZXmuzGbJCtVjmhNkhea
kuRWPfqw0e17VTZp7Xu0rs0ae4n+n6k+V2vdEyTDafpJ1br1g7XfpPqyJu8P
bUOko1XVj69324DYn6oEf01jXFn1GbKHn5JMN2h/5+q8v1SyrkyI8ft0epwW
lQe1p/u1rkbJM1jvDdJvN/tQ7/rRGudZnVuj+vdpcBv9EtW/rXEXafzvqOyt
sQbonUka79Kqx+if8zlxXpxhfdW6V6cyQx/Ve1W9D0sk25uaa3nF+7Fd8vTJ
+V5zv/urzzz1+RJ9tA9fVv18lcv0u1z1aSp363zvlWzD1HeA9m2S2ls01q1Z
1w+TTEtVn9nsc7mu4ncXqmzWXJdprh/pHKerbYZ+X1WfKRWfy7uSf6rqe7XG
2/O+S9OjzxK1D9I8a9R+R8Wy/VDlCZLjHsmzWfv7imS7VvVrJH+n5lqouf5L
61qotvn65dT3Ch3Oy9Hv09rH+zXmGSond/jMz1I5UPgxSL8LtN6JTV7LdPUb
I/lKGuNs+qjvdTEX+4EMt6pe0bzzNe8arfGPmmdRzEtJ/31ay4as52BvkQfZ
Ppu4XBD1uRXvz3ua82LVR2v+9Vr7WtW/p/Y1KpfrXHto7KML3vuVsf9g7KyY
a3tvt3NWL+iddyX387pPF6nPnWrfrD6HqW1Vs+/mQ3rvl/qdqfmGSeeapXvD
Vdb0e0/r6lI5PmO9Ol19ivp/r9rHasxVmquhr/d0ltqHqd9slU/mjYlbJO/x
Vfc5TuUzeY81WXJ92Ow7O7nBeo883IunKpbzSZW/aDbmgkX3q1wdMuc7jS/j
874fD6o+Su/u1hytKo/Rmcxq875dmHiMB2OckfVe89IebuMZeM6ZLg89Zz/o
w1jIdX/MO11/Rur5nzTPg1m3IzvY9osY/5zos6hseR+Id08KXVqvd9sl9yHp
7yz12RcY+JzqdVrzlRrvTT0fofpQvTtc5aV6b6vk+Z3kOVL/j1Gff6j/wKjT
dihvmzBH+j9V+zNS7y5W2+Qmj8MYPbJu3yh5GvXOPu1Fg8pj1afSbPu5Q/Ns
0+/zqmcrbu+r8qD28wP93tKz6Rn3o8+Ydre92MP/I+frdS63hcznCLen6dfa
bPvSIjl+qz5ZlX2ybmtvdx3bXNZd2QcWSM5xkrFe7a+ofV+z7R8400f9G9R+
Q6PXwFpe0p68qXs4QHL8b95jtrV7viNbPP86vZvR/01Z4+lpkmtCq+dDD3iG
LoHVmehzVs3PlmvM28L2g1Hc3a5m399Bna7PznuvdupZqYftHPauU+1jNd7J
WevVopp1f5Pa79MaTlX7Fu3JF9V2ucZ/U/XT1DY+6+ed7a5j41/O+Nkn7R3t
fn9lb99J9u2J1PwBHoE+oVebJcsjBeP7j2rejxd7e0+Wq/9Bzfl9cYzBGutY
MKvBz1+KPi2a5+O+Pgs4AdxgcN7rYG3L1P5hzpwN7gamg+2lskvsJbqODrJG
9PCZjPUAHRgqma5UeYlkfB4+oHHbdV/eULmzt///77ztz/0a8/bUczHnariK
2n8iXWjI2/5ih+F1zIuNvkf9O9TnF3njwNg4i5/FmNMr1oOVsYevao5dKu/m
nurdmeozQPIs0GDNsRfna4wLsj43bC7/c3bs3ViN83Sdn3e3a65d0o2pvW2/
tmud+/TOaq37eI13nH4r1W+e5uuQfFepnBhts9X/KK1zv+T5tfqfoHpZ4z2t
+ndrHvvWnPne15vMVZbo/aWq3xT4P0N6vlj/P6P+qXTgw4Jl+1zIj/4iM/o8
VOUJ+p2t+kyV5+r3vcQ6NzPq/aUrt2icm4U5OzXWfvhkxfzxyOCQByTTNsn+
gmTon/re/0Ft15XNs8pqOy/1+JfnjSEXqL4GGVL7Cs+r/5DU8kzL+/lnow8+
xdCQ83aNuVLr+6HKWanv0069+/dm7zncj31elfXeLY/z5Zy5H+c1mdeu0f70
1ro+0Jpm5exPPCS7NlDv3p71GZS09oXqc1OXOcndTeYDF+XMp76i/rPj3bul
M98qm3d+U+W/5Nx3nfqcojF/oDGn1lmvkqzvBdgG7oEhzHt09KvLug+4N057
PUprO1Xl51PvyRfzft4jxpmofj2bQ3fDL0AOdAWduU0yXCqZClr3JSqfwpY3
mSdgQ8+QzlzWZC5wrsprGqxH9GG/sPmPZM2jP633D2gdk1QuyhmrbtBejs5Z
H+8o2Q5xRrM0zi0524dj1KefxnykyXxmYs52YIra3wq9Oktr/I/ovwUOojV9
J2s/ALuFnnP/n0x9d7hDFWF+h37n9DS/wf/B7o9stS+BHQELwITXUvOaaXAY
/d+v7HYw4yhsS9a+aov69Oll/ZlV5//Bxgb4vH6L68ybqU+pc9+++t2k+jad
4V8kQ5Nw6eWsx0Rv12qfV7faftf38ljoWN+Yi3ngjn2j/ozW/5Dk3BC+5pSM
zxfbwx3+gXTyY+3dKxo/Lz0dUTAn/a30MNU+Hq4+lYr5CP77NaGL6OQXtMc/
R45W6+Sv1f6xytuLXlNDrAs+Dq9FroZW94drIQuyoXfw0EnBRVkv8sBf8QkG
N9n3+VfVf56xjYR/4c/DwfBRjo0zHdbhsxyuclyHbfmp8PcOc4UhHbb/F/cy
1txWdL2n1vKS1jmXs8mZC1PHBt2qPnNUT9T+7aIx+0DJdgD5sCvozVTVb1Hb
aeEnTOywD4r+zFOfIdjfNp852IeuorNvNNqn4ryGqU+tzXv1t4wxn2ALZ05/
xuFs6YOeNEj3TmY/JNeXipZhU7v9E2T+qeS5s+i9K0r+64u2Mzskf73ku0bt
hZxlXB1y7mr3ncnr+cq89/4u6fbFeePjnV3m0/DVpaqPavA4DfXmmMzFGX0/
47PZHzqBbqzSOLfVbEuWqlyTsS8GP4BPwCt+VbJPha+UrbcfC7f6tPp/q85+
PHsyrt361Dv0qjHqR2vMb2bMBe4ruf6TkvFpJOehX6bJvjnnBa6Bb/dU7BP1
bzW24HezBuRHR27JWGfAH/osaPAetzV5n/+u+nUZxzX+pPqcjLk7MSriS8R2
wDXwbVTOY/SLucAz6nPVvw2/NWMMYQ/O1LMZDZ5jZsb2HextaXWdM2c9rAX7
TPwKGw2nhz/drTO6qGi8eLzovZvU5LjJJLh0q208nBl/Fr+WmBe4Cr5e2GAe
j72lL/OC+dT7xrsXF41vm4v26X+XtZ7jI87IeIwvljzOvJJ5N+eAToAhnAuY
sKRkParkva/EN1j3uyX7Cjdr/ILW847GP0z1B2u+J9t0j97Ouh1eOEd9j2iy
zX6kZlu8tuY4xrAmxwt2E0vCt0x9n7nX7+Q8zp6sOcOeXtZR9JN7Rjv+y0nt
7sdcW/XbnvGc6CbysMff7Wn+DQ/6fc1cYqPKwV3W1RFF2yfsFPbtVD37vfpf
W3BsDpuIbXxHMlydsd0d2uU9P6Xoe8J96aO9+lrJd+WIvPkEvOKrFXMReAX8
YlGjx0f+Ee3GWTD2ryVzp/kac1HBfGGSZPmyyg0Zc3jijsO1b4MbjB1gyIs5
x23h5XDyN0quv65yT8lr312yLT3QbE6FXQADsX3Y5BvDLjMWY46Bx+UcI+xQ
/Zvq++3Wf/ru1OGK66PPJGKnRdtAOC/8j7WwJrgjHPIs1d9Qn+c19+tF7yW2
kP3Mlby/7ehXzlx7bsl2/Z3oU2jwu/CVZ7Q/f5a8C3UOK7t85ztL5o5wyMtV
31I0dvyp6Ljds4GB48N/hCtQnhZ1/Aj+x5cgxjw+2vGr4EwD436cEXYTDjk6
Y6yd2mouAo8hptwzY38FrNoYNu6CjGPCyP9GrHFaak56qJfjVRvCDi3QmjYV
zVnwG7gP3Isr1X9XzneQu3h14B1Yh7zIjS6Cf+9FO3GbfzSb/x/Z4T29rGwZ
D6r95J7GCew1WDGq3v3xDSl5H38x7XD/t9vN/T+KMXt02PZ8LHn/r+JzOlPj
P5a1vnXHqTpts7BdxAP2Bb691+x2dJJY7/6oz4w+8D3GeC/awdahGfOcj0I2
ZMB2TQ6OOiDvO9h9F0vGjr4lc5YdYRPB8T1h7+DH7/eyH3FAvw96OZbw+9Tt
h+ndk8r2zfHRwSzsCjbl+YJxZ5HOK5c3jsK/wE3w85fqv6LL/XdqfzqiHXz9
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
         "]], PolygonBox[CompressedData["
1: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
Dvj//lAvZw==
         "]]}]}, 
     {RGBColor[0.80726725, 0.861883, 0.894034], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmgmUVdWVhh9TVb0aqbqvXr3hVpVKlkMbO0iisdMaQVFUUJEYnFYwGAXH
bsc4IoiIAwoig4oDUTAyqKBVqCVgVEoUFVHE2AHUtp2NoKht1NVK/x//dmWt
euucOnffc/bZZw//3ufufMp/jviPnplMZn2vTEZ/mccqMplTajKZYWo7NbCf
frUiKGhsV41t7Z3J3K+xfvp91EPv6P+h0b+4KpM5UTT3a+wQ9fdX/3D116t/
e59M5jb9VjdmMs/XZjLT9Gx630zmZ3WZzBF6v0PtBrUrtNbWsvgQ7e3NmUyq
d1tFu13PbhT9Q6LrEs2Ven6gxt7QukPUfqKxX6p/ovjcUK059c7pWvueoDlS
/cmxly/FwxbxMFs0o3t7nhdFU1J/D/VPVf+WNJOZobVuVvuaeOiqNP8X6J1R
QTND89yi3/6i20XvnqHx8zTe0JLJnCDaUeL/Fj27Rs+e07qL1J+n/tvqHyI+
7xSf34tuUtF7vy6XybyltR7V2DL9Hhf9D2pXij4R/SbRL9D7/1Dbqd/16vfX
+KHi6beiu1XvfsNz/Tb39hkhkxWS52Q9nyB+ljRkMl+LrqR3VmR1bj09//eS
xzv6/7/1+3t9JtMtmrP0zhS1GzXX3/T7TjQv6Pka/V6QPAb18l4Gas7DRHef
6DeI5w80/rrG79B5TWXP+v9Y8dktnnshP7XP6/3ZGp+jdz/XuzUaTyS3u7VO
L/F5UB/r3t3if6P4n6//b9b4k+hYH8v3qIL2q3WqJbdlmm/PXpZzjeZsF921
ojmpyjp7pX43i58x4ucQ0W3KW067as7dxc/SSuvxcep3V1pXzq2yXOGprP6i
SuvhX7X/LK3WOk77Wqx39hT/kzX/bM3/oMZPlAzv0Ds99f5MjV+g8bP0zm3q
T1R/gvq/0Hsdldan5j7WPfTnFe13jv6/Qby9nTfv27TH3TXfNI3X6/+X1Z+h
/i36va3+S5XWGWTGOaDnx4pusfr39LC8l6i/HH2otV2hEysqzPv52J3GN1bZ
Lk6q8XrY/BeNHnso45Z56LMeuvpyxjzB2684r1Im0ya6zSXTLo11X6+1L2Bv
j4WOr9X46OCded6pte/gvNFfzhDfsqbWe8ZvoJvXVdhmh1bYZxX0eyKx7H+Q
Hm3WGU3Q2FzNOafGPg06dG2J2gd6+nywZ2z5yZLH95G8n230Or/Wu6sS+5se
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
jt2Z+N73VeGNe3L2ueukg++Vndu/z3jie99N6k9PfD+9Uv1PW41Bt6idmPie
9RGN35QYey1X/6XEPoWcfl7B9yjz1V7a5u8SLlNbaDXGKqqtLvnuoUZtz5K/
q+ildm3OuPx90V9Ycs3xIrUbcj77ldKXK/L2d6WS73TBQmCifkV/Q/ATtavL
rmU8p3Zd3ufxitrH88a1zdQeEuc/XRr7sNX1yo/UDkocA0br3Uub7YcHi59n
Er/LHPs222afFn1XYpy6TOMXJcbut+nd41LX9I9Xu3urY/YeapfnfcaPa3xe
q79RmK/2gcR3qJ/Be976/T53cInx6Oq87yyJs8Tbp/LWrafVjkqcS1xfNh/w
01Dw3tjjndKT4YnrsJeXPRdzdmt8QNHfQPxc7dS8/eY0tf9T9Dcu7yLzZtv5
IW3WdXR+P82/f8H59AFqR7e6/nuK2tkl18dvVbumyfnhF+ofX/S3HSeoHdDm
b1x+rnZMq+PrWLW/L/rblNFF+z584KNt/p7gwbgHJh5g60+UnKuj52Cz7U3G
/QcWXF/Y8R1AfDfQFXfLA9o9/n/NzmPBXdtS+1zsrFNzXpy3Lb3Q5LhCfEk1
xy4F5/D9Cv5Ggdo99+R8i8B9A/fSR5f8XdFwtR8mrjVRc/q3ZueGz2iPe5d8
VzqgZP+CP+nSHr9rsj0P0hk9W/A95Wq13zY539hD4yvb/L3Ok2ovD1vAJqbF
2Q3i/rnJOeGuendC6ruxq1Lvh33trXneKjrP4k54aJu/1xmmdlHO8ftOPT+1
5G+GTlP7Upu/W1rbZp/LHQA+cHvRuRh3tuQrh9cZb1NrRCfJR7jroG4IzhlX
dk3nmMRY5qVa11jXlV2jfFntmrLHb0tsx2viWzXy9PUxJ75zc439ZznyMvKz
t/X7UDTzE+f/5P7UAFoiD82r/Ur/v6p310oevcqep6fasTnXSw5KXc+AhjoF
eV5jrXPI2dTO1L8wce7LWtw9dJZd1746MYbFN4JjwXSMg58Hx71nc2q92BHL
evremFo2GJixzRHjqCefUe18jRzz65hzIf5a/XGJa2PICJy/SuPd6s9KfO82
otp3b3xDxDh18N8WPX6s2t+kXpu7a2I1c5Lr9y87J94smvPVH63xI0Xzofrb
1F+QOJ+iToi8uPfg/oPYNirubMBO8H5anfk/OnX/jKLr7+wXDME9wJaQDzXv
e6M2PjlyNvK1PfXuQPV/VfQdAbrE3dnQuOOk1sRdOjTkfWAx+Fwa9zLwA+ah
Xsj7YPeBqfPsSxJjdtYEgzEfNVXOaVrRer4FHK29D9OcAxPXNH+8ZxtYdv70
fdH1A2RFvrGl7PP6tGzcd06c0Z5l69IPmvOsomV0ZtGxZU58H4U8tsa3kfAC
T+C9zfFN16aSZY982EM59fPBiTHywhpjXepB2+Pe9q8lj79eMj5lL+Bianbo
OvkleQO6DVbqjLtbsBw1G3QILAn23C36Oe5TxUOp6DyWfPa6vOsf2MyBUaOn
Vs9dN/ZHfCfvpm4FnvxIjE4u+t5xeZPrL8iRvO2b1PXEeTnLGN8IzuFbE2oV
n+b9TR60b+adb1NPQWeoZ1AfgY48nro82PbIFmPh+2hT+6uj47sD9oJulpLI
fZush9RlkDPfRIJnG/VuTeI8gnzihrx5w39zJ8x3nNRPxoQ/2YeafDHumPOO
A+NC5se0uKb1lsbTxHgV3EougTz5n5yT3JN755Mjp8gHLhgc+xrVYl/YnNi/
oL98Z5FttUzWqX9mi/H7iy3O/6kDXKT21bz15aAWY9Y1IedifGNKnzwKf0SO
sTlvGSJLcjnmIe/qETzAC3tm7/jUv+edL5KPYvdjw/bxMUMD57e1GAODhckx
+c6VPJP6HXU8+CKOkKctj9o134OSu8A3/PdJnJuRo1Won29x7eTsFt8lfxcy
/CBvmSP7viETZFOXeB/kkdTr8O/kPdQg0EP8DPYHfsZXfxT35eS81AnS4Ad9
GRbvnh08NKn9fwwlhBw=
         "]], PolygonBox[CompressedData["
1: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
2Vtvxno71puX3r7+D4r4qN8=
         "]]}]}, 
     {RGBColor[0.86083075, 0.879745, 0.8700376], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmgeUldW1xz/nBkZm5jLM3Jl7Z+b77p1IsSTLkphnguYpGruggqDGhmJD
xQIBY+hNiAUFAcGIiYKiBGwoSsAKaoIFC4qm+t4LAlaKBV229//x31muNXed
Pec73zn77LPLf+/z7Tbo8n6XVSVJsiSXJPpLdqkkydOdk+Tbsvt+XqNODejZ
miQHiT6lKUlOb0iSvqJn6dHZGjtQvxNFP54zPULjT2r1mH5qD6zxu8drzDEa
01300bvomeY6R///UWv105xd1d+dOXN+h/EX13g8/fByYPCztsFr836l1e+W
1U7W/yeJfkDzbxJdK7pG7YhOSdIi+nn1V7W6fxe1v02TZFRdklyj9hyN+Ua/
czVmqd6p05harXV4k/mY1Z4kd6l/q8ZsYn7x/SayaUmSCzTmUo2ZpzFvaMwW
jXlXz4ZpjaHq/5Xaf7W4/58t3lOPkMNbGj9F9AyNX5dXC61tDtG4KzX+UrXP
dRRftZpH4w+qFh+i530vSe6uNf2enh/fQXPr/fc135q2JLlN/ecXk+QZtav1
219zPq12lX7dRPfOuR8eRjf4Gf1H50yzxzWNPocepSR5ttZzMc/qoLeK562F
JPm32o9Ty+Ck0I2b29zP8+GiXxC9XvSzoh8RfYXaebXmc7T2slL/zxS9Qu1j
+v1RYy5R++Wu7r9He9y32u8w/ve1pl9W/+caMx1ZiG7RuRwr3n8jnvcUvVT0
NSWvDQ9bxefHmWW1Xe2yNr/7sNo1en+U6L/qnbv17hcaX6ezfVUyGad9TdT/
HXWWXURXq71Ocvtc+jNfz2dz7qLvx560VjeN/UTr/kTvt+nZrpnXhoc39fy+
Oo/P9H/fej2r+26OrdH/nt55U3y+q/YB/ZaIvj/zmjvqvMajQT+ZWEaMgd+8
6FtEPy36phrPg03ckrl/rtrdxVuD+qpEv6451ulXxZz6/0GNeUTt8+p7Qb/P
JZNL6vw/9G717j9T72cdPX6d6N7q36j+qaJ/0WR9GpRajsjzy9S6gm5skxy+
KViPPlXft0Gvlx+6u2AZbJUM9wg+t6v/KMn8KZ3RAP3/oujx+p0uX7BAYy/T
PvsmtqfJYVNTdE5Xi75GcxymOadgP7KLAbLVCep/WH0T1U7S78Yqv8f43TTP
TfE/NHtj/Mtqx2vOsYxrsl6MCd2gpf9pje+n+YeJvk/zL4pn9C/Nez3mRB7w
jk9jrYnBAzbUP/wYezxDY07QsGFa7xat31NyuKLG+x2u8UPFz+WixzW57/KQ
w0Lp8Jl69wfNSXKh+s5nXY2fmzP9hMY8mfNczDNY81wg+irNszzndxjP+mcG
D7x3QbyLbrFHfD96gG4cov7XZEsLdUaXFG0rf9ee39Pz4drLFs23XxLnoL4j
c/aVT+jXVf0jGjxuMLYk37dK/S9IhuvF20eaq1V7GtNgn7VCY74f/p84MFVz
Lsw5zuDn8GPoH74bHz6k1bpI37lqP9SePuhs+7xRa90pf/vjNu8HOyWujVb/
NPXXqn8bdqrfyXq+rmI93Kj+r9X3lX7TsF/1dxRfu2n+han77la7Al8jOazM
7D/xv/jSUdrHSP0WY8O1lgVy+KyTYwPyQuewl6cSxzPizk2iXxRvfxO9UfLp
1cVxhb3v0D7rNNdeZfsd9re/zvTNiv32ZvF8s8Z2kd/8IGc5fNlgWTyVcx/2
hG2hf5z7LRpf0PgtenZtg8c/GTby15xtDV7fChqfg7/5PXLU2M1Bd8lZF24X
fUeV4xX0+rzjMu+gby+GXRNTiSuXa08/TK176Cl8vtRgDPCx9lWDP0wtS9a4
Xbx1qLO8kBVzMt9/fBBtbZP1E366BE7ANtDtO6RLj+b8/ydtxjDgoNdylgE2
DQYBi4B74GVt8HOg+Nmmvp9VvnsGLuoUfnGB5j+ui+0czDJPaz2UM31FxMfP
tdZVOr/NinVdZb9rO1r/iYs36tks0bPF/6RW+yX8WR/N//POfmd4q20TP3Ss
+nt2tl5dJ11ZoPUelm2OKjvmr1acv0jrbpe/6V1y3GWdNzXHZaJLoi8qWU6z
a3xeV2qeWzXP/UVjHPTpg3g+M8acU7Zdl1t81mAbdAAdR9fxdVsy+4ePMtsT
/fB5muafrvkXa/6R4r+3+J+sfU3UnO+r7dbsOWcGXmLum2L+8TXWV87p3y22
pQ1qR+vch2iuP6d+b1a8C4ZaGJiKGHdIZ/uxmpAJstlV/dX6TdKc/eodq4n1
AwLrgnnP03l307NBarvW2ycyD778xpz9ebtk/X395oBV600z3+056xz6NiBv
nbhB9Kmib6v2+8TAG2KeaRW/f13F2BXcDFZ7t6NtHx0CY56aM8b7keb5bbX/
P0T0NNGDc8a8F+aMe5sb3Qf9ozh3zn+F5lyp32Gaf0LEXLAC50OecLF+U9U3
Rb+31X95ah95hdp98vbLp+S85uKceV1ctv0sKluPwNwTco7/pwTPIwOTnBDr
glF2rqXfO3W2o8+kl/P1zjLpy1ei7xG9XPQeJcfAJ4s+B86DfYEnwBX3aMwK
/R7Qvk6WjXSpNo5cXGU5ZfX20SO1h4u01ii111cb9zAf723T+Dq1/1cyJpqr
+f6k/3eoP1VbbLQ+DARrx7Nfaq2uJec07dKZo0Rv1LtrdY6Hluxje6k9W3x/
qvH/LNkm0cPZBcfF1nrbwAb8HvYkGa4rWX+rmq33zPOK2o0lY7pbC8bx6MhL
jcam4MfF6n+94pgIXitWG3M/WmWe4O1czb9fybi+v3g+XWucoHyjWs87FYxl
VmrOvxRtTy3IVvJaLl5Xpo5fW3XWk6r8jDEfavzKot9ljgc1bonGL03tL/Ab
RbUrsbt64wRyLWLffmrXNvp8OecrNM/h4vt10ZeKPlj0vaL/B39Yb736U8E+
jdziTI3ZLtk+UnKed1kn53pzIwaQJxKPj9G7/TpYX8+J3BC/zl6IxeSCp0U+
SA5LDOb/VQXb37NhOy/VW0dp1wY9VDwcLT5rtJcDKo7R5ArkfPBADBrUyety
ZstK9n+fRA5O/IDvw8nxtMbXej6t5NxlVpt9MfH9iZzlB95ChmAFMENNu2P4
tRH3wQAfdXZMJ3cih+qjsX8gllbb3+Fv8FX4vXEtjnVj1S4pOSfbKt5eLBiz
gd2IW8SiMdKfuopleUazzwSb51w2BT9gGXKiP3f2/PD2YfBTVbG+oXfYOfLr
qPEd9P98zV/U8zvFw3+J517YdNE+86qC/SY0PmOpxpykMX0Lls0r9ZZPB70/
U+t8Ip3qWW0cSN44Xfw809lrn1zvuDk/fDD+mXj9Spwp8ywtWlaTC/6f8wZX
43PxKfiTSRpzmui8+D+0aL+6A94rlv8F2lOnFvuxvM5o72rjT87jZyXnEGv1
3kEl7+HAkmWBTHZojgNK1p1vGu0v96q3z3yo4PzwNo39R8lyQ37rRa/Q3JP0
/N6Cc+jftdhv4TOJX4uK9n39Cs6lkc2YgnPPlzt7LnwuPMM7Ooqu3lx2PMHv
Y0MLi5bD4QXHHObEl8IjsQQ+J7Q6fk9sdRwgdoBpXwi9+qRiXUQPsdNRJddF
hrXZhtBlcpaH5EfuF3/vpD6TvhGzv26wDZNHfdtoeSJX4jD6TVw+v8lx/ha9
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
Oug=
         "]], PolygonBox[CompressedData["
1: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
xqtHV8OE30J9E01nTGetEv0zQ9853b1qxSf0m6y3uSvzq5iPL3LtdeGOousl
zsTvG7tmvozz/CprDM9zDGukj28Nsa2OPdiQck2p2vJJfFoct8/yfST8g0Pf
Ad0F6XgM/RP59pBqD/RPAE9KuLZSDlQu7MG8e559lu9/TbrX2MWe3hR3jBSr
rYy/Ydu/GPvBeci/A+3RhGuzzcwnML8Je1ozb4s9xaw3Fv6VWa5pXsL+U6Fr
KdUQqiWW4P89+P8dOl8Ed0NHv0au+W8v9R5oL3Tmx6jew/92TXymP0i5hlMt
pxpNtdqdCfsqn3olbKNszWeezTwrYXwhRym/s+c70fcB4+K4z6DOou6g7qJ6
NPVqM4j3S+qPmLdv4jvxMesX8MYeZF7PCKEP0BmK+E0eqPuKT4c5X+3xcRz4
dMZvlWqSMxnnPOW+E6z3OXguPLdj/2/hX5x2jaFa4zT6SlirTnscdU5Xbj+b
8d7cj76vwS8j0y/iM7U07T3R3ujbeHAbxooc9wA7C50zlDsKm1KfSX/KvYPe
zAr878S4CtyVb/dCO5hy76cc+qV6obhtU80RR/5b9RvZjuk5xTbl3DMamV3g
J2LO5X3woRP2v8O3BwvcY70N/pYcUpdjHd+Ah/JtX8Q95kPgTnyL5bpHUK+g
PdPeKadeB611yrWeejr1dmUxv53qGR7nfPSN21f1eOr1Vqbcu6mnnQTvophr
b/Vc/4A2LOVa6iPGI+As4vdtrt/wbfC2Rd951v+B0QL/n065l1uAvhHQD7MH
Mwt8Z+rT7vHV69+MTcORjZa6l1RP1yXuGlS1qPZoPfIbU777h9BXGXOPpF5J
PXtjZC8t9lnRHarVfsM/JOIzOB78ZuhaRjFULAekrasbOgem/R+C/kuQDy2b
ucZWra3/FIrQPy3lvdN/CL+LOScoNzQhhlfC/6u4sf7D0H8Zj8Xsu3yuYf5Z
qc+2zux69YfQe2Z5z8emXAOoFtB/Ag+CZ4XOpapZVbsujbsW1J3X3V8ed2+n
O6i7+Aw6Jkdcg6oW1X8Y+i9DNf461qqNuxdVDlUuzeMMnG/kHKNc00Y5GtkO
rNk2dI5WrlbOHATvlUXuXVSDqxbvwOgVdc2p2vPS0G+bYq7Y94g5V0hnb/Wa
od8C/aei/1aq0/6vQndcd71z6Lugnke9j2pg1cKquaYi3yXmXH858xT0MDTu
A38S/KPQtssn+ZYI/dapZlXtqh5BvYJqmNug9Ut573WnO0M7GPotV4/8rv7P
KPXZ1B3szDy/yLlZPb56/TT8V0Sd45Xr1SOoV9Cd0N1ol/Z/N8r5bcFDQr9N
6tHUq53KuNbRnp3MuMdRr6OYXg+9ecq1iGryM+SnyWnXznqjJ4G3h+711aOq
V1XOVe5VTujM3RmTdq7Vf0qjwQNSrp3U06u37592LlPN2Q/cupnvrmrAVuBo
M/+3opzeGDw65dyqM3sHto5Ku5dRTn8i7T3QXigmmdBvnt4+1ZxdipwzlDvU
g78N7f9zA+/H
         "]]}]}, 
     {RGBColor[0.91439425, 0.8976069999999999, 0.8460412], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmGtwlOUVx98NJCSwmwybZDfJbt4Ugdpa/NBaLUVxZLgNCg4EUCFUMIh0
JiRamam9qNy0Ti+2WEOdaaHQigUC4daC1Gmxo4NVRywX235pv9oqKAE62IA1
/f/8nxk+7Jznfd7znOdc/+e8O6bzwfaeiiRJjmSSZJjoPtGj+h3Q+sY0SU7U
JkmD6I0jk+Q+rSsr9U6/17WeL7q71ft9oq0V3uvX+VGpeUaKPp9PkveGJ8m0
jOUgY6XWP6nxM+s54h2m/UHxTdZ6XFWSvK/10mrv3SOeqdp7Re/mim92vZ61
d6ycJLvy3tuj5wkjkqRKch/TmW9Jp5vF/23R77Za7qOiz0hmKp4PxDNR/HVa
b9H6hjafnV5IkgcKlvV6i+7QuWm6e57ueFT37tY9F3TvkWrvce+zzUnyJ9Hb
iklyUe+2ZZNkZylJXmi1Xdc1Jkkmtf6J6PmM758leu0I339A64clZ5HoRtGn
dKZXZzvFf0b3V1eZj5is0n6Hfqulw8lar3dI96Xy59s6v7PGz+g0KWc5g1qf
Ff8h7fdJ1jmtj2jdX2U5yHg57kaHSbKlq8pxIkYba7zmXbV0ek33jhAtKO4L
Kq0/PmEfv6yU/j2iE8WzsdrxJAeea3QO/TANnbQ/XfTruuvHlV6f0LqyynEs
praxIPqZEd7Dby11SfJ0nFkX/icO66psO34otplvkc7epbi0Ky73Ky4vSZ9R
o+z7TxTTRD66pP1TLd6vkI5TZP8GySoX7NcLtbZnnWJ6m9ZrW23XrbW27fFW
rx8j33TuDt3bJ/41uneT7v2F5N8smd16N1oyx4pOqnVt/EA8LdKhpux8J2dW
SP9x0n9IcsaL/l02HNb6b6n1HZLMiRn74m79vqTtJvFdFE+z6OZq189wyZqn
GllIfiY+l8k5B2tER+R8V0/W67syfs9d46Xjx9K7Ws+jGvy+Onh+L9ljahz7
San981XyQjYsk6xv6Nx6+WKK9je0Os8y4l9f5fz7ROdXiU7I2RcfSua/Wlz7
r+btU9YztN/baozYJPodxaxRcrrBAfHdod8XZVeX9vM1thf90R0bb2pzjS+S
z3ubXBubRJeXbQv2PdLqWHxT9Dn97tT6Z6K/iXu5/wuNxq5dEd++wDp8DD9x
oz6p0zbVxGflr7zkD9M9VzKupSnS83b5tTfOvyF7P1BuDTQ4r8l5eKlXcoza
6Mi5XsDXmRnHEXvJSfKRPP9yakx4oNF1VKpzXeCfOXn7dknq/Q7RNU2u57VN
lkd+UHftovPzrsv5OWNufYX34SF/VhWMmydbvNce/BU1xhdsIJfag7+yxliD
X76WtT5LRA/L778VfVH0fuk0TrotF30wax2QcU3J2PsfPf9BdyzL2+eb9a5D
619J/nbx/FLPL5S8tyRvncEgzu4V/w7F7F75c6foey3OjX+L9uV9Bv4tWZ9F
Nv0ELNsTd96Xt/+nVznvyfmD4uvU/oGsf/DsT0w7g5/4EQ98S628FGfJWfoi
eEgtrIq4X18y9k0oGbfxCbmAzGUhvyv4F0UP7Yo1NXGs2nUxrmRdx5aML89H
DkwuuZfcUrKNu8J2aF+sO2K9OO9+Tq7j847Yw+fc3x33Vihmr9K/o9dvj7vg
RS4+nB372F2ZuqdWiZ4q2p8ni87j7uhBjRU+z9kzZfdcem9DzCSNqXFhbta4
R06RW9wL/oMx9AP6wLpY98c+tQkGzg38PJdxPlJT0KVZzxb3Zi1zatwzL/iv
zXnN/bxfEjyFNvej8QXj0ObA3oGM7SbWl4qukY+K7rfU7FsZ+2Z2+G2NYvOQ
ZK4tue8ig/kHPAVXHxK9Sfafkx++krrOuRc7sG9D2Isdy0K363N+hgfd28MW
eiHr5aLXtBmXPlfwfPTTas8o4HR35Bx6UZ/g/7SCazvXZFzfEP4d22aMeyJ1
HcMPPmT1/IZ0zkWN94Qc4kGMmDmZvZjB3myxX2cHtoPdYPjpFuMmejZUXO1b
n+JM9BXq6KnU/fd7oruLnvn6ip4DmAcWp64L+jdxqc+5XphlmI+wuS9mrv7I
me6Sc6Kn5LkpE7PTlIKxb6T88HHRWPe/ojHmmfDhzOjR4P+nfh15dZa5Ej2c
HDsffbw7ZjtqgbMDsU+fRG/yhLlgQc6+oMfQa24tu3Z3Ra2+kveZd1ucgwPR
O4gDdU199+reZ7PGSeIC7hCvNyOn4D9adh4xd2MXNp2PWns7vheGtD4eWEFf
6o7ehA3kONg1IfBtRsH+mBU+AXO3Zl3nzC/kKzl9MvBhfMk1Pjt6B5gItqLn
6aJx9Z2i8609egf9An3Aqxej19xZdk+4PWd7wXz6HLjHnAJWI5d8+HOdc2Je
YAX1Tv9nzqAmmYW4hxykTu8JW+6OmBGvi6nlXEgdd2KO73oil15mNixYZl29
8YR5iPhiP34gBk1l1+vUeusyFLny6bda+J/5Y0Xo8fmya2u++J/U749af79s
n+yLWHQE9hAfcKiU8zMzFxiHvfR4en1XwbPyxPhWqYl59YYG4xS4cF3ZOcM8
Qb8brPIz64PRI9GD89QTelPTZ+K7hhwkF7dmPCszM/9cdHTO79inz2+JPKFX
syZ278i/h+Tnv8b3CLJ/nfj95uB/ouC76IHEHpnwkAu9kf/4Bh+RM8ti5tgf
a/o5uU1P2hvy0wr7b3+s90Usbok+u7hg2ZtCf/BxXdVV+4+GnIcLrgv6/2t1
1mlaYBz6ow+9fXX098a4i33qZlvYCHaeiO8m+gMxJbbwot/++MbnPPeCEayR
gz8Ksd8ZMw8xOxtYCL5Sr1cizxcGRoAPzKfzY0YFk9AJ3cnFy8E/M9ZgNXXF
HMR95Bz3oBs1ejDyhNmTGYX40kvoKU+mrj1mbmT/o2i//LPofOiI+Y1vb3yy
Q/RpnVmgsz9KHSv8cCBs5C50ZsaGBzuOh9/xyYHoT/CD6/3RE7YV/B2S1tsP
M8MuvuvolZdSyyF/yBlyk5qitug3MwIfwC3qCl9cjtpFDlhO3pMzzTn7562o
Z+q6s+x5l3o4q/Uj9eZ9vGyMnxm4Tc/uip6I7BUhH7uxGds3xTfR+uareI29
22NGpW/Q696tc48fim8XfHQ8nlmDjcPjvx3uXBlx31M09vUXjX8Tou8dKnpG
Olw0Bh+rc8yRPRR9hNlmMDDkYt7vx5Scd4PRnwZS18z51PW0L2qKeZ/vW76l
8R9+JK+oiebAOnon+Yr+7LUED/EgLsSf71DiRdzOpdbzQ9HJZfsc39e22T+5
NseN/kFu8/8TMwY9eyBkEHf6P37AH0tjhsSWOWXfD2bTQ8kx6p1vmb2BPeej
byIH22ri+53eQI9YWPb88pe6yMWS/y9oLru3/K7OMwH/baHDioK/4wYDty9H
/hA7sGFP+HNrYCm+6ouZ6v0Wx4E4of/p1PJPxTcB31DUMD0PW2cF7o4O//Df
CjmVld/+m1rnj1J/l/J9urrZ/8fQd4jH/wF4+aVR
         "]], PolygonBox[CompressedData["
1:eJwllltslFUQx6eF3e62u9vY0t12Lx+BtqKIT1ysJRBI0Qe0RAoapdwsgiZt
aSnxBtoKqMQLitBKNCokKkWqD17aoImXQFrFF7FFfdFXFKgWKYJGpf7+zsMk
//PNmZn/nDMz55vW1NawOd/MupHJSHXG7OOI2S1hsyrwjClmpXGza5D8rNnM
MrNJIbP6hNnhnNmuwOwo69uKzXaDK6aajYP3YJ8E57O/qMjsE3yOpMwqWT+A
bjH2O7F/HpuV7G/E/xZi9RLzUMzsIHIY/HTgvrdjsxrbi6y/LHZO4jadb3vx
PR9/j4hPzn2PkkxXzjmLewlyLfufw/79kMfcA67MeK7yOc76Ivv78pzDOPg3
vg2iW4F9M/bVSc8tzbcU+Q2j/wg8C/3t6HtyfjZ/EX8/eDL65cQb4lsEXBA4
PgbnRrgb6+Os6/A5XmIWZb2C/V/xrQhcGDgW5wPsb4HvGritRVrBfyATYCP+
1VKzM2lyCjunEWx/4swHiVUWNVsP91FyeiPmOZ4Hn0753UxD347+VuQU9mHW
s8lvFevzrItZz2O9MOtneRD7BeBa7O8Bt7JnPjgEx60Rj/kj60XIF+h36c7B
E5zJHSHPOQ9+3yMDcM3D5wT8H0O/AN05zm8b+B0kxP57+dYHbiLmXfiLsH8D
OMaZR8Fr0feivxw4l2/w+Sd4GXs+JN9PsakHH825r7mFZg3YPprz2jlLvAfB
1eQ4gW03PqaDi6Z4rALkb866M+u59+CzK+uc/+ce87to5rxqCrzmh7mLX5Dq
sOf4A3yuBM7tKucTLjd7NeO+upFXwDPx2R7zHK/Peg2rlhfBcQc4DqczOi/u
I4r9SNrvRjFbiN3JtxdZ70W6wBvhvxR+Q9hcIHYnMdpiHqMLHOfbyYTXnGpv
Z4XZkajf2Q7wcuxr424j260V7lt33gGuQz8DfT/+T2NfhpzCXyP+SsEPwbk2
4TV5nPru57z6sR8l/8sprznVnmbOMOsT7KkKew1sx/Y9vu1DF7CnNeki/BLf
+lJ+Z7o7xXgYvJ+ce6OeQze4H84fxLwGBsC/B34WS3S/rOfAPwP/MeznBd7D
6mX1mHqtGL7NBV6DN1DbHejXFXoMxQprPiS8x9XrmmGaZYqp2C2sV8a9pqqm
es2p9nRHuqtN6umQn9lc7HeRXyTsPfckeDb709hXIBHq4UjOa10z+O2czyTN
pteJ9ybxbgo8F/mcA74kvpzVa0g/5/VM1ntBPp8FX0D/a6Gf8bvo61nfGPcZ
Xg7fLXAIhX0mdCQ9hmJphrwFDjifbZzPZuLdTy5fp312zOLbJvY3sWd5zGtE
taIZpFkkm0O6+4zPPs3YMfg+hSwt9jdFb8udcKyBb4N6Ius9o95RDamWrqS8
lvJZL8bfy5zJsoTnrNw34KOq2GtYtXw36xfwneHbavCGjPsWR3EtLHdfylm5
N7GnO+Q+7gM/kfNe1Lfd5Bub6rNNPZkAt+NjPb7WIW0ZvzPdnWpMtdYYeGy9
gXoLB9HX5bnNUNZngGaBela9qzdCb8UJYuYH3vPq/WMS8v+X/MfQh1gvge/G
pJ+97vRk2t8gvUU6kwM55yRuumPdtXpUvfot+hQ4GTjWDNcsv1TivaIaD6H7
POtvjzh/Br5Zb2bCe0K9IU7iJk7/wK0m8NrQnlr9H2T9rdKdlmd9xmvWL0Tf
CX4851hvut72eLnnpp5Qb2gGaxZr5mv26x9B/wrqMfWa/hH0r6CZFiPeGmxK
ot7DPeDrkj7bVWOV3NdAyntDe7R3VeBvu2pEtXIu7bNGM/ws+LvAZ51m1M+s
JwV+N3rT9Lb9B2yHNT4=
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl0j1PE1AUBuDj4oAkBlRoRWzQOAA6seFkiE44gJGIytIWJ2lFgqJiW3Rg
IjGBwi9QvnSUERMNRhhV4B/4wcSAxUSiPMThyduee8+5tzdtSue7c4ciYoKr
xyPyDRH3GOTjqYgVOo9FLMt35NQHuEun/Z9PR3zh28mI97URDxojHjLMI0Y4
cyLiqSzwmFGe8MH+7/rW9X+lw7y0uRmy9DjvOh3OT8gkFfW/vv+S/+SGvk1+
mPOTLRbqIxYZqIt4I1+zbfaqtX61T/KOXJOXZVsq4oo8b+YF7vs8SFUi4pLc
1V/hrfMOq+067zcVaqxftNbOi6RehijZV6RAt7MX/N5F5mn1HkfNKuvtY+lg
Njv2TVufYZIyU7yiRc9LOccs1fb+cdcjcu/gzbxNmmvmNssWSupFCnTZl3Hf
LGnGzSuZM0aR5zzjrPot67e5wU16qfdG59y1TiZJpP7/X/YBslNXjg==
         "]], LineBox[CompressedData["
1:eJwl0kkvnWEUB/DjGq+6FsbWGGraV3UIDYktCztq0UiwcFPDxkaImlJqpU3T
diPpwBdAv4ZhyScgKJaV9icWv/yf+zznPO9539y6ofG+txkRsU66JOJXZcQW
21xXRVwxUxxxKs/4af8H3xlTf14TcUHdXX2RS6wz+FcdkSkTvC6NyJV5ZJFD
Njfq6/X9sb5k2H1f/P7KN+Y8b5Zpz++Qr8ikSV1CNssrfdc8Vt9AI/vlEQdM
lEUcyUMSZjioMLO9fZmWh7JfttVGDMh2vR0sWi+QehjRLW/1/+W3OZL2UuoL
KaDKeZezTjYeRczzjk/qPrLBlDlfmPElzxk1S427NvW+4UTvMdn2y5yXU0wp
JTxlxFmrfEYbre7M8w2eyKRc5T1L7u2Rvex5l112mFT3Qd86a3x2X758QJIU
BQzaX5YrLLDE4t339a4tZq2XjTTU3v9f/gN4K0oe
         "]]},
       "0.8`"],
      Annotation[#, 0.8, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl00tvjGEUAODTpUpI0Optpki0/gF2yIiNy3SIigVadYsGrVpQoouqtiul
1boskYi4RDTRdhq0bg0Gm9aGBWItUhsL8XyxeHJ6zvnec96Zr7O08WjuSFFE
vODtwoj7ZRFvxNl0xG9OVUa0k1V7uDiiTjwjP80rXjKo9lVvSJySv6arJOJ2
aURObfuiiJqqiBXUUizfbM8WsvyqcG5BxHIz3omz8tXlEfWeWyXuEA84d5Am
9rOPnWbfsaPXrg92fuS62g9zrokF+Xu66WGXWrteq/nHaeEEbUzr/fTMjDjs
Tm325qoj7skv2zXIAFcYYkz9r1mjyefz3Er3qHGu4P616k/kLWacdfdjYod4
ybl+LnCRPu46f9W5YXd4RJFz8+Tzk5q/R/Tz6oeZMecT05SnIso4adcmz7Qm
78SZuZ4r5hAb9Qb0JvUm6PQ93TIzo1ZpdxUVpEmx3h1LxIzY7zM1J9+9vJ5l
ZlXLl5AmRca+P2Zt1d9Glhx1rFO/aVeHnXm7x+lT22BOwf/VXndvYo96A2v1
buitEXcn74pG/QZS9pQylcwUv/CZ0eQ9MMI4ebrdvdPdzouPk747zHFuzHvp
Uu9RPyf2ipP6z3nKBM/4Zu53HpT9/z38A2CCeWc=
         "]], LineBox[CompressedData["
1:eJwl0z1szAEYx/HnDCQkBlrOa2PTWKoJYWqxYSoGk0RECVqDlxaNUiTCqeR6
VxIGiQQh+uol7YaGCBKLgUQjae/axrXXkNAFn4vhm989r7/n/7+7VXsb6xoS
ETGE/MKId8mIHJ1bETEPPcsienFe7tPiiDbaL+7DKEZwT66odp/mxTlky80t
irggd7IsYuvyiO3YhmrxIT6HcQSV+mcWRKy34w9dIz6wJKJJXz1tptfMteMK
Urha+ly6hcdNXpNmpvBI7qc9D+l3cQEDGERKLqXWsTQigzQ6kUVR7YeeafrR
TW18d3n+/pIHryfowzM8xSv5hL6XdLe+WnfUiP+6fwOPD+JWOy66/Sy9RHvM
9eIxutFV2mn+trlBNwxgvrkycTme+/xCfUj+KH7bM4NfqFwRsRqXebXoeeD2
djPV+taiAQfV7qoNq31F2nvqtrNJrpb3JtRgCzaj3o3r6H56yzM18jknbkWV
XTtL7wQ7UIc9/Cr0nlFvQTNO4xRO8OjidZ3nZ95fcEdunz0jKyPG3T6BTvkb
OK72Vu0YzYozGFPPYyOfKnxTe01n8U4gz2cMOUxgHB3uSaml6aj4jRuS5gq+
l3b5TOm3RLO0qD6NAqYwidlqc/A++f//8A+SL4ft
         "]]},
       "0.6`"],
      Annotation[#, 0.6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl0stL1GEUxvHTojZRQU5OzkyFTnTBFplk15WFVGapQdAyodumVuqi/olw
UZCU40xBBW2KLuaI0xWCijJb6IxBQtFtYYuoRZePtPjyvOc95zzn/N6Z2q5T
nSfnRMQwMksiXldHvEJzMmJuVcTbVMQ4kksjzici9ju3ow0z6vfRocV65dO4
hIsoI48CBjCIHG4vj/iur0PfAXTiOt8bctdof03EfHNLPCfsMYlV6vtobkXE
Armncgv1LUKP+25M23dMboP+RqxHO78GWiX/x9wE/UvX8ssvsxsGMIgcVuvf
IvfA+REeoklcopvpKN1Ek+aes8sh/vWZiK1mbMc2jPP4aJfTZp1BSm0Nxuz8
SVzQ95n+0PuVfsEbuW/0qv477m95i7v0vXgaB8VFHiPYqK6eRxNdR3/Zp+ib
RjCEYdzHGnuMqinhMHrxzJyGtLdBme8UdvKo0Jvm5WidWVl8UN/hO6boO8zI
V2gZbe4v4wqK4udmtTq/oFkeK1GLFj11s3PsXUFB/NN75WmrHfdiF/ZgN7L6
j3rjYziCEzg++9uofyn/27dO8CljEn12b5ZL8EyZk0EaT/i02OcxvWe/fucL
2IF57s5W//+v/wNrenae
         "]], LineBox[CompressedData["
1:eJwl0ktvjHEUx/HTjkQk4tJ2njKdduoFCDOuC6WNS5fFoti0tFNGicsGLS8A
C15Aw9rCG5CQoKPSThuzYCeEREJaGhKXiNvnicU3v+f5n/P7nTP/Z9YNnT14
piEi7qM/G9HYGtGAAWSbIzJtzlBcE/GkJaKcixjBEL7rH6YLTRHb1bfhER4i
1uqnU3iMKiZxryPiB99xvgpO4IXcmtpz+oAvZ+4XmSvssDLdRf+tJOJOISKv
9k1tC99WXHN+FZ/1zasd5T+GAZyTN0gL6i28nTRLR+SV7LEJG1DERpT4r6jt
9dyLfRjzvodeprvpOO0y97accfl9+YiTZpzCKBZlfLXLDbNuokdvNzLO887v
8rXTpXIKtANL1DrpNP8bmXV38ZY2pj6cT++RPsVOmUUZu2iJ/pIza685TKOG
mfS3yXymp44yruOne+vxLbvx26y/6JXxh740r0p3mNWFxD6n0YRmZMxZTVdh
FDXMYkbue7Mqnj/QwzKOoB8VmYdom3k51L0va7cXHUvvEhdwCRexnn9B/SPm
sYhPmNP/Tn15+v3ktCLBhN3Lapt9gz5zDmA/XssZts8rOsVT9TyJQSTOJpL/
//V//vZqxg==
         "]]},
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl0ztI11EUwPETqEMl5NssDRexqZcmao2Zj9SoBg0JioYeUJuV5WDp1hQ9
1FJDqyWLCEHMR1OtlZpBg0GLBr3Toajo86fhy/eec++559z/j3/hkdP7Tq2I
iLd4lRXxGm0bImZ5MTOixfoD38DS+ohlXFsbcRXfMyKmcyN+8AzP5qnnJfEs
L/McJ8knIwVt4pZ1EeX2enMiKjhTr4P5EVncL9eHSvkKPav1L7TOtnfUOod7
5HtRJh5Nt+/8BFeI/9oftHfSfQXWJzifd+tZhZXmX4Wn1lO44u559e/Q4Vx9
QUQjGrDLXqv8GnekYdqbMzgdM9aL3pKiVxXXoBZfvXEhOyJVflTtdeshZ+9g
ECPym9RvRrX+NajFuN439ZzgW/yEz7jrLFpR6kwJ0sz0wlvb3VuDdj0uYMy9
/eqm1PXxJO91vhENKNNvOzaasRgPzfIA3e4YV5+h/rP1FA/L30eTc+nibzzJ
neboQgcu4WJirfawmY7reQLHcFnvZvkmzItX+71TUWeOPahHpTPPzLODn3MF
5+rflfjGXKR2q9yQeBtvQSlKUKRfnfxOMz3GfmcPoDjxdncNoB/Nzo0k5uAu
b+jEPTPfxSN1C+Jk/mWeJP7Jfd49bP3e3h91S3K/uVu+B3nyL/mTM4fM8JHn
9D1v/YYHxLdRLh7znb7ITeOceCbr/3/sH6ivgzg=
         "]], LineBox[CompressedData["
1:eJwl01tMj3EYwPEnh2EYqejoVM2m5KaUG5PDjcPCDRfc5NAMxdZxxI05H4qb
4iblLsQFG5emDJU7Q3NlFSo27rTh85+L776/53mf5/c879u/ZZU1u6qTImIY
jxZHjKZFPOQRHsuImEyN+MYTGMcLceREJOGJ+DEy5c4uisjivws9y4r4nR6R
Ld7HOTzJKzIjVqIAl8VX1R1JiXiu9yhXmPnBvTu4T64Xx+SvJGqRYVZydkQ6
N4qbsFPtRz27eIj7zJrCUzHT/bMwvCBitbu+c4Y4HaOJd8Sg+j16q5ZE7OYi
87Y7r5PvdB7XN4FWz06qb8YpNHl2Xn65Obn4aad8zsMv5/lY5Y6DdjyEqsT7
m5ssXyJfLa5Bn/glevFJPtmcCvOL3f/aud75Db9Cu+92C23Y7K5NWKou0OK7
78V1O13DZ3cN6GnQ389lanY6pzhvNHcD5tp1Dt6aXSdeqyfNeZQHeQC18mXi
VOcR7jL7LjrQiTtoNa/F/Td8l5toxW1z6uRrMd9e5XpL1ZyWP2yPM9yMPM8u
iHO5VG2dXLe4nmtR7q5GXs8NfFddF6bZazpK9BTjBGpwHAfUFaovwipcMndI
/iK362nDQ3v34L295nm3Qq6UL+DZ4nc8Q08+n+M8fir/DGvU/eBs3y4H++1b
iT9qOnire7/YYQt/5W3cn7gv8ZtEir9bKsb8Hh/b7x7uoxs9eIDhtP//j/8A
fJiCww==
         "]]},
       "0.2`"],
      Annotation[#, 0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV0ctLVVEUB+ClVF6FGviqDA0n4eN6QbNBYNBDzZ6QlgOfINGgoqRRUI10
UuDAKE2wsgyEHuqg/B+aVBO1SWoZQVQ0TdDqO4OP313nrLX3PvuW911tvZIV
EVOkmCyLeFcU8YHruyPey4aCiIfyovqRHKeqOOK2ulLeM9NVGtFNJ730kNJX
IzNUkaaalu0R8+YW+F0Y8VE2WGtRPt4Z8X1HxAH1D9nCL34y4V14nsVUScQL
npO2T5EsJp9CCsjW98p+07xklhly9dfLfdSylzreJudzhjvm0slZ9D3hknpC
9rmHSXlZ/Uw+5YFvH+M+o4xw2Dn/2f+IzDh3j2+8SYe5G/K8dWbM9qtn5TQp
+w2oc+RyfkSrHFa3yTOMurMRtuo9mtwhjTTTxIqZdX0brNkj9P71+7Pnf5xh
jS7W2b8r4pC1D/LF+03qzexx5koqOJ38dzKT3C853m9hVf9x+53gGKc4ybbk
Luw5xln7tnPX+ufkVzO5clCdJ1/rneOa+o284D6W5C31svxEnb4hda38Zv4/
cFZeAw==
         "]], LineBox[CompressedData["
1:eJwV0UlL1VEYB+BXHBZlVpqVhlmUmkYZFDiVlq4icwKb3DjshJRo3bhNNFI3
7cscCvQu1E19CYdy6APYgNBgVlDPXTz87nv+Z3jPuUe7+9v6UiJijF4ShyM2
cyPO7Y8YLIw4KztzIl4au60eky9IM/5InSqXsyMa5ZD6qrzC8IGIZ+w090JB
RC3VnKeG99b8MO8nv/ZFbMstPhj/djDiO7fYovJQRJ29a1nxfTs/4jcFHKGQ
y845Los4xl/+sGr+Reddoo4G6sk0f0R/ozQ5t4Wn9m+Wa9aky8fqDPnK3An6
1OOyx3tMyX71azlJqd9lFHOCEj7aJ/Se0Ee5e6xbd99dO3y7J3vVM9beUSfk
NKed90R9Sj73XyzqdYmF5JuxzG7zWmUbTbTQTLe7pJLGP/tnyHp7pcu3eRE7
aFBnyi79ZMldvGOv8Wze6HWGaXqcUy1rqKCKSnKSd9RbKSWcpIw95t/Qx03a
uc615Hv7Vu4+A9adkbPmzXNXPSeHvMMX+VD9VW7wmQfqT7JK//8BlJdc4g==

         "]]},
       "0"],
      Annotation[#, 0, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl009Mz3EYwPEnDsqhJv2PiNnQXMmS/JuoHKRfbdI0Wy7+XWxsTG1thc3N
GI2I/jilbNaBVRy4+TNWyVau2fJnFjl5NYf33p/n+TzP5/N8vr8qPHam+nRS
RExjPDPiEy6uipjgmYyIBuuv3IG5FRG/cTM34gbmlkeM5cjxOI/l6ec/4gme
50leIp+MFFwQN+RHlNrrzI7YzjnualwZkcsP5LpQJl/izv3uX2OdZ6/JOp/v
yN9FsXgoPWKt+hEuEUdWRK+9QnXHxat5nf4K623y162n1X9Bq71EQUQdalFp
77x8hlky8cEbszkLH62/mT3FGZVchQP44U3feZl8DSfQq7YPPXgqv9Q9Ve4v
cv6I9VnrUR5Gs/4WXMIW32Uz0tW9954Wb6lAi5ma8cxZ98z5Ul8nv+Ba9QnU
YKs5i1Fkho0YdP8AbjljVH+m/l/WI/xYvh/16jLEP3mYr5jjKtpwGe1o1dtk
ppPuPIUTuObuevnDmBKn+rtIw0FzVOMQytW8Mc8+fst7Oc/9bd6fy0ULv79c
t7iMS/Fa3U5+xTu4S919LDLfYmzQsx51SKAWm9QNqH+CQRwx65B8PbfracMj
7+jDgDfOipO5fOFvk2e4nyfck8Tn9Abf9n06UGD/Hac6Ow2N5j2KWTWdvNu5
k2bYxZ95D3fbm/c9/mJKPI3nftNB36obPXiIPvQW/P/f+weRPIRf
         "]], LineBox[CompressedData["
1:eJwl00lsjWEUxvEjNDEs2tzqZOhgIUhESNTSFPMQMYTqwpioqaJX2VlIqKHa
siAxsyOsNGHRxFDUtKGLKpGUtkolwoKItOr3xeKf55zznul9v3tLNu9ZWTko
IjpxozDiY07EdfqB9hRE/BkZ8Yl+wWc84PeNiehHI/82csUO5UXk0d+5Eb9G
RfzMj8jnl9EC+osWipdgHI7ya0dHbMuOaFJbQReb+WpsxBJ6X+wetosfk3sc
eWZlmZtL9/MPYKnc12qW0VbabNZfOQPJjub8xftUxGS9emmWmZnoTO6KZ8n9
1K1R301X03XO1yKlRzba2W9wxS69+nxFvby0+mrsQ9rZYfFCPYrw3Y4ltBg/
2MMwyayNdt6CrRivZ46aqeJv6WVv91Bec/LOeCe+KtkJZXLXoxyPzb5q5hN6
jT6ip9zzNBowV84cFNmp351P6luOWjNOoEPfp2qqiyJaaKm8FewUe7a9ZmGE
mcPx0h5p/gw12exu+oI+R5V4KT/F7qKXzL6M87iIC8k+5tXpX2/PBtThXPJ2
4lXItNcstdPlVIlX2CNN92Kcsxp+CZ2W/BaS3yZ/R5KHXdiJKWqXi8/Upx27
5VZig7N880ahADXy2sSP0LN2P4NbdryJNnVD3WMizfDNJ9AhtEmslT04+Z50
wLsW0zv8u5imxzfaL7bJDn2009yD7C7akvTxjhnJe6odgR7fpNE+881dgHlY
hIXoyPn/P/wHgDuKBw==
         "]]},
       RowBox[{"-", "0.2`"}]],
      Annotation[#, -0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl0stL1GEUxvETBbWI6OaoaU2BJoVOdK9VN4eIIGy0rKCNf0D3RbWo/yEK
WkRU0DRjFwhSw8I0haQssExspaMj1KrLBEEt6iMtvjzvec85zzm/l9+qtpOZ
E7Mi4jmSZREjiYgPaCyPmLsk4tOyiDFUVkTcWBpx2LkVLSipP0R7FkeslE/i
HrIYx308QA7tyKNrRcRPfUf0HcNRPOL7WO4hvVkZMd/cAZ4T9iigTv1VeicZ
sUBuUG6hvkW44P48pu07IrdF/1ZsQjO/zbRMfrbeBJ1DU/y6lkc8xRN0ogNr
9Kflhpzf4S12i9/QRvqa7qEV5l7nc5z/+uqIHWbswk6M8fhil0tmXUa12ip8
tPNXcVbfN/pL7w/6HaNyJdquv9t9p7d4RoviabSKe3n0YZu6Bh7baYr+ts9L
b9qPF+hDL9bao1/NANpwEUPmbKyK2IBxvgWkeUzQDvPu0hqzavFZfcZ3FGfe
FiX5KTqJJvc55NEjHjbrgPN7muKxDvXYr6dh5hvsXURe/Md75WizHVvQhAwO
okb/aW98BqdwDmeRVT8s/9e3FvhMYRLX7L5XLsGz1pw6rMYgn332eUW77Xfb
+RbSmOfuSuL/v/4PlTd4PA==
         "]], LineBox[CompressedData["
1:eJwl0stvzFEYxvF3LBq0dWlHb9OZxp4o7cpUZ4NEXBbsdEaHKgtpOyz8B1jw
DxDWEn8BeonQMq4JSwSlEhFJF1KalsTnxOKb55zznPd53znz23pq4uh4JiKm
cGxLxGpbxArK7RGtrRHLXRG/sb0j4mE2omJ9AkNYcr9Mv7VE9PP7cA938RfT
mMF9TGEyeYWIX+qG1Z1EFW/k1nmv6WRnRKe+izLXmmEdKu7fNNPtnogcb4nX
p64fl51fwqJ733ll9RUcx5i8IZrnb1RboJtoVV7BHD3IIY9u9Kqv8fZYlzCI
MfsBOkGLdDzt9b0l56L8A90Rp/U4g1H8kPHTLFf1uoaSu4PIOG93fkddB22Q
00U7sYaXo3X1H2S+8hYfaaQ61Owf0VkUZe6QMUB76aqcJ+aqYxaPMYedMl+4
8xIjuIJl71bKmQcrev3B/pRB3+r3gO7Wq4isec6hCc3I6NNI1+NsmhVPE3IX
9Bq1/koPyziCgxiReYi26LcZz+0b8hHP6HkzXkjviVp6X2xTP8//jE9YwBfU
3Z/nN+rVJGcDmnHd7MO8Xf6Dvem3YB/ey6ma5x2dUzNjPZ2+I2Sd3Wj7/63/
A5+GbAo=
         "]]},
       RowBox[{"-", "0.4`"}]],
      Annotation[#, -0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl08lvDGAUAPDHURB7R2vJWIIqf4CEm20ujdYSbcWSWMK0PZFMqaSDKIOL
pIlWazsQIUST9lJrNJhWOm05tC4kiKuIAw78Jg6/vL73vu+9rzNtcl9jVcOE
iOinMDPiUSJiSPy1IOI3LWURWbaqdZdEbBNPy08xQJ4rap/12sW38kFaZ0fc
nROxXa1mVkTFvIjVrGKqfIs9VVTzo9SsGRHlZhTEn/J1cyNqnVsr1okN7jVy
hHrS7DL7nh05u97Z+Z4utW/mdIoj8lHOk2O32km9JvOPk6GZE4zpfXdmXOz1
poy91QsjHsqv23WDa9ziJk/U/5r1WNzh3BrvWObesPdXqL+QHzOjxduPilmx
070u2rlKBw/c73Cv1xt6mOjeNPl0evzcp/9UPc24OR8Yo2x+RClNdlU6k/H2
ZnemODeZw1Tqten1673kjM/pjpkptUV2LybJUpaQ8sYScbPY5neqt2evfE+x
b1a5fCUrWM56+/6YVVf8LthJLTVsUr9tV9bOZ3Y/57Jaqvgd+7tq8PZGDqof
YmPxvN4G8YB8P/X6aZL2JMjr3Rc/8ZE39uR5zSADXPD2s96WE1/J+7xhUvEz
9L2cU7+o3ipeEkf0RxlimAJfzP1Kd+L//8M/kpV9Pg==
         "]], LineBox[CompressedData["
1:eJwl00lIlAEYxvE3yG5dtNI2o0tFRAsStJ/aj9GhU6BBVNBMqVEkWJCV6DSj
0iEiCCotRw2sQ3qygpDq0Cmt3MbxkkUeouVQVL+hw59n3vV5v/lmllclDyRm
RcQLTJVEvCyLyNOiZRFzkF0c0YV6ubelERdoj7gbk8ihXW5GrYNOifO4Pj+i
d0HERbmaeRE7l0Tsxi6sFR/jcxwnsEr/z+KIDXb8oqvFRxZG1OqromfoVXON
aMAVXC7Edj/mcYPXJzOfkZX7ak8n/SieRh/6kZJrUkstiriGZmSQxpfCnJ4Z
+sZN9XwPev5H4iyvLnSiB914Jh/6ntJD+ra7Y4f4t/sreLwW19lxye3naQO9
b+4B7qED7eg1f8tcvxv6MNdcsbgET3weUH8un8R3e37gG1YujViBRl51eu64
PW1mvb51OImjanfVxtRG0eZ7emhntdxm3luwCduwFVVurKCV9KZnSvA5Jz5b
eGd27RPvx17swWF+5Xpr1GtxCtU4Xfhc+J3wSvMc4j2M23KV9uTKI8bdPoEW
+VYk1QbVEjRTeBaMqY9iI581yKkN0L/4g3d83mMYI/iAFvc0uS1Dh8SDbig1
N+29pORb5ZtpG51Uz2McOUxgtloRXpX9/z/8AzERhhA=
         "]]},
       RowBox[{"-", "0.6`"}]],
      Annotation[#, -0.6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl0jtP01EYB+AXHRgcJIAi5VJIlNF2cJTFRVwgIRonWzVRBJMyFJHVS1tB
LsLi9TMoLCYFlEkXhQkSvH0CFRISQo1geIjDk19zzvu+5/xP2n59sDdXFRET
9NRHDDdF3GWEteaIVbrrIpblCnesD5GnW/16a8QXfiYiPtRGFFoiijzkESVO
HosYlxOM8pgxPqr/pe+b/q90mddv7gC3yTovwwXnJ2UbFeuH1O3Iw/K7vh/8
NmeDTV43RLwhdzxiTs6ypfazvT5rn+QtuSzPyzNJZ8vTZqYOvs/vPEdORJyT
f/RXeOse1dZ2nbfHX2rtd9o7y3Sjt2OEB+ruc49Lzn7ve5d4R9p71Jj1VG+G
eb1lttW9tP+KZ7zgOfOk9JTlIgvUqN1z16Py38GbeZt+LpubkmlK1osUuKju
pvv2cYNR86bMecIkM0xzyvpV+9e4QpYMTd6ow10TsoXm5P//yz60wFkF
         "]], LineBox[CompressedData["
1:eJwl0jtPVFEUBtBNQhxIiCgKiMwTBEptgEQSLCiktgFtBDopmFBAYUCZsVET
Ehi0U9A/AHb+CoESEqig8AEJDxUEJSxisfLde87e5+47c3ND+QcjZRExzfD1
iIXGiA98ZDsZscXTaxEbcpN56+95xxP1X9MR30i636uJ2E9FHLDHTw55WBtx
LP/wiyN+s68+pe+H/u8MOK/kfo43jHveGKOe3yE7KaNJXchmuaNvl7T6DFm+
1Ecsk6+LWJUrhBlWbprZ2rIcvtiTfbI9E9Ev7+rtoui6QNWNiB55qv+Ez+ao
sFahvpIEjfbv2eum1BAxwSQldbPMkDdnixlbucWQWVLOmtf7mHW9a5Rbv2q/
hstcoZocg/ayspkm7jjzkt/gtkzIFxQpOPe+7OWTd1likRF1r/S95iVvnXfq
P/jLCWf845H1gv0iz5jiORnv2mbWtMyRzfz/Xs4BM99Umw==
         "]]},
       RowBox[{"-", "0.8`"}]],
      Annotation[#, -0.8, "Tooltip"]& ], {}, {}, {}}}],
  AspectRatio->1,
  Frame->True,
  PlotRange->
   NCache[{{0, 2 Pi}, {0, 2 Pi}}, {{0, 6.283185307179586}, {
     0, 6.283185307179586}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.392653446187184*^9, 3.492126664830125*^9},
 Magnification->1.5,ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWeUVlW29/scSWqf7jaRQTC22t20bdva3batqG1WzBEDIIgZxUTOochF
LGKRU5GKnMEiFlCEQpIiYsDu4zsuH3g/8ME7xrrzN/eaq1Y9FA9U4TvGvece
xxBxP2uvvff/v9ZcM625Hmn2YeuW7zT78I0WzRre90GzNq3faNG24b3vfSCX
Kv1HKnVePfn36oYp/u5SKfuj5J/L+SO+UvEL1fU/lZz76aQ7fvy4O/mTS/1f
0bUTJ064kyddaoK/dlL+n3YnTv6UauKv/XTyuPvxR7lX/u+KpNvL9D9V3LGt
Oby8a9KqlWsk/+2efyD1kP5WVbo/5nLbJdeTNt3dmqMnHwhPP+za+W+vrH9W
crnFJ+z9U/f5bn4syHIeI9eoUSPpJtsdOOEetW5OFrkm8lN20YnUg/6Ww9Na
hVtSjVKucascd/ikCy8mX1KQ3VR+buRatWos/23i8g+faJh82qX6n2ryenna
Qfc1x/SFTvr/zz1wMvWwf3hRNne3c9LCf/b5zh3f6hrz4Da5btmyfJeXl+em
ZcsLNZ0Ggvf77o8fyHfds3Jd8bGT2v2PW7Olq6auWMh4JEBUrN+WU3zSf1s1
d3RNjmvTLscV+fsO57fTVzgqxFqbopwm+lEFxxMsD+e1Svo+4VINkq+8RP9z
gfzxk1vWDqi6u2Nh8Jx0uU1S9sb+yyq54hz52kY5TjgKCLgf18gr6qNS5/lr
x4oPuJOeRbtX+2wsVOQUpx7wz/7pxyKXm5Pjcuzf7DbJQGmX5XKmFeizw3Pc
cZclv7XKP5oKI+hksWsq1xpnF4Vn8z46EAt+PPVTj7sceYVUY/0E/4+/1ijL
/XiaTzU2Th6eJr011k9tEl7rqA5iXsE+62Rxtn5G41ZtZHi1cq2aNkkGb+Mm
rlX3/NLwyf/lyAhtlLU1fNaJ4lxtnyWfED7r2DL9rCbynFKfVVl6SCZAqom+
rt1RkJUM7K0nyv4qmz/Hddy10rFRMkF+csd/POaOHd7qujdJ5lHT3AMP+OEF
l3lNU67dMj9iomFq3R4rSEBoEviWDytKrsl94cOKcprqteytx0/h66cDrk0q
na+f3JruZ/NllbUtr5lqosPYhAOXi/MimdJmGtSHn+WpDKq8o7Qs0qmcXXTc
phZ3nzxx3B09sNXldm/qe5FB8aPz34kEKEgkgPzbJifP5WV7cdSoO9P0lGF5
IpltpT5ThkWTzMPyQRsaP51wx37U+RZQLfYCoOhE6RmUozOwyF+r4k4eyElm
/onko+VDgxBFsNpXJP82cXnFERBHTXy7dtNExOXmurxlW+UhLtUw/sLzFbNl
bVI6zA78ZF94zHXn9nZr7AUP5DY59ePcYddKbjscfVwidBP+bUgeXTPNrTkW
+hYGuistJQBUFlCEriZ+uBmjlUveTsbBgWPHbbYfL0pWtsbd16SuSr7HVoaT
h/NtHCcP25qM67yjJqarsFy47DZtXNMSgeNZrJaw06idKygudsty23l027jD
P5V8kDuWryK74KisxT8Wu2wGsl8eHg5vfiIRXsy9ouM2e386mqdNc4SRnOxs
l5Wdy4L5kMEwLZGyTXO2ype7tAX9R1vQvdDKWnM0PO+nE0ddPmO5UTY0l0iL
H11euyalBoospw/5Ho+uyYp+EgmeWxSkhMmuLJn98UqR16qRagTneb2gcXax
MRsQPn5gmWvTKHlc95xl7sefwuIWlJ6TJ0Rx+dEdP+kiZeZk6MpG3k8nShSc
krVXptWxY+7H4ydTj4V7T6BA6f89GrU7elQX2nDviR+PuqKtxe54ySuFkXkO
utx/+tfmJ/njYv74j+gneXKkR+rES7/2y//G1371/6J3+Z/v9dfO+59B+v89
0v7/9r0VGaSPnOW1R3/mdroW/Md/txd24Z9fnmPzYDFFDo9q5etCdRpXlm+j
ajk7yuxFqHK63uyH//2//7f7X//rf6X9UOoJ55/Jeq98pods2rTJTZo0KfND
zmA3V07uM+j+b5e/6r+k675DFosFPNRNnvLv1E/8WSW0s64rxbZrqizjtawP
OD/jUy4o4wPOYEj+PA85gxn3czykWiZLqswRVf4nZLJvfo4nJNOrDEujrOlV
zs7D9I9U/7Kmfzm7Pa2Q/Z8u/ht20VK7qOXylnzjps3/wk2ctdeNmbLdjRi/
0Q0etcb1y17i+g5e5HoNXOB6DpjnumfluW59Z7kuvWe4Tj2nuQ7dJ7t2XXPd
p50nuI87jnVt2+e4D9qNdG0+Hu7e/TDbvd12sHuzzYDK8kf/VB331vsD3Ttt
h7j3Phrq3v9kuDb9sMNo93GncdpF+24TXcceU7TrLr1num5Zs12PfnNcrwHz
Xe9B+fqlA4Yvd0Ny1uorjpm8zU2YscdNmbPfzcj/ys1Z8q1bsPLfzcoAprn+
WctNnPSDGzvuiBsxcr8bkr3L9R+w1fXus951677Cdeq82HXomO/ad5jvPm03
x338yWz30cczXdsPp7n3P5js2rw/yb373gT3zjvj3Ftvj3ZvvjnKtW49Qp/R
suUQ16LFwCquWbP+qdr8VS/xE01oyi3cShd0RZd0zSN4FI/k0bxC5y5L9JV6
917nsvptcoMGb3dDhxW7kaMOuLFjv3K5E79PtTg915USMS3/PK9Y/Kebs/Q7
N2XuATd++i6XM3GrGzpmvUIJrDAKkx91GOPe+3gYjJ0HY5Vd2y79U5e4j3sM
ce16D3cd+o5wnfrluC4Dxrhug8e7Htm5rtewSa7PiKkua9R013/0LDdwXJ4b
PH6uy564wA2dvNCNmLrYjZqxzOXMXFHZjZm9SrqTv7qR05e64VMWa5MhufPd
oPFz3ICxs12/nJmu78hprvfwKa7n0Imux5AJruugcfrIjv1G6Su06zXMfdRt
kL5dMrIu1NdmAHbsOdX16D9XB2726LX6qYwQBve85T88W8bIeFb//IXCOmz4
XoU6q99G16PnaqWhXfu57sMPp7v33stVGoVWEezQfKlr1nyAa9kq273eerhr
/cZI/f3tt8e4d94dr+3fF5o/aDtV7//441nu00/ztL8OHRe4Tp0Waf9duy2D
anmr7j1WSp/QzjV+69hpobblHu6lD/qiT/rmGTyLZ+polHfgXRh68m6yIPCe
F7rmMhwZhgw97meYde223PXp+5kbOLBQv1u+/3mgqBYG0Jmkx+OK5gVMOTdj
wWEBercbPm6D6z9smU7dT7tM0KkORclY+qX7sOtA177PcCUVkhkvwyYvcqNn
rXS5Cz5z05YWujlr97iFmw665du/dmuL/5W6zq3//L/k3tW7j+m1RZsOubnr
97pZq4rc1CVb3IT56xla2g+DiDHJOP24+2B5bXmujmYBA5mDjEGm8JK8LBNC
ZEfqsTKGRhP983w3Ifc7nXkDB21zPXutVVqAkRkdJv1/utdaDnZvCAugzMSG
NVhkJPXN2pDc3qnY9e1+yA3s8831bmj/f8tnDerzrevX47CKpOyhu5UQmvMk
BgJk8TSIhkQhU+DkkecrsRD/Qdsp2q57j1Wuf/8tSuj4Cd88Xr7l4CHFoJqb
v+JfOmOQr4NGrlK8Puk8HvmdACqkywzUWZmVM0OBnzBvnZuxYrub/9nnbsnW
w27Vru9SdylxF7jVu77Xa5A2delWN3bOGhUQzPTO/UfTl+gz9FsNpnTpaN9t
kgqn7DHrlKOZC4+kHiyDowf0z6rC0bduuHw1UxfQQUymQwLUBTpL4QVB26Xr
UgV4SPZO16frfte/11duSNYxeV0IucAN7H1U6eZ32kECs++9NhN1djGzKmm/
VXXG8agu8kgezSvIqzxUPuDv0w+rogtYzqRC12fwwgC4AdO26wAd1YjInBnL
3ZTFmxVQmRGppxToqm7ZtiN6bdLCjSpemWEiuZMuqiq2rL+ssQh/Jqxw/c8y
YP2n/lnZjco5qIsQuMngSz67mmvx2iAdj6xZPXuu0TELlDKWU08qjNWA1OWM
/sINHlKkY5m23CP3evgqK3x0zSNG5Ry6r3yw3e0XNwQQOgAqC+MGqOSL3Sc9
s3VhYsVh3OVvPODW7PnhVUXrF27lzm9LocV6hnwymLr2maVqBkPvrjIwauwx
YujxkYgFmf/n6bdV0Xmp+Mi3Dxq8gzmeaqbYVHGjxxzWa4aLtE2d5zFBhNAV
XYrkubt8mNyhL3qhm73oa1Xl+g1dqos7qhiYgA0fisBcsGH/Wx4LZOvsVTt1
KrPQ0hQcEJngALQspPOWH0vdXgYWt+ufF+q8Yc4gjFiVWCHls1Q2oujw24Be
R95SHC5UVYxL/EQTmnLL2++M1S74Tbq8o3wY3KYvWJmXVQ0A9VX0zGQaVFHR
hXKBbjJ9WaFbseNo6gPF4UK3aPMXblL+Bjd4wjwVb8AFDqiuaLrAKdPmb2VA
8Fc/HEaP+VJ5/fCjGYgdGw6tXh+mlxDRPTrulunxQ+p9Pxzk7yr6+Y020mUY
DkgurtGldH1b+aD4q1+jp849mEgVmRJwixKFvobYXlCwT9fZ9l5ci+h2s1fv
0mnTe9hkxQsM0O5RvcVaSN1aBgC36J8XuEmT/6VrHVqK8c9SiSbD4pTV48tU
By9rAYtr/EYbGwDcSx/SV+ov5fvkW6JVDPZVIsgnizqguqasUKke+qnVkAY6
BBCUtHn7g0GqP06avTf15zI+8Wb9s5qOW1HXdD3mlZFjLPMytKXvRP7Rhmv8
pm2kLffI9QSqs/+km/0nYaehuMAer8viCYMiyVJ9/ScxgpFmMA1rGFcjJmwC
jtRNZXzSTX4BZeViGqJSwACrWtf2O7L0a6qqtOISP9GEpnLLzeX7kOQFqrrZ
i4+qjg4niFzUtrw1uwf6b0AaTV60SdV/FVrtRqmyxjfcWMY33Oi/AbVHR53A
zXxj5RaxO9B/A1KXS9xGE5rKLTeV7xtutG8QCZuVvTh8AyJDtJyhfi1mBqGJ
8v4YusPGFfD+jcp4/Ub+9bHw0OR4NxQNpvzgvt9n+9cXo08vqQ6irz+FW24s
3+s38q8v5pDa9kg4Xh+FTF5/pL5+FVXCmfy8/vufjkAtSf2+jHf/nX93BD8K
kr07K7poACP8u0+cdEwvxe8uykGj8r37772ehJ+Csc+7895Ltx1JjfEvPndd
sUp3xj4rl9CU+m0ZL36Df3E8AkxLTHZ+wxsgLz46fnG5xE9oPWg7IpR+V74X
/61/cVYkXsKUOXnZ1AR98co6kRlLmEwjczffUMY7X69/VhFTYZ8ukSCJ+iAa
a2q8X0vGjT+qKhW/YR+KBiffX663vcG/LQs+b8nbsljKtEw94oc3khO9fkXR
N/ovU1YWkUc8C6j7DB9Y6NxrupslOtR1ZXzRb/wXsWbAglmq3ToUyaMSQZrd
719MAzWU0M35L/8v132bKm6AKKDMeFhkFWXduP5sHCTXe10BbwHfyaI/b/3e
f+h3XKyfiESVS6ofYZ+iH4yfu1bXR2BhUUGAYc6gWnUdOFYdFbrWdh0gYKF3
XKyzDMmNfoX9i3TAfMIGHjop342YtkTVMuxZpB8LkwhFXZ+XFn4F5Kl/+MEy
Mb9A/TI4PmSx+k0Z0F7roRU7UH1NDAhMUnT0fyhsF7kBvb92fbodcD067RFh
v911/Hiza9d2vfu4zWrX9p2lrs2bC93br89xb7w207VqNtm1eHm8e/XFHNf0
uWHu+acHVXPPPsmXyV/dS88N159oQlNu4Va6oCu6pGsewaN4JI+WJVOZvD0a
v1hbJiVEu5aRUy7HxG/8+MUuQOlBhuFhAsC/+CUGUwkZh/KPgwoCuw+eAGmJ
yVXFdejZN1XbderVz3XrN9j1GjTM9RuW4wblTHDDxk92oybNcGOnz3ET8/Ld
1AVL3cxFK9ysJatc3tI1bvbS1W7m4pVuxsIVbsr8JS531gI3ZupsN3LidJc9
dqIbOHKc65s9yvUcONR16Tswpc+q5A09XG0IMNxoDAcsF6xqmWX+7Svr9GKk
otWPnlx4bRn0XxOpo2++laPCq9MnW/+iMJ+v1hmOCFni3adt1ylNrVtMUwqf
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
9U2NX7woqYdfuDt0jQfQNhAHHWfTwZC7lflY8GPJseBtVgXaqKyke/mafeZp
q6zZuygfaHhv3LPQmCMciSvoz5e95B6s191OBpe/qh7IT9LEWrOXBo8HE046
tCHxid9aSRK3vUOcx5X5cHD300l3/Mcf3fETP535cHD0L7N2TSix/9qcqDbJ
WH6YHXhG63u2qOZKXWMYIZxM3cu/e7aob4PFi7j8bOMGY2vvgX06V1nFjC12
7+jJWNEaagdSYPWWxdZFlurSekQ4FeaiNGOKow1tOtiBQCIL/SHuVfS0dgQg
8TX2IVOF9DZ/8jTCkWuahyFtUPftOPc3n5sX1jPr33bfsJoaY5TDNyu4nEcd
Gzsco2p5FwGahSsULlJVDEI7kQC79XLPzp6izzSoAztsA6H0zV+8HGQxQ7+w
lYut5Jfbrp1ZM/XYZM5RtP7tRBzOB7H3mDBvXZKHsfS7jBRhWdohEQYNuaKW
umIQUoOCrR+v3z0/UKTzgzqMN7zjbrnsFfdAve6pv3qK5O/JVhH5jTbkb9QP
NtZ8lbPyjFR13z/vwHPj93j3vQmu7YfTzoUiOwQZP7RBY5uXqMeSQJgcXMZG
J3Isvjhy+PJI4lERDZZgq3hnQeoWP4fYN4tvlmSlVWtXN7CKXljOIjhlcZKP
KymZYInK9hZ6nNBHQ/U9MxHE2TFmWhkwJBDbOWRGUHLEdyc1rRp4gjB9bQ79
o9a7mrX65zCHhug1m0PS1t9XSYty0hdGlvVPMQW2qcizRW/2KQOtsvUI0nMg
yM77nLwI/40P3Y8cG6ou2hgPfp4li1MNPTtsIRk9cpCyg94gRlXqJj+HiFsT
OGUOzZo+TqtfNPQUYTwjLQv3Hwn9EzNi3hIxtPdAvfm084QzUkT8GmgG9/0+
UIS6rD6jZ+aEMY7Hh/nAjrYE6qo6hyi0jNLA1pJ/1mmHa+KPylJV9VJwiUAe
TWgqtzQIYYyZGs97pcm48JRPP1gX4oj2NnYaWs9euBrLRdSl/sPZ5Grbv20M
ywzSmYSNamMd1w8CihJrCeBV9UzY5UvydMmBLMIa+/duaeS5wgIm1QOumGXs
1b3Cc2XKPlFWe8TspckpLYu3fBm4wndv9RgycWX1GNgRbsMYz5IZrJd5BYIy
ReTRMzXeuCe/oadL65v+savOGui6p86nrEy/93TJX/USdOnZLdJUbmkYFIp8
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
/Ho/z+/9Lf/ytwz/mS5MdGZ35f//Hd73OX6f533e5820kstT54deyTp0ZlqB
k4xMZVGlBhy0yuKen2llu1TVUqeyyMqDuaDOyuC8Nhw1mDa4rt0wdFhrtJqc
aaVUSGoF2kxGtyvm2BH5SmtUF35tRdBBaYb0j9AtodD5OYF65UgC9fa4LHra
fuNBHbYgs65MMdWSKGZ19rAaih2aKWYXH4uhrDRNtStTzI6JlQ+tD6VDDclQ
BxE6bfjcTDE+imJWEsge2V5j40JXphiLf3PvunjFvWtendwaxQ7PFNMpSFiK
NLcueas7Uwx6ia5KiZCVEgqZJM4Smc7JFNM/SMBl4RW1XArP/uCy5xC9O5sp
baDoIzFO8W8d0Q7LZsrZf1Fsf/+GRnfMdHwY7g1PPx+2iHVGESkH2/k1eUjf
N3pyvtK1PmOrUNa1cbBLcnRQsZ1e3U24t9ode/i+ZBunZKLJTjjh1VQTyDky
pjkhEo5iHV1eK/8Va3hJ/YSjyc+x7Wc21auJWNH1nFOuP8D1jbKK2QKLqpjp
mYCU3QHnZDvJ+OQaAk7OBFy5/qmRw7umx0TLiFKwbkM//BdESX/VO1o2EiIm
7HhGDkDBSBK4ZuOTcUnzLVwEXiQTML15pTq9UanFlNZSf0dkgjoCRfqWzb/t
hr/OyAR1aBNRUhNQeUC2zgoHl0AaU+x/UgaUoJSjCAQXskDJnzZKqrbFWhJz
qS9DkswZmbBieJUWDm1etXrH4aMSts1koxg0E3dGzH5i1AkQOMJouYEfRSzG
Tqc1joQj1WXypJyq1RXSZ75zTWUY3esZTuViPQjrjEzliq8U44jWdL0zU1mP
PBhdycXN1w3NChpMCrGl7yykMzMrSleZbdSGQSRcNSfmYT6dHbG052UXPBVG
gBwT9cShEaonLVB8bTdUssdHjyQEBkJ/VEwnAzSlhuqhj4mnXHRFdRCMz5iV
wS2x1hvMLk6J0kS+xO9EyDQwlpOs6iRM7y1vJLmek6ENEfeRr1zi0nRLeffY
sDLqMTzZGzSgqt7K7laWw4gUwLXIkKmZIZIljujml5MkzsmYULhAToUC/E82
wgfkJKQSYWtKRJx3l/jUtsBpA505KSor5pxrvME3nb91A1eHzft5UsmksbGi
jkmQAWguGp2TOXXl5c+HYmqLvPret46o4dSUzCn6UQkpl6d6f3YGmrz7r7a8
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
Nd89ktgsmkV5Tfr1saavGh/5Nz1MxiM=\
\>"]]
}, Open  ]],

Cell[TextData[{
 "Note that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " automatically colors the areas between adjacent contours with a color that \
is approximately proportional to the value of the function in that area.  An \
alternative method is simply to create a 2D color image, where the color at a \
particular point is proportional to the value of the function.  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s ",
 Cell[BoxData[
  ButtonBox["DensityPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/DensityPlot"]]],
 " provides this functionality."
}], "Text",
 CellChangeTimes->{{3.392653455961336*^9, 3.3926535788793087`*^9}, {
   3.392842392224902*^9, 3.392842416829122*^9}, 3.492126617330125*^9},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3926535810324264`*^9, 3.3926535994390774`*^9}, 
   3.492126666861375*^9},
 Magnification->1.5],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJyFmk+IlVUYxu84XqfsOngbP693FeOqoAiMgii6X2AEQRGhLmqTQYYUFEWI
ELkxMKNFRAsJohYRtImoRWLUxkXFrIqQ6LoImf5xrJliFtZNK67P+/H8zndG
Fx6e8+/9nvP+PefO4mNPP/T4hk6nc/K///5v+a9+59Qd150cjxynwCufLD11
5vgaxieBv9i996WP/pypfX438I6bdu/5e/Hq2tf3An98/MRri9dvDTzdrx94
fHHr4Xs+X8D+VeCNzx179OC+AeQNA5Nne5sCi6+PTwKLr8/vBhZfX98LLL6+
Xz+w+Pr+VWDxdXnDuqTHdp5N63wT+CbwTeCbwDeBbwLfBL4JfBP4JvBN4Jvb
abseG55sxVdYfH1eN7D4+vpeYPH1/fqBxdf3rwKLr8sb1iU/bLfTlPHy8aZ1
/U6g3wn0O4F+J9DvBPqdQL8T6HcC/U6g3zzOtPthyvRGXsJsxVdYfH19L7D4
+j79wOLr+1eBxdflDetSHG2PMymzS+qNvHx+07o9d2u3527t9tyt3Z67tdtz
t3Z77tZuz93a7TnPE+1xNGV+R7uk3shLmK34Couv79cPLL6+fxVYfF3OsC7l
wfY8kbK4Qr+jXVJv5OXrm9b9t1e7//Zq999e7f7bq91/e7X7b57n2/NgyuIm
4wr9jnZJvZGXMFvxFRZf378KLL4ub1iX6pj2PJ+yvMC4ybhCv6NdUm/k5fs1
rcerPuJVH/Gqj3iV12ntdUzK8h7zAuMm4wr9jnZJvZGXMFvxFRZflzesS3Vo
e52WsrzOvMe8wLjJuEK/o11Sb+Tl+zetx+cK8Tmvs9vr0JTVLczrzHvMC4yb
jCv0O9ol9UZewmzFt3SPaK+zU1aXsW5hXmfeY15g3GRcod/RLqk38nJ5Q8hb
Gqmdrl8OPN1/NuZN95sLfONPl+599fzmwHseOXTzh0fnA//1xvsH3n5me+D5
Bw88vOvOHUW5bCVfWPKFJV9Y8oUlX1jySzwpl63kC0u+sOQLS76w5JfOlTwp
l63kC0u+sOQLS35JjzxX8qRctpIvLPnCkl+yG+qR50qelMtW8oUlv2SntBvq
kedKnpTLVvJLfkE7pd1QjzxX8qRctpLf/k6yhJbvC0uX67JO7OP16BLuJYwn
rPMZX1gXM96MRz9+/9uz8+9ug7wK+w0K8Wgc59we9xmv9L0XIj6Jv7Dn82Z8
2r+Ke1sTZzQu/sJfL95y5IXvro354utxssrGfb9BZtcaFz9htuJb6vd6ten3
dTOxv85D4+Iv/NkTh175dUs/4y+scV+/kM13PVUxrvPRuM6Del1fz2vZubgf
TLJz0Dhb+avmCbvd9LPz0bjn/wvBX+PiSz9d32/TFex6LbNr9+tJjMtfiXmP
43nw3qNx8fe8vAB+46xu4fsJ873XZY1del5u7tXMi7yHMm9pXPphXOd7D/Oz
3/NWR/wuYa+f57J+r6ebPK5xna+vH2R5h+81zOd+7871znNjvcH3C9YffMdg
HaJ+2b/Lq7DfIMvjWu/xv1f0U9otx3Wu4sv6hucuLHvRfPFxu6qycd9vkNUl
Ghc/xl3G2VJclr9zvsftmZpxi34grHnkX+qX/7Pf82YV4zofjes8mGfXz7tr
WV7yOmSS5SHGYeqxpGfFP56DxsWfvDXOVv65ft2UrlBnrGV1hvvNZES/K/mh
4mXJrsWfdu31+QL4jbN7J98rWO/7PbmpCxgHFQdY//N9gvcBjdPuvK5v3ldY
n/N3TdZtzCOM04xj9Ht+h68fZvcGvnewTmKe9XeiOYwvZH5GPQk7j4Tf7Zr6
lHUa6xZ/h5ytfZ88DtLv6QfCbldreE9p6mTWiaybhP2e2sRZxhn6HeUxDrOe
83tIvy7pzd/f5rLv9Pq2qYO4ju+0jHv0I2Hpn78XMD+xbmYdSZ58F2e+YRxm
XBL2+1U/7Jr3FNbtrGN5LsxzjPuMg5THPMh4zu8u+R31MG2vurzPt6PX79p7
ZvsHOwKr1Ty2t50+e/e+b64p9nNfttPv+3SkVvNL/Ts373zg9Nzm2Pfl/YfO
3v/lIPbhvvqe6Xlsilb92k/9whrX/jynK60TZqtzKfVLnvrFo8ST36l1wpon
zH5/D2r2ZT/fnXnO7e8vTT/1zvd0vtPydwW+4/EdXnGJ56Jx5XmNu312s3de
/s7Ad0DeqyiH36VzkL3QPoW1XvNpB/pu94tl/B3JOPo9/4zxu/Ry6MfzQfNd
Oi99t+b7Pa35Ls13P13GO+B4xHde3gf9vrMp21fY81MH8XcW7xQd5I8Z5KcO
4u8s6twO8sXMZbwx2iNHT5w7em57YO3D+4PH65lsXHI1j/cA94MqG/f+5rvY
Us/U4/T7fhipve/FE7f+/NaW6Jf+adfSE9ex9fy2jPoqFfv93W4lWs+Py6i3
0sjv+av4u4TV0e2Hj81velPvWSshp7SuJMfvyyuxr/q1n8/bWuwX1j6+n94r
Lo6E1T751dnf/xhUMS7MefvPX1q7Yde2bJ1ajbOf74bTemZDyPO/B5iN/TWP
987n3zv1y6l/mu/138FnQ67W8x1R/fpe+rnkSw7voerXevqh5Gvev5Xr95k=

   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1: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
7CUGUxM4JPpeoB62EtOxfYpzIRZfZEus30t94uXJVeoTH68qM54SQ3fXHmLu
rs6Lb29KmTYQo6f59wlF2kHf0dpNjGYeFH/hiV99g7/a52IPcXSMzyVWEseJ
hcRlYjbPIv6CGS6t0lb+tnqVcmL0GlXGa2Ia62NtbTu4Sv+AT4ibPOsSbSZm
jy+yDzzxsUGVNhDL+E0cJ+5ibyN98miZ+zh7+IvyT/jt/e73ObXKOdN/7Sr7
UnegLkFsw+bHy9z/iVXEEvYfYtArZe7V7OMXRN8B7rns6cjR/UuZez2y18vc
z9m3/6acvf0Z5cSSC2OMw6vcV4kljPeIz0JGXNgu/v5WmXv138uMHeTdxJ8m
9vtrmXs782XPZu9+o8i9fhP3q35VytlL967SJvb5i4I/okp+nyr3bnJs5see
y37Lvgv/XpFxhfhC3MEe9nJi2Q7u+bzaNuzH/o19mj2xsT5pph+ICeTSxIUP
5elLDCB/Jndmf91CnfWVMw5jklevKk+ezF7aucp3j6+oFdC3of22tu+kKn3B
eyV20Jf4Q55Krkuey77f2jHZ98m3ybWJKdQKVi9yb0aHPZkaQht54g25H3Hw
I3ni0SfuO+w57OVt1AEncJbBWQJxZkd1eCZYkb19E3/DE7PQIS71qPIshBhG
37bqfCnPOF/53M30IfUCagXEF3JmYtNHZebv5PK0HeQb+5t+xLEO+vCrMvPx
dvaFJ/ffSv/gh5Y+a3P7dvJZn8vjW3JebCAH+rrMvH5n50uNgFx9U98Nsk/L
5Fs7ZivH+di+2NzKvtu6LljLT+qTPfXPzWHnGVXmtPins776osyaQFv1kRND
iaddfC55NLUJav4/KEdG/O2qPrb01J4r4znTqhy3o3L89t8yawGdeVaZdQzq
G/gLvqXtPsp/KrPO0KXIcfbRt18qb+t76aX+z/Jdg/+tzBoC9YHr2OerrHd8
W2ZLrWNelTUm8n58Rw0EX6JDrYE6w3dlyqljUL+gDrKD725f5/Wr+j0c4wD1
qX9QQ9nVcQ70uV2U49vfy6xj9NK3fdT/Ql/t6DgH+H6/V7+T/F7q311l3339
ZvZSnzH66nP82V8ezEMdhLpKD3XayvfT57wvai/Ubtio4A90vtQ3qMX0Uh//
M78jnSO+I/9v73sZ4Jj0xwbqG7+UqcM4ve3bQzn1FGoEw+SppZRVPvcwnzXQ
98s8mA/4jb9Rk+mnbwepw/dwtOPfGuOMqfJv4MPBZX09CJ460o/6B9nBPquT
f6cPeBL8OMS+3+hT/ImfjtFv8EP1Gz48Th0wKPxAn3WI+ofa9wD9NNT3BX+8
fhsgjz/xETWpbrZgUPAmOBQeXIrPTi7rfXOyfsCvw9T5QV/3VX6S/FHy++j/
4cqZ7wjnzpin6PNB8j3VoYbFXMHB9B2q38C31MJ+kj9S+Qh5fDNSPzDOacp/
lmfMunpZmbUl8DW4dnCRPhqlzznvQw5uP178eZL+Ga0cnhoZeOk35cfoE+pl
NdvPdO5gq7OUM+cx+vYH5fQdqpwaFed34OYTtX+scwHvIwdLg/ORD3OcM3wv
nbQZOTiXmhR4ElxNXY7aFXif+gx4fDex8cgiMTx1NHAvOP8857uLOuj/al/8
1kqdkc5xgnMBt1JzA1PvIQ6v1eXO1w/DxPBnFVmbmug4pX2ZY0d1GGeUfanJ
kQdQ+yMXWEme+VK7A5eDyckxqBFTPxwnDw4HR19kX2SXKB+of/hOyBcml/X5
Cjoj5Keo30Ae35LbUt8bX2SOMVX52vLId1eHOdbqgBOKrA1OU4fcg1okdcjV
1MFvdTU69Tepss5DbWou/vc3uQv1RMaAp54I5idXulIf4gdqiLVzX3hqhuQz
V6vfSP4ixyG3Ia9pKI8O86feyHiNqjx3u0EZNcep+uc6fUW+M0P5alXq1XSo
V16mr6brt9UcE9vWtS+5B7nSzLL+jBaeGhu1SWqU1EuxldopddtJyqlbrlWl
nHrmOlXW9aYrn2Vf/n6jOhsov9m5U/e8Rv/M1g8bVllvpMZGrnSTOg2UMw5/
Q36rz6VGyllkwyrPJTmvvCH46f6NOSOfov2X6/8m2kydrVaLpA6Jn26zH2PO
dXy+E2qYd+rDeb4jfHm7/m+kDjZsbN95jnm7+vfal9rh+lXWSWfLU3edU6Tv
qLXWnWWXWW9FNid0blSvqX0XqovOTcE3rvJ3jV/gmJvJ3+OYC30XvJd71G8m
Ty11jjpX+17uVf8W/cMcN6rSb9Rzl6izSDm1V+qu5Lbw1F3x9336HP8vsW9z
eWqwc9WZIb9UH+LPZfa93LVZOytfqj30R2e539iN6uBfasrUk8GMYEcw/6ZV
1lipr5Ijw1OnxU8P66t75PEPPqeWS127hTx1Zt7Dg76LBfI1n/9JObUC6s5L
9PMKx78j+PP9jZ8e01eMS98VRfajP3WGdeVrdW3+Rh17iX3xJ+M8rs568kv1
zRP6EJ8/qXyJcvxH3oL8KZ//vDbgI2rcdznOU/qZ+gPyh/w7v6lFbCCPHD89
rd/w8TPKH1COzzdU/rDPfVa/UcugFv284zyrz/H/c+ov1x6+kxXajG97Vll3
ppaBH17QJ/iQnJ36O7UKcjbmzXxervmhzNr6Un2IDrWOje37hPKX7PuUff/s
3Kl1ULfhnsAr8sipuT/rnF4r6+8woEPtZTP7PqtP6mrx8q/qN/jX1Wkmjw7v
6Q39Q52GWgl1Eu4MwFPDeV4d6ujUeajRv6JPXnBe1DTe/j//vKmcOb7jfF+V
p85PjYdaPfUf6kvU8/9eZM3nPefeVB3mSP2HM4M3tecD7afeQ63+Pef1vnN8
Sx3q/8QLYsM1rt/7/a66W/+hLzUA7geQq7aXp55AHYAaBDUBagDw1LrJ68nn
yZ3Joz9Wh74fOU5HeXTI9blnQH5HLkmuTg5OneBT5XvJk2OSh3NvoK069KW2
QB3gc/uSx8NTS6cO8Jl9u9m3peOQl5KTdpev5Yzk5Dtp51fy3ZSj00t5O/uS
W9bdaSzz/kFH5/61Ovsrb1XU5+3klL3l0ScHJK+u5drfy++vHJ2DlZMjkx+T
Y1O7IM/6URu6KK/dc0BO3tfC76Hu3EqbOxeJd8A0xGjyMvLqLs7xZ3nyJvLk
Htr5W1mfc5Hf1nLeX+W5w0lfaheHq0Nud7R9ezomORg5CHcyyW97aRu5JbkS
eQ/3CQ507r/bd7h9yVOOU2egfKE+Opzl13KXldQnZ+EeADkHeQFn9jX8Dg/+
B2ujA94Gh66qf3roH/x2vX6bqg/RAXOCG1dXPkO+hiHXkAf3cY5ew3Xw4KmZ
6kxTvpY6xF9wG/ihV5X1We4tzVKndteugWuZXJn8mZwLfMcap04O3uDOGfgN
/ADmAxuAocBh4NablU9Xv6E6YAMwGbhrrvKZ+qGRPJgFfHOLc19X/TnKwTzE
d/DZnCKxFWfhYLM75WvyxvJghg3su0A5+GGWcnhwEziJGL5YnthN7AM33KPN
4B7i9TJ5Yhzxuoly5riJcvZC9kRiNXf5kINXiWWcYT+lD5v4rAfUX+Acm8pj
fzNtWKA9xGLu9SG/1zHBEMRK4jLx+GF9gq9mK29q3yXqE0+520ItgDrAc/Yl
ZpH3kycPKTLucPZJnKFWTc2aejaxa3P131GHeEQNmFowdXRiB2fVtbgBT3wh
jhHziOGt1aduTE5Jzjm+yPybPJy8nHoAdQFqJDtrAzXt8eqQe15qX/JU8nVy
fmoYE+XJN9/yucRZ1gBrgb1tvypr6esUef7BOcgHRZ5LcLYR/4p9q5SzTbRU
jg7nDDvKbynfUH/iH+Jqb9fd+/qnrfNtI8+5AXX8dvqWGv9O8vhhZ98F9Qlq
Fqc69130z8t+V8sch76cEZxuX3TO0YfDHLO9/gHzcBeBMyxqEtQmqFUw/m76
c5Jycm1qEp0ch1rCruqco7yy767aCX7p7Lu+1DF5Xy8qf9x3RD1lVXV2l58o
X3u/e/ptkPeT/5PfT1OO/gXKsXP/KjHny773LtrAe+jluwDfgY3ARe/Jg/vA
gOBFsBLfCbgNzEYMBN+8VySO6+b3w7k459CDHKerY/5T/RZ+U/v4/cDzPbXU
rp7ayfuv+xa1k++GMTh/537b4CJrJ3v4PaPfw++WcZjz2/qtg++XeiB9+/je
O+hPzts5i+UclnvrffUntTjuw3Emj7HonOC3wXk2dS3aPvK0h/jNcFeEM03w
J+MxLvUW8CRniuAHzt44g+MskvM4vj2wKLWZvupvqg7yjezLWSRnr/0dB1wN
/2iRd1c4xwTr8n+RuBPCOR1niNx/be66G6icvw90j+IM8Ch5/l8S90bWUH+Q
axPZIPuOrdI/JzgOfTlD5KxvsH3RH2xf7hJgQ+3/JXGvgPstnA9yl4NzQM4E
uTvLfQ3ueAxV/ovfFe/9Q/syzhf25U4LdyTYx49wjbOfs08Si4nXxN+62qrv
iLsH3ANkz6/7PxpV1gzXkh/r9zDM98t7H+a3UdevyjoktcaTXO/UHrm3xzk+
5+zct5tQZK3vFPl15Ce6Rkb6vrg/MFwb3vUb4vvhOzrVNUidkDE5/+c9j3Sd
3lnl2VXt/uVpfufUwUe5HjnvO92/c+6HnLr4ncq7Br+oynoQd84WVHmGxB1Z
zhfOUJ+7KaNdF5yZcE+09n9sznQd0Zf7tWBR6v9j1LlVOWPwfzTGyPNuz/b9
ss7G+l0doPxb1yJy1iv/h+gM58K9BOxl3+bcYLLfAHnvONcXdVTu0qH7SJF3
3lgv1Dm4Z7aiyP8vcJ46S6usH9X9fwL7glvI6+vqsUXmqxNcj6xd1jBrmr7c
qwOTkPuf7/is3Qtcs3eogy397Msa768Oa507R+erw3dyod8A38OFfjPkoxf5
DbAmLnZdHCP/qd8JOm+6Vi5xTTGPcc6FdTPZ9TJUnS9cR1NcI3zzU/zOWR+X
+q3yLU/12x4hv47rAB3WE2ft3Kdf15az4BZFEvfd2ZeQ8beWReaV0+TZV1mz
nJXsoD75JmfKVzgOLb/px/kid987OOaV6nCOzv179gryR85/ySVpr5Kn5Tf3
xKi9cv8VDL+NY7IvTVbOGufOPGfJjEd7bVWve602UIvnju9Y9yLqwOQOtNfL
0/K7NvZMn3uDPHLuwVJvBc9S7+be7cQi66/w4H906cNzkPE37ghB3LVl36D/
jeqzFlmTg7TrBp81S/3ZtVaefYK8tKvPneP45KnIa/sEe83Bjk9e2ks/X6d/
5jjmFY55s33JTW+p6vcMbOvvO7/C985aZD2zFqmdztMecovbqvo1ig5rmXXG
emMtwpMzsDabydfWKDqPuHcy5t7uc+yB+2oneyV/Z+/k/j376jzl2MA+Nb+q
32PvUpcxFuiH+crRof5wt3L2Nva+H/Ub+jyffHCJNuMT9k32WfJN9mr2pYXK
+7sXIp+vr9i/arJF6p+rr+B/tH9/90vum7Jnspct1ofsg9iwyH2DvXKcsqXa
xl7IXUn2Q/avZfoTWxmfuLDYvrX3Ql/Gxv/sd4zxPwnNLd4=
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1: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
6vMHDE1niw==
    "]],
  AspectRatio->1,
  Frame->True,
  PlotRange->
   NCache[{{0, 2 Pi}, {0, 2 Pi}}, {{0, 6.283185307179586}, {
     0, 6.283185307179586}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.3926536001801505`*^9, 3.49212666722075*^9},
 Magnification->1.5]
}, Open  ]],

Cell[TextData[{
 "Visualizing the behavior of functions in three variable is tougher.  The \
easiest method for visualizing these functions is to draw the 2D surfaces ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "c"}]]],
 " corresponding to various contours of the 3D function ",
 Cell[BoxData[
  RowBox[{"g", "[", 
   RowBox[{"x", ",", "y", ",", "z"}], "]"}]]],
 ".  In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", the function ",
 Cell[BoxData[
  ButtonBox["ContourPlot3D",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ContourPlot3D"]]],
 " provides this functionality. Here is an example,"
}], "Text",
 CellChangeTimes->{{3.392653633949044*^9, 3.392653698372323*^9}, {
  3.3926537715382595`*^9, 3.3926537948520155`*^9}, {3.3926538794144535`*^9, 
  3.392653900304701*^9}, {3.392842458712105*^9, 3.392842467610105*^9}, {
  3.49212666972075*^9, 3.49212669090825*^9}},
 Magnification->1.5],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   RowBox[{"2", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"4", 
    SuperscriptBox["z", "2"]}], "-", "1"}]}]], "Input",
 CellChangeTimes->{{3.392653703740095*^9, 3.3926537352156687`*^9}, 
   3.492126684892625*^9},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot3D", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.392653722677514*^9, 3.3926537504777665`*^9}, 
   3.49212669459575*^9},
 Magnification->1.5],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx0XXVYVtnXtRO7FTHGTgxsfa2xA7sVFVvBLrC7MMbubrBbuIjoiCIoKBLC
S3cYmKh8/J6Ptc+w7oP/zONyz77nnnti7XX22W+1CbYDJ+XKkSPHcbMcOXJn
/DfHqzJf+pex0KpG5H1w5Le3VuP+7915Z0Yarpr2tV6eohmAH7camPqrd6QB
9p8eH6jX29ZXa/Pu1ea43Mp+V+/Xhc2v+AgO+0o+le5szBGq1Sj2953BQWFi
D3zChJTJli/CxD6yV3DND+nvtELJJ7e7zogQe+Abd39LvtM7wrB/tFvdTyO8
pZ147v5z3U0K/vQW//5Dkta2mBEmOPy4Nu895mRauODw45/j7ISYtAhpT9up
hy8WOhCh+Z2dtOBtrlBpz+w9I47nHKHwmVbN59X9887g/qfHqAo5I7Wqe4vX
Dy0dbDBJ6mrVL90o+IffI6sOLR0k9rlOv7HfUjdGC01M1Vbn9hf7IuvX9xwb
FyV46ovpZfukGOW98FzYA489vuDg2S9G8X9gfdlD7ufDdO2EfaEu8deKBSk/
a1PO1i/20Sj26J+F66/nS7gbrvODfvM8+N3obhch9qlnT9TfcUR9F9hb2e2u
51npsQ7Hd/lUrcdmuxnh0h7gIQW6Pu1+KUxwPPf+qtRKOx+EG8r/c3WkZdEA
w3erk4Nvf9XEP+yBY1zhucBHjxyQ+0MlNX6AT3X9s67kYYXnOF7A4cCR+obL
T9MXVvFU7QfO8wV+PnnmmNrgl5ovwG3mDfn3r/fKHn5a+OYc0bpBlNgDv7lk
6F1zkyhDjrB6A9IOeBts6i9Mv5AzVsYJ7IG3Mvk5//FnhV9YeOPT/SXKHs+F
vXv5X0ODBwUI/mj3pPuPLih79APsq3Y8Zrv88zvxH2Qy+WrdzQla+a1me0bm
fKX6s9KckAoV9Xjp1w1Dzv+I0bUf8+XNhjl+cy2MYg/c3WZWScOCEGkn8Pdt
npVbu8AoeLnhp061yZWoraz1fnn18JfiH7jVyFVLgsM8xf5zvfKLze+rdgIf
ZwzduSI+ScvhemlOHqfaGvz8XKCZ2D1XOOyftx61bNb0JK2jY9ULHr80ee71
ShduTW6jcLwX2lMgeOaZwKoegsMP/ANfbexaa0RgovjBOMR3SR3Z8WzeZn4y
/oE3z910seUuX7U+nDqv/RkRL+8L+4enTAb794wTvM9b6+TBjQKknfxc4JZ7
DnaIDnmk5l3md2f7t5WK9OpYT++n8sK/Tgy+n6jed/Lc7n+8gsU/cPjH9wL+
3jri+90lybJuYFwt7Pngn7E5EwWP7ZXH2PVNoODNe8UZrloGi/3lC/Xyp/WI
k3UG616t3M0qe+aIFT8Yh/AD+6tDpvUrfCtY7Ic3fHCl/3Zf8dNmxdColB8p
sg6jn+EHOL5jteC+N9LTU+S5iefirFM/vRUc6zb8bJwWat2+QoKsM3gu/APH
/IIftBP9ABzvhfWhw7a+dZf5R0l74N/v4cWzrXNESvu5H4CH7nM80mx3oNiX
DdseMbZ4kK6df/WKD889LULe67TBwrPOpnjlh9opz3XZuelyuLf4R/vBN9Ae
4CtbxHp/WaraL+t25n4Ee+C7+yf+U7et2o+wPlumnlr58lCE+AH+/c3RF1sv
hRtm/rPl94ALCYLzuAIO3oL3wnPBH9A/sI9MMhux55b6jsDtnW90WXUzSNqD
75Vnxz+z/xwMNRz89Pf3599jZH3AfIQ98P2fWqydEu4l7cS6zfZXppiMOB0Q
I98L9uAzwK9HHX9ab3+E+Gd7ac9Pjyl3Hyr/WOfP9zkxYP8gf0Po3MB23YYr
HOMBfoB3NW3Rbu3AN+Jnjdv1nFXqKnvgWA+xngAf0HPX1HiPOHlfE+1J5CWH
IOln8A08F/sm/MxeuG5v8JIUaQ+vV8DhH98R/BP2wOu07dIz6Vm42GM8DA49
fHzukmixB/5lyptVw+5F6ezxXOyDWDeA83e5dvrZhBf+Ybp1Et+L90fMx8B9
y2p38wrTmJ9bbrH7u4FNmMY8P91j3RXHfhEa8/ZW0wMq7/8TrnH8Eti5Rd5v
YyM1jl/K7w29+alfpMbxyzWTcb2N+ZR9o/Ar6+tv9xGc45FHC4PSr42N0JjX
Tc+1vU71dOUHePT5iA0VjJHaq0EfA40BXtIe+Oe4w7JF87+C/6j3Rf9fD9j0
Tz27EI3ji+I5G15+UTFYY37e9/1nixd5Q8U++vW64W77wwRn3uUzrEQnm4L+
GscjwJnvFb/04MO0H+805huRT0bX/tjKT3PddHt1d28Vj+C5HAeFTF10olPF
II3jF//CuyrtSjNqHD8e6uq7qFdImMbxEdrJPKe6Tb8fbff7ahyndH21/vj9
5aqf67wZW23DGPVdYO/5tmjZ+4fcdDjGw/Rhfr3m2IRrHKcM7eCzvr2Taiee
2+TO6vfrXcI1ji9Cv2ztVuCY8i/78nbj4yizSC3W8tfT3sn+gqM9HNdgfPrb
lxhwzkatS9x+4JgXHNfU/LWtZRlvNf6BOxXYUaFx4yiN45H6VyIX1yoWpXFc
uXrx4rl5Q9R3Bz/BeGCevLKBh1/bQq4a82TgiPfxffHdOa5hHPFIgW9tynbL
/0rjeAQ4xwujf5Ve9SPppcbxQrtlE9uccvTU8XBpJ/H5yOtnzl1r4KFxfMHP
3Xij8NQCmyKkf1hn4H7D/sLvi/6ps6jsV6cf/hrHd+b1ZrV0bR2gMW+vc9c+
/dLFRxrHBWgn83a8L8cFwDmOgB+OC/i7Y314+mnbsLFt1ToA3PNM5H5bO6O2
a6Ol8/dWip+jf5jXfZ+xcEfCMoVj/Yc980PsU8wDMd+ZB/byr5GnUiNlj3kx
u1DDraudlL3ww8z9jnmy6ZTARskHgzXmw2gn83lZ54lP8nthXbJ/Uq1J6pFQ
Hd9A/4NXYB/h7wj//9Zt2unx0QiN+T+ey3ENvjvz8x27n29Zk+ytcfwCe7cu
Ba/cnqbiOIxzjuP8b1W1Mg8M1Dj+Qn9y/HJ9TXn/ZyMCBMd4gH+Os0beG/n3
O/+3GsdNGJ/Mz7GvMT/3Gd42cOUDZQ/cps4r95n3g7StZqNW11qi4hq0h+Om
fhfMlpddGqhxHAqewPEs9xv8YL9mXn3wjrPPmhH+GvNk4QPuT+3rbFS8Hd+L
+T9w5uf8XuCTjMO+xYaBzrbD32gcR8A/xy8Ytxy/zH9mu75DspeOz8Oe447v
Z9rOnPxG0zjegT3zasaxbqOdzKuBMw+X/SVzv1udeO565byxBtbHgLO+59Iy
6kyjZcoe6yfsO2qWt980U/qe35B9sywclb3sa5n2rO8lv9w38ci2BAPreCbB
J3duq6zH/bWlRbflyfj+mToJ9hHg0MmFj+0at9P0d4y0B/ZlJ+UzT28Qo2vn
5u6R98Y+DDewLu3UvUe/VpfDdDjeC7oK+qFehbdDnfImGlgnBG51rl4rzxNK
J2zQ7VdSyJgkA+t7T98HTg1sr3DY50vsWf+0s+of4POPl/z7c1KSgeOmoi0/
askvFY73RXtYJ9x7fGGAZ3CigXVFtBN+oJPDD+tvwHuEd/n95ugjwVvUcbp/
rbKyx76A785+LlsHzp07Jt7AuuIr6w75+/SNU+MkU9/Dc9FO+Fm+2r3EU0eF
o9/M/+k7/VfuUAOfKwHnc6XD89tXst8aYeBznLVDtwxaMFrh6Df4gQ6D9mP8
QEcFjvEMfUb4f/e7v14nRsm4RXwE/3yOAxznOMAxfmQ8ZK4Pd+dFd7md95WB
z7+A4zwL72vysuPWd/n8DXKOhvmbieNcDPaDrUslldzrY+BzPfjnc0PgfA5i
2u33jqYLfXV+8NwenfoaHo5S7XnVvPy3ugVdDTh/wXgAjvMa4Hgun0N1vDT1
+9hL3gY+b7q6YtS3g3Uf69oD/3xeAxznNfgul+cU2vX1m1G+I/xgPOA8An6A
Q3eFH7Qf51loJ/qHz8WA41wM9hg/ONfDfEf7+VwMOM7FsF+jnayPAYf+Bnzv
msibuxro7dEe1oGBW3XI9bve/EDBn076WcbwPszAOh6eyzpe8fmOHmVexhhY
p8K8Aw6eIPtg5noFe+Dmu02j9rRTeiPWMcw72GPfZJ3w+pBmAaOc49Q6nMmX
4B/tgT1w1lexD8IP+CH6Df0DXoH+4XME2GO/A451D/bQJ+EH7wUeDpz1w9uJ
7UtEzow2sN5YoG4+ixcPo3T28IP9FPEC2on2QFdE/7D+aVnXa8zywxE6HHyA
dVQZh5nnAsAxf7nfMC/4fAQ46/CYvxjnsAeOcxN8X8xfPj8CzudToz37nN03
LFi+O74L7PkcBPjMfh3cE3zUOdHKK2ZlW+71NbB+i3byeQTWbT7faTfxc89u
5YIExzhE/wBHnIj2sB88l89lgPO5DPzg/AL2eC7OZWAv63nm+sl8b3hPF0Os
o9J5gIOHM99jvQJ8D3gr/xG54ioo/sw6KnDoqMzbWc8B32b9CryLdaTBLe/F
nnDU2+O9oEcxb+T3wjxFnMt8HvEmxyPQnZjP4714f4Sew3EKdCrmaaxjY76z
Plb9RL76zY6o/mR+y3oX1nnWu9AexMvMA6EzM7+FH+bbrKvgOwJnvs04+g36
P3DrqwuSfpnG6N735647hVscDjOwDg8/rMPb7Kp93/t9lPhhvsp+hCdn6vY4
78D85fMO4DjvYF7K5z7Ace7DvJTPa2DP5zVoJ84ROF4on1D7XScXhaOdrJNj
PWHdXvaLTN0e9ov9ayYPmeGt0+GrBr4N33jBTYfjuXxOgXbyeRmei/Mm5rE4
n2LejvMy4DffBxVuNNRX15+Im/hcCf3M5yDAcQ7CvJTPBbD/wj/OO9B+Pu8A
ju/L/BnnLMz3WOcB/sHgENdlsNJ5sF6Jnk/8jfUu4KwvgZfCnnkp+wFvZP0K
vBrzkXk168aY19DxmM+zzgacdTb4Z70R/Bx+mL+xfgv/rDPDHjow80Psv8xX
WU/G+g//zIdZZwMvhT3zatZLgWP9Zz7Dejtw6O3yXX68du/0LVBnL+tM5vrD
/IfPL8DH4AfnILDn8wLMFz4fAc7nF7JuZM5r5pncP3gu6+3AsY8zv4VuD3u8
F49P2LO+DT7Muj3sodszz+fxgPdlPR849sd8Xn1LdOgQp3E+2C+n4LurzRI0
zrOKd7gbcypfotg3+OXsmGtPsODZ5F+JPXRa4Jz/A5zzfOCf84Ju+PRa5hYc
pXG+1sEe5nNK5IvVOJ8NOM5HYG/03zhgn1OCxvlLsMf5AuL6XrnO/1yeN1Lj
fDDgnPfVYlO+3L9skjXO38P7Aqe4RtoJe0f3Qa0tMnDOr0P/ZJNfp3EeHew5
PxA45xPmsB7uN2N5vMb5aegffEefk3u71KwfJv3A+Waw53ww2HNeGXDO7/r5
oMraxDyhGudRw57z4mDP+dVoD+fLrfw4M2VjQLDG+ZnNrcbtNbYK0DhfdHBC
o0o3C/hrnOcJnPNCgcMPdGm0E/0G/RA45+MB5zx54Jz3jnnNeVDoB84rA855
bhgnkmeVqXsAxzkR7Iu26tKn+J8YjfPx4J/z4oBzvhm+L+ezAed8NuCc7wf/
nPeFecp5a3gvzjermlJ7VMd+cRrniUU8WB1ffUWKxnlx8HOyvsnY2dNUPhva
w/mHmL/Z5MtpONdme84XHXL33Y4tYyI1zidE/3D+IXDOJ8S44nsfJoXcX83a
FqFx3iPsOU8b/jmvEvZ8TwQ4528D53xpmUeUp53L7FKuoPIBGt+nwHzkex/A
+X4HcL5vcnOsWaPtGfsw39OBPd8HgT3f3wHO93dc85v8aLIkSOP8TPjnex/A
+R5HndOVVr8xcdX4vhKey/diYM/3g86XvlbPJ8Co8f0dPFd3T2funSX5bb01
vt+E5/L9GjyX70kB5/tZwPmeF3C+nwKc76GgPXxfBjjfl8H78j0p4Hx/ATjf
k4J/vg8CnO9NoP18XwP2fJ8C9nxfA/Z8/wU432eR70v3LKTf6F4McL4P8upr
lRPFr3hrfN8H7eR7N8D5vg9wvh8EnO/dAOf7MsxbEC/wvow4nXmL05h3bZcf
VfacX8R8CXEK8yLoIcxnEE8xn4E+wDwTcQTzOopTxA/iGub5FAdpnF/EfBI4
81XEKcxXEYcyH6Z4R+N8Kub/iAeZNyJuBX51kc3YkR8CxZ7jIODh23Lbriyq
4iDgzBsRz3IcAXvmq9CROB5he84v5XgEOgbHI/heHAch3uR4DXEix1nI7+J1
Hu3hfRA6GHDO0+b9EeOc9x3uB10eNcUjFC9rnLfGcSXy05gvQbdhnszjlvOa
mCezPedTMd8DzvwTOPNq0os0XX4j8THYMx+Dzs/8CvbM2+GfeTV0QuBHd+es
FXsvTve+sIc+yXEH9Drm5/i+zFehBzIvxXdnHgs/zDPZ/6/rdmVPesTo+o3z
e5lXw49X0Fcbv++Kj0HvZZ4JPRw45+czb8R+xLwR5wjMG3EewfwQej7zHOj/
wPkegcOTYZMajlD8k9vJefi8L+McjfdlrD/gh5wPz/wE54zMT9ie75swj8U6
c3xadL0vGeOX77Mw/8Q5DnC+X8P8k/uB79Ew/8S9A+aZuL/AvB153awzYHwy
DwTOOgZw1iVwnsj8DeetzG+xjwPvn9KlzaYK6rswT8Z5H/NJzDvmk8CZv2Ed
Zt7I9nz/gvkk2gk+wHkaWJc4rwY4589gn+L8FthzvhBwzhfCfsT5MLDnPCLh
J5QvhH2B83aw7nHeDnDOR0otOy1X0eQYjfOO8FzO88H+xXkywDlvB/oJ5+1g
f+S8HfjhvB3gnLcDXsr5ObDn/CL0A+dNYV9AfgLrUZw3BXvOLwW/4vxJ2HP+
JHDO04O+wXlxsAfOuiLnrwLnvFDsd5xHh/flfDngaD/OC4Bz3p3ENZRfCpzz
UTFPOc8H3xE4n1NwPhLGLecvAed8IYzDbPKUtGzylDTOy0J7OA8KcQ3nF6Hf
OE8J6wPnKcF/NnlfGud9AUe/8XkN+oHfl/PQ0E7OawLO+UvAOW8K353zSPFd
OJ8K7cH5PuulnEcn85HyTuEf7cS5BvgJ31+QfZbuFwiPovx/7Hectw+c88zh
h+8jAOf7CNjXOC8X9ny/APacNw6c72VgneF8e7Sf8+2Bc759vyt3R629F6xx
njzsOU8e7ef7AsD5vgBwvi+A9+J7JcD5Pgj8cP487Dk/H+3nvGXgyF/ifuZ7
GcD5/gVwvk8B/5xfLeOH8uFhz3nmsOd8+wLJ/Qb+aeStcX4+7Dm/He3kPHPg
nFcPP5zfjnZynjzw2Mvlk3bGuens+T4OcOSV8XfnewHA+X4B80DEs9CLOE+D
+Q/rBshPY/uh8xd8enZZ5XUwvwLebt/vbpv6qv2U41ngZceWbGrXWuGch8O8
lPUlzs9hvsp+OA+HeRfel3kd5dVonFfDvJH1EM6fYR7OuiXnwzC/Zd2D85qY
V7NuAPx46VPDmy1WegvnVTIPn12mwt8NnbxET+D8MZ4XiOuZ70GvZv6J9jO/
gn4iehHlT3JcwO/L+ZO8v7OOzXluzB+g3/J+LTrqtdnNXF8qvsR6KecdAUd+
IOvGnNfEfAn9w/yK8m00zhdiXop5hHWD85rwvj0KxJl8eqfyCZn38vtyHhTz
LuhIzHtZH84mH0njvCPmw2yfTf6SxvlRzM9xTsG8gnUJzgNnHsV6AueZM59h
PYTzlpl3sb7EeebMu/C9mHexTs557MwbsV4x/4Q+xvsd62Ocx877JusznHfN
vIV1GL5HwLwLz2Xehe8CvsH3DpiXQldkHmLWs+XX3NuVbsZ5xcx/oMcy/2Ed
lfOEmV9Bj2UeiPMR5pM4B2FeBP0Q+iTnn8MP52OLzkz52At9fu19eU/pDPwd
OW+c+Q/rn5yvznWKVm9bU2N6vyRdPdIOG1Y3G2OWpKsb6dktaOhGF2UPfGPH
wEl2Dklyz0X08zYB823GKhz2Dp/Nz231Ujh01JJ933ffk6yeK+etx9d/2xGi
niv16Cq+0RraJOrqeU4o6hNcqmii2F9cX+b77B1BWq5W526VyKfsn7b1+ZZu
6y8416UxObgu31on9Vw5z+q35H7srARdXdNenRf5exVJ0NWV/fSyXk6DU6Ku
rqx5tbdX2xxN1NWtPehUs88f5wRd3dryQ5Ze+nJE+X+eYjPY7VWwtB/2XqH/
3r9krnCbihuO7d8fLfE337eS/fNNxT3jv4QI7rM2V8m7S5U91zVaWNvvRHev
RF191KmP6lSp2U/1M777n2b+a8Y3StLVR0X/cL0gjE+uB9LiTf1PvUMSDWdn
3ez+4keytB/xAu4VQn/m+n6wT716bfyUwaKriD3uzwJHP3BdR+R1wD/s4d9+
SueNVf7xM+B+Ab47vgvXoWr33mPI5W3xujq0Q8/XGPUxY90F7jBy8Zlu/X3F
D9fbcTiiJdRzjNXVZS3UtXTv6ttidfVLv799Zn0sYx/mejgt6s4rfahvvNjj
/PFo/nbHf+dR/k+vG7n1dQWFc/2uPDudC5boq/CioW8WaQdidfZ4rvlCU99N
RdRz8V2GDrxxbPvMaF091d1nxvTfMjpa7NH/yMOEPXDE0bDH9+X60jMrhW29
MTJFV+cZz3X4lK/oUtNoweE/T9s+/a7UV/fB2xntf5/5mSx+dhxfXiamoZ/0
D/qB662dn1bxo61jnOA492R7+LFf+6D2t8QYXf3VRPcJeTz7KPx+T5eaiw5E
ix+uk+Y/tJxZz8rquXjf1VtHbBl2OEpwOc9HnclMfHulv6tt65Wsq4cMP7jn
Dhx+UFcBePl1z9vMGJkkfh7mKVEl+k6YrDMY/1w3Ceu/1EfK7Vn42ig3nT3m
19PYFy2fJsXr6qxiHHK9JqzDXPep6/aq+5xfxhueDcjxuUsP1R5+Ltax86V9
vap2SNTV+bT88rJCaN8EXV3TRNtK4fbBcbo6ihj/WH+Ao5+5Dg/GCddHOjj8
5o7Dh6OlXihwjBOuCzT094xlHX8rHHkOsOf6SNx+vC/WmaFDLvUJmqbqILEf
4OUvPnrZtYjyszE0fed3S6PYc/0lrIfA5555cOaOrZ/OHu3B+Od6SvdXm906
NSteV+/UbEz5YkP7xunqqYInfA1pPW1cgSjBMR647tP3esU3JHvG6Oqg+l8a
23H/1mjBw9vYVW0TFyntx3jD/OK6oMChKwK/+mjkhryb48Ue/qUeXaaOx3WK
XI252w7aGqWrj7oxfurFCrNi5f41cB4/ss6/mPjF3169719T7PN3qKjaj/7p
uHCDRaOLCbp6v1g3oN/ie6Gd0C2bxoQ1svNQOPzDXt73yv6ahi2q/i3sca4B
e5xHcztHvv6Sb3RAlG4fwTj86VYiatyAJF0dzlsPi6cOrJakq+f5t/20cssf
KXvgHTxK+s1claSrR/rAdoqF9XiFwz5fXW3K6tcKxzjcvHp6gS0f1XOBP3tb
+u76MPVczPfea/PbhcxO0NVddFuU94B78QSx71o5de7M2UHa0lkWC/MXTBR7
K5+rc9P6+wvOfHuNd6l/l1xTz8W8sLacsPKvOcoP8MAuVkcLlkjU1U2dnvve
o+bXEnX1XS8MnTjH/ISyt17f19v5arC0B/bTF521OFdc4czPB7Qc+zDlaoKu
3uyOzQVmJhxP0Hi/w31Ynl/QA3m/Q7zG80J3nxf3vK4WLdn6UaKu/meVXuO3
l+2k+g3jYdG0yV2HNUnS1fNEvzEPx7hlHp402npC+9eJGq8/fH8W8xT3oHn+
8v1czDvrnx/cH/WP0dVVswxLzOGwPVpb6fnPsc5OilfjezGv/myd6+mRlfG6
uqlewdcrxexQ36vOx6FVOzf21X13PLdrre+jTI/H6uperllysnD5HbG6upGz
Cw+ruccqXldn8srYnG93WCoc/cD3ryWOmB1Y9EwjdW8dvJTvuYNncryP72IS
lFBs1bhoXb3QrnaG5TOKRWvM58u2f271OX+sxrydceGrly7+s6J4vK5+r/3T
3s/zWar+wXO9NnSyWmcbrTEP5/vgBVPsSvi1Vu1hnp9v2fsPLg4RunrFVY6d
vzbpapyuDvCArWdCOlSN05hXwz/sC+xpGDF/U7Tgo8c+XxVeRPF24MzDP9/r
GZuYEqMxT0b+OfNkntfonx+PYnr3PRalnY5o8TbinOK9GJ/MS7H+AJ85ptu3
o0GPdPYY/8vm5Dl/JzReV9cR35H57QN3p2E3XsXr6pRiHXYyr3WhUyuF47nM
b/Mtz7f5dUfVTqwnY48UNpRsotqJ+Xvy+6CBNq/itK19An8/i1PxPt/DBW7j
M7Zg4QOSry7xO+zBM9HPdI4gOOqEMA/he81op1fTn+1b5IjT1QVF+5n3Yh1g
3otxxbwd44p5e0mHzgN2HYvW1RGdbXW0e6R3jMY8Gf7l/nK7g1Vv9PfT4Wgn
5gvz4aZ3Ly84MDteV190766z3r0t43R1aMEfmJ9jXR0499qN/gdU3MH9gPfa
buzv0KZ4nBbiPK7KmO9q/Mh4mznPuPSZ4p/wwzy2VZldaT22R+nqf57P8emW
1wq174Bvww/z3hxVv00vNlv5d39dzT32fLiu/XL/LlM3hv0fk+ddcy+Nl3WA
eSZw5vPQsZnHvomsFd3cQd3rx/jHuGX9Su4L/Lg8ZO9GpROyPd4X+wjHm+A5
zLfRfubJjMMe54ys10VW8gofODJIY93S1dCybN+0EA26Cs4dWCcBjvgXOM5J
Yc91gVhPA856mtlVR/ee7eMMrI/d7bbV8HdlhXNdJtbHUEeI7XHuA12C6/NA
L+J6Qaz/eBX64B+fEeezfzl/J30bOOvbOFdiXQ4463LRfzd/Un95ioHjo5Xv
S3asPTZFVxcR48Khez9zjy06HU9XdxHP9fz7mvMCE6XLWR53ulrhT7KuXiX8
QK/jei/QpblOBfQlru8EfQx+gEOHgf3p9wvf5OiXrKuLiDwo4ODVeC50A66n
Ab0I+hjOoVh3knOrTP0KuGX+f/xXTHMzsC4Ne+j5XH+J9WqMQ9YP0c8t6vS0
23gonHW/bOupop0SF0+oX+2flsEGPq+ZeWxYwKBFQQbWwyXPis5fgPP5y9YC
1yzO3FH+uS4Tn5cBx3kZ14/C+RTXccJ5GddxwvkI12W6uXTlgC4uqj2wx3kc
11/i8zU5P6XzOPRzYM5XaT8c1bzGd+RzAckXytTrbhbt0ay7l7+8L48fyQPJ
PL/Ae31wthgbs1DZc30nzC/4QR4Ij2fML+hUwJEPwLoW1kPW0zAOoSNh3sG/
5K1l3R91dQthzzob1j22L+mV9m3hsnjd7/ignayz4XtBR+X6S9DfwH+As/4m
+0im/gYc+Q+wh/+vaZd9HRP1ftAe6MDYr+W7ZOppwJEPyedxyDdgXU7ysjJ1
PPBk+Icf8A3Ysy4HHDoecNwL4Pagf7B/gZfifVmXBs66Ovxg/Reek5mvxe2E
H+jwXC8I847rNeHcgetB8bmGrHuZ/IHrDrHuDf8Yb1xniXV1fBecnxJPM+B8
mXidAeewFN/p6ovivzhXxd8xv2CPcYL3ZZ0fOPR2tOfqhInfjcOMOvv9tauY
HFvop/vu8IPzCOZRrJcCZ71U+Ftm3M28DjoG8yvWc4CznuNVe/XvGv1SdHUR
jyZUtimXnKzLD8F7Z6NHGaBH8b7Pugp4NesqpkPH7Y3NWH+BNzAtmxyc9Fbm
KetLwtszdSTmIdD3mJeyvgR+Dv9433y70n51LqJw5v+s+wGH7se8nf1gfLKu
hf6EfsX8E3os80/oLcw/oRcx/zw/pLV/5RSlL4F/sk4L/sl6FNoJ/Yr5G3Rd
6D9oJ+Jx6FdYN1inBQ69Gu/rOr6I+6y4RwbWr2APvYvjO+gkHAdBT2YeiHMB
5m84d4D9jh8FDzuUCzbw+QX4J+vGGJ98XiD50pntZ/7J5xF4Xz4/Ao7zI+aZ
OCdingn9n3kmzhGYZ+IcinkmnyvBD59DST5e5nhmnsk6OXDoY5abjYU7OCie
yedKwHlebBxcOiB8qL9uvMGe9X/LeffX123hK/a877OOBBy6n/CrXYMWjb4c
LvaYF5iPfL4DvGTEpnlhRRUOHgv7dv4+hXcvVvyTdUj4Wei85uU/yeF8zmJw
fVG9ek4vZY91iXUeWVdJbwQOvZH5EutCsq9lrj/MP6GzMe+FLsc8ELqZSe8D
exbfVfyWdTnYb2++7+qmFdEa81j+juDhrLNJv2XqS8xboEdJfcjVVssSnZOk
P5mvcj8Dh17H/CcbfdvA+ja+I9uLHkI6Nngvt6fQmsETG2TED+iH8k/zRy2+
p/pfp9dl8ljGYQ8dj/UK6P/MbzHfmd/yuQPmL59fAAeP4rgJOjzzXta38Vy2
F76dyQc4/uow70TFwlaxGvNP1oGBQ8eG/+Yuv9cfHOqnswcv1en2mX6g8z+9
45R/z9EEjfN2uJ4P4hTgnD/z/OD541VtVZ0f4sMa5wtxXSDwauCcb8N1chA/
ch0k8Gquk0Pxi8Z5PlwfCfEL7qFwXgrXLUEcDZzzbbguCuJo4JwHxfVYoD9w
vRfotMA5T4/rqCBe4/pCeF+uzwO9zrxX0Xn1ncM0zqPjulXQ/YBz3inXcUK8
qaunlKn/6OplZep71Rf+9Xt9e1XXC/6n12jpfLpIlMZ5U1yny6HHYo+g9gm6
+qXQsbkeFOJlqQ9G+YFcZwx6FNcvQv9zvSbE6VzXCHliXMcJeWXAOR8J7ec8
LthzHjLsOX8b85rzos82MK529UrUOD9KzlMpDwo452WhPZwfBZzzsuCH86bQ
fpyLMc55aPDD+ds5dr0bUDQlWfIE+F4852nLuTLle6P9nDeO9nD+/LMOFy8E
bRMepHF9AM5bw3zhPFjYc14c7Dk/FvdMOQ8QfjivD344L5fraFF+qcb5pVxn
DOdEXE8M8xH2fP8C9nxf4/CBzkGv/VWdJeBcfwnzlOs4QT/nOoE4F+D6S9Dh
uY4T9Hyu4wT9n+sp4XyQ6ymJfk51k3AOyPWRsN9xfSGsn1zXCOcUXD8K5w5c
7wjnCFxPCecjwPleCddHwj0dro+EezRchwrt5HqMuN/B9Y5wvsb1jpCHD3vO
P4c95+FzfSTwIuCc3w4/nOcPe87PX1x/ifOcVn4a5/nDD9+D4HqV0VOWLTdt
pPqZ7zsA53sKwPleBnC+B8F1n3COzHwS/JP5G+Jf5m/gt8zfwM+Zf8L/tSVe
Q83GKT5JvFfjvBHme8TbtWzyWzTOk2GegLiDeS/iX+bViJd53+H7ttnkKWmc
p8S8EXmPzBuhazFfxfvCnvPZmA8gHuT9DnEu77OIK5mHwA/vg3wPmvM3mLfw
/W7OvypXt3nduo6Kx0K3YV6KOJF5KfQf5qXQ5WDPeaHMtzHemG9Dl2ZeDZ2z
4JCeN9Y2VDxTdKfcY+ad/K3WAX4u593xuoE8OuDHN+dO2nNI5QEyf0Y8zvwW
cTHzW8TpzG+R98X8FnlizM9xPrK1cN7WLi6KH5KeoHFeEPNG2EtcRvlXzD+h
IzGfgU7F/Ae6Fsd90K+Yl0K/Yj4PnQf4t0fVr96dFqtrP+yh4zEfhj3HrchD
4zgR33Hljr1xzs4q/kX/IP7i/G3mjdAnmZeyvczrTL2R+S3OC5jHwg/zUuSV
Md/D+GeeBt1e6sPTvQPY8z2F6cMcur+8q/wDZz4JnZz5JPRt5pPQ25kn4xyQ
eTLmBfNM6PzMM3EOxTwT85R5Js7RmGdiX2aeifWQeSbOI5hn4tyBeSbOEYDz
PQvmnziXYZ6J+ynMM3F/hHkm2sk8E/cXmGfiHI15Js5VmWfyff/N9RLvn4pX
OPNJnKMx/wR/YD6G81/mmZi/zEtxPtstzr3urPKKf7I95/Mzz8S6x3yS7fk+
AvNMnCODT3IeBdc1gh4odYoyz1NYz+S8C67jBJ7M9Y6g18Ge80y4fhR0BvAl
zj+BH857Ac55L9jvsslX0bLJV9E4XwX+odtL3mBW3qX7vSTOxwDOeUrEY3V1
BTnfg3ijge7Xa5ynATybPBktmzwZjfNkuI4W9Fuum8R6Kec1wR75CTI+M3Vj
zqfiulusu3KeJPQZzitD/wP/s+GLydGEcNaLDD327h5f+IXSkTjPDX44r4zr
VkF/Bs55dFwXC7o0xj/n1XBdIOj2wLPJq9E4j4jrL1HekYbzEfgBb+H8WK6z
xPow501xnSXoLVw/inVdzpuSeJPyi6C3c14u19divZ3zHrnuFvR2Xf2uTF1I
V48rU4enOFTyqbgOFfQ04JwnzHXMoKcB5/xnrhMFPQf2nP8Me86X5jpLWP+J
Z0peMe2/kofM9amQNw6c88axn/L9Athz3j7tywbWizivnus7QYcBzvcUuM4V
xi3Xm2JdkfP8ab+WvHrgnJ/PdaVYj+L7DlwPinVRzivW1TvKHM/QgTnfmOvs
sX7LeddcVwr6MNeVgq7LdaVYZ+Z8Zq43Bd2Y6zVBX4U957ELf6a8d65DBR2V
62hB12V+UrLV6z3my9Xvm3DeCPMKjk85X4J5EetInBfBvGto3Gbr5A7KP/CF
U9td6roiSuJWzvfgfR/n77y/s27JeS/MP03Wn05q8kH54fwB5qXwf3nvG+dd
Dorfsv4AvGmR1H2xxhhd3VHWGThPhnkj6yScb8M8iu05T4N5Jtdd5Lwa5gms
Q3JeE+8LaCf2cc6PYp4jeaqVX40LWKb4LbeT852Yr0K35H2H9QfOb2Rex/oe
58Eyn2R9m/NDmD9Al2b+w+OK81WY50DHZp7G+jznz8C+z49O84JaqvwT6Jac
58n8AfoM83bWzzn/h/kb65Oct8N8EucC0Ic575T5EvQN5lesG3PeIHDOG2Re
B70X/j84PL9nfeGRzp7zfpkvQZdgXoRxW/Jc8b1Tv7/VOI+a+QDrP5y3zPwK
6xXzJeghwDmfnHkX6x6cD8/8BDoY8yLoIcx/MG5hP1Yz3VDKOUbXD5zHzvwH
eoWce1L+PPMf1kk4n5x5DsY58yLW8ThPuFWZwBvP9isewvok5/Eyb8F8ZL4E
fZL5EnQ85kXQIeGH82xZB8D5EesP7aK3LOgaFMLnZbr6tNnkN4p9/OIbU3Mt
UXVWOR8b/cn528yjWM/kPHDmb6xPcr401z/BPTuufwL+D3ucf/F9N+iNfM9O
zsEz7/1xnRnwYdyzgB6I/uP6FV2jdg6skqJw6I2Sd0h1Wr7Xb1M15wqF45wR
9nxvHXxY8kLr3YwY+jxR977wX69Cy76BGesK398vn6PZprONkvmekbbQvrL7
3vbxfF9Y8kC4vsrs+SusWjio+5Vo53lty+XXXsm6un8T7m1+4H40Wew/vvLo
6V1Q5XFyvRTgXLcEeQ5cF2X6zLBfb0OSDVz/BH7mfz9f92gjpavxPUqZN5n5
A1xXJPDyxoCLHZJ19bIQR3A9BPt1Ua4Fj6Xo6s6hf7huA9rJ9SswrrhOAttL
nkOaV6GkZaJXCI57qbAP/e1StlR8vMZ11dD/jON9obdw/Q3Ot5a8yidbj4T8
UfnZsF/dql2uSkbVfuQzsB/kITCO/sT8RX47cNhVHWt/KClO1Tnhe2rA2zUp
sTjtl7qHOKXexlrPfyp7rmsh/X89bUgRjzjpZ/Qb12EYfdXNZUD7ON36g/sg
vP5wvakqr+Z435qeoqtLg/WN72vgubhHw+sn+IP7Psenbxx165uuPs/DilVL
lfmk8F5/4n2P3VM8m9e3OeOfhX5dlaKrCwR7Xn+Srl1au7WjykvH+sb1cNA/
2F943TvV70mRVx+TdXVLdlg86nm4SbKufhT2fV7fYi4UqdZgZ6KuHtTYHu6m
jx8l6+pBVej8uP7tnco/rW9iP7p+VwvnTaqfeX3D+Rqvb1W+VJj17+tkXX0n
yfO4nbrnQFG1vvF9H/gZEF724PFOybo6S8h/4PUN+zuvb6n3561KP5Giq3OC
/mk14N20vpt065uuPg/GFfwXr7xzVfT+cJ29nK81GfMifKWqhwMc96F4fUM/
8PoGnNcHvi8g++DkY60+pqv9HOsD7Ns1f50rYIRuPRR7vK91WsWxb3IqHPY/
Zz13Kx6u3rfGohCTVHOjzs9Zn8WHnBr76XB8L8RNvE5inUmtq/VeeF63Tmqj
d1YzKXxPrWO8zpivjw9uGRCp+y74e8nWaY26mMfJdwcP530KOPY14IiXhedm
9id4o25fyMSxjwBHvI+/07zQ1VsADp4JvOnOU6vr2qTo6i0gfgEf4Huj2I/4
Hih4Bd/DYr4HHPyB78fJ+STd22K+J/e/Mvke7Lt2N9156X2krj/lPC5zv+Z7
oMxXoc/g/+d71swDgZ80sZjh6qB4IOI+5oGIr9k//p4NLzWAl/K9ZuaHuNec
Dc80oE4735PFuP0eMH5kwEt1/5rjAsTRzBPQHuYJci6Qyd+Ap7p88FifFK+z
x3OZf8IP4gW+b4jvgnYBx7gFDv+ot0zrpO6+v8xb4lH2CfcC2v/R2+P7Ms9E
+5mv4t8P5p5l07dhnK5OAuIXqcuXELX3+cvEbOufIL4DDl2I7eEf8WY265vu
Hij2tWzWNy2b9U3Fi5k49gXgrwa/z7m3hbp3UXx+x1x7kgOlnbzv432x7/N6
hX2B1yvwAV4Ps+GZcl8b+wutb7p7rOAPwGuEuDUfeVjlbfD6FnbC1vlFWLLu
3it4XTbrm/Qbvgv2X17fmK9OPeE1KNpe3d/g9Y15IHDmgbS+if3sxAWx5tti
df7R3mx4qQG8lNc35ofT00xXd2+onsvrG3gmr28Yt7uH/Gj6aptufdOyWd+E
P6A9GCe8voG/8frGPB/24Pk8r9k/xhW+C69vGOe8foLf8roHHpWv/ckBCQFq
fWN+iHYy/8S/gxfh789a1N3XNlnvR/a1TJ7J61uDvEObbzRXdSMxfpin4d8R
3wH/UDt655/2yTp7tB/xJs7jWJfg/F7sI5zfC97Cef7YNznfWNZ1ym/Hes75
sViH5byDdDDYs+6H/591A+CsV3D+M/ZZzlsGv+J8XfBJ4KxPcp4w9iPO40U7
Oc8Z+zvfdwAPRDtY/+H8atKLNNZ/YJ+NXiTPBU/YfWpJStMUdV+D85ey0Vs0
1lv4PgX2/fhv3y8M9IrTWG/BOQ7rtJynCt7OearQJzm/FOOW8z/hn++VgCfz
/RFuD+knuvtTiBc4TxX8lvNFwYc5HxXzFDjrrpzfLnyH7sUAH73m1Os6rdW9
FvQ/3z/i+Jl1P3xfinPFnuJcQzbrku7eAdZ/XpfAN3hdwn4He9YfeN5hP+L5
i/WT1yU+Pw2efDNkc5tk1iU0jtN5XQJv4XUJ+xevS+BFvJ7AP3DWFXm9xT7C
6xv4Hq/b2Kd4XQJ/43UJ+yavS6TzaNDN+LyMdZ5XfmZWli5qfQBut/rYGXOj
Wn84H4B1DJlXC75F/Buv04W0bPQW9f9l7uP2oZ8DR+7XrUu6/Hnwc16XwCd5
XcK4hT3rirwugd9msy5p2axLujx8xAW8LoGX8roEHsvrEuZpNuuSNsX24bEH
jrp1SeUXkR719U+bi1V+BMrfpd7U8FQT0/66dUnjdQlxFsaDSxHnDSnFdfqb
1nnasLIXiyn9DeON43rOH8M+C5zjes7vYr7Beg7noYEPoF0cvwPnuJvmhS7f
mONxPqfGvgx78Fv44Tw05nusd3GeGO9HrHcBZ12Lz83BJ+VeLekDnIfGvJd1
S87z4f2L9TTgrLdwPhv2a853Yv/Z6J8a6QO6OBi8q16nlPY1Ksg+rstPZj2T
82rAozhfBbwFflhHDbUencvaX+XbMP9hnY3zZ6AfAqc4WpeHz3wMduDnnJfC
fIn1Sc574TxYic8yeRrn1yF+Ac66E+cBclzAuivn7YhOROsS75scjwPvXMhq
w9pgFY/zOnPylIl5lfEKb9pyyOBnzso/rye8b3K8zOsJ778cL/M6yfyHdaF+
/cKH3DuiW390+aLgh8BZj+L1B3wmm/VHl7dD8bsaP5k8YfeCn/N2LNetP7o8
WOz7wGO3V032K2fkeS72OA/l9Qf5Nrz+iK6VuW9mo09q2eiT2tSE+/Y7y/rp
7FlXkXiGdAz3h+vLVgqQfVyX7wcc/JPXGdiDd7F+xesM+pPXN+ZjrO9ls/7o
8nuZd8EP+p/XT/ArXpeYL7GuyOsSeBevS+BpvM4gfpF8S9KLeB3juID10mzW
JS1H5h/ch/3wMdeyDzMiDcDPHPh80dPGV+pyAAdP86t5ftGlGRGCIz4qdKl7
/V5B+B069ftxs5Lz9fKTukma4cYX+8cujj5Ur0n93lnXa0vOOvSOEBz+i991
eW/2Ikyeu+hKsZWh+yOkTlHApKVP09PV7yht+jZ2w/TSwYL3q/U5vVPdGKmP
BDz+gsuiCefDdH7w3NBqry8HB4ZKe0KrpVa4MjyCfj9X/d7cy6AuPjlmhAme
q7PHmXV3w3X26B/vq9bn7qRFCP7aqYtdzH5v6R+0B/2zZH3UzP4zwgWHn0Hp
e9z220UIfvbW42Drso91fnCvufw7w/KnlSLlucDHzXZ+Hn5I4bh3fGqhy4OU
F2o8wN4lTz7Lcr8ULnXPCufvVKNBlPhB+2/dP3FxZlq49Cf8tBy22TXXezUe
4GfZmC3XiplECY546uXHnSe7fvYXPPDD8Z12S2Ll+6I5sK/jWrjY0UEBgjcq
ZF/x5IVYqq+lGXa8TUhI2ZSgld9qtmdkzleCS12jZsXdilkYxQ/w+Rd9YkYs
UDjiLGNkXm1J2EvBrY438i9+X/kH3vLKnOC+05O0jo5VL3j80gT/vfqg/fT4
JC2H66U5eZxqa2gP/De6cbBUstFT2ln3lE8TizbKD/A5v2M39nyu/GA8SH+2
mWKY0dRPxsm2J7d6uI6Il3YCx3NPPG3VOT3okXxf+Ek/18bq3ad3glexdu7n
U4H7U/3+2kWfJd4P5ocIHufxdtioHzH0XVSez4o3rTfXMvMQPG2hxbZygYn0
vt6GLq97R9afrn/f3sWPT8lVT9kDP9Hl4uKK9xPFflm1yIfp6Qkybl2cPvxY
/TbQABzzbvLmSSEWt4MFx3huUDtik2MLY6b/GFkfxpU5PsR3d6Dg8L/AuLSl
7wL0g/odwA6RL27O/2I0WFws/io9PULwp07tg+rfChb72Zc7VD71wSjrDOx/
7kyzOlM8SHC0E35em41+dbu5n+DtVr5u3nRQMK2TMQbDzOTmqTt8aZ2Mkfc1
fz3s78ltwwRH/yzr4x/Zyi5U2gn79SnzJlzM2EfQTuAWqW45N88IF3v4MZu3
f4D9g3CxB75yw6evY16EiT3WjZtR3W/fPaT8Ay/788Sog5fCpZ3AT1erNHVh
xrqNfgD+xG7QvDe3jeIf32tOxc4tzC+FiX/gM4qt9y5ySPWPadTILo/iomge
xRgKzdzUfMHPGBmH8IN5dLKw1eP8EV6Cny4VtO9+QIzOj9THGDU2sdJjTdqJ
+ZXHrUKNCqWDxA9wY9FmFV0Hqe8rOk9IxZkDB70RPwta26xomdF+jAf4qXx2
c/9WdSNpnqr8w+rnkjZ+3+kr+PrwkKe/MtYBft88zVMn/PaIo/lrNBRdFfq7
RMY6ifkI+57brE+UHBmvm9f4Xst7VvR6J3zDaOi/9NOduz3jdP1Wrc2b5HIX
Y3XzvdnI2y5x0yJ09psn2EV2CQiT94U9+i1gX8z7fdGegr88OCjQ9H6UvBdw
jxMnWrdaGq1bzzF+HkTnn7K2X4TgmKcbk/ocKe0VpuNvriGtliSOjRS8S3vH
PXcy+JvU7Sf+dq5kyLxzYyMEl/qfbXYXL5IeKc/9UXDVHm2bD9U1Urzue1Sw
83OpR6TW8/3t91qeWxoi+NVPNa6syOA/WetiqXU+6/0ItY+klBwW5vb9nca8
bskEuwJDKwYLvi5l5uQJ+8PEP/PSVaFvEwwhYRrzQDyX90HnM2tch7byk/bg
fbtHf5ri+CdC8IdHbfc+He4t/cN87EXzGmsclkdozN8+PpjX8G+bcPGD/n93
pvcW/6PKj/OLto337HXT+cc4n5vjbXPPfgqHn31r9t+6baa+C+xNL/exj/JS
40HqdHXck7Ni4yj5vlIva2v5Vd9DlB+0v+GHxjMm/AmX56KfH5xfdtwnOFT8
wH/qrgpz8xaLEj+w/7uEz66vs9R4Bv9Z2cDDr20hV/EDPlbgW5uy3SSO0gyn
ZnltWprB9/AdmXcNrNdzZ62kl2IPXsT+Yd/pU/egN5c8xQ94Gp4L/Eud6s9i
N0bQeFZxAY9D8Mys41zx2DpnnpRq9EO1H/izA4vy720dIP2Gdg7L5eMUVddD
cPCrrP2jeBHel/nbSvurpeqcf6Qx34Mf5kvcb5iP1Y826JLWxijtB25dJmXq
33ZGjXlC2dMDY0Y2CtOYJ3xZNflMo+WhGu/LpsMu1JlpE6YxLxpj23n2mDSj
xrxoacWjm4sfChZ78CJ8F+ZFWb+j4ht7ztcqOdclXGO+8f3hyjuDvFR7MC/i
+r/6WtMpTGM+ENG19I7cR5V/9EPNqSssjmSsw8x/NtoHBC6X9UHxmfqV/BY6
HVX2wB0am5vucAqXfntbuOfGtNm+8l7MS812pRc60M6oMY99nxDmXe1wsMb8
50a0bar20Kjjw04VitjZBAUKvvJOvpzlM3hj1nVV8d6XtUq0uL00UGPeO7HX
vrsudiEa81KfosNP7WjjJ/0g9XsbtDiTp2KQxnzm9ZL+hy6N8Bd78Ba0h3lL
1vmoeEt+s8N24ft8xd5k4NbjdzJ4V9Z5ofgAvy/aU6pny6T2I95ozAOzzlOj
4ZzVvTr/4yfsH+2xyP/qg0egJvbgUZiPzKMYh5/Ui++meCR7acxPYM98ZnWb
zXNdrnsKPr9qW6f0ERG6doLH8vpwt1GO9sn2sQaOr+X3Mtpc2NX5s4rTpc5P
o1HrLzZTcXqXF44vyzjq/ZzaW/nYxG0JBo4roaNyXPl7c/7C3r9iDBxXls2d
NvxHRlzB+gzag3gW7ZG6E4OLb+//n7j+edwtf48xSQaO3+eNt9qy1lm1E3jJ
rp6NQ5KSDMwD4X+SabGA38dUXN/eOk/U+fbKP/DH6QvTbr5UfrBuJ+xKabOx
cqKB41z4txxc2jLv4UeCH18fk9ZsTLyB4/05jh+/7XBMFP9oP/Rt6H7AC8YP
shu9NYL6U/1+EHQ84KnhNV9WH8323oZmNVNydqucoGsPvgvrFfjurPtNiKlx
41YD9d2Bd23+bf+bjPiNn4v+sWtw4HLR/+gMzrFuPdcFJxpYZzgTnDj4yBj9
d4Q+z3rmg+Rnr6/v9jGwvor7vKzHztKK/zq6wFdnD/+NgvvfuDZK6Ye4z8s6
Hvyz3lj5RqEet896G1iPhT30WzwX/qH7wR44dDzY47tAH0P/o/2sZ+K5rGdi
/HSZl2J8/x89VuoIZepysEd7WOfEc7PqkOr376Dfws/Xe5svNqvx2JBVR40R
+46WS8q/nq/0nGN/Oe678z7MwPqJnH9lxtfAH7ds9qRJUpSB402M8+g7AXNd
+2uCt0jLe3JLxnqYdbwZDbWbzShnmzFfOL6eYEi5b+scZ+D4ulrnktfWZaxL
HF+P7rd38PqMdYBxyX94e3TSp3Av8fOgWkJQ/b5xuvabNXwQE/s7Rtee7xut
/jV/GUPrtvo9PtYrgEOvgP3Gn8eaXkqMMrAuYT7lYa7LDSINrEvge7GeBpz1
NLxvhRsrfn7d6SvxO+zDT7WtfuY/utnGsJnj542JkPcCjvaftR4wO+as0gdC
R63btsM5ysD6gM+q1PvXZkUbWJfAuGUd8nzr6VPSRwQbWJfAPII+iffa3+jk
ms3fjAbWCauWHvfv1nJBBtYJMY9Yz0zfdjk5fJGvgfVAtBN6JnC0h/VA2LOe
Bhx6Guzhh/VA4NAD8Vy0H/ok/ABnHRI4dEje9+/kj11hcHwp+yD2feY/4Ccc
t8b+nt8gKYMXcdz6KXCu71ZHvT2ei/iU+QA/F+MNcRnzrnVDpn2q/594Ezji
TV63Ecfxfs1xrmtX1zJmR2INrOeg/Ry3Yn/nuBXtYf0HOPQZ5i0ct+K55vX6
Dnx/7pH4xz6etd8Ub2T96lLbiaU9Mngjv5f7jaETPmeMP/QD8xDWqa423T37
hqnyA/zA1aMV/A6FGVhPwPhnPbDK1si0sxn8gfU9rEtT7P3HWYQoXQV+oPvx
/s46HsY/9CjZN0+1mLhnsjfV41K8Iqs+pvjem/wXHcq7hAkudZMy9SXmFdAh
mRexzjnlusXWK0N8df0A/snfBf0A/Y15RVb9SvEB6FTMK6CzAS/xKteviafd
dP2D57JuhvfKqhOqff/sxN6LbKZoGu+nHN/BHvEd77Mcr4FvcBwK/sD+wR+y
zhe1PyJeZj7A/nvdvjnw4vsoA8fjzadOqHQpY7/meFzq61K8D5zjfXwv1oWA
QxdiPsZxuvBA0ivA69BO3sc5joZ/jqPBE9A/zCtY98D4YX0JOOtL1/sOc9mQ
sb+z3nXz/Mfim78F0rxQ+7J7y9Pz6v9Hf8P+zvoYxj/rV1KvMlO/4jg0qw6p
9mXogby/O94ddGX2f/Q34KOcT/azzFhPmBexHgVexN8Lz4UOxryF9Sg8l/Qx
qQ+fY9yf0CltjeBLUmfef2XeeW8PIg6N0TSD9+Hq9rrzU8l/3tBmwJIzS0LE
D/S30iO+3Dn2QHiX3Efw/zntW4UlwgPV79cUcpvaK1DhBzs2bjp8dDCfW4mf
BtPbl41o4yf+8dy7T653N50lPEre93rJ0fkKNxSeJu+7vfPpsQc9FY72hI1s
OGX+YfW+sHe/O/39Z3vhn+K/Sq7fq57MFF4n7al5a9Bjv8sKR/tN/Va1+etu
sOChd2a8L1FOd96tmb3O8fTVGHWuBxx6VwerDTm33PeUdkI383ycHNY7SeIv
bel3Q8MBl3XnhtrB/a38Sznrzvu0xc7Hcg2ZFU3nlTFarjm5zox7H8bn7NKe
PE4nU08NfyPvBdxvUd/WVsMk3tECXNudWl8/ks9ntdYjp01eEqTOi4GXeHav
2t0XcXwOq91dNntB+Kh4Pm+VfvAYuWzCwRQvaeef0qF+/RJ159raP2urrr+f
HsPnufLde57xObDsoZzvy3dvbb8v5OJoifdl/DRsWaxP+ZmiD8h3/3v4tXmX
gyRfS/z/Oz+8haV9hPjH+Nl8cV9lp8Oie4ifQoXH9Nip8rW0sgXzt159L5zz
wbQSL7y3JV4Iozwuo7RzVoPqXZtflvhCy9PZ69CwVCPZa/LcTRNbtld5C5r2
qXDkp+YjOK/MKPYRuWwXpnw3Sjv/ufp+68mz3pRH5y390MRyd+4Lv0R3kna+
3bvh0GulR2kVrszO/fyKLh9P/CRNCD9eto/C8b0eLIia117la0k/57SPtu4l
+VreYt+8dc8C/Q+rdsJ+saHXj1Gekp8m+KE27Xpv7KNw+BnWvO1IO9P/2GvO
sZPqPtb1A95X610nR3KaGm+YRzPzD33iWTZIcIzzcysemG/dI3kL2r3U8h1i
46M4b1D8/ONYauS4ssHy3PCGJUJu6PORtHoba1s80+cjyXMj384dmtRc9EzN
/mv+l7Pq6fIVNcsFv5+l6/OXtP3epaqWfpBIeQVGzW5Z/N/TKiXo5uPHjSNP
zX+QoLM/1O+hee3enC/xTvtnSZtz3iN1+WBynyj3+W+l089KPpjmGuM0I+Gn
Lo9L3vdYD+vg3F/fyfjZ0v/Q7LAlunw8zTmqbyPLzbp8PHX/q9TFpcVTlT2+
i83WnY3PWqj5ArxOQJ8DqZJnpWm7U3c026bPl9PaXstze/dzzrvzlvdN++DR
fXIN0Ye1qYuMN9dU1LcT9s9m5gy5GO6p29ea3fjTNOSY8BwZ5/tabun8wFbO
9cT+Rewalx+2cn4q9vV6xD/NYS78UObvkY79vU5oCse8GLHjQe3px4TvKd4S
1HbQ6xUKB28hPqm1zLvFsvW3QI34pKxXvzuaRL1ZLvxZnrvgzKyfO1aE6HjU
QPdBfz50lHNGac+zhGqprscV75L8UvcSrbc8Mmq8LzhvMzQ/GSJxnxa8K/RG
2oEwXfth38rnXYWmR5V/4RVvR+zz6uinMY8iPinvtWJBSJxFaKCOD1BcIOOw
YgvX3BOeSlwg/ARxAe/7z8Kn3e89RuIm2fcpntJqHH/u1tQzRucH8+Ws+W3r
OWleGu/XxM81814dd7RIjOLzPvV7uId/DfsTpYl/ZxuPoBcP4nR+wHPonFTe
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
K8Bzn5c+an9mSJDgpu/NihV7kaR7Lt63X6FJjfIUVf4fW+exr2HrT/2j7i22
urVkrMFMtRP9czpws+21Iglij/da1XXagWEO6jui/XmPlm5j5aTGD/SWkDkv
/Hf/L1848w/0opFv3X3/d28DeN0Kf9383z2XrPXN1D0439o9u+bcpvB929tt
2F5Bb4/nppucL7K0r3oudKR2ybdKrZsZLTj62bTBhan/uw8OfHadh79OLk3R
1SGBnzGbdvWYPjpacPjZeGfpvkN2Kp8/4mShgqtHsh91H7bu0kv5JheJFxzv
W9om16DkPrHyXYAn5dpt7ZMYI3i9MoZuoz1ipB+Aw3+RBcWD+jnGiX+0f93J
JwN7mUYLftNsZKuFB2KpP9XvraTFF/pnRX11L+DWwlnW1j+TdfVD4P9zoabP
mh6OEhx+tlw2yznmksrn7/H7UO6hvZKpf9Q9OKNNUo0mGesA34PzfL081rSo
wmvWr76s0Bg3Gufqvt6kto0Ple2n5jXwh4P+VI55GS845lHA2odbbmd8F77f
53Z91490WTfU/bu/FiSX6RCi2gO8pP+KgLod1HPR/mke3Y7k76f84LldesYs
j8jgL3xP0Pzy4s7eSfFij3naadu9ske2qXbKPcdQw5v1wXHyXODphU1azPod
K36sbix6cqifr/Qb3wfMf6TT208Z84jvA6789b6Wd4Z/vg+45WvigrRZyh7P
PdvjRfjQpBjBm3rZdLg9yEjjVt3r7Pja40gJmwSxl3uUlXc4HJa6SupeXsH1
KyY86BOjq5Ow2eNnhVNSj81o2Durt8uAA9HyXNivrPJj/cC4SF17MJ7zmngW
DUpTdSHWLNHaDt0cr/G9Dzz3+eo6w9ZvjZLnYj4G589vbF05TldvoeyobYf/
mqWeK/Vmx8QOKrwsRvDN4RfmWN8Lp3mqfq+qg9OiHBV+RYp/4EN93l/6VUnN
rwoPg9f1H5kk7Yd94MC1FS0rJurmI+bv8eJlN3cIUnn4wPuWmVTXLEjdC5A6
EjF/F0jOWCeBo38mzRl8ZnqfSMFTitUJsF0aK88FjvYHLHjUy3mLuheG8VnU
6mjxMY9Qj1fxn9ezflTpPiBJV8cg0f1R0KLXCof9icLTL4wYr3CMw9lms+xX
foR/xVu6btzrdH92guBtj73v1tk2iOoGK/5zbOWvT7PClB+M5zGDP95In52o
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
JyXLmZuc89F8kumHJuqXO/FzIdQDHD9kRVQb8BB2fv7yDZB/K4829Sfc37nb
w2iVczn/jodv+vYW6Qa5RC628w+TzmPYOuXHDd+XtTGXNB4vpWuTPMP3vM9i
clavkbNT7qFBDtIjpUHHL40+nJbF5DA+SC7T7fnGHGJc7WrWa66EzQfqW85e
ndGu9R8Je+6yT7OaWm3MYnLQYzHjoIlfVTYaL6GnN0/SiajKIe1Kpy43ruPf
25lR1s7mVuc0YrV8tP2g2mQmN5t8Yaxul3Q2Hp7bxNJpx5NKKVk8JC5u2Rcu
h7pH0MPw/PWM4dPSuBzm6TV6n+OOjdlMP8hVMzrsmXojCz1XQk9umHZqXUg2
0i+hV/boL77gkIPGU9r59dGt7vXr2Xg8pfbHLs+P7o7Xk1LFDTfn5XnnsvEQ
V3hTvU2rwICPB3n8ir5hbaLxfqA08EfMz99peP9QOshk19mm1Xw86Enr7FDX
vV0eGw/yZbb9/fsOzUO/r4xaan4zjq9MJovHKMlX3uJy+I5J430oow4X7V8s
q0xB+01Gdcx/mW5Y8ImNh999vEH/M5KxUjYe5L1PT1Zrs13KxoPd/Ti466rn
X6LZeJAfks7tXVvxgc0f5GF3Ut+9GRnF1hnk++2LXUu/RpA++7Z7diWfmBy+
gwN6YD5bMzufOb0tA+0fGX2cvl0v5VQ82m8y+rG1171zY5NI0CWLqwsy+fev
4Dsv2/RDTpg34bxjc0TVGe2EVJKo+/Jh8E7Oj2CdYTzsw3uhoYE+D9KJ9evv
C9xnsntK2LloPF5KW3hHLg4blSTgv0tl/L2CikRyeMCwIwv/cL4A3xVqrIfS
5+4PFzYbIyX6616HPurK+Vfj7xlxf3dc9c1iq7mfSP9mo1Sj5XifVsmiCdOe
nExlcpjPjZBrLuO2ZpCk0OtXJsjxerrIcRHHjzxMJyE54eH2KbyeFJ7rcmbi
6rBDvN6z8Xd2+Htl61ycFpsrQfOh9NAcj4SvE7PQcyntKNnZ2ajeboAczkuS
ya7Bdje4PQH5ds+3b/69Fx30g7zuq3J0r3r76fU+MbVjEL+nCubfeD4S2qLb
qaAPu/h6wvhrm1JGaD9IY78LyC/mJHYxfyhF70up6x2Xdgkd09j8Yd0GVHus
qzqfid5XQrdMuN+9z/ssNF5G9w5Ynba6LIZYqC2pdL7Avy8H+6Tx7yijU1+o
5LV9R5keOEde3XQSO8xPIfdcZoaecU9j8wfcyUlr/qOrA+ezcB7X6Ee4zXTg
/BTOETwX5JFHFH6snpfA1gfkfdtL5a/JogVcS1T8FGlpk0UxriU7dlE6VZtN
Mf5K26q77YzJohh/Z6u0irhunCPg+3CVyePijHMpxvfADXfcUsxzKbbnqkOW
PSnPwOMpPXIn/P632lyKcVbx2vvaR7U5FOOpguWoo316pFNsx1YaaHbd7ZhB
sb2K3HJr1D7tJIrtv6lP+9iw6mSKcXzM4kHlZ7unUcw3/J9siXPKyKKYb3R4
vUz5jnkOxfYzcObJFy+84ynG37b+8fPNw7Ipxl+1p8kqx51zKMZZU0v7WSFq
eH0oXdevx+JU31yK8Tq7j8KRPfXzUcjZrhNQwr//BvVgGJeJZovq9Prf0XnS
yYEnrPm+hfEYrw3P3nOWk/DfF+RzDFqHK7fPoxh/Ey8/WN5teB7F/ORUx4tT
Jt7OopjntKxOLJ+YkUkxz2m9oeMkG5ts+uVq4QPHj5wvQT0qxsfz+zp+8J0U
RTHOan/q9ub+82iKcXb1w6N9E2s/UIynfmMX72wdFkExnsJ3fzBP2NjOc6p+
dQodWnjqpo4D32/wvRjMH+xp/j4z7U8U84fBj/S6hmhLKeYPKgNdfSMcpRTb
1bv2lt8jnDJpbdZJ76PjOW7C+mBcmH9XsUg2LItiXDjSvFWSXv06YzuvIb/w
spINHw9y432titfczqYY1zxn9F6x1TudYt779f253wHVUur4o1PXew1wFuaJ
cQTk2J6X2Oh+7lpvr150c41q2cCuwu+CccFvpOqgrz6ZFONa4GUF/6u+ORTj
b+P7XTnORnZKnXH1i4RiXtH4u1GcJxRoTl0wb/EninlOvvTZrH3n09F4Sm26
XXCnKmkU85M9xnoeeRO5vw3zP5/2PXjAMz4e5MeMK87oh0gFPrZiaFeVgamp
FPMWs0O9rf12cTmMH3NrYmRvhwzqcLj1zsidnIfAfl6uVnX+znrO60COedqP
FtLUoAlJbP4wfs1xo4/vUxIpxlP1GOnBH2Yp9I6K3OAB7hyXYZ0nXht9uY8Z
Hw/Pxbj5oHLQNlOzBIpxvMbmSOHTLEoxnpLYB7kG96Mp5gnLa3zStf/EYDwi
e+WiFpzqlo55NUkeMjg2elcG5s8k8+PFn811krA/QmJ2dTobUpOM/QLiYvPt
7LN3gl9Alri0mdtFIQb7BaSv35jOVQaCX0B0lq4bODQ2glyRS7wqmcDsGPs+
JsJBsmGsz59slTTsF5C+SxeoDvaJJ0rbNpUMr2L8n33nEfEH4p7Q1tvPMAf7
1+T28e6bnaqzcRyAVHecYSyJzsL+PgkLv+Ab/zkL+6Ek+tKIfW17CH4oSWmV
0VLjQi72c8nPFtR3kmMO9uvJJMksnbRqLJeSPYtPLH9llYXmKSH3ZVUJKw2F
+AYZp3t1q5VVLvb3yeYg3wj/GinZ6+32VVPG5cCTEV8iGSGj9clnwf8lKzpn
Fs6o93+zvIsLq634/Nl9yI35CXm/f/LCJ0tzsH9KDGfM1emiJfinpIWJcpeq
XVIcTyA3rCyPjriZheMPhO5bPXuVFY4nSMnD6Z7uvp8zyQOa935mON/n/+Ff
E+VLp7RfVAn+NVGZX+KUoPWJPO/1tTys/Se2PvC+iP+QXWN3K3/eiOMY9X6R
45hPiqHZmLcTre3L8x8tTiERNa4qtRZcDvNEdoAsmdw9IKQ6hng8fpNfUMO/
xwLnCNkZYjnP+539Yy4H/YdSxv8yMksg2W8Gu+9X5/U12D8F+Zuam7JxT6PJ
PxtSdRbbMrxjz3X7RP1CXHjdFpzHx61a+T405fe/Nv4eK69XpZKcZP8KCVE5
n/ryezWXN/4OL6/nejZ1SlxwpzTsR5Ogby9HhI7B/pqEBK2dulZ1/ifs75Ps
57sDVR+lYz+aBEaeVhq4I5WMd/R2DHbi96Ri/xf2YZXXO2qQlEiMTrdOHWjF
67xgPMI1EnbP3uDM9gyC8JH8WJT27FlSKo4zkNkdFxStGZ+E/XeiEfwz4s2T
dNLyi2LmMRV+XzWc69fp8Uumz+L3rYIc8RNyrG7WuaYXBH+ZnCvaUuXsgOWU
ND/7vvM0LcGvJ5+T7cb5N/DrQU+vgNyHkQ3iqwxHpg719koS+DBxvdtDb3ji
B8yridxWm38+LozCvJc0Ubj3/HaTT/THiiNdhwfx8/4fvJe0Dm9VR3U/YT+O
vDo93fSJawbmw0Tnni1toivFfhyheSNUrjZLwbydqGleHNzscwTFeAf8EON4
ytD2uWY907EfRxZP39v91aV47FeSk3IfTTSmJGH/kSy6+NQhRj0N+92k/9sg
Tfu6bAEfm7c5v+SUCfavpeRF2Yd7sTQL+6FkTOVgiygp9pskJG5CZJqGSw72
o0m4wTt72zosl5Iqj169QmyxHkqmpoRNa6Iu+Jtkto7V2z5+gl9PFnyNbD1G
Kvj1JHWWzfVJdXi8hAxRPXxqsYkQNyDn9gyZt94iF/vX5NzsT+ZXLXLovgF1
pzaVxTA92J+F9xrmqGZ8UppJMc4Cn8e4POLwsl6vm2RiP4v8eDrsTL6rlLpL
tZc+K2d+NHsuxp0bQ1vcShLiAMmkz6Vyw/53srA/S8aFfFMys83G8QHy5ef2
Ib/DsjFfJb3kFCS9JJRi3Pnf/o6MjO8yL/B4KwldmvLZQf0E48/s+7YYB68G
pv9yshD4M3GYMn/nhOUJFOMOPBfjVEB8XqHiq2iKcQ0/F9Zh4PCj14p8sX8n
Jf28VO1e+aZjv5WM9jAOJhpZFNvb/+3nSsiqNY+N1jtn0ha28c4mE7kd/t9+
JSXzFOR+nbLB/qyE7M1bd5KGZWF/igx8suzT4c+p9Pz9mff+aYA72B+B9zox
7L5XR+dU7B8RXefNG+foJFGMv//br5QSv8AeqdtreZ4SnvvEYMQp9c+J2H8k
3uZZwVe1pNi/IzdVPaN3O2Ug/RJiU2LY9x8twW8lV/WOrPjnguC3kmt3LOb4
dEujRR5PZAHyvL7GK6efwp/RUvJlYgern6q8/w/F1Zl8XosvEe86phHQ8x9x
YCaHuHFz5XiNxbf5vc6gf1bTa3+cW/C+Uoi3n585wk5Znt2TSq3U5Evub0ll
cvBPZ+ip6f4btx8xKKzT03Tet4rnD/IdA0aaZn5MJAkrf5V9t+F5b+AhjdeH
5y/GzVlP9Rrkb4F3wXicTymXyH9o6cL7U/+3fgmt3OIbde5kOtk84Hh53KRC
Jv/f6y+hhz3aGG0c9YmtG84LwPqA/FHs25xuG7PInxD1vSXN+XetIc/YeP15
HL6xnOcjGv8ulKbvch1UMRjrp3R9mfM79yU5TM7iVLYu0mDvHDSe51sb65fQ
8Trxo6J3ZbLxOH8K88T5BVhnFn/+45C95Wo004/j9o33Fc8jyPks3fyPKb9P
Dvj5tayK1vM28Tw/8Py23UqOu7jyvD2Mh3nifMSd0pG/1llwOewTeF+cv268
H3heqfH68Pxgb4saJ6vjOUwO+7bxuvE8i0N2bOr0fz6x3xH8uAfmahrHGnwH
HvLyIMd5+XnFGt0ftEph4yE/DnKcH2+sn+fxG+vheXCQw76C/LV5iqXfkB1p
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
Kir+nxcXffKYHpBP6ET9ttXkCv015b4fxzWvP3e4Tvt4349V/h+KhP4UA/vN
m9N8isnldQkaj2dwPbB/cN215O7Pzu10sH5KfQ2PlT8zKhb6jGy3n9W9mF4o
9Mv8yNTs+5J9h5r3obRX1U72rc4V+k3qzqUt/L00X+h7+tS88POqmgKh78nC
Zg89UL+vcD3z+fmOx/797jyuTx4hnXlOT6GQXF+h3iJhPa8Tht8d11EvcNyf
uywd98FLqOG1w7Ftb/E+dVi3ab+1F+gaFQp9RoMmH809ZV0k9DfptpMVploX
I/2Uau/peW6gaqHQj9b7ywjXHvX7UP2FTlpqEL/fHeY/0GWGZ7tWeUx/43tL
eD25mkvQuH+/uw5yWIcXQSWjS6JlQh9TJ2O7+yvc+e/C7iOfO2r9qJpssqr2
o02hEf9uIcRPQA+7r/rQsU6GqrlC35PV6G5RvdzzcB0jHXR9bISRk4x4HNxe
tSCVfy+x8X37De5jmLrmxeCdUnJa9sBwihOX4/4+eG7nFvmJKYZ8H8J4ydHq
HTFHs4jNvqblP97z8Y2/L8DvJ3A8es/FQ6z/pB4DrPKcrQtw/TB98m5l5Wy3
UqGPKeja5uP//71mhNcb5r/NtowrFfpixp3YLduRVSr0xfwmKeOcvpYK/S9R
dvI9ZErFuF6LTvhTrtbUrljox7m+cbzi6uBSoV/m+0RVxVbKJUL/V1TBoqu9
7MR+7WFZrW9OM8XvJaFl7hbV+palQl9YyLev3hoXS4R+qBdxWd80g7F+Ke3x
XcVQ+WKx0FelpNJrc9dg/L4SWpDaKmR8r1KhvylmeKR2p3r9GK/TTtnSsSNL
hf6Opd0+eg2PKxH6nta7unSaU/++eP/PpKqJuj15fRfIg/WNllvJ5Qn9LNus
XPpFuhYJ/U01iSqt8jyLaeDewTo9b3M+AP3ymA9YxMh/UosoEfrFDPQO+DbR
LRH6jNySHC989CwQ+on09nwsSfIvEPqhvj9vefGhUr7QD/Wpn/TE6+X5Qj9d
9dEvazOVioS+pNm5h/RKZxcJfUnKXtLjX5cXCX12u/r0XxIxu0Dot/oWcuBO
9KZ82u7X28CLPTi+wz3kGJftXcv2vb5bKPTZhczcYH98tkzo++svZ3M94ItM
6O8LtC6+59ezUOjzmtz6yp4z/nlCX1Vrs+Whp2OLhP6jDPVnsTH+xUL/1O1H
PaJ/KJUI/VYbrrdvETy5mH59n/Ln0Tg+HvYDxvcPZjttmo8sEfqq+snFBR+P
LRT6m26u33jyIfuuNLerHe7sntrFRUqtf+VLrllz+f+ul5NS04nbfczkCoU+
oOQAZVen+v2AcbzmYeT1jbOxXErP9aOTO3zB94pJ6ekH43498+P3n4F+Lemu
H1kSGcW43/heeo7jzzXedxk3u1Doe7q4tVvgkU1FQv/a5p5DI6M2FaP5UOqX
s+aBSs9CoU/qaqfkxeOVCuk5o2z7r+c4jsN8lMytp7f5xX+vxveicB6ye4Xz
tTq/AqH/64t7i8emwu8oo0f31Nkv8swX+pVy11879I9nntAnNa/JJLJpUwG1
K9Ksd205/sI8MV6PNO/UUcdVRjFPCLk58X1XuQb3ffwdf2DOuzMn63KFPqnt
kvVdyy3yKcZr94lbTsfU++MYlxt/j4Dj8reIyZP30myK8X1G5OEJL4/hulkZ
uTTmd8LAchkpSgv+YLiI2Q32fR9cH5465swGY5MCoY9pxFnzjPUmMsz/iU2z
imC5O4VCP1dl++8nurUvEurnlUNVgt9aCH4NmbGdnoizFfwa0qLTkLyw9vlC
3f7HBcEWwxWxP0jJii5t9pjdFng+mRa7YlNFPc9/fedESfBMrgf7Cywfse53
saGv4D+SLd3LH6w3LhH6xZ5s1irw98sT+sKyPXS6lKgVYj+IDLyf/XJrnXC/
Ckny/eJYIcQHpMTtdkRgD79ioS/MdUkf85c22J9NJi8t+5rE+Qp+NLH2OD7/
RJjg75Of50+Ou6WG4xiUfFO0TrWv9+txfbtTd9tQdzE+QyJ6bbp1XozPkD0x
r2p8Y/B4CdG6eGrgMzHuQWqMineEmWO5lGzs1OzooDvFQt/WfsVdfom3S4S+
rad9q3xUTAR/nDjEzS5TtSgS+rAOp5y0S1DEv7uUGNXcPn/Do0jow8osKL1h
cUyIG5DyhTM/zr2D/e5kUmncy/F6g30L8s7utb7+HsXkccKwaa9SGP8R9ifs
n6xbyalr1HOx/0Jau6s6bqsT+7aO9/a8FGpTIPRVnfV8vjjUWfCPiF2uwmb5
Y/lCf9bPKbFtYjzysH9Bai93OjP+WBapGdbz8RF7ft/zf/gpJOJc+BN/Y8Ff
Jn279X00xzyfmLoqVanE8fHYT2HxYWkXeflawX8hlrFFad5h2UK/1ZDmrTbe
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
m1quVt1cItSrV3RfPchUs1SoV98gq7Gw/1gq1IEfHH3uwMXjZUId+LPbnVrf
iywT6rSvHCj2ffqxTKiXfug//7iXXplQ/7k7RbPf7/rzhfdVV4PsQ2M0y4R6
VKks/c/MS+VCfen5Lh9Du0SWUbyv4hM7Zl23LBLqRfvetZv4y61YqEN+KKtZ
PoB9Z5Dvt7UJK+dUNOFy2D+kRxOF9tnl9L7mledxi4V9RfG+2nSnrvdzXV73
C/PX+xndMimuVKjv3TYxxsW8okzI8/Y9fi75ZTnet/U8+be7qX/9/t/s323l
rqVcDuNw3cKYH3FN5/gL+5O8bNc/6+SXMqH+7bLSjv1OI8rweSRpeom/n9eV
CXWzo6paT490LRfqWj/KDWs50EuwV2SSx1x7lTjBXhGPdMcNfbPKhDrSCY8/
+1bElgr1qPs2jY5T0hXOF4n7aj9yzpdy0mlV1sPAH+x8sffB9QzfmocW3XEt
FuoMdTp/3HJ9Uwm2G0Ttz9PwnpNLhHq/PQdVLsyfXYrtHul6U77VyuVFQn3j
bI2k8RkjSrGdIUfuqUTm19t/XJeyIrOvp0psmVD/NvDFAk+f+v1cEd6vLt+d
2THyv/dnMnnjNvOhW/1+XjrnYIWBuH+Euhf/QaPPDQ8opyrfcyzb3WV2TxgP
69BjuvwM+1FlQt3Ltp6zd3rnlOFzR+buWPnsflPB7pGwa09ivPeUC/VsDkrn
kxVOCvaKXFDbk97npWCvSG15xLfeCWVCXVlwyQaLgvhSoa6sOjDSS35qmVC3
5v/6iHqHb+U0Y/79LwOfCftKqJPZOHHWjcA9xTRzw95vuS/Zd4kJ7gsAPaeG
z3TrMqVEqC/aH78ge+zcUqEu6NGs5WP87UuwPSSfSve1MlxZJNQX9R7WQfv5
qFJsl0izgqu7P9fjAt5vS1reGqf6okzIOwC+4zwF8AGcjwDcxPkI4BU4DwI8
BOcRgC/hPAXwK5zXQLyCyYGHNP2sF5XykX8XF/Vdsvn83mm34o1OiZAnBT6G
49XAr3Ccect3xaF76u05zg8Cb8T5EeCBOL4NfA/nE4Fv4LzkzxNd943hOMLk
iF+xODzwq4E7ApQb5lth3+DfHXAZ7xPAcbwfAAfxfgA+gPcD8Ae8H9IGBGrP
1CwV8lbAi/B+AD6A90P3WXKZgZbcX8Y4bjr+i9rPSL5P4Pzi3x34D94nwK/w
fgAeiPcD8D28H4C/4f0APG2dz3LJ2yuJTA+8z01ZebrnHRaPYnK8f75XjL64
IpvZZ7ZPEC9i+wF4Ed5vOtfHfOlb/16rk8i7TibC/qEWrw94dz/G4idMjuNs
gMvz7rrNGPyOrb8Qn8d4jeNswH9wXA72M46DAf/B8SjgSzhuAzwNx4X+47ww
HMdxD8B9HNd6PLVC/cy/fC9AdaVTg7gW8lPYc4Gn4bgc8BAcV0S8hcmB5+A4
CfAuHCeJ/+Rd3qOe7+H4IfA3HN8AHojje8AncbwR+BKOqwDfqy5LWzZCjsfh
8fqDHm21m1td6nEZ758LCUsv3VtZIsRpgf/g/QB8Bu8f4D94n9y/uXvZkYpy
Id4LOIv3g57WHM0U9t1z/rtfbJ64cVf9uTOMPWB31FTYD0L8MEB1qTmtKMN2
j/EEvB+Ab+D90HPaT/mmU0qE+BjwMbxPgEfh/XBm29roPy8EO8b4G94PwAPx
fgA+g/cD8DSvhUmaoe3Y96FYvd/Fp800t/5h38tg96jbZw9XL+7Gvk/B7i3H
35WDe/Z+GT97X27AvqPE7qM2qDW1+/GRfZeE1Xt4hDXTjGygH+65wvOB+5rw
dzpgPj0qdds/TWPfJWT5Yvy9KrivCY+H+D/+jhKMx/fxwnM718ntf1bH7gXl
98+je1BBPtigxYK2L/h9s7But2tKBtR58vvhYR2wflgHfF89zBPfow7vtbcs
VX7oDHZ/PrunEd+LBfO07lj+64o+vycK9kmTyC6lz6XsvnGmB9+PCvPE96zC
e+F7OGH+bdxOSmc8zmL7BHDt4oAfS6Zd5XLgGxEBtTa3G9zXAfuqzqJXouQp
G8/w0brdoxNKCzj/h/faMmQPXRrL/TjIVy5oMSCxhS/3H0GuvTOwf1QQ1w/z
GbvD+YNmONcDeRCsB+QKJ6Rvxvpx3Af9imOdI65KOD8B+ZjCqshvczjfg/mn
aUTOmTSd2Xk2HuuH5z6pDs72plw/yNcc2/261RSuH9azcvcLo6EDuH4YP2nW
w/FTEzl/gOfaB6oN6kxZ3R1b/7kzi1rL3+FyWLculZvDy1Q5ToF+j9PTtp74
wPxEth/kk7/PLz4kxCfphEsVhwyuC3FIml5R8S74OdcDz/2P+ADBvyPIt65x
UDuZwP1WmI+vmesk3+Z8fWA8XmeQ7+pRETRC5HvEf1bSzP1RnNexekXSZOye
QIGnUf/aXyqd9wj8ir7OvHX2/stEjPus3gjOkdqu+bbRG3l/PvOD3LSvuqRl
MTnw1deS3+uvbYTn83tRNm4cuuSRQS6SS6nSgV3j5rzPYnLQU5hV/PiIQQ6z
v7A+RV2Xe77vnI7iL1La9vSvwR3TMpkc9Dyo98YMN2aj8RI6rCBfa5NDDpJT
OrzdidhL3Rt87+2vvNXrnucfenM5vPe7DjlN097j9aH0x34X19IqLoc/g64O
Odh+aB7SL6VzLC6ajN3I7QXMf96HjAvrq7LReAkd8KHrbq8qvM6USgZblqek
8XWG517+fefXn7Z5aJ1l9FXtqeqMHynod5TRqzYxHYYs+MTksP5q5Vsjpdv4
vTBwXkoeaY2dW/GB6Qf56M03WsWWRbN1BvnhoD++Lcsj2HuBftkQX7OO2zLQ
7yijT2vCptaNSULrI6MnKqIDNCp5fyDoiUvb7WQ1lvdbsrh3hodq5+FR7HzC
en48dnH824fpSE7p3c875HXG8vgaO49t/asWnkplcvi9fryMvvx+awayF1La
YqN81O5KKbIXUho3+q76TeG5UpptnrHHtv59Ge/8q3+K48D7uxJT0XwoNRud
cEBDKws9l9L84Jczt9efx8bPpdTeOfjoko3ZbDz8ns8c46sDvPl4kM+fkfXM
+UY2ey7ICztKb1nW71uG93//6O3rO9znEV43CY2p9n6m5JDJngvvdbyww7eh
N7LYc5kdiN/xpo13JnovCc0PdXk3NyQbvZeELp1WdWPEe6xHRj0me3STL49B
v1c9X+p7e71tLO+Dhf0z7Gnylk2d03g+AOTN470nzk9B85fRw1aPF7qeimf7
lq3PiqUdXxjweC7o8TOq6Dt6fgJbN5D7GE7bsKIkWrCTB0Nb/ZoRA7jI7eTy
f3btcDPOEey2/l2t7x/Mc5Gc0iPyib4ZtbyuAsa3Xz9pcpAxrw+A+XzY55xY
65BB8bnbs6ywb7fqZIrt86oLjwpudU9Hz5XS/fO2T7PPyGJymP8vy+X7Lpvn
UHzeg9alvSrSSqLYbgeqbq1e7ZzD5gPvFave0fe6L6+fYPapvf6Oxw3eC+RT
Ztq9iI3Jpdj+d5o/VPuoGl83+HPx89OZLYbnoXWjdJ/U405MRi6aj4T6Nb2q
d6A2B+mXUlOHcLVWGZnofZPp0McB6v9+Lx7b7e7DdZ5+UcxD+qX03cnhSkNt
stDvkkyjm1ovs6jlesDuNf9hOyU/JJq9F8g9e05e0KT2A9MD8j793jgmTIyi
2G5nzlXusj8kAu1DGY02DrR5W5WCfl8ZbTv86/wR2p+YHPbJgF1WO844Spke
kL+Y7le7UFtKsX3TvjkoZoBGFsX250/c3gOz2Tpwezva+Ma9jdVSiu1tP7O6
52e809F4CV1WoXBEPyybYnuSsOuQVf8Yrh/WuY36xfu9b2dRbK8sW7c8KOeb
ifRTOr1zcLhN/T7HdjhoUNs1s9nvzu1w69PBicd9+XiQW11v67DldjbFdnXZ
5H3yLZx5vAD068ZfIT3r1xPb5xFfJt89GMrlMP/ew3qMXpOWivRLqafWoT7E
gcthvMsjc9mjevuA8SvHOHWBfv35xThr7WFa+qTB+sPvvqb3yB9LuqdRbG+z
Sr+ZqC5JQesvow/sLxls8I6n2K56PVG8or4kgWK7us89rcfaJ9EU2/+Jseo2
qgWUYrzIlLagb/6w75cwHBi3t901/V2A7w2+zztmdnb3mmTMi4jDsHlDddtB
XIPn3U67f19X9lbgRWRV56up5h8iMO8lA3UjLqt347wXnnuu7RKHDZM4LwI9
M2a1WTBKPwrzajLLq8hgm2EO5vPk8lK/DlGfOf+Efyd5csGw1hvzYQk5N2pu
YGA15p9SUppmEu0TnYX0S0iznTeXLbQSeDLRMMqL06zGfoGEhF55pDHJMBf7
F+SRk07IraUC7yVX/dbrqX3OxXyVxC1s2j5ulxStWzKZXtR01Hgr7BdIieuS
KZEbP2eidZORRTEWrnpVAk8mwS8rja5r8e+ps7riUI1O9ydKkX5KLP39mmY3
8C/g/2enHnk5oxrzfCnZIS28dcwqC/svZNS+tK3KjjmY55C03nv2Tq8ReA5R
2bFoke87/j7w79acVx3YY0kC5j9k6dxfba6oCPyHxE58ciVjscB/iOd20+DY
C/GYzxCFkHj1uWHRmMeSO+87vPqVnIp5L9FZarpGfmIS+2/4O/jd+gtzagT+
TErvHjcpeCLwdrLSOyS/cqwU83yyd0cz3ZmP09H6JBPbPm6bhuzIIMjukafm
g7rF7EjFfJXMGBRW2/WmwFfJ1OfBlcoXMpEeSmZOahvlppWF5BLy+FVi20gH
zG8pyV6olvdK5O1Ed+C627cb8HbQ81Hzs8IfkQ8T799Hp8e+zxLs0hLPjrUH
EgD3uV3avHLYxlcJ0RjfycjBn7KHNPmE8Z1cHN5RckqXf08Inn9jgMEp38mA
79wu9ek5ZVGb+QKvIFOLpZ/HfIpg40HP7hFL2o9xzcD8kFRZru9wUi+JNj5H
MuJnFN1arhmv1wQ92wzG6+app6P3Siajlri1sTLB/FlKiv2DTR9IOb+Cv11l
FyU6LE7D7Z5L29kbrlI8npIZZYMVvvtivk2JeuLPpp2kAj8nV3bbHx9Yh+US
smP01XBzi1zMn8ksozVvL1jg+UiIRNkhYKQJ5rdS8sszbrelNBPzMRIRqeYZ
6iql2F7tvLhM+6Ma5rdS8qXTDpt9tlkU29Uwda9vw2yzKbZX7fqaP27qkoN+
r2RiptRt36Q6zmfY333eLTXMFnCZPP4Vsl+1NcSduf2Zm7UmZOOleMwrSIdr
pQe91AVeQXILpoQEWvD8B8gXtZgY1NJS4A+k0LNd78Hvomnjcyclc3eZ3vZp
kkmxXUqe6PtB5ot5JiXt1YKyI0QeSDZrNjsYYCPwOjJCM29EkHMmet9kMrG1
apjiHYF/kkcfnsj/EfinhPQbPb0uW+S3xGq/TtuYsCyK7ZWcmeNJl3q+je3z
8DfWsq8E8zpK5sunrM1uwNthPss8fL52cc6g2K5OXqimc985FfNPYrB6fvHb
9FTMG4lygm8rAx/+HVPgt1M7RiqUT+T1mrCvN+/fabUuhPNF4KXXjYYnXNrJ
4iewT+nPe+2CfHZmMD0gNxo0pLdeKsMp2L9Ufs6W01bn05FcSiddp1HeDe7Z
h/mcnuxxRc6a4QXTs836u4p1dBaaJ6WTF5t+Sx6Kx9fL72gonLFidp7pbzZi
eO+Qm9lovJRGDV3tFvAkHemXUPfDc4e8c8xk4+F93YsXmtvV4xe8F/x/3fsp
N0aFRzM9IN+tuuvWPrMEpgf+7rDK42jqohSkv563H7vx9GxVDFr/ev/xqI6F
3x8e74D3Da8cvN5xKfevmP+bpvg1K43Fe9n8o/UNdTpzXsfe906T9/cGOHI/
ENbt/Wun3ccvcDn8u3ddd8qNvJmF5iOhfTz6dJwfmo3kUloduW1ekz/c34Px
vYw+3KrkcW/2XhU/zS93/MzlMJ+BXdveHNOOxYfZ+O0vNKW9LvB7k2G8X5rN
5BnR/P5ikEcmLT9ub5iL1oFSo713dy7sgecjpR8Tj5315HF4tg4jkr7cjDHI
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
FwIfOON6aHRcPYMH4/X7Jl/dl0bsajJ+T9zot1kEP82POjNc8s/DUpbPGIsz
+7rGTKln5iXC3V1nmNqOYr8rxpGL1lXMimT5IMbHHxdnzNtTy6xLPtZbLG9k
tIfKA8jXtGOr76iTd0ZoPk/Nx1+yu3Ro/ALGeyRH9lSNZPtTYLyw+OR2cW/a
1xXmeyDUKLLDVOJHEDzuNa80mkcS/5fAM6tO3iqh8Vua3/tycPymUdWM3Erw
Z4OoeWMaKJ0w3jHuxLK5cdWcnlQfPPFMGdW3hM8ynq4tP3OJ/if4382wtdsc
+InLYxzyqzE/I6oWs3qyqXvK9aMcnnzssM/Q/0oZOe8I37rVKTfXLazl9Dxe
0i37TJMEs3rPZmI/01MdyXlK8H8Lur4gqR+L/48eWPHz0OvcGszqPSPHWrOf
+hQO69V1vELRzL0UDvP4FGCy8wW1W8h3zKSNfT/q034r8KuYvrOHXBDNKwA8
R1Klfa+60f+G39E9J8y1sKvCrP680mA5LDyQ9h8B/FXjDy4J6Ef73AHc/vyB
3fVN9H4cflMCuvnaUjuf8CdGPXD2uYUsHGPVzx0+3b5N36uDfy8Ib4zQ7VeL
WT35fvos42MP6XtjQNfV/Ky94gD6Lh3Al4XblrTSOC2Zn0lJ/08jiH9E9eFX
g5du9m4UDt8feNwsxSuQrivgOViZO/QneS+A6smybtr7/Kj9T/BlKE4eNyqq
loGL8NqP+u4G9F6AyIlZyPNUT3pPQeBWGw4cCLrN4sf4VUzyDquHxK4m4+f/
VPFPpvcCBP7gfV/1F7ks/zH+IiMq8ptez8xLhN0S00dYUj+Inms5mnvVqd9E
4G/TB3XTtatj8PzRqzNl3Kfa0X0IcnU1pdh+esdKzOrDurbS7f2iKsm6Ev4g
tYU/7Vj9gPHvvQ4qL/vRPpswXrOxaceH6ZQewC+dqKLZsR/xcwlcxfXYrrzN
nzCr9xrLR3aZepvYwwSu19Wgn/6YakZ+JPh4qJr7en0JZvXqj5pInz4C+xPs
2V6VsqnTNn9i7RZUMnWrbIJeBWtPIjPVw+FxNtROAzt3/mStjANNH1n7Cn2T
U0y2CWTzDCVotF3Twd4B5P6R4Fdfv7z3MFcaj4bxlaOiAw0CKhl7T4wSnySp
nJLS8cT/RU42c1Ate16g7wutv5/rU83gwch6U7yShi5rT4rQ8uzzQSZizl5F
v+ya06Lbq1j7GWGXopo5UtZ+FqObB/XanTg8IlSbdm3jClENM9981Kq1arB7
HxYPRm91Dqp36lPH2ufIoap79PJz1G4E/iso2RXM60D6yhG4l9Qwfdh5kg9A
+N+0TN0sQoHEnQj/7WUmWvTXo+cy8XNHT0oMkXLnNaq1HKO28ybgoXlWvZ3K
fd6SeDjNp7ocV1bno8vZmaiLRnfZ9X1IXJTgOaDn49y9L7U3YPyH8Yv3KelS
uxTwK5sM1HI8UcXMKx9ZHx0wdukJer8CfLbdG27ynsZXCZ9rmh6++5XG2uFi
1CXl4coVJ+h6AZ2jPkSHnBldwYwXIfH5wfe+8PY8cr3WYcz3uDqGP/lIflYx
btpD4fDdJVtvSxVsapn55qNai93jSzk7WYzeV8S7TTxXy6xjPrKP12vt34e1
Y8XI38j1m0afWgYPRlWK9z2upLF2rAhZXChpe6zD2r0YDW5WGvXAn7OHUcD+
VaeL/tjDrN4wGP7yV8jRMk5fbZ5/s+egLZzdgrpF10uTFlewdgUa7TlknO8A
alcAnsCdVuGyHpzdgj44jfmSaEHtFsDT5ar2161fab0MfPfb8LE2GzwqMavf
tGYt0JvmwdKZjwaP3D7qeH/WXhWjoT+M9a+Ws/EBjD6FaEqmG7D2ngh5l8z8
vPc1Z5eiYUNWf1n9kbUbxajxrXaPS5+rMKuXAg7s9bR5XY1ZvbSg2HkYes3Z
t8js4JHmCYvYc1CEcl9cU5pxoRazemxu2YeoTf1r2HMTLUqwlrYI7DcSz18y
xcPwC82TBPjykpnDfl6g5zWsl0X4zS9m8dz5iDLSy1tdFcl9N1mXBuePp3aW
U/sb4IP2pAZ8NaB2NrnXWOwxrcMA7rxGR838PiaRuDTVY6MqbGJdDTg7ELnY
hT1a1Z/kAxC4kUnuzBEGFA54XBWyFlkE0XeXgW8KP5Y+SKfxTMJ/he9lPk0P
WbtXjF6+XaVt5s7ZmWh8e8DLaUFsvz8Rmj06XkNmEWc/o7Tzvg8rbnP2Ffqw
0zRm0N5ahg/5KHDXTleJHbWfYXxkVkBK/wu1zHzz0dawn5V5UZx9jlT3vz04
pX8tZvVVraQ0tWt/Fj9G5huWLYl4yNqrIlSUvwun6LN2JkYvzwXnZrlx9ify
STBuzuLyTyR44vFH/b2k9D0A2Jdxyxt+rLah7z0AXL/b90wbUT2XB/XmZif7
rVPpvSfAjdfv6xL5n3eC/vt+BF++OX3SHXEDiTMC3C/g+yB3BH2kaf6G/DSX
gcfPNXB5VssKRW8MdYm+JefVuzb/KTtEdDys//mjqfv2CuYL440q5/04dI6+
DwH494Y8yPZyoe8WANzh2y3j/dIGgof448vDRlhOpd8F+rPWHfI0dKFxVRhf
lvvw2+rPtN8xjFdyOpK8eC+99wH4swVeR7e9rufykVZXBqgZz6D3HQDXkb5b
ePo/7+kw/F8SEtX35usGzPJf5rHXu4OLGjDL/xNOBfEeQQ1cfkKhk6R+qUE9
l5/QIe/04S0ZdDzwHw0b1ENPMF8Y798h4ccO0ref8l9xb+h0R3fanxrgOhdk
oy0/N2CW/yc+Gb83mUG/C/Tr3Qz4vsKdyydBS9reKzfz8oDGH+hZa39eyq4v
Oj+29m00eaeGxtV7VllmJ7pycoLqDY7JRDQ2sPsC1Xw3dvn+itsXyPzl60L5
Mm5foDcntw1q0eT2Bap89H5y98AGVq6QVoy3wtxGKSuHqMcHg+bObrXsfkee
J+qfvbLl9jsqHBqaVfGK2++o1mDeIsm0enY/okEDszde0OP2I3Kwys7c/Irb
jyj+m/W8x7w8IN1F3cN0o6Xs+iKTMmPLU2oNrJygdKWRP/08ODlBd/Ar94vk
/RfK/1kNn/v3yOL2BTLUMt019A23L5B29pe3dYu5fYHUZ83s1BhMx8N3t7jd
nvnjs5SVQxQ6d+fOFo9adr+j648/ez625/Y7ivRT9SjK4/Y78m1MW/ZYrZ7d
j6jEocd1jzXcfkQSu9X5OzPJviD2S2vvH6sO0XUh9s7wLenDnfXqyb6Cfx99
7aa8ti197wp+fw85kHHaldrhAL/zfJumDJFb6te/TBw/ZaQrfQcLxsuGewV3
eUXtcIDnF56OzhQROSd4dvVcavKcvDNC4xLmn7LnF54j+pnMV/P6+A/G5+n7
WPDvtuPlZqj92adsHK85oNf62dMoH+B3Zfj0aVumUb7BPE5mr3QeR/cd+e6w
PeMu+Qj4D3ju2EbOt15Tj1k+j1mSmKNpT98Rgd9OnfcZH/Wg9gPAgya+DK4i
epvyeWPY+4A+HvRdDYIvd+Da1tfUrgC48pXcsrQMIs8ET+WqgIGnyftllM9B
cmp1L4OIHibzjZvzQ1MjWsr6EfiG15FTC/7sR5bPOqkjZ49To3wgcmjR77qm
GuUbzGNTqGd7Nd1fRN5z16d113CvZdcd9dRoyV0TJWXXEekq6706P51bR5Tx
LPvVHcE6wnjDfj5Bz/Tr2fVFXX1Nz+7NbWDlH302nJy9fWEDK+doVdSXoCO5
nJyjLhZndJRyG1h5RkNVRpsbBTawcovOTrH4YNzUwO5T1NIUV/3Cro7dd+jb
Rcehq9yk7D5Cdk6Guicbpaz8o4NXBgxMns77s8Ps4k728Kxl1x3pusf7jbgo
ZdcR2c321Haeya0jil9YMH/uFym7L9C9XRk/r60leozg3z4gZk9AVgMr/8ip
z7e9G5c0sHKOVI9cNwrL4uQcbUt4cnNaVgMrz8h96jVN9ZAGVm5RzcCp6w9W
NLD7FI3MaR/esLWO3XdIzeV++PijUnYfoVa9B88Xf5Gy8o+8d64x9JhZT94X
63zh7e6hOa9p3vDf98Ve9ooRbfDLI/AvmTuKJ10VodHlsg8iWql/Jptjear5
qxgNfz383vEOtJ8RvEeWnNg7JqmZ+lXw7liB0qDZJw9lEjzwDpqJ9iKJcw7F
v187o7WTRiH6vvnC2rvN1P9zs2116X5ThPaoHGiP6UjzpWBep64NqOl/mMIB
v+ZMrTFWvyTceB0ZOdWTG6l/D3DLp/JXA31o/ADgX3d2z1n6XFDn8Jdv2Wdr
1PVqKBzG43OWr9E8ajfD+GkdLYsWW1E40HnIp119/zD6XRgf9/TRbfnr/Lyy
VC9rzLGi3wV4J7/siWpFtG4B1uX717dra+VrOXhCd/sCpZXV5LvuV1ZgPdVC
NGRDdPS8TjwelXlj5svVkvgCWd8zEpneoybR8QAfYrVns0IyzX8CPIcML676
lkTv3xwneO7SelFCvgtweCfOsrJswPZztI+YT7+9Gy7qVhP5BPi5NQsz9I40
oIqVJeMbBX5w/5xti04o1BK5gvH/71eKdqq2id+fyiPjF4trC3U+VBI87PgO
d68m7/xM4wHeax+Osv8pZfaFCH36scbH72Yt6nC+q//pCBVin8K8VozWr7b/
QeNGAJ/7a+uFe9U0f+7por2mG79LiPzD+IFHVys/NKlAWW1aJvIdad0IvJcn
HXRCJXUSDw8O/eL8zIjWY2RJeu/fmlRM6IR9B+NvF36YlfSsmqNz83zDER4x
VUyenBTtmleXlhpG73kS861rnB2lhE5yT/73nb7mQ9fPqTh+4uB5W0yvjU6i
/Z1d57bMsHJsIHgADt/VeTJE79JT2mf5Sa9FlnLDapnxIvRo26THrlrVhJ/s
/rUuNLs/NpPoSfIOo0UnrfO9zhE9ibXnHqlSzeX0JHnnUb5f0VGrDFonTN5/
tL7huqmN3j/Vrxq6vMtnTq+Sdxt9b2TYxGplcvhduqGxtZ/od+8d3JIzdw6n
P4n+v5uKH2XME9xr/p2XaWyWAaZ6iYzfaTniiaETja+NVjkhN/s+p4cJPV5u
JrMSqf4heJ6XP703xZfGv+C7LvEvJo1M4eFuR1/6b4yl+Mn7laljjcOpniHv
YEbvu9HFWZvoMQLfUzdzouswGkf79jKncsV0Tr+R78rP8ba5GUTzGgDP9An5
2y/+pvfSIG+JfVU0DiXRuutl2R0umh7i5BO7OnrF3vrN6QeCZ9CKs/5f3Yn+
wUF3DQN9bTk9hgs7jpg8bRmn98h7mjuDlK6MDKT15LCPLLom/XvNjPaL6eZT
qz/SrYbQA3DY7wmHXDYdVKXx5aYjx/qfM+f0DJZp8Ch/8YDTGwTPutqrDsue
E71B6NE9+Xnha7qvCf3nrR29Z/+WcPCUqyHKC2qJPiR4xp1wOvjWhOan2DZn
H+zh9Occq7sSP1KW1quAHF7ftTTCy5nCQW7fbUoaLfOQ5uUDfO03xzclbRIO
j8OIA+nx82lcEuQnRidj3L2NPHzpugeS9lSaHwp4uqpouCS9ENTP/x2/J2Sj
TFo9hQM9g3Va318uqePwZ3q3bPWL4+cV1kku7OZGigf2US+ZZV3OjKR47iQu
SVvcqxBNkn9rGCdL4SD/Pe926bppZC0Hf5p98d8zq2m+O+Cfvi5HJ2NjDQd3
ONAnNyCW1o1cmNnplMafcx++C/Cv3tc6Lf8gRtOCV1v97kz78MJ3/Ya8a9+R
SuvAgJ+r1Z33xNx5jVg79r79p8V3ZV8h1v68qtstYXURzdMHfo4+GXN4S2Ae
B1eQDiicGUjzcMFefTVzaMvEbuncuXnAOqFw4hTSX4acm+tLe4q+3aB1LzBe
LcBy+eyNNRy8cPpW88mp5J6Y4NlY5h4u+S3h4KtSTq1Tqafv2QCecYc8ToS/
oPnIYFfAfgE8sL+ydXv8urD7E6Hn+cYb7Q5/zvECfKi3nwzt6w3jXbP+XR6c
Quug4hytLXbsbCDjAR5RtjPX+c/5C98FPDkXTru3yNcy4yG/XIp6qW06phLO
9kmXInndR2ZDSd8fTOyx/5YfEVIYu3jWot0NqOcLTd98uQJuXQ5oT25P9coj
6wt2I6wvwME+BDysH+GsrHPouSvZjxhvWipTHsHpJXI+llz8aXXhBM1fJOem
c5PDrAWCfE3wI6r6t80zo3CQ5751ScscFCgegKu+7jGn9BHtiwR4PgbYtL88
T+mBfTotOMxEYRPNJ4B9d++f0uQmnWoO7h5r+f4L1Q/Yf+6RJ0b9OH1C8M97
nvW816g6jv4JAz/EjSrlx2+Y8qbznUu07yd8N8NRa9PWMpq3AXYUozeIncbo
AYJffMtb44hhJmLtKGZfk/No/WOH582ttE4X9leWde75ahGtA4bxop2Pi243
0P6hMH6CUsvYDLqv6bm5UHlOwTTalwrOX9gXAAf8w9YpaWSU0f5WYG8w8o+3
+h9sHTeS21/kPG1UPpisnkr2Lw5yLQjZasXtX2K3PMs1ldbTfUfsCvgua1fc
rzy6Tq8P7Z8F3/XxGfE5cBvtkwX2D7NPyXejrr0RqwvqiQGOstu+FnvncfwJ
HujTSzaM7GtiR4E8kH0xqffoxCXVmPUr4V3UVc+ehr1zoX7o/XHVqiGVlZj1
E+F9z24rD5cdHFFM4H/pxJZJauoRB6i/qT/XdrCLXQNm/VZ4z3SjnMG/FetK
qB+Xn9No4VaDGfuNvCfL+t3md1wG5OWXYNa/hvGB4oRnQwX+u3ajzOY7swsx
GweA90zZOI9m1al3Ggq1mPWzgA+svwn8ZP1HGM/6mxrHbW5daJVg1v8FPKmr
tLMLiso4vll3Ng5REPiPitjqbuyeBsz6j3OvKw97vLoas/4g4LnnX7h86k7q
n86PjlmT9kdBs/4s0MP69QBn/XqQh+92qm/uhbH97qVY1j/4+sX71J/1GH58
w7I/cDbO4P1s5WE58wrMxgGAn2wcANaRjecAnI3PAJyNIwGcjSOBXLFxv/cD
L13LrRFjNn4I7/Cy8cCHhRtVNFNFmI1Dwnu7bDyTyH+iSfWKWPo+EMAPTVbM
UlWh8UD4bkbkMeuAVPreD+Bn434wno2/AZyNN8J3R4WcOatjTOvxYDwbrwM4
Gw/U9/osUsgSYTb+CXSy8U+As3FIgLNxzmGjkqc/2M/pHzzxa55PWj2n3/CF
edoNuiNqMRNPw5tO+Mive/BHbv473kXelWb9U5Bz1v8FuOMEO8e132ne+pxN
yVMCefkn+Fk/sSBvn76VIqeXCH7Wf5d7/LYqxobTD+Rd6RLLpV2eCvxW2F+L
XL8d3SrwlwF+68a5+v05NF8K9gsbl4DxA7c9stVJpv4yjGfjGyBXbFwoopPZ
vqxFhZiN/xw7ZzTQ7moxZv108v41E48COBu/AjgbdwK5YuNmMJ6NC5F3rpl4
TonRE7836ty5Q8aPfG159boJze+H77JxLYCz8SuQE9b/ujMhpubJ/GrM+iOw
LqzfBHhY/4vYCYz/1eOIw+gL9RLM+lkgV2Gm5vK/TWm9NcBZ/wvOHdb/gvGs
/wXnHet/gf3A2GlEn+uoyFzdHVvL8YH1T8k78ox/CnjKZ+/tE9VK61kBzsYT
AM7GEwA/60fDecfYwwjsN8auI/YV6/eBHghQD4066pTHwSfM6TlG/wetj4fz
l/UrYXzOMr+pU305/xSz/insCza+BHA2HgXyz8ZtIjSR5cshhZiN28B4Nt4y
1S7b5eW9EszGW+C7bHwJ4GwcCfYXG08DOBsfAzgb7wL8bBwG9tGJFbmKaaXU
byL7l/G/QP5vRQXHL46l/ktstbhzj/WcnJDxc/RuTlqxifYfgvOF9ZvgXPgf
fhA2jL6ZUC7wg0BuWf8O9DPrV4L8s/41wPu6JEVVC/xrwM/6iTDecEXCgiUC
vxjOayaOgR+nTi+ZUVqJmTgGwc/6a4DfIN7x4e2ftL8U2A+sv7Z6ubzrfm1u
P5JzgY1XgNyy8YHrQwb8FA3n5Jzo+WrTeoNX28o5/Gw8Acaz8RmAs3EYgLNx
mOD989Z+jxdhNp6joms3Z/Gfc5GNM8C82DgD4A82yRjV4/lrLi5hbHe20vRc
AbnPh7jQEMu1Z28Yk37BJH51+0WRlbMTzXcE//qxQouG0gvah277Et3PY12k
zD0Ivd9s12vVbT1M8gyQi/Losdq/IX+EwifO+mKRuKKQ3FMAPRCf8Zx9JOTz
v3kc/fEGP24FKdL+CADv4bEw234TzbeDOJW+npxjsguFQ7zo55XN8TEXaJ8C
gPeaZpW5uZ3kW5D4c3BW7YJlb2n+yK2lKm0m/u+Y+ywJob9lZ3S3edG0bxfg
eRYWEO2pS/HDeM3nA07M3kTz6iDucbzHwMzJypmEDw/wtSFXt1eQezpSr/N3
vb5u/vzEfz/N+5h8w2dPolIluWeB8TPW/kife1DK3BORd+PRhZ/7Q4yDSX9q
Qs+vFRW7Ur7QfhkgP++f9/YMPUH7TXz0slJJratk7n3o+JkyniZfstj3saTI
eVZ45MVYmo8D3z0V2pjYT4H2lzFXC/XTyqsj/Ac44AkfrSrbJK7k1n2dysA1
TxKLSR4PyEnK+W6R++tpH234bq3XPzb3FWn9IazXvOjQ+wUWZL2wplr7nT7q
nDyT8Xrbq6S1VJ5J3FKrfcalr51o/g3Jt/lg+arHFh5++qPDtUxlWk8C9J+r
8P1nA81LJvCb/v9GJCyn40EO9597u1f1Pc1r+636pVAxnpNnMv738mEfKwxo
HhLw5+4ly0CbQUQ+cU2P8SObi8vIPeN/51dJUZgyCh/jTPOQrqZt2VfVyOkH
fL55tG79fk7PkLhfR+PcAs1/aV5hRO47dWUXTp7Jd88OSjrcyY/2Wx95WWdl
+oNa5h5TQuZVP7MtpeUHrWvqE14a3s28gtADfBi/WzU9voiTQ0KnwYD6W1IR
rdcF+Z8x0lZ9qyvNg/zivn7j6bBPhA8ABz3z3+eFhOg331Pq59uW0n5YICe9
pi4Z+tKC5n/D+JFndlhaulM4yOGMuRcdsjpROOgZOPdBbxw2evytpbCMxD9Z
vV33VKvDJQuanw3yc6G217R7BiRfkNC5sOpexxBz+t4nuUdL6tuy/wOFA56j
X9q0l1wuoPAavXYdlUIS7wU4rOOAbomKboq0D2AX6x3j9EsqmXg41W99egxW
mNZC4aBngP+AZ4apQl6GjZS5p6D5OWsLle+LaT4x0szpaLsrgKwvYs9Z8YGT
WSdJnjE9Tx+X3D61w4XkR6Kw7zo1NnVkvxA44BlZvm7KgSM0Dx30/H/bV/S8
0+m8fHFOM83jhHXRaJ3lrbBeysFfazeVuQ2ndbaAJ7f7J/0v12jdMqxj58RF
Rqc9KR6QEzfT39YLLes5u8Vty4vk5YaUHliXbtdUzRaMzSR5nzDee3MXpSgx
rbcI8Rzd/144t1/IdwNVHs5SiqB10TCvNzq7nuRuoO//wbycYw8mxaUUE/jN
DDkt+5GcvBH8DtXahnlB5N1cQr/7zcjzP8fTuuJg22M2HfUqiPwAHPTSf/vX
Etxyzt7idBEnt0Sf9Hxv3GnQMVofC/Kw1mTvONdM2lcFxieeUjOI96D57iBP
0yvcbzoL8nEZ/czdp+w8oNWemCCoZ/qrt5l9QcZvqIgx2FRF+6GcQN5ILpvb
X3jgsHsfGrdw+ofgyQwd8bE6mL7LCPqfkXO8OiPzklpCLXPfIUE7fE2lckek
+H/YP5i1fw7Hb3M49bESs/YM+DWsvQdw1o7tt2KWS4VxBWbtN/CbWHtvaVFb
jlNBHWbtHPBDa8qPDFrjQuHg5zoY3G7MdaH22CnTrkPy9knx/7DbMWu3fxB7
m19tgnxkCofvsn4BfJf1IxL6tWfeOvkJM+ca4Q9r9wIfWHtPz13/ebRJBWbO
XxJnaBqa3ONZKrHr0Nr92lcK/ynErH8B41k7H/ws1j4HOGv/Ax7WjwC/jPVT
AM76KcAX1j4xHR0/vXE/J5+Ej6wd5bQ1WqNHM7dexB9n7RlYR9Y+uXJ8xsTH
hzg5IfET1m6B761LHLxq0W1aDwHry9q9G/UV7dTLyjBrHwKdSjFKVl+LMgi8
9lRQZp0Rt1/Id5eMdThXW0Hrw+e+/LF26ituvxD8lqMtV/oL7Pkud49mLlvH
yRWhn7XzQR5OBcyrOhNK/Gvij8fldDGv0ad+BIxn7WeQn4mGVZf3faHwyvv1
brEp7zBrhxeHOYbcVanEjB9Hvsv6C6D3mHMElXzeaHzjaR1m7RlYX9ZuATlh
7RPQJ6z9A+tyq8zs/tZyoufJvl582WfuToE9diXnuuPbP/qQOQcJPQq4461G
9xoOD2unAZ2s/QN6nrV/gM7BJzdrD3Ei5wiSRmaumC8uw6x9C+NZe4zRk1wc
OKjlhf7Q27S+EOSBtYdB3lj7efuHjl29Xd5h1v4H+WHtdpAH1v4H+OMBKlvl
lKo5PIteNFR/vkTsHMJ/1q4AeOjix5kH0mn/Pth37DkO68XaP6BnWDsB+MDa
h7sqbe+W/vHnWfsH8OfU1nqk/KZwwMPae6BXWTsB5MdvvIXWVHMxh4e168j9
Qmz9rMyqDMTud9aOBT6zdjKsC2tvw3jWPofxrB0O303rH6njHkntUlivHuIn
u0YK7D2YL2sfgtyqaGWFzxPYgZfXRCgc+cbJOe7fvKbtqS853wkeoJO1q8Ee
nnfLfxVaR+uiwX5e7/tKSeJB61TBXs2Y7iy75C2pP0RFnTfInvAoJvuM2afo
hu6RR3MvV3Hw9pcKG7q10TpeOeeiZTdbpOi/z00Jylqkj7Z+rCb+PutXto6Z
4XzAmNaPAf33E5xtOh+i9WNAv/NK/5bQIlo/mfVe+fP8AI5+YrcP7tyoePU3
25fkD9/dH6s3UzrxFX/50Px2jn5Cz4yGyqGzHGjdtbxX3gK8jXyXwGG+sB9Z
vqFXmvMN22n9OcM3Aof5BoQZf79eQPEA39Zmr9oasYHWXQOdJ2bG+o5wovWN
vZdcCHGz5+gk/FHJGvNueAe2/6kU3VnzfKeY0oPnvOnnktzO0UnWZXa0S5J1
SR2HZ8G6MJmh56s4uVU8cq/YVKeB0wOsPMO+Y+UW9Akr57AfNf065wc017By
i1m5fWEZFXz9hxSzcpvhbxAr71+M2X0B32Xlk9xTB2is7qZN5Rnonx1bUt1d
ILeAd1KIpf7F8CoO7iuXM7ZQIIcPipcOyGrn6MSH7U1X9K+sxsz+onpJ5x8f
mZ/0PSegh5UrwOtY5mSp84PK4d10heToL1LMyieMT+8b5xAbQ/vLA3/Y/QL8
YeUW6Gf2C+Fb+PrPz5JecHKFWflk+MOdO+y+WDBriFjXnKwvJ4esfO5Oe1nT
wZer10CuttX9xp8uZ+rCRKj/M+vsCUpcvRuuXeH3qM9drh4NJ8S9m+VYxdW7
4YW+Dy4a/eLqzvD81bdPzvbnvkvyS9l8G6hTY+/rPe9kr1jhXc7kn4uQRZAo
fOQRLo+U1P2x9/vKhzOmX/rB5bETOhn8GPjD3ocCH9j7UK9+W069GcflOyEj
pF/6OoHLd0I/vj+N8Pcvx+y6vD+W56TG5+cgx/zcs6Mucfk5CO5P2XofJ1HV
JQsvLv8T3w6Kqz4SzH0Xn03HnjVtXP4ktsw4allhyeUN4i+aRw1XveDyzcj9
Jlvv9ja/vzTwN5fXh4EP7PpCviib5w/5gWzdB/CNrbOA/Fs2Dx/Wi83bX9Lz
4ZPRQdy9LXLVjqxwDefubdFshUstN/pzdBL+s3nOZ2+VxoU3cnk+uPGdUqVF
EMcHPMR6Zem9L9x8cYZht+1Dz3P3CCRuz/jd6PO+gtER/D0Ieq+x9oCZIXff
gSAux/rj29cc0bTj7xmx3ThZ3RvV3D0gBvys31d45LF+QxwX/0Rwr8T4ZTjf
L911qTcXV8fgx7HzPd90LOMn70ej06/GX/4UxvndaPvTtbdLI7j4FQ6s1Y6U
fcjFFYmfws53UtoPkzNLuXgUZuJjRN4g3sjeU0D8kL2XgXgXew9yc1rAcavL
XByAxD3Y+DPEZ1g+QxyGjcd6yq9cqm/O+ac4dHXHxlZljh7cZcqmbzlizq4m
cPY8nXNcJzhGwtkJ6NvLcI2ezpydg2OVdGXMCrhzGXXu9/LTClvu3CT5RIuW
bbIs9KV9DP7uP6SY+dHt6nOaJwz7Ptdyw0vJDZonDHro3dEOJm1PRdx4o3Fl
n2ftz+TwJw04+G/eIZp/C/QEHljt/T2c9hkAuJPfvvO7kwX1/n//ur1KU1Sv
4d9TXOQ5SWOcoG8A/GpHb3y73ofHM3zB+34/r1F6YPyuJjWtgc/5905We1bo
9J7H4heh864qzZMEedGAb26SzcqKSRIGvwg9GLrOaPgvHq6cJhvYVMi+p4iR
d+rK+4sEfRhg/PxHp6Kbd/LvqfR9H6ryYSKLR4QStp68qCrIl4bxs6NCZlUm
ce9BottGA7+YC+oXSP8OjXmulhtonQXs19XjBp3uEZXH8EGCyn+M+EfzJ83z
B/g/A3rEDauhef4gL34acu+HFUk4eENkH4d3k7h3H1FruvT1O0EePoyvazPa
XCKop4DxDxU6z38pyM8HeNHHRxpdBPn5JA63Vmt6jqDOAuj3HblofmEM/97M
qe5tq/SLaZ0F8M11qGVbpaDOAuB5G6Q21la0/yXArbaEzWkS1PvD387C3QOd
Iml9PeCzLdqWmPTwNQMXoc9Rx1XaH9L8ZIAbb/E/07uN7e+cjybMG7hRHEXf
wwZ4t6jL9pdU6XjAg66PjJErp3YOjF8cr94ctJjmXQP9JU6hSeesuD7gaMLX
bpaDnfg+lapLqxcGzuPH94lKyv/6r6Au/u/fjz2rLrY+4OENPyoa5sey+EVo
S+ajvJThdDzA24euirAX5GPDvDSjLo63FuRXA1wODT1kJsjThu+6Xtty7ISg
Xh7oL3+7d353CxYuRhNWzZVuEtTRk32h37dk+IRiZl0kaFXRW5mXQWy9gBgp
GX5WuFbP9zn1bFpwOUCQh0/2e+o48UZB/jzAOw1J77tFkIcPeN7ERNobCerW
SZ5Cp7NnQpMrGb5JUMc5I92iBHUHwIewDitnLxPkxxJ9tXBjTGQ6ze8FuKjQ
q+cJQT4w8Nnr3Ik+F4R15X//Gt/4rvogqCsHeM85Q6RX6/l3Aa9MQvPd5vN4
prX3emQdx9KJUeceSqWZfty748gs52Wqywv+XcCMPceO2QrykwG+Z6vXA5NY
9t3xfBRrEfrZ6Bap6yTjVx+Kal0/RcLxbcEhDZ1NgvxkgNvU+RhGjWTpFKEp
GzJ+W2/k+RAsXTR5ZTytE4fx47yfKL94J6gH//s3qml8VG5AHge3SXszaJCg
HhzwRzgf2XV3czk3r5gJV7GsRyb6b7tCguYF5nZbFVvF0ClGV60jPVcK6tzh
/yt3VJyoLcjDh/ElURf9NAV59QB3f3pm8yFBXj3g+dHr7iJNQd4+yZfJ+S25
Q/OrCTwrynrav4K6BuK/xq2YsFiQnw/7Jbs2LsrWmtYvkLhvQlDEBlpnSvAM
XPQk49LYYo6fS5ybunkL8nUB368VHv9euUnzdQH+8t+cqvFmbN/tP3agRa3P
DkF+L8BbTl1sdBLkDxP9NnNiTZKgPhrmffBoi9c0Qd4yzHuHpdyrD2Y1DP4/
9mT+L8X8ErbPOEZfhr2Vyizg+4PLbUku3Suo1wb8Mr7t7TvHsP3l85HGr6V9
1wjqowH/KdNnw6Oe0rxiwB98s2L/20b6TjLM91+5cf0zvfI4eMiuk/M6nyrn
6Dl1t1OmuT7NZyb2kvmb0ZltND8f1veG+9FImVcShm8SlPS9WLa/tJLhmxhF
dJ5q8VaQ9w54CvrckX0nyKuH8XNMBgbmCvLnAX5xwY+aBYJ8eMDTaVZ8VKMg
fx7o+dK/MHXeR1pPDXJ7tWTZ0I5ptL4A4BrFAXOWby7n5EF9R/jiCqoP6f1D
y9w7P7aXcN89YDp3V+LpPIbPEiy/tK17nC+1P4HfHnKS8EljaX0xjJ86/eyv
fjf497M37ztWMsD6Ewc/k1xQWpxC7TfAHz8wz3ccPU8JPLzv2cmxJvx73qtf
iqu9sjl7EluObtb0bOfsZJw8SP3e1Tq2HlaEW9Y6aQW+FbF+FtZ/mqx0J4fz
4/Cw/Yc+qhxn/TIxxrfzpwTU0fpWGD9U8WaDXRzn9+FxR/Z+DbLi35WvH+86
qO9kCYcnKNNMXJrMvzc/8nGvI3Mf1HLwz7sXpswbztnn+NiUeYn7qX1C8IdN
ua9fIKjLBvj3xyreCtROI/xx8Pi1fe5hzu/DLZcT5z3l/SxsHDMgVDntIwPH
eM31Xoc2cX6iCPs+2frBr4jzv/CX64VDxAL/i3w3t2G1JedXYlxsvk7hvg/r
r0nwrN6m8t8iqL0HcpXybbrt8j7UPgS5fdrW5mRgRfsaAdwryurg0VRqpwH8
9fNxERc3035BgP+X6VvDnKnUbgR4wemG03IiWr8JdKYUdDGVb6jk8KghP6UZ
KdRuhPGGm6dkfywjfhP5/7TjHncd0875HRh3nXepYybr12Bc8bJkuQdnV4vw
Wu1lTvpSEes34d29tyx5k8n6TWIcf6gtv07wzhJ8f8TB58d8DDNZfwevHTKw
0ESF61OPlxx29RZReSbwDUud1y2XUvscfme9mnLriCn7PpMYe04rqshZxdrn
ItwrcNqBPSM4/wV/Eik39Cnm+trjW9XbJq7zZcdjnJK9T71a4GcBPQsj7GMd
ojl/EN82Dj2ppsCuC8baSGapk8CPAz6t2v5aXZWea0SeVYdrhtS3cXYU/mj9
wKFzI7WjQD6XhXVF2eblHDx/g5uanS1nR+HYw92DdNM5Owp3s43rKruphrG3
JXhc3tHYozerWHsS11qM7tUXc3YgHlt0N/0D7StC8G/zme8XSM9NMn7xE3O7
k8G0fw6JOzr/KrffUcLh6es2ap79RNbe+7Nus0JMz7Vz9j/eY7V05dmHrN+E
ceS1J3unmrN2uBhb6LdsvTqKs4dxtZbl9mpqJxC9qn1txWmrUZz/gnsc36gR
bMa9O479OtsY6gneQQd6/JaoDo/l/T5srX42qGMp579gY9tPTwxGcf4Lnvyw
ZIc89147xq57InfmCPw4st8/bR47zp/z1/AKS7cJeS+49+CxRtajf59+ECH2
PI1PT1/Te0MmYs/TkilyqFFaycxLjCfgfeblcbWsf4en9zwdNOAC599h749b
q28rsOuL8cxCTR2TBOqXgfwUjO4TMuw2tbtAfvQPxGdfonJL4NsitZUnqXF2
HV4R26k4tozamTDewmbZzc6DaZ0j/H8rAjdvadzE2fM479muDfsfc/Y5zv42
60qpoG4R4I+HP9O6osjZ7Xid2aXNdZdZu12Mz8b4B2nqcXYsDh08driaArWH
4RdbBI+tcOX8FDzGwGLiRwXO38E9kmcp6vF+B54Ysc7WsZTzU/Cw796jU3i/
CX8/0edXs8Bvgn/XmuNhu7FTFTdfm8OBa422ZiL2PLKZemvNy4+VDP1iLOoW
u3R1hw8MfozPrIlvvvCc92s+Hj8kfz6F5g+DPM6etNP8aDutl4R9c+jEbv8C
IwoHO9zB+Yzcc0H+M/z71Pt7FyYL8qVBftsG6Km4RRZw390+VfWiugHNHwa4
3968SZdc2PxhjM6+mZulp8i+G43RrZdNixZtYt8hyEetFvnjWt9ImPEidGG5
55rNgnxmgNenftZREORLAx7RrIv7dQT50sRfU7Oa6TUhk+GbGBW7XTNcIciH
h99IHfN9qxzEzHfFqKOWXNZAQV49/N50t59bJag3BLjW5iOPdz9i6wrFqH7z
oOLhgjxz+E2uvfl0rCDPHOjZsbrvry6ubF2hCOWFHDsWmSCoH/z7N7wyOKWP
oH4Q+F86pUvlYH0WLkblPqtlUwV5xfCdqKZUt+eC/GTgs7btJJPMUwUc/qCS
hCVFFlLWfkOdpNjLTVgn+Pdv5dTomMXCOsG/f6OXxJw8t5x7JxUd7WneIC5m
31UVoTtznva704ntp5+P8h4MzokV5DnD+NZtuZ9mXqH5zDBfPEFjbM7gTI4/
xwc2my0S5I3D+LkVYXP6/Kxg6JSga7e8z90Q5KXDOo7PCb/n8aqegwd3qvo4
/2gVR3+/cd0KbAuonAF/BqltDK4W1NkB/Lp5SZS+oJ6O6If4d9pZ4+l4gFvk
XQoNt2DHi5CyU8/Efy/R/F6g50Bx7RBXQZ4wjJ/dIfOTeyf+uwrimJ23Ngvq
6f7+eR3y8lcU1NMB/vrbN88vv0TviwF/qJzVqLcXixG7f5Ov+KzyFuQnw+/r
Z5v/CRbkdcP/d7AqTP2ARxVD5599LdM7dRrNpyXz7v9jqYaSG70Hh39f0rf5
ycRcmn8O+MJVVrpqCfLAgQ8DVpvl1BvSfFrgw91d6Z+7arPvRGKk8+2NaLkg
nxbG28m4lB3yZN/nyEcopfByX0F+L9DTX7Vz45lxtE4Nxoe9CIpaI6hTAz4v
23LDNECQ3wvwHuX2va4I6+n+/i3Z3qLY8oXm0wL9MrettNvWl3Dfzd369seR
iAJmvAj9Glxb7/mgmBn/h76t5Q+3H+Pf16wb9DBxvCAfG+a78VBkQk8lmj9A
8vVklaLks2heMeCvcnX59k2QhwzjG66JZpcdrOK+e+uU0aOJgrxrwFMcmjRa
Ksg/h/Hb9FZP7CTI9wb8KV1cvjuG0DgXfCf928sTvZppPRd8x0DVUPeSexV7
LuAYL7njX0TsOS7Bcz6efnvRhZ77gL/7A/9dz0bT8wXslOcm8r8fXihgz0fc
WGBUYxaUx8Ax3hL/6/lUE9YOEeGqnZI2XUztFsD/y0rr+xI9ei4Dftdx40/f
ukjPU6Dz7rP5Sh21uPMaL86wm7Bpcz2DR4TPShM9FaNZOwFj9bhhEX5cfRPG
d9Y/arvP2SciPHW3g/ODds5+wAOWyfVR+83peZw0feplH3f+/ZiASYlyqa85
PY+H3HTq6nyKxkMBLnN/RbfxB1n9L8Fv5S3VT6XTdyjh359NLB2zbBx7Lkvw
hbSnjoO92PcXxfjeAufF2+k6Ejv2mMPkN+1nuHMcGxn1PLPdgLUT/vh3Snef
rb5XzMDFeMkG31EdttYz9PyRK/8zy4PX0PMXfl1uR/249juDw9+12OnBd8G5
DHBdR6d/Sr+w5zjGJo8uLSlRZt+zxFhXzapl3BbWDhHjmOmq+RpnPzHrmI+H
7zfsOrFEwq3vlmk7y1rcOf2P434t7r4lj+p/GF9TE2Vt61nDnjv4tPtB45UH
6LkDdD1+Mzdw1w96XgCerlv7dLyaQvQJwaM2p5PZnWM0bwPwyL6U+SJal8me
jzhlwqBdOVvo+QjzrdGxvnJgDXuOi3GTmkHyxbBPDD35WMck8lhiIbVDgM/H
Z/zaJ+Hshz9+3IHmzqOVWHtDhB1PS9tXX67i4A/2DJ2i0JnFI8aDTVL1lp2m
5zLMN7izW+cx4+oQqwfep+UtC73C2gkY+/rsK/hhztkb2PKq565jMdTeAD5X
h8vfNTpE9T/8PoxK2xevXMfBlyf6rfzeRut9gP5PonmiHdvpOQXwbYNvfzkb
+Qmxcv7I9tQ45Rbu/MXy64f4bbxehVg5jxu3smGJoE6H+Lk3jg+6KrAfYL4N
Gd+GNhvy73hVplvf3v6YOx9x8Zf4eAVPti5bhN2vyk/7J60YsXrDpdimg64R
d+7jmz9PzJNEsee+GE2s+DDjhaDuANZTduNhW7113HuKqMP9Q+cCBPUL8Dsj
/vyz+S1snYIYBWXnXqpxpPl45L5s3XbsZcy9N4bWTt7tX8HVF4jR+KEmq0YK
8vABj6FB2qXYDdy7m8jVaGngd0FdAPwmjEjrkcXViYhR2OSGoE5O3LtoKGXX
qA57dLj355BuJ2WNe4I6EVivfqV37X3y61h+YsO8CbofDPn3JkfJvc9oOcrx
HzsmD3C4top/j+3Nws/lc9/z767JXvNfnt/O1geJ8YQzrxLHH+beIcOLvuXF
qbXSegoY39ye8m6Do5TlJ9Z4ttvsc1Edy39sdnJS2QRj/h3TirXey6c7c++T
4eN3ynCHV3Usn7F675/VrbqCOgV494fpvwp9JMJl+y9QjCjn4DNCvGf6CvIh
AU9PPztZPUHfVOjnwPZrhfFsf1eoM+L6J0M/CqY/M8DDAmZHyAjy9KDOiO0z
DPgztcaGHNtZztG/xPqCHrpA7xcAbtD/l6RBkG8G9VOr7q9oeiXIa4L5/p50
PFhGcA8CeNh+mNAH4+3ZB+dMBfdEMK/IVz22vlWm92j/71eK2D6rMF/ZkK/H
dUrpvRXBs8Bmc0yxhKNn8gG/8FRBPg/A/evXHIyawr+jkd+ccaVVkF8E8/XX
ni6tEuTzAH8W/DJodGyg8WfAP0Hlfeetx2m8Gsaz/SfhuxaPZn/oKrgvgPm+
7uXkvKqU3nfA+rL9OYFvbH9IgA/fFPZyXUQeh8fzeGJTtim9BwF+Ts0pXb5J
kPcC+8K1WjExRZDfAvSz/e6Ab4FTStXyOvL9/F+s+nrijiBvBPCwfecAz+te
co1JXwX5IX/pqZqz4BA6RvNDgM+q60ZKHnWkcVoYr/ojWXGsIG8E+MD2XYR6
saNnp1oeN6L76C8/MfveFtRJsfsU6lXZ990AP/sODuAJ2DJGuqMr3RdQt8W+
+wN42HdnoF5ssezyIR40H5jA2X0E+Nn9DvSz+xfqgu//m/EejaJ6A+CsnoG6
Y1ZvkH6GzHtMQCcr/0Anu+9gPPteBvCHlXPgs96vuv3pilTOgR52P8K82Hdk
YF6sfgA8rD4h/e1HDh03YyXVDwDXUjw2q+h8GffdgAEB09JGUX0F+Nn3ZYAP
7PsLMN+pXoayloL3IGB8mtfu9HoHmucDfGPfQQD5/x/vHWD2vQOgn32/A/jG
vgMCcFZvAB5WbwCcfY8D8LB6A/QJ29cF9IN4Yoekz4J7GYAPWbtT3kRwbwJ6
g+2TA/qN7eMB+o3t4wH0pK5IiHQR+Mugx5ysTnjEn6Z+Luhzti8KnBce7iF9
O6fSOAPAG0OHeM06ysYTpIjtcwLz+uf7ICt/DxrHgHld8Rz5OUkQxwY6e6i8
TYm9TP1NmC/bFwLmq+wibXojiEvDuZPfp/jEr5nU/4XxbB8J+O71JPHPQkG8
F+brO6A8eqkH9d8BrvXobu/tT6k/DvNtvxj39LE7G0+WIrbfCMDZ/hsAf3qk
8OfCM7TvB8hPlm6q3gRBfBjgFYrWMhu/lnD2KttvAehn+2MA39g+FTCvTxVz
N08WxD9Jnfv7mWhCkCDe8Xe/s30+QT+wfTVBn7B9O0EPsH0yAc724YT9y/aV
Bf3G9pUFOtk+jXAusPsF6Gf3BeDJG9s19r49lXMY/33YRN0oD7pfQJ+wfT4B
zu5foJ/tqwnzZftkwndz45N6/7pP5RPoHKM6WFyyl8onzDf14SCfYaF03wGc
3RewXuz+AvrZ/Qh0svsd4Gy/RJgv23cR6A/sETyp/gAbh5ditm8bwNn+bwBn
+7MBPcc3dH9ink3jbjAvts8eyP//6IeAeojktujeoP0HSL87pm8AjGfr/YFO
tk8I8IHtvwFws5jNOyY2Efxkvmy/CDj/U8KfevcT+KEgFw14i2ka976PGLXc
q7EV19C8U6Arbv+7Vf3Nqf0J61yqf6X7E4F9SNZ52CbPPFNqZ8L4U13fiju3
UjsT6Pk1QXolReCXwff7u3V64yGwo4ifdGKW3z3BuwaA/3r21A6PBHYgzGvm
72Nj1wjsQKAzXLJI+edGLm8N5X57Ha+2qYTDU1R80GiFwC+D7xoFF5vuOZ7H
6HkRGlhQdtelI5vfIkYr5rotjRb4HTCv811lI8IEfcthPTN/hzr5Uv6TdZ6R
/+7f9WbU7wC57i3v2cuargvZN4oeIdcKKZ/Jd+Z1nSXf6aeYkQcRrlv5LO7G
bzZ/WIIz7s/FIR1oPT7gmfEoB++jeS9k/Je5ykOXV3J56XjTa7+PT7ew+ecS
PLmTQuxvQdwZ6F9vf+l2cy6Xh4/lTaMV0j3zOL41ulpUzLVj7VIRvqrba+Xo
VmrvAf+PWw198eYLdx+HAj2HBwX50XME5jcgy/yk/2n2fkGCDJa65joLzhGA
n0+6HOMjsK/gu79nT++4bhbVtzBe45+9T04L7BOAS32G9S4R2CdAz6Bucw4e
F9hXZP/2Pi954szdI6B4TR2ZNwJ7APjW7W5kS7YrPd9JPNBIzmff048cfLGz
fpy+O5sPk4/rS6ZMWfNOwo2vLgpt6JZF7RP4vevyc7KPN73/BXq22PecE7+b
vz8VJe547Nidu+/G88zdogNz2PtuMV6zIOzxDHq/QPTVORPfDXqtVN8CfJn9
6yO3Bfoc/r1IqbDp3Q96LgA8WmnzmGNfqX72agpcPD2a5kUCf6xUXuh3bab5
nrB+jUmby3fOK2TlHhVlfZwpmyli+JWP2v0cQs6XUrsQ7umfjs05suJIA1kH
GD9j/7mPXbk8vD98/R2aVfSTi/sji4pXrro3a5n8SzF6ec48vctPlr8YeZsc
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
zcHx9A7xtbMrCJzgWyUZMEOrkYPj/wOmECs5
   "], {{
     {GrayLevel[1], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
i0/wX6D/AZdPmQ8=
         "]], Polygon3DBox[CompressedData["
1:eJxF3Qd4ZlX1NfA3GYFJRkwGkmEymYTeQTpIb9KRXqUIWKhKkQ7SRVCKdFA6
0osUQboCKiD8ARUBpYMUAem9fus3+/B8zzN3cvc959b33lP2XmvtmbfbdYMf
dXc6nT+N63S+kr/3Tux0xnR1Otv3dDrfHe50Hp3U6Wyd9akHO51FRzudZfo7
nUdS/s8sy2Z9viy/y3p/b6ezXeosFfuhHOfhLEurm/23yP5TpWyR7D9N6j2Y
+g9l6cn6Eqnz16zfkWXRrM+V5Zqsj03ZVtlnpqFOZ2LWf5j1b2b/3qz/PeX/
yDIu669PTt2s75hzfD/X+3+5/q/F/mHsH8R+Y3Ldz49ibx/74VzPWlnfIcdb
Mcf7X8p7U75Ttn0v5U+nfCDH3SXlK6d8jVzPv1P+ryxrZv2xlG+Tul9J+cIp
H871PZayFVP2+Ein82rKro59SpZHsz40VPf6QJZnsm9f7Fuzfn2WJ2NPH/tP
Wf+m82T/0aG6t4ezzJj1tbL9uaw/m2W1rK+d5YWsv5Rlnayvm+XFrL+cZb3+
Oo7j/V+WlbM+Xe7l8aw/lWX6rN+f59OX9d1zbTvmfh+MPV3sPWLvEvvvsfvb
89op9kOxx8fe1TOLPVuu6d3Yb2eZPes7+G2zPk37DTbLOd/P+ntZNs/6s7nH
GXLeH+V5rZLntVG2vZaySdm2W7YtF/tB74rfK/a/Un8lzyPL8zn311N+Xda/
mvrfS/n9eUbP9XU6n2Wfe1J+ROz5sn3+LD91/bG/nvVXx3Y6x6X8H7EXiH1D
jv9+7K/mmhfIMTfJttNT/938/k/meKOx9/W+p/48Kb8sx78z9f8v9gspXyHX
8Fzs/VPnzBxrndj/iT1V6u7p+WTp8i6n/mOpP0fsx1N+X+zHY8/tN4h9YPY/
O/ufleWArD+bbU+lfCjn3yf227mev8eeJfZ+se/N/vfFniv7P5G6n6a8L+dZ
L+WnpvyRlM8e+8KUd7L+Wer0xl465Uen/Kgsd+Zc+6X8k5R9nGVsypdK+c9S
dmSWP6V8/5R/lLLPfT8pXy7lP0/ZNHleA7FXin1C7M9zLdv7rbN8mvUzs+3c
7H9Oll9n/VeeadZvSfnXsu8Xud6J2f9b2f+UlPVm23Ds1WKfPFzPb/tc+iv5
vRbNtq+053l7jrFY7GlTf6Fs2zTrZ6T+dEPVTmwR+9zYd6TePl11f+7zzZzv
L7mur6V8j5R/6Jl31T2619tT9mnO90iWi6ynfN+2r2f1QJ7hW9m+dba91Z7X
T7J+V089z7/k7yGxD81yt+8713Kebznrq+acr6X+ZrG/neXVidXuaf8+yPlu
y3G/n/WOdyXLD7K+fPZ/NOt9eb+3Td15tTGpsmrKvhN72/z9OParWdbT7uT+
T/RsU/+CXM+E1D819mMp+2bqv5xzrNxV39B/s35o6hyS5aVcy8tZHsz9vZnt
3/EN+x7667e/N/sv43nHPjL2fbGXjf20byj1p8v6XjnOk7Hvj90Xe8/YP85y
WOqOaCNT9kme/8FZ/3NPvV9fZNvPtUexfxH7mdhPZP8Zsv/ew9V+3xl72ti7
xf53vv/1Uv/81D8o9t9G6j3zvr2bfR+K/W7sLWO/E/svWd7Js9k89bdL/SOy
/Lannv//UnZ47Ktjb95+D8/igtgbdNUz8T0dlfX7e+p9/3e2Te6qb86392K2
nx/7bPWzPprnc3nONznr6+ea38n+S3bVN+/b3ybln2gbsqyvPcjxerK+f0+1
Lztm21fT4c6V3++A7P987nfxrB+c9TXTPs6f33ee2AfGXi32P3Pcb2T/Y7L/
QLbNmvK3umr/i3O87+V4Y3K857PtW1n/bpau2LOlfG/vT+xO7Flj7xX7OwP5
LWPPG/sQdso/zb4zx94z9pw5/oxZ/3HWV835f5DyntSfPdv2zbaHcz3zpf7h
uZ7pY2/Z+iN99B6xfxJ70dRfPfbJg9V27pdL+Czf94yxN8721VK+XpZtsv7t
LOtkff0s22Z9oaG6Pte5Vs6/lj4w9uYpuz73O3fsr8Q+PudZJ+Vrx14z9lYp
/33K5409lWNn/3VTPlfsqbtrH/uunmWZrK+Y+r9L/ZX1B7E3iH2t9znHHRd7
1din5Ho3yt9V3U+WTbK+fOrP3davS/2jU/8bsZePfWLqH5XnsnCex2JZfq7N
0Za24x+f8tnzPKbK8/hm7F96XsZWXTWGOcgYJvW7U3+WlO+T8nlyvmm6657c
m/bmTH1L6q6e8hljX5HjjcZeQx/iHU35TFn2zfpMKb8q5bNmfc2UL5FjTM6x
dsv2p/O+7pftM/r92zv6jZSPpnz+nP+y3N/uqTer68myR3994771vVP3R8PV
p+nbjuip9uCB3N+8sX8Wu3+w+rPF27PQfvwj9Qe7qs3QdjyU+rPl+m7I+zFe
H57tX0/5glmOzPpjqT8p6wf0VHv+Vo43e3tW2otNc51r5NrWzbJF1nfO9u6U
f6Xts3juZ6S77tm9T517/uDLsclI9dH66oNTd9ccb69snzN158iyd3+9D7Nn
faEc+6Bc34I5xoTueke9q1/PMpj1+VJ+SfbfJfW/FnvaLFvnHVxMf5f1H2X7
6qN1HMfzDi2c9RVTPl/WF836ldl/Af1td+1j3wNzXeO66hnspU3OtgVT9ye5
ljVyvEViT0rdIccYqnK/1WxZlsv6Clnmdazsc8Vw1VF311zPM7n/53PMS3Ls
o1sbeMrE+l59t8Y+2mxttz5UXzpD9vu1sVC2bZxruC7b1kj9T/L7fWe4+kH9
oTb1ZX1Ylo861ecaN8+Z/U9P2StZXzf7b2VclrL3OjXP+CLH2b9T/eUWrT/3
W5qP7NzGazO3d9t46b6JNfY0JjQ2fDp/l4n9y5RPGqzxxkX6gtinpf5g7Pv0
T1kmDNUYxVjFHGQg64v1V9ndWRbP+ts53lZZv6Grxo1/mlj34762zfF6ss+v
umoMZix2Q8qvTvkvs9/dse8wHkjdMbmWhUZr/4NTfkCWG821UufK9qyM5/Rj
+rO3O7Xf/DnuxSl/I+sb5hgjsc+K/bo+LPa4nP/arhqzGru6J9fvPh6LfVOu
47Uc680st2R9feO0rJ+dZcOeGuMa6x6dsr+0saT7edoYN8f/Y8r/l/KNYm+V
6+tKnStaX2g8d1BfHc9xO/onY+eUvxB77dh/y/4Dxkuxdx+u8YS20ZjY2LiT
9/JO4ytjoqwv2F9zo5u6atz3bOotm/WTs//MOd7dxg6x9/RdDNaY3Nj81J4a
L3+/9VdL5ViHDtb+y6f8hJQPx15GH5PyJVsf8HzKP89lfC/lk1N+QPZfMGVL
Zzks6/v1V337HTZY9ZfO8Y4z5tFeGRunfJ2UHxv7P5Pq3D/N+tqj1R8u4njZ
dsRg9RP6i6WyrJD1Z3K8RX1/2uqUH5z6i2t/sxyS9WVSPnuub+3U/YVvfqj6
Im3dDbnf1XzjsdeMfU3sf5kreLfyHQ2m/kfe+64aI36iTU7927L+xyzjh2r8
eEbWPzNGGqzxvvr2O9v4K8eb1buT401MeXfKT0j5e2283xX7eG2DOU3spfqm
DG87a+V6fp76M+f4V8aeMeVrxd66v+auxgzGDrOk/phOXf/RgzXeWSBlv0j9
CbE3TJ03Yn+cZYusH5Rl4dzvSqn/s8HqR/Wn02ZZpbfGp/O3vsP48ptD1Zcf
lbrfyu/xM3Nk441sO854Oe3JGTnnq2mrN0v944drXG98P1X2/XbqfB779tiL
ZN+jRspvYU5vbu+Zea6er2f5s5F6lp5p90jNV7zb9xsjDVUbo63h91h+tObA
u7b7NDf2m/httsj1LDda89XfO1bOed5wzYdu7qo5lrnW7tqE3ppT218b8d+U
XdVVbYc2WluhzdB27zxYPoEnY6/eXz4Gvga+HP4O8/X/tLEkf4s5CZ/L37pq
rmJOYi5uTm6ucsxgvfu+gSP6y6fh+/UdL5P9n4p9Y+yFYy8be7PU/yDXc1xX
zSs3Gqy2TRtnXvhc6r/exs78BS/EXqx9C76nwwfrW/JN7d9fY1xjV2NYY19j
JmNVbYC24Bfm/701dtFfGgMbWxljGRsb884U+/OuGgsfzQfTW++a8e/+gzWW
NqbeTntgjBz7zdTfoL/GxHPE7u2usfJBrdwY0thh/9aGaDtc++XD1e/r/40l
vcNLxv56d73b2ohle2sMre34beovEXuu2NOMVJu2ZLt+93fkYH0LvokD+2sM
7n34qH1f2oxvxZ6zU23JsTnGyr3VtvkefHO+Vd+sb9E3q63R5viWj0n9RXpr
LGR+4l2d3FvfpHd2p8Fqw30fS8bexrylp3w6fDtb5x6PyLXd6LfO/n9J+WWp
f2623Zdtd8W+xFg89kP9te2v+uDBqvvD7H91yh7Otm9n/79m26Xaumz7R7bd
HfuK2BfFviv2vbHPj/3b2H/vr+VvWe4ZrLLbs5yW8ntyfb8yxknZ/Vluzfbb
svwhy1nel+x/abbfEftC73vsB2PfPFzzFvOXdXJtZ6R8u9hjY/8y5cfleX3X
XD7f73q53htTf+vemo+Yr1yZ+ofxlab+mam/eY7x46xf59vlj8z7vr/fNvU3
N15I/YvMTbLtgdSZNsc/KuuHu4cc+48p/w1fQLbd2V/3cFLsc7rr3m6J/Uvn
j32R64/9a2PV2Pf0l8+N74EPwu/F/8m3y3fLP3p/yq9J+S2p/0i2fZ+PoNXX
HvDJ8f3yAfPVfTf2+NZefKO/fJ58n1vmflYarTZQW7hV7BVGy2c8td+rq3zJ
+tB1Y6/cXX2rOZO2WpttLnVD7JNjnx/7DmOF2CfGPiv2H2P35fmcnvWfZdtf
83xezvmP8e3mfBvnfN/1m8X+Rcrv5xvQ53q/s+2W/pr/6msmGp8bH+Z4J2t/
sryUY22fbWdn/fbU3TTH+332PzX7b5ltp2Tbq6lzadbvzvpmfv/2vnnef862
V1L+66x/L9ezScp/nfIdfO95H1foK5+Aubo5O1/Bo7nG7/TWfHcL7aExTezP
Uj5mfJ5v7CdifxH7E+Ol2E/HHqNTTflLsV+M/dXYU8d+J+d/P3XfSd3tcryX
9YG95ZP6j35Q+xx7NPXHpf5r+jf7GzOn/H+x34s9KeVfTflz+uzYT+eYz7m/
2P+LPZjy3pQ/H/sp7WvKP035uzn/VCmbKmXfy/m/zmebscVyuYSfpO9+Mv3x
mjnPlXk+85vv84GmfMmU753yQ803Un5FyudL2TxZ7kn50infN2WPZf/5Un55
yuc1H835r875b875H8v5+yfkuOPybHMNy+Uaxsf+euydYq8Q+z+p/2TqP5f6
/0n9ufhHc/wljNlz/P/qX1O+VFf5bQ/O+3B36r6Vutvmfl43Xkj5LDne13K8
t3K/z6b8BW2h8UfqvxD7RX1p7DdSf0zOv0SO9+8c783YXbHnzP7js/80ub65
Ym8Xe+HYJ+V9nMn15v52yP4nx5459s6xd4w9VerPEnuj1J8r9f+V4z2c63kl
5/yv8UvO/2rWP/Ktpv6/U/5Iyl/Ptlez7YnYf4/9Uuw3tZ+xb+ALiP2X2A/H
vtP4J/ZTvrecb76cb6ucb56c72/aUXPNlN+b8odi3xz793l+J+X+Hoz9+9h/
TPm/je3yfP6a9WeyvpXnF/v/Yj8Re8vYu+d6b499ffb5N/94yt+N/bq+Rv+c
32SVHPfS3P+cKf9dnsdysRfK+X6csj2zrBj74pTPyl+a610+13tArne1XO9p
qb927PWzvkuON3PK1429YcoXybbB2Et5vrGXjz0Qe7HY+8VeJfb0sReJvVfs
b8Yeir1K7ENirx57htgrxt499oqxp4u9YOzdYq8Ue57Ym8c+PvYmsUdjrxX7
6NjrxR7hXx9bsbkdcy8zpXydlK+V8plTPmfszWIfGXvt2Cekzi6+hSynil+Y
o+fZ3ZZn9mie2eypv1Hqr5P6s6X+bLGXjL1a7Dlizxp79diHx94w9lyxN4l9
XOyNY88Re8PYR8VeJ/YssdeLvXHsOWNfK/5ijpbz/5CvKOVrpvywlK+Z8smx
14j9s9jrxh6OvVrsn8b+Vuzrs/9a2X/17P/T7P9MvucdYv8pv9+SeRZLD5ev
gc/hiJQvJKYXe9XYh8VekI8p9rKxD+Rrzv6rZ/+rsv8C/DvZtnLsS2LPFnt2
Pv3U/0bq78MXFPvPsZeKvV/sW3I9uzQf5intenbN+uv2Sd1Z9MFZXyDb9kj5
Tal/e479WLYdHXtn/t+U5bXt7Or30+ekLH86P+Lbyv2vmvs/NPe/Vu7/xuy/
Qc63UcqP4TuPPXdv+ZL4g5/K+ddL+Q18SznI71N+TdYfzTF/lvqLiyllfb3s
f2Tsx1N/1dT/beosnLJFsvwz5aul/PCUH5VlzaxvmuXnWT99sHyyfLTH5H05
s/VPm8Y+KfZpg+Vz4xP9hfYix7vJ983HZX4zUt+17/5J/sEst5rj8x+m/NnY
f4h9l/Fx7L2zPJ76/zCXH65v3Ld+nPE0/5f5ibFHlgOyflCWf3qXjY/b/g9m
/U/Z5z/iQyP1nmuHno69f8qfjv3P2C/EHj9S4xjt2jOxl8uyLD8Gv0yWF/K8
Ds3z6k75lt6F1P8iz27N/Ii3pvzO2Jen/N95XjfF3jp1vp2yP8e+NvY2w+XT
2rKn/GF8Knwrl6T8konlk+Gbudd8bKjmdOZ2fFJ8U3xGfEe/Sv0LU38v8WFt
b5Y9zSVTfmnK/57y/+Zapx+pfk27+vhwjW9ui31N7PtiD5uvjq9++X1xIP2l
8VmOt0/qjkv5b1P/Tv1Eyk7OtunzLg5kOWmo7Z/1V7PPuyk/Mdv6Y0+X5YSs
f5Btb6Zshtinxn5PTCf2hNin8E2O1LhDv/m2dy/LKb01hjKW2q358/nod836
Iym/im+j2cZzt/bXOPSxlL0yUmOuE1Jnh5TvNFT90k3Z9mDK+0dqXGuc/7fh
Gr/dFPu62A/wZWY5NvueYIydfXceqn7KuPghbYf4UG/NOcw99D//6q9xxL+M
VbKcl/LfpHyXoRqf/Tb2r4zpYm8Re9389v8V78vv9yc+wfxer8S+fWL5/MQe
+RD5Aq+fWPOQV/KObZp9X8xvekLsF2NvGPs/sQ+M/Yh3MPYmWRbP8e/K/tdk
3z/k+KdoH2P/LvZLqX9y7JeMd1P3+dj7x/5H7DVir5VlBj7a1L849TfSJsS+
KfaVsTeI/XX+jthXTywfP1+/mJjY2FVZTszx/mN+k7JvaUNTfk3qX5ayh/k8
+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
/nyO9zU4Be9zltl6am7AFzlXT80RZumpMnWm66m5kLnVHVkW6qm5zo3t3OY8
s7e5xo3tGD/vK/wVfNWzKX9b3Dbry8NxZP1sMaaUrxL7Pe9/7H/GXrmVvyku
0lP2WwM1Vj8z5cv01Jj9QriW2Cu2cnM0vi0+LnO3RXvqWl3z4m0f+y6b5Y2B
mkve3O7FnPIbLZ4Pb3XWQM31zKX+kGXBrM+X5bas/zTL9D3lE+ML4xPjK1s8
+88S+/rYZw6Uz2tec92x5Qvzlz1PllvHlm92mdY+8dHyvWmv7hpbPjg+tsWa
zffGV7twex/4bJdv9h2xLxyomKTY5O9jnz1QMU2xTXiHcwaq3dP+zZfl9rEV
L5gu6+9rK/P+zZ97Ojn2kdrgnprj3pL1eXtq7ntS7L1j75nlxKz/xTucfZ9o
7aV26KutfTw/9tyxx8W+KfZ5fJTGmN7X2BfEXrrhMeAnfsMH2VPP2jM3jzVX
9/v5Hc3ZHxpbvutFWhuyWcq/3anzXz9QbZL2aqX2TR3Y3od7W3t3SOz7s36Z
d3W0/J/6E/2KeIj2ZrnWPuov9DH6ksFWR/zEun5mxuHyWfJdXt36A77d6Vvf
c/pAxWu019pt8RhtmvbON6+t8xt4F+ZtfZLxpViKmAr/697t+/1Le7/Mt/QP
+gn+er//PO231D7w3/K18rny9/P1z93etQvb+7hAO77+b9/WH/y5vV+7T6z6
9hMr0Afraz0jfbM+R388Xbsn/WF261yX9ZmzsnBrf69p/eVdEwu/xufH98fn
xz/96diy/9BX2LZ3s2w2UBhw2DZz4I219bnfN/Ql2f8nI+VD/Eun/Id8i7f2
FRbskyybDpSPYdr0f7v0lO+BLwD/Ag+DT+DuiYUXhxs/IMf7c+wPY28X+8CR
4q84FowZ7PQCffX7ew/Obe/rHO37Oqe1F7O09/k37f3W/5/Tvj/t+XB7P7QH
S7T2/frWvuAywDfB4+E0nKSN7SpMKMzW6VlWy/qqWU7L+i4T6/3ynokl8N0v
0r5/PnxjBmOnr7V35CJzTPiRLJdk+Sz1f5BjXdPGXx+JH8S+NvbhOd7HsX8U
+/qe4ov8mi8kx1oq9ocDVU/97dsx4Mbgx3CEYERhyrfI+lU9hTV/YlKN9XBM
cE1wTHBNcFBwUfCK7OsYp/QUV+XS/L2spzgrYlS+d9+9eKeYgdgBnz7fvjGG
sca/su1aGILYa8V+JPbVA+XDF/sQA+HbP7B932KqYiF8/9/s1PhCDOD9LN/s
qf7og6y/qw/uqf5F/ySGor42RGzFnMDc4Nw2njO+E4v6TezR2HP11ffjOzol
+79n/JB7/b3nm+ufY7B+H7/TnFm/Mn83SfnGWa7I+mt9hcWHyZ9tsDgKa8b+
VU9xF+bKtst7ihOw+UDxG1bpqufneDhCuEJ++8NS/73J9T55rw4Zqe3KcSJc
g+M6/upZzugpDs/aWf91T3F7/ht7jdi/iX3wSHEGcAlwCnAJNA6rtHd1ocG6
T/e7R5abeupaZ4Vl6ioOw/uT637d92EjxfnBlcGZwQV6gQ+zqzhB7Bdjrx/7
POfXXg8XV+jsZs/aV++/7+DEPI9z+opvhz/1v4HCst0de4mewrTxEYv1iPls
0saD23RqPHdzGz8aH77Qxs8/aOPNzS3K+iqW9GwbL24Ze9tOjR+NJ491vZ2K
WYldrZ2/a8d+JuW/17/HPqpT47GnYv9iYh372TY+db4tOzW+Nt7VvqbbmjLm
NPbkI+Mr054uk/rbpPy7nRrPGu9u167nW1nW7avvY11trfa1r+rjF/1Am9hX
Pl++3zey/xLDdT+Ot3GWjfpqnDBd/cydd7L+Xpa9sr5bp2J+5ms57ZQxgbEB
XpG5nTkeDo37M/a+LmVz5kZ+4ZypP1MbHx7Wvte/t/H+zbGfjf2kMcLE8o2f
lGP9s6d85DCIfL98wLCJj/iuYh/e6ryS9+uJTs09xKbEhMSGjD+/PVy+nl+k
7gM95fM5q7V392a5IOvntvHpku394aOH74fP/9J3Dwt5SDvGv4xZuuoacY7E
xMTGPjKWzP3+I+3hGrE/NtaJfV2O/7L3TZ+Q9auzvOh904dm/aos//E+GVP1
FSYQNvBvPcU5+3v+HhP72LZNbMFc/R9ZXyHlV2SfZ7Lv0/owfXpfxV7EYD5r
38cDsf+hzeqrmLTY9JNtbndcX43/zQOeTv2jYl8ce8S9DtT4/qLYk2L/O/ZP
+yp2Ioby2EDF9C6J/bNsn3+0/l7S9n885fvE/nnsr8Z+cqBiEOe3/cVixGAc
75e+6awfk/rHZb035U8MlA+dL52PnK/8+331bnvHN+yreZv521ZZBJr57Pnu
v6LdS/0f99VY3lj3/oHqR/Qnh2fp6ikfPF88nzTfNMzAvrE/No7T9sQ+qFMx
ErGSvfvKV+96Hhio8x3SqZiJ2MHp4gWdiimILRze5mNDqf/oQF2za3+09XHi
rbDoAz0V3/IMPItNUjbfaPVv2q9/tP7M+Hbl1t/pn2AA1ugUZgB2QAz80dY3
zpH9v5ftm3SqTzXnX7v1n2Le3/LtZ9mhU3XU5e+YsVMxf7F/8fENY68f+4aR
wiSs3tpT/S38ifm8sa74uv3sb357b843be7rxNinZunrqXicuaZ5qfgGvsJy
eZ9vjr1w3ufx+XtSyk9rz+TglJ/VqbnYwwMVExYbNlddo81Xdo39Vs631HA9
t1+29+2hgYofntbOLX6zb453dOxpYj+oPYr9m07NQc1Ff+/5dSrmJfZ1bF/x
GcxpzW3Fsi/rFP/N93FEX73Pw+19197hG83Y3l/fE77caPt+nO/C2BPb+3BE
+94mte/J93FuKxe7ExM61qvd3v99Wnva267f93NC7AntexIrPSP2YE/FTD1D
79evO/Vs90z5z9rx/jlQsdGTWpkYqTlXX6fmNMZk2scHO4VpNV4SCztd/9BT
MTHP1fN1DL/1Xn31vY5rz9/363xT9VRsTGzrxFZXjGuv1j5M074n/jj+vpva
/NL7LbYixgL7snSLt3zc+sNj2+/n+3pmoL63c9vzeKq1Vxe1/kf7s6HfoFN9
mjig2PM9Wf9GT8WgF87fOzv1DN3jYj2FbTinPdOzWnuqv3gt9U9t4w37/zf2
RgM1d+Zj5Gt0DufSj4o5ihUeGru7p2KG/JDqmnN/MLYwGOa2n48tbIZt+mR9
sbo7Zv/dU/5h1u8ZqHrqr9C22cc2df4+qeKN/FP8VLfDVkysvtwzOFtZG5/4
ff6vzV/w0T5r3y/8mLmGuSH80OLicqn7xyxLZP3F1F+xq7Yp42fhb+Gz4ksS
j/c8PVfxfD6WP3Yqvs73ol3WPvO58E0Yr93V9uXf4e/6XavLP2F+6Pfwu4jv
i6mKrfIl8IdpJ7QXt3bKl7N7X/k6+L6eGygfND7uz7rKN/1gloOyfkCWh7J+
Sepf2qk5grmCeOzJ7drwI/iz+KOWar+/+LC2TYxXrPfI9n2bU5hbnN5X97tg
ez+8Q96tO9s9eMd8Tze0Z4SPcVu79k2bf4+/jd+NP9B9uJ+TWxvKB8efd02r
wz/m2fMb8gd6P/lb+F1eHigfPV/9bVmWHCyuu7HUPT3FeTcvND/8cZZbWpus
bba+SNanSf29uur3X7LZu7exP7761K0cfx2f3X72/11PHXtcf40VPXv8arF7
fEW8RTF85Ye168HHxtmHNYA5wE/nh+R7vLbd41XNH8p/Be8AP+JZ8o/CZ1zX
/AkwIrAiMCKwInyF5gM4ffjt+Nq4fnjw+PB7dxW3nlbAPm2dZgBuDK69bbjw
tAYOaetLt/vnj+aP933QhMBtnbr5KGg2fJby7/aUvsivM95cJBPM0XFpkycX
Bg4XACcANg4mEBYRJhFWEGYQVhBmEJbw4uz/jdgjscdOLgwSLBJMAGzAR2kD
hmmbTCh8LHwELAFMwWfDFfMT+4MpgC2AuZyCVRxXWEw2LObPxxRGFIYRFwAn
ALbxepi0lC2T+hNy/mtj/xi2M/YMsW+M/a2szzih8KXXxd4z5Utn26DfKvaB
sMexByYXNtWz9xvYBkM6BTs67v9jS327vuFls75clh+mfG/406yP5DceyvpH
vRW/tD8s6sFZ1hhfmCzYLDFPsc9383cYVjnLK72FecZlwWmBhYYxx43BkYE9
hxXvS92JWd7qLXyXfV/qrXgqjDdsOow67Dfs+biUT5Pl+d7CmMNOw1DDnr9h
W+o/310YM3oYuMuuBV7sP/k7dkxh0F4QVx6q+/P7wYa801tY9GnbNYzmeuYd
U5hr2GuYENiQz1L2eeo/BwsCm96eEQw7rDbMNmw7zDXuAQ4CLDZMNv8yDg2s
9he9ha1/JnUe6C2M92wcJOMK+w27PUfsubN0jyus/GTvZ5b3ewtTB1sHMwc7
B8OLu4LDMgXbO76wvDC9sLYLxN429tZZ5s/6fFm2yPq3s3x9fGG9YW+/A3+b
9e5s+6yrOFQw/urDLsAwTD2hMOGw4Zu4xvGF2Ybd3jLLvFlfMMumWd8my0Lj
q/4GWZ91XGHLl4r9XVjv2NPGnjPPe4fYy2b7h1m/Ove3K6y68rzPF3n/Yy8R
e3zsy2Nv3q61N/bc4tXOFfurkwuLDEu9S5ZvjCtsPuz1nu2YF4rftrL+1J83
++8Te9HYX4P9j71/7MVj900urDas9b6tzhwp/779c70fjBTGe+3YQ+MK+w1j
D5sBowF7f9lQ3eu4rO+U7/e3Q/W9+e6mn1zY6HO7isPrm9+oYcNd08bjChMN
Sw5TPkvDdl/eVRzab48rDPb6Kd90XGGzb87xfzmmyiZPLkz3EWOqDYH1hsGG
FYcZn6u1h7DUx2bZaHxhw2GJf5Flg6zfBO/U1odyvEXHF5cAp2Bse79gV2BY
eibU7+99m9vv07Dt2hb3vMC4wsLDzh/Y2rDf5fg/GVNt0XSTCxsOK/7j9pte
kvJ127OYNLmw37Dje7Tf6AP6QH77nGvn0Xofvd9zjCtuwRQ8Rvv24Vd9P7Cn
MKiwqo+IV3eVj4yv7JXYa8V+Nd/tYqOlJ8KXNmu+zcVj32t811U+Sb5Jmjq0
dfjk+OboD/ELzp6yJUbLP/etrtL82b/55/jrnMO5/tpX/j5+v7mar9PxaRTw
SbuOtZp/kX8Tpgq2CoYMlmxMGz/c1sYXbGOP3bwfA6UnA/9Ik4Y2DR/yLF2l
KcK3/FFf+btv7Cl/5AcTa33BrC+NTzGx9GhovtB+eT9/d+xUDJyP+kM+vq7y
WfNhvzmxfNtzZ/0b2f9R7V9X+az5rv/XV77TjbQxfeUP5x91Duf6fHL5h/iJ
6AUJltAmeran9H6eyd/fdBUn3zY+JNzZ09o+k3L/52T9qZ7S04EXpaX179gn
DpeeEHwZnNlJw6V3ZPxqHAvP1N9f/jF+spXb+Ml4xbiF/8wYly/pmLYPnxJ/
Ew4zXxP9Ib7cXbJ099fYzfycxosxHH8wLKrfxG/DP8c/xk/GX8Ynxzd2crsG
ekq0FWiBwbsCVxzTznXscGFO+LP4tWBn+dj4605sx+SfpjVFg+CNiYW59v7D
WMNad/tG8IeybXh8adps0PzV4hMXpP4qKZuUOtNMrrq4H+u2MZN9lsr6jOPq
WMZhxmPLZBkcV/vZf40xNY7SX+GerJllFnyR8cV9w4Hryv5n5XyLpmx86k49
uY7v2hbPMjnrffbJ+lQpfye/z9lDdZ4vsv6DvG+jKV9Y++qasj51yuYZU336
NMZIjtddnGCcKhgqWKrXcv53jGfz/U5MvTETih/1fuzpBGhjbx/7/NRfsR37
3TzvCSlbIfbKY6odcv24BvBj5w0Vlgv2fsExddzeLPPpi7OMG1e/id+GTsSS
o4WJhY39queZ+59ppOr2xO6aXN+rWNeGWT7uKw4pLintG3jR9WN/D558sPij
8DzipTCpsKkf5hg7d5UmEm2kD/iwuuob9i0/PqniKvPCiGX/D1J/267STKKd
9F7+7tSpNkBbMDO+Tq5v9izvZd9p9Stjaltf1h/pK24ajtrHOeavhmps47fg
qBg7rnHLuuseZxypsc5Tsd/07McXthPG893Bwt9N28ZCYyYXvm6a9iy/EvvB
nG+hnK8/9qeDpRdFC8a1TJXyoRxvAePV2J8N1nvmffPO+J1x+nD7ftDGJMu1
8Q2OWn8bvywZeyVjjIHiouEG4q/gseCo3NnWcVvgyeEDbuktPgvuLG7b5Vl+
1Vt8lzuyfmNv8S/wEZTd3lv8EvyCg2ADe4uPcnr+Xtxd/Bc8GNw63Foct9/1
FncOV+vWdgx4GHNbHBpcGlw63DnXaBs9Hth5GHp6OrS56O/QZ6LRRQttev77
ntJEgzmfodmw93R09FX6LFpEtLjozdCdocn1h4mlO/Z5ntWCeZ++6KvY3Zbt
nYLVn7rtC7OP0+PecGBxYekw0GOg6UDbB96C78O94wJ15ff4ypjipOIk4qqd
2l0c3mt7i3t8bHfxgfCCcDlv6i5+CJ7IlVmuh9XNcnZv8WH+0J4lvga+z63t
WPgj+EEHdhfHGtea3sCwZztYfFicGNyYu8xf+F/y9yfd9Rue2VucFOe+sbu4
Kxbr/+wvfi4O1O/bteGy4Kjjql/VXRx2Nm4JjgkuO276lOvvLY46DjtuM44z
bjuOCa4JzgzuzGu53nOzft9g8eEfaMfHiccVx513va4bh951uT7PDI/l7Syv
mH/5/fpLU0isctb2m+MewBfs1lMchFfzzb2V32tT45+R0rN5s1OaMLRhbFcu
xrMOn1RP+Qr5qPCi8Khsez32zX3FrVK+cSujK+NYNGo26CnuAq4xfAMOg220
ZWjVqAucwra9a7BiRs93KuYkBiWmJLZE41MMiv4o7AWMBqwGPdPX27XBV9Dg
+6JTGjC0+XA6cDlwOnA9ztPOtnv7dKA4PK+YD/KDjJS+jvJl2/VcG/up2GvH
/mSgOED3xV69p7hBOCHTt+eLK0Jzy1jOmI4WF30168Z59G6eaO0hPS2aeY9O
rN/L73bQSHFGXL/7wCXRftL/ogNGf4t23zxdpS9Dw49uEv2kGVudh1v78eOe
4qbg+ExoNu4PzgkuC04LLgpNLVpU45rPynwegNOzo4dDS5M+zok9palJ9wvW
A+aDNhp9sBnbvdKPe6r5A+jp0MDU33y9tRX07ujAaDu0ITTG6NvQwzu2p/Ro
6OfQBzq+p/Se/q+v9OnoBdHToS/m3HAn9Ofo2SzcrmV8m9/r3+jr0cs5Goa8
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
lwbnL9v8QjkNAVhfmF94VJoVeOx8PHJT47jjutO4oHUxcXLpTOCEzzNSGhiw
jDCNrm9yy+dFw4CWwVDLf3Zke940PWD9YP5oaQy3fGPwLrjuNADwxvHHaWnA
0MPS45/j3uP0443jj9MOoClAW2DV7PvJSHEucS93hNsZKY4hTBpOIm4ijiGu
IU4mbiZOJt6iPlBf+H6ez//1FkYcVnyqFr/B4cflp/FB6+NgY/LJhSeFjabN
8P5IaSjQZoDvxWWnUUCrACcAN4AGJC1I3Gn86iuHiqv4PfiYkeLgw+rC7NIi
4APhC8HReyvH2ne4OEM4PHKhi5GIi4jbiBWZ45rr4mzjutPApIX5377is9O0
pG1JSxMfHl8UF5Vm5nttvkwnk14mrU0anDQzaWLSxqSZdFindKTmzf5XDZVW
xGbwRiOll0BbgsYDrQcaD7Qe6FNcMVSaErQsaAzQGqCxAKsMs4xLPLblO6TJ
QJvBc/V8YdBpFdAkoE2wXYun0WWgz0CTYrHYlw7V8Z3no5F6vtvHXqbpU9AZ
wPPF6Vi84Y2Wz/oSTQ9iydZe7d7mTzhCuEI4ROaPOJWHt/mp+aYcAuP4Z7oq
t4CYh1iLmAt/p3iHeMlzWdbor5gJbhqOmliKmIhYiJiIWIltymgkrpX1WYZq
fm2eLbeCGIvcDvJni73IV/BU1h/LMjxUMRWxGed0bj5hsRkxGr5iGie0TmbO
PU+be344v//DndJGpNdIY5wW+T87pT1O8402nHgurTGa5bQlaUzSMqcRJR7F
B0g7ikYabVmakrTTaOrSirq/HY8+JC1G2pP0InHkcOX+2yntRhw7XDt8QtqR
NFWATXDGccdpStGmurRTWlPr9ReX8ZV2f3I2TN9bz8SzkSODP4RfRO4MuTLe
7iqfPt/+7ENl2y6XxsGDFUsXU9+nv3JwzJz1PfsrNweMBFwGfAbshBg7bAGM
wQ9bfbk7YCRgJX4yWDgPeI9d+iumJtYm5ibWto55Tlf9Pn5PMRVxLbEisRYx
OdquD3UqVieHijjhlHjhSOXpla/X8ZTzofOxi9fxrcsxt3VX6UfIPWcf+/5J
f52yc8VTeytHuVzlcnF4lx5v76MYo1iOmI7Yozzh8oX/vV2/GI/Yj5iQ2A8N
4RXb700rjAan39Rv6ffFmcSdpAWKT0yTi1YtDTlaXTTCaMnd0+ZrrzRbOW1b
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
rQxjGn0fbQz6ycYPrsn4Tl4r1JIn2/hPrt/pm3/YfF5uTz5kvmQcflx+GgS0
COhbXNP0F+hL8A/Ijeub8+3Rq5AXmIbFFC2Lhn2Q00EuAT4p2AkYCr4qdeUS
loPWPjRMaAcZwxnLuQ/3YzxmXGZcQGvE/ME8Qh+t79aH67unadokxofGiW6U
1pAxqLEoTs08rcxYkk+Wb5bGOa10YxDjL+MwYxM+Wr5aOSfknjCugjWYv+lJ
G+vBbuzYtuk35GtZcFz1Q/oCY11jUH1CT8OeeIeMQ2kg0GIxJjY2hjmhxaTM
WNUY173IK0KLBZbEtaw2pnJl8MXhEhpDG0vzBdOTm6vh5+hL0J5zCbP01Rjc
WBwGQGwdBkB+ElpN/2t+ZmNlGjPGXDRgYPFg8mjDGHOZ+8qXYyz2fH9pfU9u
eAI6FXKTTpXzzd5XmhW2WZ+jr/QrvF808ehd8J3Bbsl7o59ceVzl6titPcOl
m69QDhC5J/jc5HPhU+Bb4JMzFjQm/NJXxzcnR4Vj8m05nuPycfGdwSLBJM3Q
+uUD2rH18zBVsFXydNDOMcekhbH2uJp7Gkfs1Z69efxKDask54VcIDRG5N+Q
h2Om1o/SvqCBMXPLZyR/0XrjShvDPBb2CQZKvwtDBetFswe2CtaJtoccH3Jn
bNy0aWj4yzViHLNfW5+95QdxLfJwzNHGKbRAaILIH7J20/ZwjauOqzkAbXQ+
F3OD3w9VriA5PeT2gMmC5YLpgtUyH5Vbe4FOzT/NR+XiXrBT81993f3N36jP
mzL/HFs51Mx36c3QO8ktTsnlTp/m+qbfQo9GWyOXsBy32hz6OdqXHGaKXg79
HLmm5SSn92I+K2+54Zb5K30cucJpxtKO5YuFraOBYtwmR7hc4fN0Sj8HZg92
z29HKwVGDTZQniXYNRi1w9qzgl2jdUILRU4o7wiM21Htt4F9o0dzQdNzoadD
r4aWD00U2ij0d25uejv0fuj/0N+R014ue3Xl4s7rPGUfej43Nb0Vuef5ymg7
mZN+OW5dqrWN07Zxqm9F3hzjYvhWOaznEH/vq/gKTXZ9gngXn8oU30pfzWXg
V+ED4UPhU8VfaEbTRDPefGpicW3oSt83UvE6mtBf6ap4yZ7DpdNMr1n8Bj71
lqZvBH8Kn0rTeW7xNGOiiYVV4yP/60jhX+FhF2rzafirG5peEXzrBc03Iweh
XIR8NWKN8DFyvcIvwZ/AJMAmwAOIx8MUeEn4CI3tjOmM7WACYAPO7pT/DV6W
HpOcT7ShxR9pWC8mvjmx8LLwX/C68LnwsvC1S7T5ubniZj2Vs92c8UZjxk75
hPiGxL9o7suJJl5lLLlN7E87NaakH/Rc0w+jL0YzaMdO5WyQq9QY01jTmPjL
sTH7u53SG6LRRqtth07liqU5RnvMeNu4m96Y+IocyHIi0juTV5HGGa0zGka0
jOTIpTclBsC3ZMxq7MqfKE+fHHP8k2LUYtXGvMa+4n0/6qkca+KT8pXCcpzv
XCPlr/9O85caf9+U5d+dyll/d/Onbt7ie8bjxuZbx36vU2N0cxBzkbc6NR/n
s57Qfk9jd/FAOeemybb7JlY8b/vYY7oq/rjrcOVxl5NdfFK8Uh4dGuzij+s3
rOLGrY2Gd4OHg4GDhYNvgm+DQYNF48fVFxsjiOvSDpOPTs4TuVbEhMWGbZOr
jp+CFpoxh7gwTKlzyeM1BWs6vnw/MJCwkXxFsJX8R/xIsJSwlRu1fWAkYVNh
VGEnab6t085NC44PhVbaTOPKt8JHQntt5nHlO4ExhaXk0+Lb4qPnq5ef7Mv8
XfKZ0GOepsXuxPZ2am0Mny1fCZ8JXy4fEt+9mA7fknm5uvy7/Lzm5fp2ebnM
w2E4N2j3NsVXNlL3676n+MpGanxlnMWXJYcX7ar92jHgKWBlrs77cEPzV146
tnJ4m0/C+9MU/iz2c33lL5fL8rZO+b/hueAT/9raEzk15aW8s1P+cvk1T+9U
3lf5LfnP5aa8tVPza3g1uS3lmIRfgweCD3ugtUdntrmR4/+6r/BuclHK2Sln
JrwkLQ8YSlhKeEl4j/ta/Rv6Kjc4fJTcAnzObNv5ouU7eL5TObTl1oYFoU1O
o1xuBPhKeLtX2v62KXumU7m3+aPlNs1hp/iDfY+Pi130VT5xPmvYk0v7ypfN
lycfyKud8umZ87k/98lXrt4UrEqn8KEfN2yKa3SttMVoN67Vxkhi1cYachTq
c/nP6FrSt8TnPXK4+N343nJVwujL8SS3E+w+vArdCPoRT04qfA5dCDoH9A7k
zJQ7c3yL38rRJLe5nOpyN8l5iU9+cIuXyxEl17qcm3JH8T/RGaaDS0+dBjAt
YBrAtIDpK9CfOKGr+O7vDpfmK00S2iT8Z3RH6I/QI+Gfw+nBsaI3zv8jRwe9
gUebvw+HBueH/47Gt7knjQ7a3/Qu5CrDue5u/jw6szg48hHgGOMa01egBUHz
gs4DvQdaGPxtOOP0PORHnIJvGixdmvFDdc1yKuEFuRcaubRwaeLKPUWjhVaL
HPFfaf4quoB0VF5t+B8YZxhkeCAaxbSF4Stp98Mf0bWhbzMwVP4pOsA47/Kx
wBfRpaFPM9FcbKg0bmjbHMVXkWWu2FsZJ4wUvoiuDcz1M5NKU4y2mHwFcifR
5KXNS/OI9hH8GEw0jhJ/Kv8r3VP6p/It0Pyg/UGTlzavOYW5hTmHuQfN4xMb
34w2M/wTzDUM94xDpbFES4mmEq1fGr+0fmkG0x6mMYF/DtPN3wMPBdMNow3P
RgOYFrAcX3Ld0UyjhUYTjdY3bgTuw1FtjE9PU9u+WPMH0Gyj3UZzjPYYfy4d
F3ou9GHoW2r712v9Ec0SfFMcWtxcmiW0RZZv8R2aI7RHvt78/TTSaKXRyKGV
Q4+Alj9NfNr4+gh9BQ1/82kYQlhCGna07GDwYPFomtE2o4lNG5sGIS1CeECc
dZoG/MGwg/QVzNnM3aZr/IuD2vwERkLOHjoKsBP0G2h90OigV0EvlF6CHATw
MvQv6ILQ5KBvMb7xRfRx+jp9nr5PTgf4lf7GL/lWm//jSOJK0hiiNQR/+J2B
0lu7arg02WmlL9apXBf8+XSH6Q/LvwGvZV5tfk373RzaXJrmDO0Zmm+032jS
0aaj0UOrh+a/3AjrNH8x/XF6cuIBdLDpYb80qTA4sDg0fmj9rNvwnfTnbhou
TSPaRnJw0OLnD6ZDTI+YHpicDN4VHEC5GuAj5Yigz07fUI4G2kk0huRuoDlP
e54mPW36/wd529iz
         "]], Polygon3DBox[CompressedData["
1:eJwt13mYT9cZB/BrhoZBDDFjxjAqiRDLhIhYWlssofYtdiliCUonbRFpJ7VG
k0zpRGqNPB6Zh9q31pIKqlJpSUgfO0NIMwaxTFEjRD/n+fnj+9zzvuf7ft/v
Off+7j2/6sMm9BwfF0XRDigBfdOjaEtSFM1NiKIPTIxKjaLE8lFUMz6KipWO
ojgYXTGKnqgaRTXkxxj/UK5UlSjqkxZF+eL3y0XRp7Q2pUTRLlof0hohfyAx
ig7CWvN55s/AV7BGvJnec67poa5kFFWntVvtMrXr+NgIn6sdR5NUVAd3vkE1
vFzjI3InoEOpKLojv5FebXnWolx66XgrrKW7daRLJsFS8af07uC8rO6ncLyy
tTKxmcYm6EfjrLUVwDLje3L3YS/96uqvFIuiqjy+xmueXD6P+bx+KXcYvhHv
1uOaHv3p94M94nE06vBQD4bz1MxedoQ24vqQKddB/Ki+z4kni9uI7+rR27WH
XHeYKd8txNBZ3B6myXUX79NnJ8999Cqu71B70I3PAuP1fG+EmvztxZvE3wP7
NNDcUXuwxNoq0xip9jPr+AEfx2k1VdMC5uCl0VqM10i/8vpWgNtqS8otxEmm
3RYnJ9wj14l0xtqbcbDC3BnaZejM1XsZzKRfSu1itZXMt1PzntqPjSeqmaz+
9/CKujR++urXQ+8f8XnPvuTpXUjvNtyCD9QOcC//RWeVuvU0fkb/CG4buaM4
8/T6ntZdiPRpIL9N/n/25EP1/zV+Vr6f/FLxU/Q26H/UXnVVMgvvnPgszOV/
g1y26xZ9snhrwWNb2Cq+zl8eDxfoHQ2/MT6e5r2G+SehJ34tcTHcP/BVAa8V
Xra+a12nWsMGuVWwGvro01e/n0An6Cq+rMdCvG2wR69f0NrF21f89scZC6Pw
LvKdDzNor7PG68Zb8c7hDTD/UtCG7ep78VQ9OYpSefxIvANeCu8EuS5y28R1
raVdWEty7L7c5aOKuKLxY9DM2tLEpXE3W1sG/72tab7+b+qdBTXs7SoeJtJq
oHclXjNcF8gthI64/3bNklsSftdqcuAWz1dhgtx74iZ4jWEHndG459zbK7DL
uJ/6YdY7zPwlHq7YoyK4C3fEufx14bUyz2lQZB2XYI79fAcW4g3DaQMZxk3l
plrHeb2G0xxFu7j1xcF+Xk7p2cj4Wcg2l4x7TZ+rao+qPQk3xPfhe7k88Qm4
Kl6ux0m5A+IUXu7w8a0+582dlT+YEHuGakEre9seGuMlWmuude6xJw3tSQNo
wUdBWIe64eHdxsccdWPlB4R3J24x/nqbW8p3nPEL1jPHeC5cVPs7/bJhEY2R
vJXUr4y9+kbuApQQH1DzdkKsx04+h4ffs+sINUPD3sEi8Xl9H7EnJSBHryr8
fMLPGPnx/MTLtaVVILcVP0fduwkxz/+Un208TI+/mitXNba2MF8XknBH6LsS
nuJpLF51+1LSvuy0lgL6nek/kN+ndjVeU7yynt3aeKvE5eEBzk3YwWOiuCuP
X4uXi3OhRnh+eNmj52nji5BMryJuvFwcbMV7VDwIL079jvDbojFYPN/4j7zk
QGO5i+HZpPFAzWVIVT9FTUv1vwrvQGgot1rtEBgUdGAIHLP+t/AOmf87fGEP
ZoW+aopoFcJNGCJur7aEmtn6vs5DXb+71+Ue1ytf3BrvvH36luYKWgflj6mr
YG0NXT8xH8kXg4E8N1N7w/Pzqtr94sl4V9XuNn/J3Aw+ZqbGnt3w3vtc/hx/
0+Xm6TOZ3DgopNEK/0u1141bGjeHFrAMNvBcqMczPJQJ9yO8j+X+onZBOEfQ
KlR7PNwPfa7jpeo5gKeteNshk/d4+S3hzAF/hi7y3+F0pTnXXDf7sT28P2Cq
3GleD8Hf6Bakxd7j4bd3W49kz001PZqoO0w7Qb40DKI3Q661uubwoty7+CfV
rzc+Yu4EZNJfAy/Hx77pTyfHvmVD1Q/HexX6qs/BfQKvp+sEOj+H03gnYIjx
99ZwH94KMd4MddNhttrB4hs8fyEuxE3iOR3vx8b71UzneyaUod0Tt3f4Tobv
LPRIjX1rg69w7siOj73bF4V7rrZ++GZCWbxz8klqxtBtGvZerhokh+++XAe5
dHHZ8D2h8yAh9iyE72Eve74OZ5p4kv798V4IZ4TwHZR7DAbbkxReUpJjZ6U3
42Pf1Vv6Frd336lPCdrhfRj2V+1JOA2txU1xm8Aq3mvTq2c8Nbw/1fWn/ZH1
TDP3a9w3YBq0wZtlPguvdNiv8Ax7zo7B17gX4LLcqfD7TI3dj8F4JdWVCvsv
flG+pTX1Es8zd6Fq7Iy04OH5qxbEyT3vWbSUiI1oued/OU8X9OmIt0hyIZxA
yNLzN+G7GX4XciflaqufaD8ahu9tcuycOMF8Gf0+o1uTxilar+n1DB9V4Lpc
pvjj8K2n0xUO671dvE9+Jc+Lw/se/iH+E716xunh+RB3cM+e1KeRPU/Us67e
66zrl3jl9D1Ip7YeeeEbDfdDLL9Zn9M8t8CtRasxzfrQXNyc1mjrGASDw/lJ
3Ds8HzAwPD94mTRW6lHHuIL6ZMhQO0VuMe1OenaD/+j5CH+T1HUKz1f47cE9
PsaaHwGvhPNfeG/JZ9Abnxj73pRVd43HfXL55ibRnwwd4B3z7/PQ3lxb8c1w
ToRCNaX4TXM9E95hvCyBLnqUC88ztIa1uM+H5x7nJpw3LoJU651vfjYcC2cD
PS7rVYlekbW8QScL9tKcFb6N4WxkPB/ayV8UZ+JluIf1Ybdn6PG02Hk3iU42
zqFQK+4sn2KcG86w6uqlx7614Vzw9sP3RtiD6WHP8HqqvRLO/+kxL1Mevi8S
w9klnK/CmsM7UN3+8L9H3V38TWo3wkj8InEP9Sv1WAFr8BPCt5vepXBOMvfb
8M6F/wNG1xBU
         "]], Polygon3DBox[CompressedData["
1:eJwV0UtL1WEUxeFtWqRGN8tOmpmCRdNIExQi9AOYihmENxDBpOPYSYE0EC/f
wHTURB1qCl4mkTQSRw68nGMEDkpF00Qa2OPgx97v2uvd6z3/U9KRrH93ISIS
uITTexFn1yKO0J4R0Y0jw59FEZ+uOzOPqePIpg3cjTigHWKX9hsJeh79m7vf
UU6rQBZ92a5Fuz9jTd465mjHcndpe5jKjpjEegGv2RfaBDZ4Z9Wv9vzl39ev
6A952uT8Ud/LXc6RjbTMbdzm2bHrA+0jZmlzuEofdqfV3lF1wbnXzh92z+hf
6hvN6tU6bNEL7U/JSqPWjhoU0BK4aHcWntGe4iat1J6iGxEPkJ8bcQcn3vLE
rIen5VbEY3eK8Yi2apa6LNTvbzBLyt2W+9Csmf81TmQ3qZt2D9H/+fYj5/+D
c4red/4W/Vt9Wq1yLuGpVsdw31uK8SIz4jnGab9kzMt6JbNddh2WfJMy9yt4
K9HJ24Up/jfot3MQ03JmcIX3P3V4V28=
         "]]}]}, 
     {GrayLevel[1], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwV1Xt0z3Ucx/HP+dmGYyaXkKEtnU4k0kU51DnIHJcQp5ODExIybG5juUUp
5j7MpWw7NZu5nHIK1Tmdk6Y6dXIol1FzajuR0EXlnESlx+eP53m/P+/36335
fL+/75b5bO7wnEQIoRL10CIlhOZohtfahrC2VQir24cwPymEhRiDoXL9MRhj
nfMwHXPa0IjlsSVqN6pdq7aYX8hfw59Ll48lmEqbjSnIxzzMRRl9GX0h/Zrk
ENahEBUoQzkuoRHtBTah17+Wv46k5iGki//dLIRUNgUJbKYrwgZkpYbwkZr+
bJZdf2PzzezNP8fP40+jy8NEjFE/Cs+gVK7Ebuvtdl6uiVhTNFH7q55p7Lqm
etplLVtI37FxCE/HfKMQBtBcYkvVlGAbfoz3wHks0/dJ/SvahXD5thCu0vbR
Y4l4uniZ+DTng/ZMTg9hpZr1KIi15tWYu5TdSjPX3MY0q/h9+an8vnR90BuL
sQi5GISBGIBr5rbWv5+6Xs53oScOeqZ73flD9jnnyRiPU+5UjW+wRc1Ke66y
7zL+neY2NPcLPRfY6z/7d9H7FdoM9j6aCS1DmEG/IvpqV/AbyicjBXvNqMQH
uJdmNH0OzSHnw6jCO9iPAzhk1gHP4WP2EnsRP2GZZ3mELWCv6vsHrqCxXj3c
Kctuqfyu/H78Wr2+Rw1aiVeIDxef3sK702OkPQ6b8b6eVWyO+5Trdz/bxvse
TN9EXSo/V2xk/O3I70QZKvTdg914G/vwFs6pu+E5/8AeozuBrzDN85tlbg9z
P3H+FJ/jGN1p+qNsmnm92P72PKVXHU7G78GON+MHTp+JDugUd7VbttoH2Fp3
6CZWx051TvcttdcvOfagOYFf5EbR/My+6j6jvK/l8Znxx9srl/81/QkciZbu
L3OPs5U0e+g30IzjX6ZfwH/MrO16P8o+hTP2TxdvjV38Ee5Sw/5JU8ueNP84
vot3oRltzyk0K/WcrH+B2BXzJsr/HvfV87K6tuJ3xNn02fT77VWfZh/bQXyi
+FTxpfx2+uzgn5E/jW9x0fOfxJ5j53ufCfusYl+Id3aXUvoisxJpfhN2aSh+
nbaneIn5y+mL42+I7YsReJ6ugVkLad9zPoIvscm5SrxS7Tz+u/oX8zeqXxzz
7CazkuqLsY1oMsV606T43qrttUjvDLlJ4rfEv70o12c7zd3iQ/TpyM5xp9mY
gSKaz8zdRVOgbjLNCjZPfIfa18Ub8K+5Vw/+LPnZmImBGIxBeAQPozvm0Jeq
3UY/n1/HfyPuyT+rT3d+UnyG/Ave1yL5ar/zKud88aPOJTQZ7pMtfsPOE/Qd
j3EocNeW7GF2llw37/F2dVtR6y571RbLdaEpYXP1aSm+WH4mvw3/RX61ecM8
gzPsNjMTtDm+9Sx1Y/E4ttCdot+j58v8zvxyfldzX/Kcmovdo2eRPf8Ru+Eb
uBm/v/i/zbm73TJonuCf1W9I/L2785tmJsQ3x/vquVvPoXJ1NMPYTpihf1P5
jfFvH81OmofkH4zfL1ojDbeiM/1s+ma0Nfrv1L8e/3+oxxxk
         "]], Polygon3DBox[CompressedData["
1:eJw13XWcr0XZBvADZ3eJs4vu7mHXs+wuCCgI0o0SSkq3IA3S3d3dLd3dCioI
SAqCNEhLh9SLKII07/U99/DH8/nN/Zt5+pmZO67rnu9vssNq2086ZsyYs6Yc
M6YjvzP0jRlzXwqrdY8Z8/DAmDHb9I4Zc+3YMWO2HzdmzIKR98rv7ZFvybZn
yg/lvxXTdqXWfqu0vzp126Zugci/jHxq5N0i/zTyzpFvi7xH5MUi75PfOyLf
mm1vx54wZszvUt4h5e8P13Edf+Vsq2TbIPufm/rdU79I9t818sWRt4y8eOTt
Il8ZebvIi0aeIvdzfu7nx9n3pshr5ffByH/LtmbKf0j7aVL+S9rvnPpp0v7P
kZdK3d2Rp418ZORpIt8b+aa0nzbyA2m/e+SbI49Gvi/yLpFH0/6oyCNp/5fI
N6Z+XOTbU79T5N9FnhD5nsg7Rv5P5J0jD6X9VfbP73GRj23HGM7xTkl5vpTv
Sf0yrivyXdmWtk/270n5zznetqm/IfL3Iv818m6RJ2T/30b+SdreFfl7kW+L
vGTkOyKPj/ynyD+LfFvkNfLMV095jWxrpvzl0Jgxp+VYv0zdNyNjxhyS4/8j
z/es9t8WkU+OvEvkhSNvH/mmyLtG/knkMdn/mo52zBxvvdSflfqdUr9Q6vty
/ptSv1zq74+8Y+qvSv3JqV878tSpvyX1P0/9nyMPRr418hKRb488EPnGyItG
vjPyn7J/d+Tbsv+ukYdSf3vkZVN/X+SpIv8h8i8i/zXyn/O9XZ7zbZ320+X6
Nm3f02aR5079upFPj7xh5Nkiz5b9Lsr+F7Rv6qHs//fUH536H2X/z9P+8NR9
P3XXpP0P8nt65NOyzZjy/qk/vz2fZVK/b+THIh8WeenIB+f3/sh/yXZgygdk
+2vK92TbL+W90v6BVrdk2s+cY56dY5+VbaaUv8z1nJHyD1NeLtdzQNo/mfZH
pv0v0n6S3P+p7Vqui3xM/n9wbB1Tm93T/u6UD0l5qYHa/9F2fctFPjy/j0R+
ONsRKX+T+uNzvGlzvGtTP5zfYzqqD+gzv89/c+f30sg7js8Y4Lwp/659k19n
/xNSnjflP6bt17n+OVK+IeUpR8eM+SryOalfwBiQ+5k+vydFvqrtM2e2y1M+
L9usKR+Va7or13ZntkNT7sn9Xpu6hVJ3c475QM7X3/rvIZGn666+ps/NnvJi
I3U8xz035Un76tnOY6xI+12y/3k59qbZf9nI90f+Sepfjnxw5AXT7sKOGnPs
83quf4GUX9Q/cv1Htv5zauS1PM/IL0c+JfIqkVfLdua46l9rpLxRO5/xbb7I
/bmeP+Z4i+fYt0beOPUnpX691M8beYXuGhvubt94d9qfnPIMxr3UfzfyzZGX
j/yA7yH98+rI8xvDc32b5Hin5Xgb5HhzpX7D9r263zkjrx/5zMgbRZ498jqR
fxN5/cg/jrxwjnN9R/WxRVLeLPUXpn6L1M+f+l9FPiPyJpHnGKgx/V7jb0eN
9Wun/pTUr5v6WVO/eeQLIv868jyRd4t8UeufP4vcm/v5ffZdLPveMlDj00vt
ea4Y+bfZZumub+N3KXek/bkd9Z+6RyZUe2PcrLn/rbP/dZF/E3mlgdqUT8+2
svGsr/qyvnZ95B3S/uax9c68u4dzvGciHxd5lhzv+Pw+Nbb64LHmgLT/c8r7
pvzztN+jt/q6vr1E5Huz/32R9488Y/bfMvXXRD4h8vKp/yL1Z+b8P8r5Vxiu
/9SdmG2FlL/TV33Ls/+T7zPt/5b9D0r9D9P+5dS/lO2Xg3nW2a7J8fvS/o7U
b5f2H6fu485ce0+eeer/F/mNyNNH3jzyvunDvV05T7b/pu7f2aZMeaHUb5b6
n+S3J/L/ZZ8fpLxf2vdF7s/2Sdqul+9t6pR/mrqjcj0z9VRb+8yb8nzZpuqq
Y86T8gzZ3kr9dyPPn3Jnf95TyiulvEvO92Cbf1eMvHPkf7TrXyHyjpE/jTyU
9otF3jLyIvkdjPy9bIum/EDqH077vpRXTP2/Ik+RugUjbxr5o766Nve1ReQF
c/1HuB73lus/IfV7RH4sz3s09T9P/UWR34y8e+pfye9pkX+T7dWUX852QsrH
ZXsp5fPoFyl/J8dbIfs/nv92ibxztidTPiP1B6T8VMrfT/21ka+I/F7kOSKf
H/nYyC9GniXyI/ndLfK22f6e8qR5XjPn+pfP8XdI/ev578TUHZ/tbfpD9t+9
Xf/s3l+u/4zI/zRmZ/xbfKja22+33M8VfbWva591sOrPj/xa5F2Haz/7n5nt
nZSPT/td2/XOmfZv5ffiyJdle9e1tPNrO1vqT468d+QnIk8beUyu/we5/l/k
+reP/E3qZ4i8dORtI78Z+cW0nzXyOpGfivxy5Nki/yryi77RyDP31Peu/ZeR
54y8wWD1hw8jzx55vcj75Ht90rPL9lDqns/2n3b89QdL/rAdb63IT7Tzfz/y
Gr7HyFdFfj/Xv1rkg/I7LnJntn3NYXmmW6T8oOeQ8lFpv13kh+l6ab/KSL0/
7/GSlNfI830/8ow5/qF5vtPk92+eT7bRlJ/J/q+3/rlm9l8t7d+O/MPIh6V9
b34viXx5tnH2TftHUh5IeaW0vy/jw70ZH74X+cC0/yD1k+f5zh15o8Hq31M0
eePIX0SeLvKSkbeO/HXk70deKvI2kdcaque9RORjcrx3Uz9J6ueKvGHqP488
GvlnkbeK/J/I41rf38T1pD/Pl/68TOTtIv9iqO7XfV+W57FC5McjD0c+OMef
Or+PdtY9jU95JNt9Kf+l3eOyaX9/yv0p75/2E/L7WOQ/ZPs4z3jP3tKt7Lty
zteT3z1Tt1e2oZRPyvXtk/Ln7I/UD+a/hyLflO1/bJ6MmzPQ97I9aN5O+8NS
90zqZkj7iyIfHfkfkX80WPP9aznf+Wm7Tsbb0yO/HfmdbMewXfL/FdmuzXYd
naLpBxekvEHazz5c9dqdMVLlx1P/xNja5+y0/zTly1PeKO3/1uwV9smhkU+N
/HHqL4z8q8iP5/1fkvJ65rboW1vm9+zI52TbKuUr0v6bsXUt5AsjMxT9p+7G
/P9syk9n+13K5+e/r1O+JuVN0v7cyJ9H/irbeXSFbG+lfFHq16Xvu9/IX7Ap
nbe3ylelvDF9Pr9fjq1j3pzypamfrKPabp36v0T+QeRHIx9In488c+Tn6c6R
b4v8o8iPRd5zoN7R39it4+rdXZn6qVJ/a8rbmH8jzx/5hcgH0R8iD9KnIu8Q
+fqmP94ZefvIR0d+I9d2U+QtIt8a+Yepfy7y/pHviTxj5Gci7xv553lnD0X+
pbE/5dtTP3vkv6d+b/b1QF3fg01eIO/78ZSfyLZgyrek/Uxp/0jkPZo9ORD5
6cj7Rb4u8vjIT0XeJ/LLeb+zdtQxHOu4fI875nt8Puf/wWC9r0k66vo3T/tf
Z7tsXH0/m6X8B/ZV2nfpS2k/RX7vjXxPtsmV2Y8pf5rjLUOfaPPhlKn7ReS/
Rv5rk5eLvEz64wORuyPvk+u5v6/6qmMtn/q/RL7beBl5ici/p89E/neOP0/k
GyPfELkj9UtGvjDy4ZGfS/3MkY+JvH3kFyLPFPm3ka9u4/FckefP+feP/IG+
n/Ofkvr9In8Yee7U3xP5rshjc/yfR/510zc/S/3SkW+ib6b+y8hLRf4zezry
JGn/s8h3R74z8qSRF498azu/57PgYL137//hbGuzD1L/mbEk2xspzzVcfer3
7M/h6jP6zg3tfTyX99mRff/Y6h+lg+c4v8r22EDtZ3990T4XtPd7fcqbtv0n
7ag++XWexe3s6Zz7i+z/01zfneztyN9EXjTyzeyNyP+NPH/kG/gTIn8Ueb7I
f4x8feT/RJ438p/YF5E/ibxA5Fva9+H5LRT5Dv6VyF9FXiTy79p8aXxdOPJd
ke+IPCbPbzHfT67/p7nef+X6j831d9NDIm+YbRI+jNTPlvJ7qT8m9ZvknubL
fLJe9j8xz2fjyPNG3iDyCcOlz9L9NjLf5fgb95RuScfcxByfPrlo5K1TPpm/
IvJP6X/ZNs2xNsu2WMrbpP6U1G+V33m66pz+Wy7bD7tqH8f4Zdr/K8fezFyS
9hvmeEuY/7JtnrqNI6+f8j6pPyf1h/juuqrNoebg1K+c8grZtqA7Rx9aOuVd
UnfsYN2H+xls9/hu029+bH5M/avt+9qC/jBY39sX7XoOibxbfpfpqnMcRCfK
+Rbqqmfxm1zPTvldsKv+21mfzTWcnPL59IrUX6BdR/kULk758mynpf432S7T
J3K9J7byZfTjyCdEvkLbyGfn9/jIx2U7M+W9c/xjUr5KfY6/VNqfHvnqyFem
/bL5nbGr3tH2KV/kPaR8arYLjRn9VXYtl9I3870v0VFtTx0u+8b79t6PTP12
+V2kq97pDim/mfY/76jyafSn/rp/z+GItL8kv0d3lE/wUs8r9Xek/tWUH6dP
5vf1yG9ke8WxU39Eu7YrUr9D7m897yrbVNPkunxT7dmfnfO9nev7Wv+gE6e8
zlC9S7rt4Zmf38p/Y9L+Gzp6ymvnfXV2lc465TSlv9F/XzKm9ZUOS5edI8dY
d7BsKLbbm51lW/1f6ruarUW/0057x1ygp/Tbp5t+TP9ddaj2ZQOOy/k+S/2E
lEeydeReu/pLP1+52Wcv5nkO51mtEvm44bL/xneVTbj+UNmNbD0238I9df/P
N32afv5Wex5zNv1x3ewzadq+n/+H8zyOpIfqe9kO7ymb9DvNVmS/Phf5n52l
Y9I1t8z+q6W8V+rPzPX05B5WibxH5DP059Qvz97Qf1M+UJ/uqv/ss262ubtq
TDHG9Od+l0x5nWxDKf8o204pH+X7yfknm6Z0wVNTPmG0nrPn3d1Vtq4+rW9P
yH6jqT/APNtV38T+PaUXu/Z3O8tW/tVIPSv7HuH6s9+Pu+r57mc8GCr5V/oV
+7q/9FH24W9Svx89u6uegXseTv1GKe/r/aR+b+foqm/UmLRof/XNc/V39l7k
o7qqT+vbc7b7Pd73y6cwVPbSj9p4Z/yd39jZxuN50n6vyMd6/mk/zjEir63v
D9b3M0vkXxprBqsf6o8/66i+alwyFi3Y+vCUaT9HymulvFfaX5354LtpuwY9
frDG68VTv2Prz9/tr/7uWIenvjvyXJG3bOPjl/lGpu2q8dL4OFV/vW/v/SD6
QI63eRtbR/K+vtNf47954LD8Nzby9M0eMl6YjxaOvG2bL8wRxppF2j7GbN/S
3G1Omtw31PrPvoP1fmfzfUXeP/L0kTePfLDnGXmG9v3t6viD9b53jHxET31z
P+iv/nFk+x5n7K+5xxwzS3+Ni8bHeTpqbJ0t/23Xvt/TB6uNtualM8z3eb5D
4kPteztgfI1lvpmRtB3f5qfDvP/Uf9VXz4P/4YD2PBeIvGFPzb8b5PkMGAt6
an7Wp8yl87RnbvxlX67Qxmvzn/6hn5w8WHOsucCcYO7df3zN1ebgSfprfL4r
5ftTd0fazx15w/a9nxX5wLTfXV8wx6Vuj1zP4SmfkfoLcz1L9tdcZqy/Ku3n
jbxP5GsjX20+inxW5OsjX2N8jHxp5Nsj3zxY/WvdNrddGHmFyMdGPi/yTez1
yJdEvjXynyIvF/mcyL+NfG3k70feMvIp5rrIv/EcumpOOS3lBVO/t/kz5fP4
T3y35pNsJ6W8QOr3S/mElM9N/WKRD418euSLB2u82jnyMZHP4f/pr30d+4LI
e+Z5HGZ+Jed5/DT1B7Zjn5/65SOfF/m2yH+k30c+O/IdkW9hv0c+N/LNkW+N
PF3kLSL/PvL19Hl9qauO6b9bst3QUTGrP6W8cNofkLo/pPw7/pHIJ0W+MvKN
kZeOfGZXXYNrucl9pXxhtj+mvFL+u6CVb0j7+dp4d1bk6yJvm/vbNPINka8c
bt9A5N9F/i19PfLNke+L/Gf6qXk88jXZ7k559dRfnvKdKd82WP1Xf9U/dot8
b35/7/jZ/uIY3mNXXZNndo/vKOXL2jFW7K9rd++/z/4rRz7D+SL/gT8meu70
eTbTZftPylM0f6jxbvfB8o8aP1Zt498v2vu4vn1P+w6VfkZPu6zpV2e050kf
W7LpW/Qz+prv3vdvH7rPtC0+enXrD/Q6c8HR7Zj0LvoXnYxu6Hu4s9lT+gf9
UR29jX53bcaTXvHBdv0fRV/YJfJUma+WTP2/Im8eebLIZ2bu68/+X0U+OPIG
/FXNfp5S3CX6//9F3ihyR+QLWjxXvNPzoz/+PvXf6ajn4/1M1vyj/Me7Rv5n
6rdJ/eTs84HS2/S1I9s1+468O+/Qt+b5z57yminvMVg6A93he/l/utHqf/zL
h/AZ9tf8t3ebL/W3TXNP+0feIdt3pqn4HX3as6Nfb5L6PbtqjNplqL7ffdr8
afxasY0fN7fv+/MJpZ96V5dm/82z//ld1Ue+m+NvMVL9w7VfNVzfue/dOa7r
qe/O96eNvmh8u6vZ4/qfPqr//rqr+q7x4eBWvrKND1u2+en6Np6d1frvb9v4
u1cbb8wnb+V5b5Xr7czzPifP+5XIG0ceK65Jzje+qHhXttdSfiPbQh0Vc3ud
XyTt52z+jqPT/qHIi0V+NfJhkV8Sd+soG1KM7s1si4gdZvsHH1Bv6RaOdfhA
6f9LRn4r8k/p4+J8kZfO9s+UP0n7/TsqXn+l703cRfyh2ajvjqtrdc0fpPxO
jrd8yh/6nz808iqRPxL/ifz3HG/1yB9HPi7HezryGpE/jXxC5NfSfsHI70de
LO2fS/0vI38Z+eTUn5Ttf+OqPfnVtJ8r9V+JJ/Edpf1yzT4+KvUvRF418teR
fxP5o8h7Re7N/VzhWNn/0MgT+DuGS94n8tT8HZEXGCn7mx1+dsrf5UeJvHu2
76R8mZh8fgfFZVN+J8ffPnVd4qmRL8r25Ljyd12c8qPNX8WfdmTkDyOvHXlM
2984YDzYtaOOeUr++2Zc1Z/Gv5X2q6XuE/7QyP/N9c7SUT7Zl1LuT7s9Ut6p
jRELjpTs/3NG6piut6e7ztWXbd/U792eCf/i3ClPavwZKH2XfnV00492yve/
FX0j/087WvOs+VafPpFOmfpH8ntn2p6S+jXT7sbUPZb/7hosvYR+8tdsD6X8
N/2sq+aUB1Neo7/mhquyrWduzvHuaW2v40/If7dHfqDpN+uYA9t8dTt7rr9s
EzoiXXHr3POf27GmH6325rI/0eH03ZGa38xz1w6XfnJpm89vbfrNHc2/ZX7f
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
Rsr/wd+xZbY3YW3TforUb8qHEfm9bDt0lM3P9ucj4Ruxj33Z1HxjfGRsbT4v
tjabmy9smeGy0dm8bF8+tamavXtW5EnyPHfsKBub7811u/7t2/EuyfHGdRdH
AVeBTc72ZoOz9T/OPgfzV6Ru8tzvx80/ckC2//YWhwLXgA+OL+6V5p/bNtvb
veVD4TfgP+Bb+U+Ot11H+Rj4GmDCcR9wIGDFP5tQ+Ho4+ylyvhWHC7cNv73o
SGHQYZ1hnmHTl22Y8SMi/yT1qwwXRhkGfVK+uuHCrPOZ8Z1dPVCY8MMif8FX
MlyYdTYOWwfHAFcCZwL3AKcCF4FNNNE2GihuCo4KrDbOCS6Aa8ZF8bwO7Cif
ycK5ntWGi8cBs90xVBhm2G4Yb9hmnAxYaZjpiVyNgeI64DzA+uJA4EawodnS
OBK4CmxwtjgMEV8LnwtsEQ4KrgvOC24Kzsu9bf7FhTk2++zQWeOV8VWf0DeM
kcZKfRk2bs/2H3wc2f/6uj6ur+tTe46v/mV8Mk4dNFqcHNwPHBBcnaWGSlem
M+89XHPCjQ1PAl9ypjkx8tORpx+sMdhYbA4wF8yV/R+iT6V84GiNkcbKzbLt
Mb7sX/Y2DMYLfTUfGE+MKwen/Tl9Nbb4b8bBGnPdu2dgLD6tr/B/xiTjjDHa
2GyMNvf8temG35ivu4uDg+uD84ObAzMHOwebB1t3Wf7rSl1ntkt6CzMGCwcT
B0s2fZ7BzpG3hfvJs797QuHLd2gyjg3sPQw+7s3F2X47tjBxsHEw+Run/uyx
hdXHWYHNp5PRzWDccGNwZGDfYL7g6uDrYMHmzPl/y48Z+ZkJhQnHLcIxghWf
d7j0MfrbPyYUJg52DoYOVg4nC9cL5wtXC+cLNwhHCBcMhumGhk+CNYPnxwcz
Z5g75hkuzN8U9PmR0tHp6nekfnzqb8vvvOZq+ld3ccjw0PDRcMvgX8XKxfxX
Z4+MFLYH1uEQ329fYSNgJGCF4XVhaWE94TuXHyp8KJzoQcOF8YQV9R/sJx3B
tw8num/q7+srLBxsLbwbvCl8HJwcfJtrcC1wCNPke3usr/ANz+k/KU+e8Xeq
tF01+x46WphVWFaYVlhWeCpY0wez7T2+8HP3tTr410dS/5Tv1z7shRzvvc7C
3sMLP9bqp+0pfLL7dL9/a/cAdwd/d1+7ZnglsXvY5sNGa46/vfVPtu2cqd8o
8kH5vz/1e+R3bbpCntOE1D9gboq8qXOww+ggKS/CRu8rG0p/0W92HC4uwn87
i2+AkzBd6uemi5jD4AUibxN5y2xzi0Wm/eYpb5Xt8L7CR+MPwEbAO3sP3od3
APsM1wvfi0MFKwzz61vBYfSOvT/4RO8A/hAnTf87Z2xx1eCNvQv7wkfD91/S
jg1PvNxQ4YF9GwcMl03ANoDnxyfAL6Br0jnP7iuODG4Nm43thuOCu4PDg/vi
G3Z9rhPebpEc/1z7Zlt0qHQg4xWdcZY2PuIH0FHpqnQ2uhudh+7Dx8/XLx5w
Kn9G+sOpqb+06dv0JroWHZOu+SwbqKNiEGIR9uFz52t3LBwG2H76OT19tRzv
9JQvb/r5j2EWc67txhdfEMYZdhmGGfb5lGwf6e84fmzF7Heg8TnH+slg+UzM
B//XXXhCOvxp7VxsA+M1vCedmm59SV9xKU5q9/RBxqT1jU3GWfc3UDhBeMGX
eitG4D9lsYOr+0p3NkfhH5Ddn/uco+mKsPPeOe4CfCvZ/3RJMRe+JT4msZgl
h0r/pIceMloxHLEZMZrjxS6G6vl6zp2pX2Ko+BCOjS9CJ6WbXpptr/HF98Ad
Obk948WGij+CR4JvwX5y7/5TJ0bxWbOfxS5wzNbMdkRvcc+ua/3HnImPwaZl
28K/wteukXd2TXv+ewxXe3yTK+nofXV/rs01u3bPyLNyja4VZ9P7/9PY4nIe
l+39lP+DY9VbHK7Nx5X+y5aHEYdNhVE1/8yRc149rjDfT00oziHeFP4ULuLM
w8Xxeyjy3yYU5w23DMcMFw4fCncUhxR3Cidr1YHipZpDccJw73DwcMVGh+t6
Lo1824TiLOMO4xDjMsO/Gv/NA9/iWdk2bB62Dw4brhrOGm7byHDNv8aPWycU
hw53jY+Er2RaPtI2P88+UpxqXGmcaVxrHLmt2vXgzuGf4XfhgOGm4QieMa44
BPoTDiKuJs4mbuKjOecrKZ/RW3h+7/7c1L8+tr6BY7O9mPKl+W/9geIUKPsP
1+CJ7P+/lM9KeZLROo7jPY8DSp/I9V+c9v+K/NiE2pRPaO1xDmDHYcg3HCid
hm7zz2xH9da7wC/AEfZOcODwvvG/ceNmGi6OKU7DgxOKI4tnim+KO4uzcH67
f1wGnG9cOpw6XPAZhoujjlP+lwnFEcQ1p2PQNXBa8ULxQ3FdfzBcHHSc0b9O
qHfsXZtzzb30S7okTg5ujj5g7tGH9A0xJrEmmDtYLZgoWDz+D1gpMSexJzEn
sScxJrEmGElYNzElsSWYEdgRmD3HE8MS6zo6/32VcvdU6Udpe2muf3x3xWzF
buF7+es/zfZaX+FF/9fK8GkwVnBl8GWwV/hQOHK4cWJmYlxiXWJMYk1iTmJP
YlxiXdqIr+H02BdGA9YExg52YyImrqcwXY4vpia2xufP9w+DAmsBcwGbJ2Ym
dobjg7t3ae5l4Rz7p8ZYukNf+Wr5bCdN262MB8bdbFs33+v0aTurOTHlNfvK
F8Mn8z99kc8g8lmRP9H3Is9BV4/8NV9U5J7IF7JhzYd0knasTyOvw+cT+czI
H0fe0pgb+bLIYwfreDNFvojez5eV7Xr+wWyTDZYPebDVj4l8cfMFjbRr2Dr1
S6R8Rcodg3VvfZG/a4xt9+k/5auybcdm6ayy42/fV8/Lc5tcvIYPx9gbuXOw
MC2wRzB6sC4wt6u07xM2FCYXthBGCFaITkw3humF7aUj0hVhfmF/V8p//6Af
pDyU72mtfJPPNF2TLIYplimGKpZKb6Q/woDiyh0zWNhE8WdYWTFOsU4xVbFV
OBl4GRjbwf7i6NEDfaO+N9+x7xmG3bdOJ6e30d/mHCmdi+5FP6e707noXnSu
B5p+TXemo9HVcCxxN3E4+f+ci+6JM+qcD/fVvXsGqw+Wzga783A7HpwuvC7M
/EB/YX5/mfJS7f5g8mHzl2r15w4Xjh+eH/YfxhvWG94eth/mH84W3hY2HEYd
JhOmERcBBwHGEZ8AFwHmEbYSxhIWUkxNbA0GDBYJhhV2Vcxb7Pu84cJFw0fv
OFQYUNhOGE/YUBhR+GQYYdhRmH8YWzYT20nMWewZPhQ37/Th4gHA4OIKbJBn
MlvanpNjfDZQmFdYeTFssWyYYlhLmEv4UBhOuF34XdhOuAn4ia3b9Zw1XLhn
+GfY+PPoKZ3Vh8/lR2v2oBjO53wlvg+6Q+SvIm+a36cjP5Vtk+6K6f2tlZ8c
qFgZ3/uz2TbrrpiLWJ6YnliMGBlfPJ/8U2zn7vLl/z3bxinv1F2xqv9m27m7
fPYPt2Px5Ysxfcqf1l2xJzEA+zvO+SnP1Ff5VXB/nhiomJfjOe6FqX95oGKP
YpCvDJQPki9SzO/5gYoBPtKuRWxwjTYendZdvmgxQbFCMUOxQrwg/CDxto3a
Jjb4aEfV7Z7ti5Q/43PrrliWWJ74lTjWin0VqxKzej/HOzy/veybbId1V2yr
K+XJs+3fXfY6X8ie3RVr+1l7P56H2JhY2pjOekbaDOIDRD7CNbZYoljZFNkO
SHnJvro23Nm3Bmp8NX6L74nd8bWLxRnDT0x5ldR/n76c8r9Sv2t06IHOivFp
35fzfZ3j7RF53ZxveX069UdHfm+gYohvtXcrtvi9tO9P/XGRN0n7lfvq3k+I
/MFAxfC+256F2J6YwEi7FrGC4/P7Jd9iR+2DEzzabHC+h1kbvgWeCD5/3FDl
p5GnZm26Ytr8jK4ReSD120ZeqrPmm+8Nlg3Nlr4/20UjZWOztS+PPJT63XP/
83SWz2SvvmqnPV/Vfd1lY7O1PaOOjJUH9pX9zo5nz6tjjw+2Z7hbjrdkyht6
P321KTvW1Gm/SV+9O9/Cl+39j23v8gu+0NzfTyLf2ObzHVI/f2fNceY6MWe5
PXyzYtF70mlSd3fk/sE6j/Mt3Vn3wifEN3RnO/8P+XRT9/vI2+T4u2b/FSLf
HHkK9mV36RoLt//WSv3HOd/p+vVAxfHF88WrXxyoTVkM+6WBimGLj6/XXbFt
GACxZzFo2IBf9lUsSEzoo4HKfXJFR8XDxcXnbf1zu7b/2pF/kPZnRP5v5P2a
P+XWyFN5f+bUyLdH/k7kmXJ/y0b+Y+Rt+fbz313d9Xx6U74pv8t0lk5Ax/A9
vZfz7WgcSPvdzHl0W/18sL4J3wa/Wvdg+XN+FfkW+0beO/K6nfV8HX/fyOt3
lr+nhy7bV9+2seOfA+XH4kvhU8H9xFvCX8JJw72HOYU9hRmDHYMhgiWCYYVl
hTGFNYXhgeWBIYUlxXmAHYc5hj2GUYZVhnmFfYUJgQ2BMYY1hlmFXYXxhtWH
mYWdhYGGhYZJhU2FSYVNhTGH/ebD40Ni47P1PRPP4let/+zbnt965qC+egae
pf/UeUewwzDE3p136N15h94tHZ4uP+VkGaP6y+fNt8bHJvbs/cDDbp1t/5S3
G653ulrqVxwpjBWsFXwuLC/MHZwVvBWsL58kvx7/Hu48jDCsMMwt7C0MMqwx
jCJsMs4OrghMI2wjTg4uAYwyrDLMNOw0jPhErPhgYXdxBnBDYMjhvmGwYLFg
cmBzcBjg8a8YLlwxfDEsM8wg7CBMOGw4jCCsIEwhbOGBuebb2D4NL0iGTYRJ
hE2EaYRthHmCfYK3gjWCsT9gqDCKsIow77DvMIWwhTCMsIwwjXBt8G37D1Uf
gD32zD1737y+pw/qC755374xRl/bso2vfJpb9JUOzzZgI9Dt+Sj5Ko9Mefxo
6eTGbmM4XX1LmOvWR38wVDYEvYZ+w7ZgM7BNzHHmOjo/3Z89wNZgs+Cy47Sz
ZbYYLhuDjrTcSI05uO848MYiPhy+HD41sRYcZ9xnHGjxYT4fvh/xYlxrPke+
Rz4Pvg8xGLEY8VncXzaQucUz8Czcp/sVjxcv57NzPj4k8Vw2F91kpnZ/dDRj
rTGX7sZGY2uxudhu5hxjizHGXCSuw1fF3ub73Wm4/Mr8yyuN1KbMJ803PXWb
I+5tc8MOwxUnEC9YfqT6kL60erbZhmpOMXYaQ/sGa041t7LpBgfLz+3YG7fr
2bmv9l2ivW82p7HbGM4WNYbLFSBngLGdDSm3jhw7bEs6OF2czgs7zOZkq7JZ
2aLmTLo0ndpcSqemy9Bp6NqbD5dOPDsbZajmVLovHctcC5NMl6BTwM7iGOAa
4Ojh+sBEwkayZ/R/fDa+A1jEGfO9jp+msImv0kmGCmMIa/gSfGV/4QFhC1+G
uRwqzCDsIEwibCLMIOwgTt0+/YXZ3bar7A3XA8MICwkTCdsIMwvb63rpQjB+
sH4wgbCBOLW4tW8bs/oLMwg7CBMIG3hEruHhlDdreES4RvhGmFbcHPhrWGIY
RVhFGEVYRfjXw4cK1/hcO9/e/YU5hD2EwYTFhFnFtYVJhU2lo+FSwpu4XhxV
XNUX2/yGl4qfiuOJW3v0cPFacTZxN2FyF2/+HVjlbzHCONy46XIoyT0k54rc
K0cOFw8XHxfXF+cT9xN/dJ2R4gDjCuPI4srivOK+4jjjOmujrWvCncXxxUGd
sh0fR3iyrsr5gjuM44vrK8cN+x3nds42f+OWywkjt474mfa+G98PHxTsKEy2
+4NB3hCXLvJ0PeUz4DuQYwcPWdxH7h1lnGMxIP/hPIuNiZHhAovJiVmJMYs1
wwTDBsPM7tDeP2zwk9mOhPURH2Nb9xe+He7+kTZf4HI9H/l/kT/1PcCeRv6M
fyTH3zTHf3GwuKQ4pUf2F6Z+Ira+q7iEL0T+nD+PDpz2L0X+qqd8dHx1zxk/
I38S+dD+whjDEcMT4/rj1OHewUDDQp8/XDwBfAFcIJho2GgcGlwaHB5cHvwr
3C2cLNwsHHr8W5wt3C0YZ1hnGGRYZBw33MOLhwvXDN8M+wwDDQsNswy7jIOA
i/CA64v8h7T/qKdsumXT/qnUv9n630Hm09SPjf7SFf3lN/CO5s/Ik0U+IfW3
pL5rqvLR/QK+LfXvZP/3s/+BqX8y8j8j/5/5OvJb9KW0nyXt1+8rDDisOAww
LPDUGW/eTPmf2Y41v+f4U6R9Z863XY7/dvb/Osf7OvUnpv17g8XFwsk6KfIA
jjpfk/rsf2P2/xd/T+QTIv8u8ru+98jbjhRuG37b+AS7/Yo5t41/u0V+bbC4
yjjLR0V+NfIkuZ4vIx8T+V36Y+Qf0RF9z4PFbcNx+1Vf+X74NnBY5V5wD+7F
M/Vsccxxs3G0cc9hTNm37FzYMnOKucUcb65fs9kP7A32v2fu2fOTwqqaU8wt
pzZ7FL5YXkD5AafrK58I3wh/yY/6yofBl8E/Mmtf4aXlCry5tWfXsm+nbdfE
R8JXAgMJCwnvJ2+pnIpf9hbeUB5I+SDh/+CP4QGPb/gcPgq+CjY325tPg2+D
v2WevsIU80fwS8DasqHZ33wQbGs+G74bmFnYWTn+5OqD2YLdkvMQHgh+SC5V
Phe+Fz6bb/GW8I7zNf8WvOgzDR8Bryqn0KMNbwk/KscjHhk+mdwkcuzgnuGg
3dnwkM+3+R8eAl72nYbfhJ/EMcM1w1+TO/KB9nzZiJP3Fb7zuYanuLLhrXCU
8J9wo+C14cXlMIRHe6j5i06MPK6v8OvyKMqnKJevHENyzuwUu33P0fJB8UXt
HHmv0cKrwHd8t/nn5ZBh267b7O/Hmg+Jv+gHfZXzUO5DOTEnbc9bbkX5N+Hb
5cyUO1Ouzz1GK8Yi1iLGI9bDZ8t3K0YjVgMfc06LT8knJaeT3E5yQJ3T8Cq3
NvwJPI0Yj1iPmI7YDrwVvBT8PPw6/NRi7XuFp4eXkgtRPkp4evnOYAHkVZVf
UYxIrEgMSCxo7xYbuqv9t3dvxRrFjMSO5F2VK1XOVLlaxSDVa/f1SMXg7m75
HcWm5HWU3/H+dk75He9v+8rH+MCEyqcq5iX2Bb8FzwVfBu8lZym8PjybXJ7w
YPBn8GHwZfBzuIjwef/qLfybXKxyqsLL4fThseGzfdZbOWm/376Xr3orB6xc
sHJaym15ddv/+NZ/5WGVj5WPlK9UPtdZ2vfne72qnR/mD/YPJvCb1h/gqeVM
lQdVPlT4N3hA+GN4YPwD+D55XPl8+H7g2eDp4Nvg6+CPX214ZHhoOZDhAfET
RvoqhzF8IT6DXK/wePLKyoEJHwd/J0/vBa1/wO/Bz+FXwNft2WKPd7RvEt5a
blg50+Cf4efk4pLfTa6uZ3qLrwnTCdv5fm9hGWEa4S1h5GHlYTAvaGOtbw9/
BI/EMRwLR3GH8YXxhPX8dbbXeou/KL4nzrf7aHETYdNxUGE2PVOy/z3rpyKv
zB8NUxd5+xxzpY7CAMACwFjClsKLwl7CkMJ2wCDAlsKc8jWwf+FJ4RPgWeFa
dxktTCtsK8wp7OnzvcXPhKmAo4DXhFeFW9017f8deYuOwpDCwsJZwF7AdL7b
WzxSfFLxS/dpTDO2waD+u7cw7sZKYyYugvy5+L54v/i4sOiw8fD0cPViiMZu
YzjsunfmW3m1vcuX21jrGLjAsPViGfDucO++Kcdz3MNaX3FtrhEX1JgN+47z
YCzHFcCNwB/AI9Dn9D0YWfzzx3orHxW8Ja4rfK06ONrdRgvriosKjwuXO78Y
SsovNrwKjsAi7dpg880p+pI+BYfzfurXZUv63iYU5wT35Od8T9l/aKj86/zs
uCtwO/C63pl3t3v7vuWwk8sOPwMeEF4RHhQ/A18DPhQe1Du4s7X3bnCIcYnd
o3vds/kj+Bvg/+GRffv6AHzNMa09DsKTvfUNdTb/mG8L3wM/BX8An0EO9fta
/5NrHUcXV1df0R92aPY1exoeET8EvwO/BJ9k+3a9OMVy4cG3wruKh4rHw8A+
2a4fPwIeFl5TfFq8dLtmr9PXxLflHICv9u3u2vDc+oI+YSwYM03hs/Ul/QVf
Bpdbn9Q3YYK+aP4a/Bt4IXggfVBfhK+CzcLZvqu3Nu/cu1aHr+296WuwSzBY
p7V+qM5/+Dk43WQYI1gjfB/8mRPb9azerhceCfccBx2+CwcbPlgOBbkU5FjD
Y1+xvS9jmLHO/sa2Q9v7kXNX38MBxwXXd33f+sCU7RvXN2DMjVvGr/lSfm9C
jU/GqZ1Ha8z6ul2/5wUDYjw2LsN2ys8uP6Q8kdYDsD7A78cW5vWOCeXj5+vn
E+cbF1MQQ1+ws2IN+42WT5YPdvbI+49WHIVPbkbx4JGKqfD7iJ/ICbVn9O5V
uypXFIyf3KFy+sL+HTBacRU+sBmGChMod6qcpLCCMFly4Z7XWXgsGFC5DuUg
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
+4d1gxc4up0fNo0NCQ8HF8e2ZEPCpcGnsS3ZiPB3cHhsR2vEWGvFmifWPoE3
uaVdn+Ph0OKa7tPinfhROKi4p7juMAmwCTCZsJnfcu7gk+BVtLFWDE6Vfadv
Mo4YrhgbEJ4ZrpltiPMqdz5OFW4VTu3zTca1nb1dr5z+8FAzt/YHtePh3OOQ
4Y7N1LYX2vnU4QdZ+2XX9j5nafFzeGNcNhwuXLZD2/nl6JerX054ueFxbOTO
l0Me9wZHVC558x0+B/yKfBzyF+AywZ/Aq+AQ45LN2c6Pw4SvIWYmViZmJpYG
DwP/ggMF3wL/gouKL4KLB/8i/4f8AbjJctR/3t6P94IvgguEEwQvY00X+SNw
j/GRYQrhXeA3YFPhXeA9ZmnxQWuw4HziYFoLwRokOIs4oNZqWaWdz/OAF12t
PR9rCsi3YE0Ua6PghuKP4jDidOJA4jbCs1l74a9NXq7J3qe1i3A65eOQHwLX
Ez4efh6HER5ojYZvEI/HJYVFgtXkX+FngYFavLPwT/BAfC7qjFnGLmMdbBN8
EpySnBjTtjLsErw+PAq8H+4kfIK1ZiZv+Ak2vVzj1p1i6xtTjF3GMGON/BST
NvzYt/ksxjZ8mXwVGzT8wtcNTwDfMGvDa+A3rNfwDjD/sP82OdPhEtTJZy1f
vrUZ5F+3xo61dqyJ9XRfrXcjvxpuOb4s/sLMDT8B3yDfBnwbPj7+NZ+BXO3W
GeJLkE8G3hFe8dv8G/Jz4Gvjh27Ungc8iLWplmn9wfu3tsXSrT/oH9bikF8F
9xMHVL4P+A14CfgV+BCcBtwGnGDcYflt5P+Q30N+DBgpWCljlrELxgjWaDNj
62iNacY2Y56xz5o9cpRbI8taWZ25v4U6i8sDn3ptmwvg3eDe+Ojgb+Fw+e52
cs7OwujC6s46VLL/e0dLF1C3XNsHZs6xYCJhI+kEfMl8ylO2uQc2a7XWBh7Y
vo7p2PBaYuFi4vBmOAS4BDhHuEfwVvBX8CDwHfBZdBh8I/gEHFVjwGltbIYh
gweDC+sbrfwo8q3g++E3wuvB88EEw+Nt3r4fazbJFQjvs1CTreUEvzNLw8PI
ZW9ON7eaY831MH76EgwYLJj8LvK14BPjF7pGY4sxxrW7B3O3Ody90TnoFnQM
uoj36v3CIMIiuka+fD59125ON3YZwybyK/rq2XhGdBdzuntzj+Z6czBdjc5m
boZhhZWFj4Wv9MzpLnQY74JNA/8HL8HWMQeaW83x5kYY2w06Cw8IX2sON1ea
M+lmdCpzoTmRrsWHgk+FQ8W3Ip+PXBFyRsi3Y00ta2vJTSEfhTHYuV2DsVmM
UGxUjFTsUIyVLcQmEnsVqxRblU9EXhGxTbFwa3Ba+1GOOLE+OUbkGrG+4oWt
zvqVYtBij2KQYtNilXJdyy8iz4gYNl8pn6nYNh8nX6d1R63PKCYqNixGLFYq
ZioWKiYqliomKzYLIwBbIAcb7Llcd/LTwQywVdmssAQwGGLLYsywGWLObD02
n1i0HCnXtWuTCwUGRGxdjB2WBKZDLFdMF9ZDrF3s9br2DOSkWrTF6uTCghGA
FZBjTQ4jObNe66h8b/AjMCewJ3JkzdZXmAO2ApsBFgEvQKyYvk3vZpOITYtR
s1Xk1MLvwfORG8/+sAty4sE8wATACsAMwArQefFr5PyhC8u5hpvOfoQngQkR
LxQ3hBWBUWELsYlgV2BUYFdgWGBX7GNfNihsChsJNgVGhe000t4XfAVbSU49
ud5eb/bUUrn+V9u9y/cmRi3WL+Yvdi0mLzYPQwNrI8YtVi5mLvYth4xcMmLN
chfKHyz/8cQ8yMMV67dWixzT1qaVw0guIzlw5MKBGYCVgZmBJZDDR2xajFp8
n41zUvv25daBBYEdsMattWitT3l6O7b1Z60/JV+5vOXyH4spiS3JUSY2KEaF
qy5eLXYlBiQWJKYlliZmJdYmJi2WJZ+yfMvyLsuHLKYm1iXmJdYmdgWbs3Br
I/+ZXHVypMmV9p8W21qhXZOcQXIHyekktxPsEqzSMe0/mAe+AT4CWAjPwLMQ
84Z9EOMS6xLXhcVgH/qW5JGCf9EfYXvwQGAn5C+SW0jOIrmLYDJgM9brqBiw
fJJyU8oJJDcQjARsA4wD7IQcRsYeuYnkP5JDSC4hsWS5nj6ZUPmLxa6Xbv2N
L4VPBVbHerpnt3dl/VDYCNiMC9sYAxOF/yZn5BPte4PlkhNpYm6kvsKOyaEJ
GwbbZS2co9s3JIeTXE5yHP2P/4z/vpXlh4I1w8fDccLVgzWDxXqo9VljgLFA
DkjYMjFh2CsYLLFia6PJbeebsoabmLPYsRiyWLScz3I/W9ttwebv5Lvm/+E7
kbNG7ho5B+UePLO3uOk46tam40fkT5T/Rh4cHHS+TuvsieeIGTu/6xBLhgmT
C09OPFgxOQzlUpJTSS48MfSRdj6x9UmnqXyj8o7CY8F4wZrBnMF+3c0H144n
1x4Mmti2GDds2isTql67nUYLYwYrBjMGe8YHhY+Po883dWLzx/JR8b3xqfke
xJ/EoayzB2t1RfNB83Hx3fHh8X3J1WP9MWuGWVtMzFDsVd4hsUTr3fLtW3PM
2mV8VHIbySnEdyW/InyceLx8knwWYvdi+HwZcgx51nxefF9y/sj9I0eSeAyf
Id8hnxnfmed3f0etGdw1VJuydYStV24f+8qzJLYjh4RcEnIKyS1kfocFsqb8
t2vXk82x4opigNYmsm6t2KDcTdY6dA38mHx7ciU5pjwV7gkeBC7EvcKowVLA
VMCueQ6eh3tyDXxMfE0wA3wOcpXKpSof7MS8sEOFbcSzxIfk04IdgCF4u/mu
+JL6WpueoeK76kv4XXxdfBdy7MCAwIXAh+By4l9aPwHfE+8T/1GMT6zPOqXW
U+AjowvTifnOzMewnTCesKEworCiz2Wbhf0hx2sry8/Kl8UXhcOJG8o3hf8H
w4nbKQfqZK0sdyxfHV+ba3IN4pddbV+5U+V/dS736F4XbuMDneEnKU+V//5l
rDcGDxUmBFYQZhBWBKYD9gMGBNYDpgPWEeYR1gMmZLj1V1gROVHlGpXjSq4r
mJKpmwxrAiMDGwMjAzsDMwk7AkMCSyn/vnzx+qi+CoMJi+mbhcGUn3diPt6B
wl/KF2qsk/eWvxUmj/4J0/ly80XyxX3Z3hlspFxfMBAwEcvg/ERepK/y4fLp
8q3xsfH18uny7X7Y2pD5bvlwX2v6C6ytnKV8vvDD/HxvDhaW2xod1mKz5pu1
O8TcrG1tzXuxOBzt0f7CLOBu47SLOYo14rrjtFuzyFpFuO7i5XI1ydElV5cc
VXJVyeEkfm4NLBz7tXO+bYYqp5C8N/LfyO3JxmJrrRH5x0OVA5KPS344+Acc
e2sQwVTg3lvTa4+GqYbngLG3Zo6YMey9+Ko84ge3eLL4q9zeh7R4K8y+NXis
vQPLD0NvDR0xVtj6Mxtm2/pg1g7D75FnH8YD996aADju28Ozw2+wF1NeC79k
qHKcylPJzym/EfyI3D7WXF684U/kmpLPatmGz5D7S04qeBP5GeT+eiHbiimv
ku2VlF/LtvJQ5XRgV/JbyPUAryKXFQyseD38iGfHn2dtazkU+J34peRWkCNK
XiU5huQagt+F0+CnkosBxw0HTL5UaxsPNJ+ifHpy7cmXxs/E7yl/IDyLXEfy
KcHT4GOx+/n92fP8D/zSMDq4W/Aub3TXGtOex0qN4wyDgwsmBxmO1iapn2Oo
8C9ySfF/WuvTGixyTKyETzRUOQv6+gsDIpcBHYguRGelu9KZ6E7wf9a+sIaG
tR/06Vdb/F6OTPk2xfOtifG97lozQ3v6NBwtnDR9ks5D96EPyf0IDwUXCHcl
F6d8VXQ/Ohvdjc5Md6afi8/T9+S6hNulb1vDld5D/6FbG6/g3ODQ5XaGb6An
05dhOWEK6ZXO4VxyxtJj6bPwJ3JeTtJXOGD6P4wErATcMH2SjknXpLPSXeWw
k8vugzzfNXP8H3mH3n22mYcKT2QNr3kbXgfnR549mBlcIGsWWIuAz4zvDD/J
unz8SLhNOE78XDA9uE/wONY2sH6CtQOt+Ydj1YFP1fA91ohbrOF9cKz4oWB6
cK+skWqt1D80/UROC367owYr14UcO9YoszaZ3DvwRtZkG2z4HzlTrBFkbSC5
VKxpZ+1MPkG+QTl2rAU3cY3GocrRYU04a8HJ3YEDZY1sa2PjRsnpYQ06a8/J
9fHtmnDzNfwVjia/Hj847ua3OXLxKeXmkjNWnJffTy5Z+V7k15HPRf4g+V3k
A5F/R34h+YnkFxpqfDP5V+Qfkq/F2hP4J8en3T8Hi1sjH5H8MPITyc8i/4d8
PfIByQ8kf4+1kqyZJD+Q/EHyBcn3Ye0M+Y3k/5HvSD4Y+YDWanyZcY0/h5+I
byzfCIwOPjJeMuwOvpU1UaxZsGHLb4LPg48ln5D8Q6s3fo98J/Ir4ePgG3a3
fEPyE8mH0tnem+uFV7y5t9YMw5fCZ7a2lnxH1qazRp18Jd4X7pq1LK0nIn+N
fC7yrZhXfDfWrpPvyDhyYJP5g/H3fAvWcsBPw5eTH8k6dtaz813I32LtOnx2
86I1BuVrkd/G2qzyo1jrTj4a/L0dm2wNPN8RjKD19qy7BztonoXtwRcyD8s/
Jf+PfFLyUR3Q7s/78h3DHFr/zzqAsIjfrvm4buOLyV+Dl4SfNHWbt/Hv8dHM
gzCJG6c8bX9hFWHorLdn3T3YOnx8a2RZQ+pbPj9+Pb79so1vb80p/PDlGn8N
nw2fH7/cGqnW3LKG2BKNz2ZNjuMaXw0/zhogBzX+nHwA1ihjg8pnjh9nTTJr
lk1cy2yw8t3gv87Z+OvWMpSPBh8eZszaWtYBhCWzZuzENcw6alzE17MGiDXA
rOWKo8/Pzg+Puw/fKW+m/Jnwkjj38h6Is+Dis5HYSmPZdBNqDRb5kuSklZsW
H88aJCc0/h49A/8PP5CeAcNlbRPrbsJ24efj88tnYC1C/H75dfD95mt8fnxf
/H16jjUG8f3wA62dZw05fH75mL/XV/kS5EPAl8fHly8BfxA/0FqF8iXg88uv
gE9vzR78e2uS4O/Kz2BNMGuy4CvK52ANMT5N+ZCtiWeNGWsYWcsIP1++Bvke
8PHlA8DXx8/H/5dvQH4H+enli8ZXtqaS/AwLNz6z/APyGchPwN6GE4drZ8/D
xFnrzLqAsHL4//JLyM8sP7L8R9bClL8AH1q+AmvWWNNN/gj5COQLkE9Z/mQ5
7I0bcOnsef4DuHk4c/YBG5OtOWXavzChOIHGOmMeLilOIG4gjiiuKA41LiFO
4cvmxMhfdBVH8Yj+4qTipuKY4prikOKS4qjiqn7aU1gBNhKe5sGp/1dXcU5x
T2H2rD0MUwrL95+ewkKw8eA6YThhOZVhPe3/VldxLA8e3/iWPcX7PD339nbK
H3QVPxJPEkcUVxSnE7cThtTaVdY6hi2F38StdG3wpzifuJ84n7ifONy4pM7x
ROQPxDq66prgTHFCcUNxdHF1V23xC8/jzXZ/sIlvtPO5z4n3m+21njq+snWY
ccdx0q23Ze1FXHWcbtxxHHJcb9ft+u9q+7g/6yNZJwk39rj2PlwPzOp/8/u/
rrpHPNIXe4orb02fl3qKs44LjxOPy44TO8VkmU+mKq6sdbus32V+M8/h21vr
x9o/+Pc4947nuFeNFCcdNx0n3npAOPWvtXM91r4n7wOHF1d/t/Z94exbTwf/
1beGx3rGaHFo/9muHb4WB/7B9m7ha+XUsP6TdaDk2rBekLWDXDN8sWf8Tlfh
lT1794f7i8OLywvfixuMA8x+lPPL2rDmGHPNlPl/8smK84rHO9lUFVvDWbUP
ji6urjr6iPU5rTVozjH3yJWGS71uOyabDlZ/956y9eRgk3vNnG3uNkebq+G9
6fx0P3O1OdtcLkebXG7mPHOfOdRcCn/PpjXPObc1D+WfYeOt2VUcAbaf9+r9
djUOLw4yLnJne99irLjvOPBir79q8SYcYdxg8SfxOs8PdxhnWW4YOWJwmXHQ
6T50IPLJ7Xl3tnyQnpPnZQzxbGG83219CXYbphe2GqYc1ld80POerL2vk9v5
xrXzdzVut3vSZt/2veE44zqfkuONTd2k2U4dqu+R7kUHw42WW0GuhetbHzK+
fd5VHG1c7bGNuz156xPuly5Hp/M8PD917kX749t4YPygo8pvJ7+EfAPyAcr5
IveLdVYvH6nxCLYdJh42XrxUXBfuCN5A/BiuDIZeLhZ8EbmobmjxQjFpcWYx
Y7FjMWyxbDFrsWt8bDgOuCj8aj40fhn+GdhW+Aa4JrgPfG38ZTgquDL+LjF0
MVc5teS65rPhl+GfsbaRNQbMy3iN4m3ib3iNeKDiidZ4ktMOb1t8S7wHrxkv
UrxAjE+sTwxBLEHMkF+ff18s0ppTfI0wT7BP4pV4pXjS4kViTmJP4m/WquGv
g4ODq+OP4yPkp+Ov40sUgxFnEW8RaxLjEVcRXxGrEf/Dk8YrEn+x5iWuIn4U
/D1OHxwuPC5+BowirKKYjdgNf7C89njB/LdiWGJZ+Hy4gTDEsMR8pnyn+HN4
1Xja4o3wj9a+wVuDh+RT5TflPx1szwOOTO43a3Ph0PGZ4tDh0slXDmcFp4hP
J4YrliuGIpZizRxriOJ14+vBLMAurJr9Zxmq+BKeNB6seM8FLccfnJ61sPhs
+W7FQ+TqkvNth+7K2UXW/79q+gN9Qvzd/P9p0weM28Zvc5a5WrxffP6zpj8c
3cajr5v+8WVP5W6xRtwXPZXDhez/a3Jtx7b5+p2mn8CUwpbiCNzU5vMP2rnM
//v313zwWpvPn+yp3ErmkCd6KscS2f9XyNXTX+tVqrNe3a/7K7eGHBt/Gawc
HnJ5PO04I6UP0G/eavqDnC/Wq/t7T+WC0U77x9t/RzV9y3j1Wrt+XBqcDljZ
Y9p45N6NZ/QgugcdhK4EM0pfUsahgSGEFYQZhC2ERbS2DP8cPx3+n3xfOGbw
g/Q1+sF/mz7GJ843zofNly0eL8ecvHLwo/zv3Z3FwaGPGb9xdT5p+ptx3Hju
GdOVDmv64MdNPzKPm8/fauekd9FNXINvRI4UuWzktJE7Bbfmv+1YODbv9ZRu
90F7xgc1/UzOHZwb+iJu0PttPsHH0d5+V4+Un8M69taz59fg51iqp+xpfpUr
W04NuTS8Wz7hE9o8y3fMB8IXog/pS3wmjulYfCV8NEe1eZzvjs1pTpYjlL+Z
TcQ2kuOEP5YNyhaVo5R/T/4UNh1bjq+LD5pNy5bl2+XTZXOxtfh29Ul9E3bW
+nnGPGOf70Jsgj/cOtDWgMTP4bPgu4CphK1kU7Ot5Vzl/5UfjU3LlpW/hY05
0dbsKf8zG54tL0csfzV/8Vxpu1tX5Yfic+LDYIOwRehoT7d+Q3eTD45NZ84w
d8gHx+Zj68mvJ9+RfqXfyX8k/xmbjC0mn5o1IK0LScej6/GB8RnwFfB9WbPW
OqxyKMmlJH8fHwrfifxzbCy2lhxvcr1Z89K6j3Kyyc1mzUjrUMoZJXcUm+DZ
9h2yFeik7B72D10VJ+z1Nu/zTdEh32x6ON2SzvpMG3fosmwUdgv7he1CZ6Qn
GMfoknw4fDnWTLV2qvjCNJFXpNM1f+J7nl1X5UeC35RzTK4x/mz+5YNT/nVn
5RcToxEnES8Ru+H/PiL1W3dW7jfxCGtT7d/8z9+uOXZE86/DH1kLx1pd8onL
P4/DwafHt4ejg9OFy4W7w+fL9/tVw17gIOMi49Pj3uMc4x7j8/P38uHy5fJB
80XzMfM14/Za3wlHF1cX3x43HV4Z9xWuWC5RPl++X7gE2IKJnOvxla9AbgL+
TjmZ5XySO0w8Zhfxhc7CwskvIrYlj67ct+aUV5pdYq6ho8nJJBcT3e3qlmPI
uGNsgWeVQ5IPhS9Fjmm5psU4Vmr+/PnTdo2uWmudP/rZ1L/TWWutsJnk9GI3
saXYVHJUyWnG1jLWbNdTHCBjjvl6R++i4QPxH8TixBnl5qUP4CXgJ+Da0982
b3MCbCT/LEygmAO+LTy7tR/EdCbGdkYqJ5lcZOZC6wPgzODKyP9PJ6Qb0rHo
WuYQcWHxYXMLzD/sP+zklk1fkMvz/RYPpX/KZftV08d8I74VOgZdg752cHfN
MeYaHA26Dgw77gZ9Q67ZB7J/91DpR3Lx9jd9SjzEWuCHtPgETAVshRjEAs2/
DhcAH/Bci4fI8bBf5E9b/B4PBicWFwinZd2BWvNIvN/xnkj5xx2F3cCp2Xig
cAm4NuIhP8zxzmzxGT58vvxnxhb2AIdm04FaQwI+gH744rhaM50+Kr7zo+x/
TtPX6G8LwLI0fViOSWtTyzEp16Qx09hpjDPWyVnJz4ZzaXwz5q3c/GjGXu/U
uzWmGlt9b2x5PmD9Q07OFZofztiMv3pjT9m0bFs+jFeaD4NvQ84ya3PjxOLG
wjTANsAm4D6T14C9a/gHHLgzx9UaUfe0+A5cHXydtUzZQA81H8chzR6YP/tf
01HYQjnzrOUrh5pcauYUc4s5w9xBv7f2/PJNn8cvkvdBDEssy/gjV8jkTRdi
87B92EhsJRhVGFs2GFuMzcR24tcRa2aTsc3YTGwnnISJ3ITOih/CSMNKs5/F
j2A2YTetL2ZtMTmhcFbYWFO37xsXCZaCPk9np7tP7MNDle8YB0QfZn/hbOBu
yBEp3mgMNBbS+en+OBu4G3JOijfC9MP2WxPC2hAw37Df1hezdpIYp1gnboe1
08Q0xTbZnGxPMS6xLjEqsSqYdth2Of4mxrtGC3siZ6D4lRirWKuYrNisfE6w
Q2xAtqB8S7Bm8oRbr5Z9Jb+DHAvvNXvsw8iztnihmK7YLq6BfPjf5mBgk73X
7LG39O1mX6mXq0EMVCyUT5tvW0xXbFcMSiyKT5xvXIyLDkj3E1uDmYedl8Nf
fEwMes3mhxGLE/MW+8btsdaPmJfYF+6HeBcfO1+7mJjYGI4DroOc/nL74wzh
DlmTxto0Yq5ir2wutheOhLUp5dzGnaAz053ZFGwLHExrrVgDBjfT/MH3Rmeh
u+BsTlxrbVxxOc1XdF86B92DjcXWopPTzXF44ajgqfDj2UhsJfYZ3yLdhC+D
jUVHwaeH44DnkNviWx8v/f3Q1g/ZRmwmOhwbkC3IxmHr8FHys/C3rNlfa9hc
2vjF1pp5rvks2Qd8vXyIfIl8oHyhbzefHP8RXw0fzLiWn5hvhq7JFmCjGRfo
bmwjNgQdjk+Kr4qNylZl07Ht2H98iXS1D5rPkM7GZ8V3xSZlm9J5LmnPny7E
RmGryP8n3yYfWkfzGfIN4WzjbuOE4obK34XnKo+EfGLwenineOnyadE/2LZ0
TLqmfAXycMnBJT8BG5AtyB7m68Jn3qvxaOUDw/+X20uOLrm66KJ80XzCdFI2
MluZD3aib3+wbG02JltTPgS5vnDacdv53CZrPkO+UzbqRFu1q3xpd4kvwNNl
u7Pli8BRxQfHhbfeDpyiOdRaPDjyuPJPNTwOm5gdzB621rocBLjLf2rzA92a
L5tPjY7NPmND09np7nzm/OD84fJdwvvg2j/b5lt4OnnZzNHWapLTAtf739me
nFA+xMlbPki+RTY7u5J9yXfgmXq23pl3h0OMn27NJNxiHGPcehx73GOcX9xf
/Hn3j2OOM+0deVd0qLPb/nQr79y7l4vA+8LRx5XGmcbdp1/g7sLuuX75EC7I
9Z3SVfgm+gnuLfyk58vH9mTDvcGWw2zBkcOTw3LBcMJ1wXfBJvLR8dXxqfGt
wQDLhYczChtMN+DvZ5Ozzfn4+Pr4+Pj6+Oz57sUQxBL0YZxwXHB9m4+Jr4mP
i68LfhJvmA5k7UYYVRxsfUBfoG/zjbLh2HJ8fHx9fIZ8h/qMvgPTA9tzRLPf
xZutz8Fnxndmzjf3i4GJhYm5ib2JcYh18MnwzYhBiEWIuYi90M9wnWFpJ17f
SOm+7sm94ZjLnSCHwhwtpia2BtMC28JmZjuz4dnyOO+48zj0E9fWGqm4LBub
rc1HyFfoG/WtimGIZVyT61mnv2KEYoVieGJ5MLSwtNZEh58RExIberSr8o+K
GYkd3RB5q/6KuYi9iPfId8vnxfcl5iT2JAcErj/Ov9wQ3pl3x8YzvrHp2HZs
AN8rHyVfJR8pXyl7ga+MTc42d31yQs3V8IT/D5ulwJc=
         "]], Polygon3DBox[CompressedData["
1:eJwl1nt0z3Ucx/GPWBNyjzMacsshDXXK5Yhy1KmtSGWjUJOh2mZLF5fMYiaG
0Tk5aB3UiQgpXXRx6tBFMXJNZaV7yjRK7np8Tn88z+/zfn3e189n3+93V2Tm
Dsq5KITwJBKQ2iiE5y8OYf2lIazFzexazUPobH1/0xCONgwhIzmEcY1D6FIn
hE7oiA1NQuhxeQiT/H7YIISPkNcihFnIEzcO58WOaBbCSns/Vg+hrHYIr2EZ
+yF7fTTQF3cjnz1Y7Y/V3YI39HQPu7ZeurNHybefz53yFakxmN2BXiV2MG0G
bQitE+0YLYOWJb5cnq+xA2PYU+UYZn84MlHIPme+XD3loJd5WptrAK3I3gwU
o7H8RXKOlGOzOuXqTGdPdC7NrVvgHfk28p1Jz+aXg+3qFrOfwWPsrWIP8G1k
rlkxnraN9i2tMa2UVkL7jnaB1oRWQptC20X7mXYZbYM6T6k3GfVpafayaf3Z
a9zPeuSyDyeZpUYI/zj3UrMlmKNAvnT5PhDzqdgG8q3gu1DsK1gZc7DLncct
Yvvjd/HF4gvo99p/X/4teMz8rWmb+axEKu1zfv2c4Tkx57GYna/uHH7ZYsfg
YZSwP9ffDn8bBWrdyq+DuO+sK3AYifKV0c9YF8s/Dy1pq2nV5FxMX4TnsFOu
u93benl7mq0Xkviky3mQfwW6ir3A7wK/dPZi/S3CVXwmiBuqr61xBjxutip5
61hXQ4baf7Gz5Rwo9llxFXovl2+o83zPXb+LtzGE/aj4PHH5+EXsNfF+xE0T
tz3GYaJ8E9zHQvewVL+9xT2ot3rupJi2hNadNpLW0W++3DPpM9A21hA7x3oR
v2vZmfx6q3M83hl+ww3xuaGX+u3Mb4d+rhX3pP7KrfdgorkX2J+NWXjC3hf0
y/k359vM/gB6pf5HOqs2tBX2q9sfS0+Vf75Zqsx0BJUoZWfxG6+/2fwa628E
v7pmK6ItoLWm5fJp4re/2dKRgaQ4M/1BfoX86rHvE9vM2e9Rbzf2xncGrSW/
rvq7n31af1n6+9L6G9pX2Iud7C4xn/U06+m4Q+zrftfR1qLSPN3UqhGfTetG
1g2RI9+NKJF7t5lui+fqzo+jkr2MXjv+jYjLi8+5/lP02wbj2FPtf+XOU8R1
wxYxndU9ZP09DqITe5Aam/kmW39ISxA7ju9GZ/kW8uS4wf71+j5GX2V9ibrH
9DFWnzc5q+R4djgtxxHUtE5EDfzJfkncT3L9jFpqvMy+S2wrsZPc+TY+2/F3
xJmk0K/HZHvn9LNcD6PVXSpuv7o1aVfy3UUbrpdE9j76On6ZtCX89rBP8PlR
vh5y9cRT8lVzPlfqK4+djym0p/GH9S84au9pPgPNOzfenz63qdFVjVx+jaxr
4WpzbIrfFL77xO3BLrFj2S/QT5r1Vf2sRhn7duf8Zjy7+H4Xe0p/h+NzKdd0
zMR4+eu7zzXxu6humlxZ+sijp8d3AT4R20aOn8Q+yj5Z4/+P6k20aWJGxRnY
J3CWdrW+N/Gray+VncRui7W0BNojtDQ1CtU4KLYCP5hjsto9UGA9j1aKqfH8
xCwX21T+bhglPpPf7jg/NvEfwe6uRqH9A3zbimniGbou/l3GZ4PWmnYZ7ahz
OOR8fojf6/jupaWZbb5zO+AMF/hNZQ/Di9YL+cxGCerL11P9XqhyDg3YN6o9
Tw9lenkefdnJ8R1Amxa/nygwx5H47RWTidH4Mz5j4j+L7xW91eVX0120incg
tiD+raAl+1++hWIKMAUn2O3o2fweQQ7ax/emOsPM+gDK+bWTu5+zbh/fI+YZ
Hd9lasy1PmW2O/gc9zuP3YdfIr+vrVP4nXdOE+T71fr3+J1wjqvi/wnqnNXX
GZxWdwb7P69QVAA=
         "]], Polygon3DBox[CompressedData["
1:eJwV0EtL1FEYB+CXGbMsXWRJY+LCQKHboqUXaNFsWkx5B/GC5CLTLgiCK8HL
N1BXiWLouHAT6VZr44XqE6glkRu1UhAT3IRPi2c483vf855z/mXP3tS/TkRE
ilzGbvq5GJEgybpwRNZDo3UzDTTxQnaX2gsRT8nwmApZLhs5EZ9pztdPoiSi
QP5b9ocjDrgsayVp5qH9m4URx7SURpwWR4zqaaGVdg5l//QvXInoZT4ZkSPf
lO9wz3qQImde50T2XH/G/CekrkXcoNP8bhqt21hRW2ZI7ysGCyIGqJV18VLW
TrWsnF/uWiRvkz3inf8z7Dpzj7SsijlvyTKhNk6lbJg1e1f5YtZXCn2fh/Jp
PZNM8Zaa/3Pc8+xqxHc6vG2Ev951X61JTx19zugno/eT2qLvssR7PvBRlla7
recO38zYJs+MW2TdeY5Ks6opk23Zc0lPkllnZ3lgRoPavp6f/GCPetk58jVN
+w==
         "]]}]}, 
     {GrayLevel[1], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwV0l1ozXEcx/FvdnGOMOnI0XbOChejFZKHbBYxlD0opTZy4wJJ83ClXXBD
FkJtFzMby7O1M8OFPIUylKNtsovFKC5EcqXmYhde5+Ld5/P7/j7f7+/3f5i3
++C25ikRsQ5FGCqJmDYzYjQTMTXJI4mOQj0R0Umf4GlxRF5mCGvnRlwui+hL
RWyWydEumUq+m3bbWypzNxuxUm05luG23CJzJtIRKWfMwgK80LOQvqSDaOJf
09LZER/la8zaiSL3PKdWju/qdWoZfozfxP92xjdMYKsZ61GNKplJmUaZvcia
c0GtAj/UG9R63a2C/+duaf1zUI3nnndS7aJnapdJqbXRYfVx+ZLSiA/8Hz7D
v3fv487M0049083OeQ+X+DTfz1fRZ/JnnX9Dbo+Z12lv4d3xd+gttPA3aY/e
HXoG9M7X80XvFuvH9v7KPKKv3OkoP0gT9uplTsgOW7epj9Bx9PGfaVKmQeak
TDHfxLfyM/jt/Cn+l9wb+Z+0jtbiEPbjAPZhiVyj511MB9xjVO0evYoNfA/9
pL/FzKzZHWrX0I5V1g/Vz+jNW7/DW9RYt5q5keb031frp1/NOSZfpm8XEr7j
eZnDskfQXPhvfItye13e2Qr6QP60zBp7lViNEZlae1dk/gO7b26u
         "]], Polygon3DBox[CompressedData["
1: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
Nkk/rogxkfup2fUi5KPy0skcu7wWv/G38v/+ZWgM+ZAcX66vBlALXAXuV4Tm
U/tNqYXWUxOoDXyPvk/vaXCWEUXwd9sG2rfvj7JsGfc8kvoKZTyL76tXzkX5
pcdsW5HySFvcp7+3H5/x0lpoS+frnMR98n7UoupU9aqcT255Yy28NDml3NIx
WCXv0bFRQ6ol1SBqETWF2kJN0ym1s1rsMTlsS3gAF5sfWuZ6A/tVQz/KKRZO
b0NOo25/2jGqxjnPNEPzn5VtavvVwYdWQ4OrxdVoajU5udx8DfAx4AK8VSM0
vFpeDfeXlhNfJOdoCW9BbTdRTtQSGtL79zm2T+0s39yF8nUZ3o9eyR7Jgbyf
w+S3nL9Fam/571aUb8rgZz6fz6lXoleqNt+V8m0ZHtL61H8ow1tSc6u91cxq
ZzWz2llNqjY1zhnvDs5nVuPbn/3qxT7P/Z9dhKZUW6pZfT6fUy/lDq73ehGe
sN7w9Fyvrl+9UD0pc7WerN7sSP6PK8Kf9VgrfGYfY4n8hb6mNiO+GGf0hl3X
ru/TKNuXoXHVumrgempf58vplJ3LmEfOp7MoO5XhAXstPWK94uH8H1+EX+wx
56LXHkNZrQxPdVTOV73gu2rhNeu56b3dD94DPBZcNMIH1Q99iXIO9btr4c15
vl61Hrn59oJ8P7ZvS/v64Goj3te+vo8yvOJ1+L95EX60vrSe9oZZ16vWj9b/
XT3PN04Zr9TT6mo5kNzHnGpu1YN17TgH9TXUCGoFOavc9cvkF89RvqiFX/c0
9deK8Kr17M4q45htesBngO8rwi/T7zoe/FAR3m331Od6oOpLNb73NpnycvoD
5gJzwmup180txnO9gBc5dr6xlfJqLfyYk8ylRfhp+nNyEzmK3p3vcFwZ79x3
63iZm/akPEz9Qcruzl/KQ7XwoPWy9fv0pu/J8d2L8kj6KbvRfmoRscgxHgPe
poix/5NjlOEZ+P5awf8o4569d/0N/Qo9Yv1JPQu9i0mU19O/OJL2O4vwitWM
8ib5k9xfTiKPl8/LVZyza4A3KmIu/1ALLaAm0I9xPPUu9ATUgmq6aWVoPrWe
ms+9hTmJ1QTyOPmcWmEg+Drw7CL2oeSY+il69HJPOYRegxpfbmFOlceYM8wd
rpG1wMOKWDvO0XWNHUXMXf2ZQ8HXFeH9GwPWBG9aRGyQ0+gldCqC63hNr30P
5ZtacBS9BT0QuYt8QZ4j35F7yZnkGfINuZRrVF7iHHAuuKf2VREaSW18H8e2
M5ZQ7q1FTNud888tItbpuZuz9dv14tUcagc1RJn7UXJm+bNc2Rw5OPOvuXMt
zjmBc0+krFmPHKP2VQOPTr9zgfQvx6UfuBj4wmrkFnNEB/CjReQOc5C5yRxl
bpJTyi0XLcKr8n7dK9BTvzH3++TecuA7c79PLvxeEXrReOTe3W1F+Pl6yuZ1
8/ulud+oNlOTqc30HOT4Bfi+Zmg0tZqcXm7vnsyw1En6LXr6evtXFMGn3EM4
pRo5Rm69Ls9wXDX8bv0uc1IXnu+SauQqOZ3e3IlFcL3HKQdRP1gOUAuOuXmu
L7nnouCNyhhTx1YOuB34lCK4oTnC3GUOM3e8QDmnCOx4y3E3of2AIrivHGRH
8JlFcBM1ulpdDaGWUKOr1X8vwstRo6uD1EN6PXoi7XK8x6cHPjp1s964Hkhb
S3gotpujzdVqRLWiGlGtqKf1ZO6HmOtP1ZPI/RC5z5HJZ/Ro9GrkRHIjPZxm
+u16O+YIc4t7mOYOc5C5SL1n7v6de/6wCE1kvPkh9xfknHJNOY1c5uzkPHKa
86vBoeQAcjK5jxxIjiM/OKcac9q57Zg6tm3/z/85PPmI93oW+IxqvDPfnT6P
XEhOpBfk/FJj69W5X+4z6kf1SH/KdyC3ayQfHJr8bYH0l4ZVw48Y6XqkdKuH
N6XGVGs2GZOVq7Fnrj5tzb2AydmnPoa/t5/3yvAXlqX+Zhl6VD9qT/CcMvSh
/OqIasxp5/aKqR/Vi/pX7lG5V6WHo5fjnq6axBxrrnUP3L1wOZHcyDVyfPJT
Y8GIxK6hkdRn8vwHUd9fz6MZfHcezt28Efsl7uXt7dqrxp6ev59AvZp81/7l
fidXY22uke3HUtaux/GDc/2ekjHszBwv+Z9zdOscK+fumbQfnf3/xZeNbR2S
/3bLvbTTcwyNP2qGAWXoJ/co3KtQk6nNxiR/bUm+Pjz5+vzJX88AH5JYvuz4
qwXk/O4ZLcjxA6vxDnwv+np6S80cczVL7zI0jVrGnGRueqkMP0g+7d6sno3r
V03YmjxFrTg1c4q5ZO+usQenPluJck0tNFtf+lqhCC0npzVm+Rt/q8fgWDlO
f3oPXaNvuc++XcOT7FgP30mvcobfbKRv5LcWerzmcHO3+W1K6sXlKdfVQkPL
a+W3aus5ub/UJ5/3ajkD9cGUK1OTLkt9YBFaVc22snO9CC2nx6QXJWeUOzpm
jp2/8bdq1n7g/kVoWTW7XFXOqvafxrG1itCE9qfHoadRZj4zn6o91ezqQz0s
92/cr1Cvq4HUOmoUtZEaSq4v51dbGbON3V+V4efr7+/Mud+XoWfUSGqvnVLj
6H/qJek16j/1T79yI8oy9fAHV6D+ajl370b/dFA1vFU1m16ec0QtZwzfPevG
9iHpF+k36m/3ST9Vv1R/dFD6p3+jLF+PfQ+9b9eU3204xsMydjn2g9P/1o9y
f2QAeFPwJpRl6+FX/YP6L2X4U23M2c2zL/dHBtbj2XxGvVl9T/1PPWK9VT1F
vcXXMz+o1/VO1itCn+lvuVejxpcvyPHkenJUuapzTe9Bfa+26s3/5XI+OUeu
kzPIHSnXN0ODqc/UhGozNYJcWc6sdpBTyi2Xy/njPYzOvr03/SGv53Wd696z
uW1yPoscWa6s36//JwfSz9TXlBvJgfy2QY0mN9Ivda/QOefcUyOoFY5OvqfX
+nwR+khNpMZR67gmXBv6rnpLM/MevL651Rwrd3c/QH9eji/Xl6Ppp+qryt3U
xOplPW61svfl/fkNjZxTDaAWkEPLpf1GSa0oB5eLX0l/u4B3Mt40IybtWISm
Nt6od9Qyahr1ae8cI8fGdaxmVmurudXSaiC1kJxKbqUGV2urudXmcia50/GU
p2rh9x1XxB6rfqH5rXfqZL9lchwdT/0zObOcX+6vB6YXJl/SIzfX+v2Yz+Xz
qYlHlfHNi/6gHF+ury5WH6vp1c7uWfqtljHrt/T/nItydGPL1FrExn4Zj43R
zk/fgbHbmGns7pv8R7/Me/075YpmaBK1svFPreK3XC8W4QH4nYtcUC33aY6p
32D5LdYTlM9q8X2VWA2qFvUbI7998psnvz16vxbaRw2kXlJTq61PL+N7LDW6
829Wxl99/1k5F+UQagD9RjWM2sDrzyhCs6vd1exqd7/hUT9PKUKbq9H1EdTY
am01vdpevutepXuS7lWpf93rcv9R7909LfeanNPO7SF5vnuc6lnfqe+2d+Za
vc8BRXiKeotqHLWOGl+t7x6bsdUY6x6M34T5LZnf0/hdjd8U+O2PHoJegt86
+S2E33ep2cyZU/JZzKV7cezyIvS5Ol3tK1f/IGOAHEz9OzC5mRxY7f1NEdxY
r0TvXA/dvefr89ndg/1zb7gee8NqeLW8GsD+vY5a23a1txrc/WA1g9pBjT4o
87ba+8sivgHVM1DbqHH0y70P70f9qo5Vs6vd5Y/ySD0F155rUK/BmGns1IPQ
i/CbCt+P70l/5S3wDeDrKW/X4lsNvWnnjN+6vZHrWU3ktxfX8v+HIu7R9+T+
k7FND931rMabmr9V+90D/t61Qbm3GRpMLaamqiUnlZfJz+Sq+nj6eUe6xsrY
0/21DE4tt5ZTy63NaeY2c6i51D0898/M8eZ6c7y53hxvrt++Gl6mnHD+1M96
q8YUY4s51dxqjjRXjq3G3o6cVe4qB5YLy83kjfJHOZoeo/fqPes9yhHM3eZw
uYN7nB8bkzK/umf6AXh0NfZS3XN0L1UOIBeQA8gF/L1cQI2gVpAzyB3cA3sH
vGrqFb+BcO9bDiAXUBOpjdzDlh/qV7gX7h6be23u6bpPJseR68hh5DLLVGMv
2D3Kl8v4psG9S/dM/bZBjaPW0U+UM7sn6t6onFhuLCeSG7lH/Aa4fTX2jt2/
8lvKRYrY/1CjqCV8n2oP9/zcWy7z/uRcci85uX6lmkpttVI19v7cs3UvUL3m
Xq7fFPgtR7vEcuPu1diTlSPLoUam5vN9uqdn7pcDuNfnNyB+2+E3A/o5VcpC
6hU1Vj32fN277Z/P21ON71ykdK8H9167Gnu2cnA5mFxMjafWO4lyVK5fvQo5
t9xbPaeuU9PpV6gB1HobUt+vCP/C436jaiw7hHIN9RPl/bke9Sruz/y9mzmj
FvlOv1p+rb4/jvO3zvyud6mHopeix6XXdbx6sAjPVO/UfLplYv16PVO9UD1R
/TO5g16qfpocQo/Ua3sPcgk1mnFVTaR2M964P6fnovfiNwHu/W+Q6+OXv75H
zHxvPPdbMfWeum/jnP875HpXE+h1+Y2uWuH/ALjbTEs=
         "]], Polygon3DBox[CompressedData["
1:eJwV02tsyFcYx/FD2rWuHTPqWpXWtobihWEofaG0dS1RkQ5rIiIuDebSdG4j
XRax0YREIqIuc2kQBE02lXRuLUnjkkVMFInbIvPCJWaEz3nxzXl+z/N7zvP/
n//5p5eWFS1uGUIYjUSUpIaQkBJCeXIIqzGqUwit0Fr8iTUJyaj5LIQRSSEM
RVb7EP7vEsI3emvFidGLRL6X8plyHfg6Yqe+O/RQ9UHIQhNdgWPqx3EEP9Bz
7NfOs/zCU4WCOLdbCHvUF6svxEF6Nl8y3zqeCuTw9Zfbpf43bzNemnsfteKT
WK2WxlOvv0F8GT311tGp3UP4la7CX7wn5FaofY8yLMcy/GzOAp5F2MB3w/5N
2Cquwnz5z83ogeniZXLrcZFnN/rFs8OXaq+d0y5zBooHoJv8DjrPjJ/MqsSP
yKU/Raq4nq8Rneh/rDPlvkUJntKDzK2xvrHXO3wwM8faH9kYjmF4L3+ArxqP
6bf0OSwQ/2E9izrcoBtwHTdxDZvNDs6+JVaZO5Lex7sX+zGY5zdrur1TxO2Q
gT70DJSLK+L3QDF92jvfEx8UH0JX36JB/0q5FViOP+O+5pSaNxvP+KZ413Fx
T/VcjMIYuo38JGsZvQT1ejP15uq7L38PGXTneGfkvsJVudHx/vDvxjZUx7uL
vnyFPJPxiG8yX6a4N9LQFxnx/suPV5+lZw5qzb2LU+IDKFfrx5OCmeK1chtx
KT6f3Ga5i/QFPJHrae4Q+36NW2r5PK/U/sVzvMYLpPH1Qm8M5023tol3RtwW
5/SO0JslV0RPRzEG0rfNOWSPw6jBA7q782/W8xAT+c77PmPjP4Y8jMOYeG76
J1jz8YB3ghlXeNfEs3A3WqCRPqr2n72DfBJ+p0+Zkxe/F/LpBL3t+beob8Mm
tKbnqZfiOyzFXFSaO01PYXw++pi9nuOMeKvcFjyjt6Or3Bd0dvxf9VV7ngK5
InoqunjXj4VaojI=
         "]]}]}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{3921, 83, 6282, 87, 3925, 88, 3941, 104, 3939, 106, 4085, 
       355, 4087, 357, 363, 7416, 4091, 362, 353, 7415, 4083, 352, 6386, 351, 
       6385, 350, 6423, 457, 454, 4165, 6428, 480, 479, 4166, 6429, 476, 474, 
       4169, 482, 4171, 230, 4016, 228, 4014, 224, 4012, 225, 6330, 226, 4024,
        220, 7402, 4010, 219, 215, 6327, 125, 6296, 126, 6301, 95, 3931, 6284,
        84, 3921}], 
      Line3DBox[{4174, 487, 4190, 500, 6436, 499, 4182, 503, 7430, 4212, 545, 
       6459, 544, 6458, 543, 6495, 651, 643, 4276, 6491, 618, 4254, 617, 6490,
        613, 4251, 611, 4273, 641, 4274, 642, 4398, 858, 4395, 860, 872, 7463,
        4412, 871, 869, 7462, 4407, 831, 833, 6562, 769, 6541, 770, 6542, 763,
        4346, 6539, 754, 753, 4343, 6538, 762, 761, 4342, 760, 4340, 489, 
       4176, 488, 4174}]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j9IlHEcBvBvaBJ1JuWSZw0tgRCKSFqoQYM1Feqp1ZpTKp6ESkMEDRpq
DZWSmqUZKFYiGTbXUGZbFBTYUKJEf80SHFr6QMPD53ne937c3Xu390y6tnVT
RExL07aIyYyINB9xRp7lRczxKR9zVsZ3RLy3MzIjtsikvWhv1Vfc77E/c4jD
sqG/cX+N1+xfHOBvXuc6D+50xvkD/MI/cmxPRIW9ppdziYX8yE9S5X6Rvah/
kKP2IfurvirbkxE/mcMf/C5tiYhvTDPh+oI+L3V2Sh7qpXzAMo6wgEPcx0GO
ZvvcWRH32cdBdrOfXZxlI6slOz+i067Rz7OeKenw3hfYzgbWSWmu19on9OOS
bzfbp/STkrRPs4gdLOY591v1Fim027mffZsjxjyLHt5jmlfYzBJnmnjZ7paz
+gyneFNqPccJ+4beLyl7yh7Wb0ul8yM8zFu8I0uezSiXecT1Mf2urNjjzPXd
XzLBBe7ma+7ic7//Rf+5F7zEV+zlW17lO87xiWR6/hP23+T//+s/TidlUg==

       "]], Line3DBox[CompressedData["
1:eJwl0ktLVVEYBuDPWxJaUF7IokEQ0kVoZqkRDhwUUVbkQE0JMzQTUxwYRIkX
cOSo+hlNKhp0mVU0MbAi0izKTA1PoRLhJOtZOHh5vnfts/dZe7H3tF0715MV
EfdksiDiYG7EMk8ywyP8xMOcZx17t0TUboroZjUvsZItLOVRlnApL2Lzroi9
esZczkV+kTM7I76ynrP8IR+2RzTov8w56X69Sc8158uy/tm1t3wnM+ZTrn/k
pD6VnsO/XOA/9hVZd28/p/laru6OuKxPmHv4ntf5mE/kiuvN+lPzM+nSL+ov
zTn5EbfTnniH2YyUrRFZzOZd68/99oVMeOdXnOMS/3CFGa6md2KhfQ4X2rez
HeA6x1lkfYzFvM8HUmOukjzn+kg/bn7IE+ksZL//Ps19rE/nLL3O4oB+1twg
/XqFft5cKx36MY6wPe2Fh1xvM7fKDf0Cb7HL3r5vi+jkIrvTd8IOrpQ5V37T
Z6Xd/JuDHJIq57imD5tbpVKf0VvMzek57m/iTzZyRMq82yh3cM36TXOFvCnY
+F7/A96OZJ8=
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ckug1EYBuBD0FKaSNmUpoouUPM8xEW4BBdAInETWFoZIoaYEhEEMV2J
BRISKxFTLKQ8jcWb53t7zn9O8/+ZyemJqaIQwqzE4yFURkJIMslOjnNYVpMh
jHCFo+yQ9UQIy3qXuVt29EHusZeb3JI+84D0yLbezxZn75pbzTlp0/f1IfOY
tOs5qTXXMMFF69XM6g1MMc0GNvGYJdEQTvmjf8tcTQgn+q/5gHlessy+Upm3
fq7f+f1WFvQbvcJauTnKWGGWqB6RJ/u+/JdH5vnGV5lJuVd/MX/KhXfzUbiP
74VnZNfZ91zjAzf4zGte2RdxT5BDvYhnLOYRM/alWcd61rOZWTaymUvOiLEq
/v89/wA9yjjl
       "]], Line3DBox[CompressedData["
1:eJwl0UkrRXEcBuCfFQtJpoWxK+NCpnANC0KGMhNZSDfzcEX5BnwRsfQFlGlB
VhIiic/iuVm8Pe/b7fzPueckUgez6ayIOJaOvIjB7Iiz0ogljtrLHOE0+znF
QS7wle05EZ9s4wtbmZTSsogfu1x/YBkfWcEn1rJG7t2rgXesY5UUFEXc2gm9
XgrtYuayhJWskh69T7olYffy19nVeq6eL1+ZZ7A79S75tpv5zBa+Z57N7416
k3zYHXzjov84xDkOcJ5jHOZloffCpD3Gac7IoX4gp86ctFf1FTmxJ+xd/da1
W9yTHbmxr2Vbv2ead9znWua8iogrO6Vvyrl3s8ELrvNIZp09zm4OsTPv/3v+
AWMaM4Q=
       "]], Line3DBox[CompressedData["
1:eJwl0csrZ3EcBuCP1VjZsHJZWFloXLK0dE8zyZ1CfmEQJmHMWJAiconYubMg
/g6XLNUke8lOLrEYauapWbw979s5fU/nnOzE99qhpIgYk4YUfor4IWepET95
ynFecpY33OBvbnJXhrMiru09fUeO0yO2ecIt7suQsw84zkOOcVQm9CP3/WKz
PckeLjPBJXZzlU/8lhzxwl4+s42tkpkR8WB36X/Zxzd+5R0rWCbnntXCM1ay
XArTIi7sUr1Eiux6fmYdC9jEPDYzn42slXtn59o1erXc2jl2lf5F/tgDfOcg
P1jseoeekFe7h49c8Y5dXGAnF9nHNV75vuvst+fYzg6Z0adk3pkt9rQ+InNp
///nPwrKQ7A=
       "]], Line3DBox[CompressedData["
1:eJwl0dtKVGEYBuBPAhUCRWcIcoN4Le7w1EvoAuxAR9BMRVNnRp1EjRRGTyN3
mCIkghuMPNHcb0Aj8FAQpCvoGTp4ed6X/2fBWqv+zdu29qKISMldIuJLScSm
9JVF/LE39O8yZA/Ktp7jIR+d/+SEvcth7jDNA1aUR3wujXjFKeZkMhlRay/o
NZxnNd+zu3DH+Qv7nT4gH+0Se1AfkSY7zUaOsplDbOAHtjLDrKRqI1rsTr1L
jqoi+nnMjsK5FHt2H18zzzqO8yVP3BvTP0nCnmOSs6zkD++Y8a57HOE+s1xj
L1e46hnrnLZn5FbP85pTvOCZfHPvimu85Lk8F76/faOfypP9i3+5xQcu8Z7L
/M1FfpWesv//8x/5+Eny
       "]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
      Line3DBox[{2922, 7200, 2923, 2986, 5729, 7215, 2987, 2988, 5730, 2991, 
       5731, 7216, 2992, 2973, 5717, 5718, 2964, 5709, 2963, 5712, 2968, 5724,
        2980, 5810, 3119, 5850, 3178, 5847, 3177, 5848, 3169, 3165, 7583, 
       5841, 3166, 5842, 3160, 3159, 7582, 5838, 3157, 3158, 7256, 3183}], 
      Line3DBox[{2927, 7201, 2928, 3002, 5738, 7219, 3001, 3000, 5734, 2999, 
       5735, 2978, 5723, 7213, 2979, 5725, 2981, 5726, 2976, 5721, 2975, 5722,
        2977, 5846, 3176, 5849, 3179, 5858, 3186, 3185, 7585, 5857, 3175, 
       5845, 3174, 5844, 3173, 3172, 7254, 5843, 3170, 3171, 7257, 3184}], 
      Line3DBox[{2942, 7204, 2943, 2941, 5699, 7203, 2937, 2936, 5695, 2935, 
       5697, 2917, 5682, 7198, 2918, 5683, 2916, 5681, 2910, 5676, 2909, 5677,
        2911, 5821, 3138, 5822, 3139, 5825, 3131, 3132, 7249, 5823, 3140, 
       5826, 3141, 5829, 3099, 3100, 7241, 5806, 3108, 3109, 7242, 3110}], 
      Line3DBox[{2945, 7206, 2946, 2944, 5700, 7205, 2939, 2938, 5698, 2940, 
       5696, 2920, 5685, 7199, 2921, 5686, 2919, 5684, 2908, 5675, 2907, 5679,
        2914, 5820, 3137, 5824, 3134, 5817, 3133, 3130, 7248, 5816, 3129, 
       5830, 3144, 5828, 3101, 3102, 7243, 5807, 3111, 3112, 7244, 3113}], 
      Line3DBox[{2954, 7209, 2955, 2952, 5705, 7208, 2953, 2948, 5701, 2947, 
       5704, 2915, 5680, 7197, 2913, 5678, 2912, 5690, 2931, 5692, 2933, 5693,
        2934, 5819, 3136, 5818, 3135, 5831, 3145, 3148, 7251, 5835, 3107, 
       5805, 3103, 5803, 3104, 3118, 7245, 5813, 3123, 3128, 7247, 3127}], 
      Line3DBox[{2957, 7210, 2958, 2956, 5706, 2949, 5702, 7207, 2950, 2951, 
       5703, 2932, 5691, 7202, 2930, 5689, 2929, 5694, 2925, 5687, 2924, 5688,
        2926, 5832, 3146, 5833, 3147, 5834, 3143, 3142, 7250, 5827, 3125, 
       5814, 3124, 3106, 7240, 5804, 3105, 5815, 3116, 3117, 7246, 3126}], 
      Line3DBox[{2998, 7218, 2996, 2994, 5733, 2983, 5728, 7576, 2985, 2990, 
       5737, 2972, 5715, 5716, 2970, 5719, 2965, 7211, 2961, 5708, 2960, 5711,
        2967, 5809, 3115, 3120, 7581, 5811, 3121, 5854, 3181, 5852, 3164, 
       5840, 3162, 3168, 7258, 5856, 3154, 5837, 3150, 3152, 7253, 3156}], 
      Line3DBox[{3025, 7223, 3020, 3018, 5753, 3027, 5794, 7578, 3085, 3094, 
       5798, 3071, 5779, 5780, 3069, 7235, 3074, 5785, 3065, 5774, 3063, 5777,
        3067, 5864, 3203, 5866, 3209, 3267, 7278, 5906, 3265, 5904, 3263, 
       5908, 3269, 3271, 7280, 5911, 3247, 5894, 3241, 3243, 7273, 3250}], 
      Line3DBox[{3037, 7226, 3038, 3039, 5762, 7227, 3040, 3042, 5765, 3041, 
       5763, 3017, 5750, 7222, 3016, 5749, 3015, 5748, 3004, 5739, 3003, 5743,
        3010, 5876, 3224, 5879, 3220, 5872, 3216, 3217, 7269, 5874, 3223, 
       5885, 3231, 5883, 3199, 3200, 7261, 5863, 3189, 3190, 7259, 3191}], 
      Line3DBox[{3046, 7228, 3044, 3043, 5766, 7229, 3045, 3036, 5761, 3035, 
       5764, 3014, 5747, 7221, 3013, 5746, 3012, 5745, 3006, 5740, 3005, 5741,
        3007, 5877, 3225, 5878, 3226, 5880, 3227, 3219, 7268, 5871, 3218, 
       5881, 3228, 5884, 3198, 3197, 7260, 5862, 3196, 3201, 7262, 3202}], 
      Line3DBox[{3052, 7231, 3053, 3055, 5772, 7233, 3054, 3050, 5767, 3049, 
       5768, 3008, 5742, 7220, 3009, 5744, 3011, 5756, 3031, 5758, 3033, 5759,
        3034, 5875, 3222, 5873, 3221, 5886, 3232, 3235, 7271, 5890, 3188, 
       5859, 3187, 5860, 3194, 3211, 7267, 5870, 3215, 3214, 7266, 3213}], 
      Line3DBox[{3056, 7232, 3057, 3058, 5771, 3051, 5769, 7230, 3048, 3047, 
       5770, 3029, 5755, 7225, 3030, 5757, 3032, 5760, 3023, 5751, 3022, 5752,
        3024, 5887, 3233, 5888, 3234, 5889, 3229, 3230, 7270, 5882, 3195, 
       5861, 3192, 3193, 7265, 5868, 3212, 5869, 3205, 3206, 7263, 3207}], 
      Line3DBox[{3097, 7238, 3090, 3089, 5800, 7239, 3088, 3087, 5801, 3098, 
       5802, 3081, 5791, 7577, 3079, 5789, 3078, 5792, 3076, 5787, 3075, 5788,
        3077, 5898, 3257, 5901, 3261, 5913, 3273, 3274, 7281, 5914, 3239, 
       5891, 3238, 5892, 3240, 3255, 7277, 5897, 3256, 3253, 7275, 3252}], 
      Line3DBox[{3155, 7252, 3151, 3149, 5836, 3153, 5855, 7584, 3167, 3161, 
       5839, 3163, 5851, 3180, 5853, 7255, 3182, 3122, 5812, 3114, 5808, 2966,
        5710, 2959, 5707, 2962, 5720, 2974, 7212, 2969, 5714, 5713, 2971, 
       5736, 2989, 2984, 7214, 5727, 2982, 5732, 2993, 2995, 7217, 2997}], 
      Line3DBox[{3251, 7274, 3244, 3242, 5895, 3248, 5912, 7586, 3272, 3270, 
       5909, 3264, 5905, 3266, 5907, 3210, 5867, 7264, 3208, 3204, 5865, 3068,
        5778, 3064, 5775, 3059, 7234, 3060, 5786, 3070, 5782, 5781, 3072, 
       5799, 3095, 3086, 7236, 5795, 3028, 5754, 3019, 3021, 7224, 3026}], 
      Line3DBox[{3254, 7276, 3236, 3237, 5896, 7272, 3249, 3245, 5893, 3246, 
       5910, 7279, 3268, 3260, 5900, 3258, 5899, 3259, 5902, 3262, 5903, 3080,
        5790, 3066, 5776, 3061, 5773, 3062, 5784, 5783, 3073, 3084, 7579, 
       5796, 3083, 5793, 3082, 3091, 7580, 5797, 3092, 3093, 7237, 3096}], 
      Line3DBox[{3298, 7284, 3295, 3294, 5931, 7283, 3296, 3297, 5935, 3307, 
       5936, 3276, 5915, 7587, 3275, 5916, 3277, 5925, 3290, 5929, 3292, 5930,
        3293, 6038, 3466, 6039, 3465, 6037, 3464, 3462, 7326, 6035, 3444, 
       6027, 3443, 6028, 3445, 3457, 7323, 6031, 3456, 3449, 7321, 3448}], 
      Line3DBox[{3301, 7286, 3302, 3306, 5934, 3280, 5918, 7282, 3281, 3283, 
       5919, 3282, 5920, 5921, 3285, 5922, 3286, 7293, 3344, 5964, 3343, 5965,
        3346, 6045, 3471, 3472, 7327, 6046, 3469, 6041, 3468, 6042, 3452, 
       6029, 3450, 3451, 7324, 6032, 3458, 6063, 3508, 3507, 7337, 3506}], 
      Line3DBox[{3340, 7291, 3337, 3336, 5963, 3342, 5969, 7590, 3355, 3358, 
       5970, 3308, 5937, 7287, 3309, 5940, 3314, 5941, 3315, 5956, 3332, 5954,
        3331, 6060, 3503, 6061, 3504, 6070, 3516, 3517, 7340, 6071, 3486, 
       6052, 3485, 3484, 7331, 6051, 3479, 6048, 3477, 3478, 7329, 3480}], 
      Line3DBox[{3347, 7294, 3345, 3339, 5961, 3338, 5962, 7292, 3341, 3354, 
       5968, 3322, 5946, 5947, 3311, 7288, 3310, 5938, 3312, 5939, 3313, 5955,
        3333, 6065, 3509, 6064, 3505, 3502, 7336, 6059, 3501, 6062, 3482, 
       6049, 3481, 3483, 7330, 6050, 3475, 6047, 3473, 3474, 7328, 3476}], 
      Line3DBox[{3352, 7296, 3349, 3348, 5967, 7297, 3353, 3317, 5942, 3316, 
       5945, 3321, 5958, 7289, 3326, 5949, 3325, 5950, 3327, 5953, 3329, 5951,
        3328, 6072, 3518, 6073, 3515, 6068, 3513, 3514, 7339, 6069, 3500, 
       6057, 3499, 6058, 3493, 3492, 7333, 6053, 3491, 3488, 7332, 3487}], 
      Line3DBox[{3356, 7298, 3357, 3350, 5966, 7295, 3351, 3319, 5943, 3318, 
       5944, 3320, 5959, 7290, 3335, 5960, 3334, 5957, 3324, 5948, 3323, 5952,
        3330, 6074, 3519, 6075, 3512, 6066, 3510, 3511, 7338, 6067, 3497, 
       6055, 3496, 6054, 3494, 3495, 7334, 6056, 3489, 3490, 7335, 3498}], 
      Line3DBox[{3364, 7300, 3365, 3387, 5991, 7306, 3386, 3385, 5989, 3384, 
       5987, 7304, 3383, 3375, 5979, 5980, 3374, 5981, 3371, 5977, 3372, 6018,
        3430, 6093, 3548, 6092, 3547, 6095, 3546, 6090, 3524, 3525, 7591, 
       6080, 3534, 6083, 3538, 3539, 7592, 6082, 3531, 3530, 7352, 3586}], 
      Line3DBox[{3366, 7301, 3367, 3380, 5986, 7303, 3381, 3379, 5985, 3378, 
       5984, 3373, 5978, 7302, 3360, 5971, 3359, 5972, 3361, 5982, 3376, 5983,
        3377, 6087, 3543, 6088, 3541, 6085, 3540, 3542, 7593, 6086, 3527, 
       6077, 3526, 6078, 3522, 3521, 7341, 6076, 3520, 3523, 7351, 3584}], 
      Line3DBox[{3388, 7305, 3389, 3390, 5990, 3362, 5973, 7299, 3363, 3382, 
       5988, 3370, 5975, 5976, 3368, 5974, 3369, 7313, 3429, 6019, 3431, 6020,
        3432, 6096, 3550, 3549, 7594, 6094, 3545, 6089, 3544, 6091, 3536, 
       6081, 3535, 3537, 7343, 6084, 3529, 6079, 3528, 3532, 7342, 3533}], 
      Line3DBox[{3421, 7311, 3422, 3424, 6016, 3423, 6025, 7318, 3426, 3425, 
       6024, 3404, 6000, 6001, 3395, 7307, 3394, 5993, 3393, 5994, 3396, 6010,
        3416, 6114, 3585, 6113, 3579, 3580, 7596, 6112, 3583, 6111, 3561, 
       6100, 3560, 3562, 7345, 6102, 3553, 6097, 3551, 3552, 7344, 3556}], 
      Line3DBox[{3427, 7312, 3420, 3419, 6017, 3428, 6026, 7319, 3442, 3441, 
       6023, 3397, 5995, 7308, 3392, 5992, 3391, 5996, 3398, 6011, 3415, 6009,
        3414, 6109, 3581, 6110, 3582, 6120, 3594, 3593, 7355, 6119, 3559, 
       6099, 3558, 3563, 7595, 6101, 3557, 6098, 3554, 3555, 7350, 3574}], 
      Line3DBox[{3436, 7315, 3435, 3433, 6021, 7314, 3434, 3402, 5998, 3401, 
       5999, 3403, 6015, 7310, 3418, 6014, 3417, 6012, 3407, 6003, 3406, 6007,
        3413, 6123, 3596, 6124, 3589, 6116, 3588, 3587, 7353, 6115, 3575, 
       6106, 3573, 6105, 3572, 3567, 7347, 6103, 3566, 3565, 7346, 3564}], 
      Line3DBox[{3440, 7317, 3439, 3437, 6022, 7316, 3438, 3400, 5997, 3399, 
       6002, 3405, 6004, 7309, 3408, 6013, 3410, 6005, 3409, 6008, 3412, 6006,
        3411, 6121, 3595, 6122, 3592, 6118, 3591, 3590, 7354, 6117, 3578, 
       6107, 3577, 6108, 3576, 3571, 7349, 6104, 3570, 3569, 7348, 3568}], 
      Line3DBox[{3446, 7320, 3447, 3453, 6030, 7322, 3454, 3455, 6034, 3461, 
       6033, 7325, 3460, 3459, 6040, 3467, 6044, 3470, 6043, 3463, 6036, 3287,
        5923, 3288, 5924, 3289, 5928, 3291, 5927, 5926, 3284, 3278, 7588, 
       5917, 3279, 5933, 3305, 3303, 7589, 5932, 3304, 3299, 7285, 3300}], 
      Line3DBox[{3598, 7357, 3600, 3602, 6128, 3609, 6138, 3629}], 
      Line3DBox[{3604, 6125, 3603, 6131, 3617, 3618}], 
      Line3DBox[{3610, 7358, 3606, 3605, 6126, 3607, 6139, 3626, 6136, 3627}],
       Line3DBox[{3612, 3611, 6129, 3613}], 
      Line3DBox[{3615, 3614, 6130, 3616}], 
      Line3DBox[{3620, 3619, 6132, 3621}], 
      Line3DBox[{3628, 6137, 3608, 6127, 3601, 3599, 7356, 3597}], 
      Line3DBox[{3631, 3632, 6140, 7359, 3630, 3623, 6133, 3622, 6134, 3624, 
       6135, 3625}], 
      Line3DBox[{3637, 7360, 3635, 3633, 6143, 3645, 6153, 3664}], 
      Line3DBox[{3640, 6141, 3639, 6147, 3653, 3656}], 
      Line3DBox[{3641, 7362, 3642, 3644, 6142, 3643, 6155, 3663, 6152, 3662}],
       Line3DBox[{3648, 3647, 6145, 3649}], 
      Line3DBox[{3651, 3650, 6146, 3652}], 
      Line3DBox[{3655, 3654, 6148, 3657}], 
      Line3DBox[{3661, 6151, 3660, 6150, 3658, 6149, 3659, 3668, 7597, 6156, 
       3667, 3666}], 
      Line3DBox[{3665, 6154, 3646, 6144, 3634, 3636, 7361, 3638}], 
      Line3DBox[{3669, 6157, 3670, 6172, 3702, 6171, 3693, 3691, 7598, 6167, 
       3692, 3694}], Line3DBox[{3672, 3671, 6164, 3688, 6166, 3690}], 
      Line3DBox[{3673, 6158, 3674, 6159, 3675, 6168, 3699, 3704, 7365, 3703}],
       Line3DBox[{3679, 6161, 3677, 6170, 3696, 3698, 7364, 3701}], 
      Line3DBox[{3681, 6162, 3680, 3682}], 
      Line3DBox[{3684, 6163, 3683, 3685}], 
      Line3DBox[{3686, 3687, 6165, 3689}], 
      Line3DBox[{3700, 7363, 3697, 3695, 6169, 3676, 6160, 3678}], 
      Line3DBox[{3708, 3707, 6180, 3724, 6182, 3726}], 
      Line3DBox[{3714, 6176, 3712, 6185, 3736, 3733, 7367, 3731}], 
      Line3DBox[{3717, 6178, 3716, 3718}], 
      Line3DBox[{3720, 6179, 3719, 3721}], 
      Line3DBox[{3722, 3723, 6181, 3725}], 
      Line3DBox[{3730, 3727, 6183, 7366, 3728, 3729, 6187, 3738, 6188, 3705, 
       6173, 3706}], 
      Line3DBox[{3732, 7368, 3734, 3737, 6186, 3713, 6177, 3715}], 
      Line3DBox[{3740, 7369, 3739, 3735, 6184, 3711, 6175, 3709, 6174, 3710}],
       Line3DBox[{3743, 7370, 3744, 3749, 6191, 3750, 6202, 3768, 6199, 
       3767}], Line3DBox[{3746, 7371, 3747, 3748, 6201, 3769, 6200, 3770}], 
      Line3DBox[{3752, 3753, 6192, 7599, 3751, 3745, 6190, 3741, 6189, 3742, 
       6203, 3773}], 
      Line3DBox[{3757, 6194, 3756, 6195, 3758, 3771, 7372, 3772}], 
      Line3DBox[{3759, 3754, 6193, 3755, 6197, 3763}], 
      Line3DBox[{3761, 3760, 6196, 3762}], 
      Line3DBox[{3765, 6198, 3764, 3766}], 
      Line3DBox[{3781, 7373, 3780, 3779, 6216, 3802, 6215, 3803}], 
      Line3DBox[{3782, 7374, 3777, 3776, 6206, 3783, 6217, 3800, 6214, 3801}],
       Line3DBox[{3784, 3785, 6207, 7375, 3786, 3778, 6205, 3774, 6204, 3775, 
       6218, 3806}], 
      Line3DBox[{3790, 6209, 3789, 6210, 3791, 3804, 7376, 3805}], 
      Line3DBox[{3792, 3787, 6208, 3788, 6212, 3796}], 
      Line3DBox[{3794, 3793, 6211, 3795}], 
      Line3DBox[{3798, 6213, 3797, 3799}], 
      Line3DBox[{3813, 3807, 6219, 7377, 3808, 3809, 6223, 3816, 6224, 3814, 
       6222, 3815}], 
      Line3DBox[{3822, 7378, 3818, 3817, 6226, 3821, 6231, 3835}], 
      Line3DBox[{3824, 6227, 3823, 3825}], 
      Line3DBox[{3826, 3819, 6225, 3820, 6232, 3836}], 
      Line3DBox[{3827, 3828, 6228, 3829}], 
      Line3DBox[{3830, 7379, 3831, 3832, 6230, 3812, 6221, 3810, 6220, 3811}],
       Line3DBox[{3834, 6229, 3833, 6233, 3837, 3838, 7380, 3839}], 
      Line3DBox[{3843, 6235, 3844, 6236, 3845, 6245, 3863, 3864, 7382, 3865}],
       Line3DBox[{3846, 3841, 6234, 7600, 3840, 3842, 6238, 3849, 6239, 3848, 
       6237, 3847}], Line3DBox[{3857, 6242, 3856, 3858}], 
      Line3DBox[{3859, 3852, 6240, 3853, 6247, 3869}], 
      Line3DBox[{3860, 3861, 6243, 3862}], 
      Line3DBox[{3867, 6244, 3866, 6248, 3870, 3872, 7383, 3871}], 
      Line3DBox[{3868, 6246, 3855, 6241, 3854, 3850, 7381, 3851}], 
      Line3DBox[CompressedData["
1:eJwl0c0rw3EcB/Cvk9/PSdmStCQmRXKUcuRiK3ZxV+Yhtpv5B5gihTgaDuY/
4ETm4UC4cMPN41/hJYd3r/fn3W9rD+2TxVyhLoQwK5uJEPajEFKtIRxw270l
h3pVOuxVd00/4hnPpdt+xU4e2y/1Lv2aad4wy3TsWXn3zLi7R8+xj/3ybR/g
DyfsvXqTPLmfJdaH7REf3PV8ZANf2MbRpPdnhh/8lB2vybrf9BG+8kt27WPu
O32It7yXtb/PzjIH7Rd6TVbdRc5wgXnOM/bMtF7Q55jnlKTsG2xhyb6kl6TR
XWYzF+0r+rIk3OtM8tRvVvGdTrjHSvT///wCOQA6yA==
       "]], Line3DBox[CompressedData["
1:eJwl0c0rw3EcB/CvA81DOXhIWctDWVPa0YF2IzkgJ2dTWuQpB1xJoaU8/QPb
lJI/wEMR2VaUO5I4KP+E13J493p/3v32q22d04uTC1UhhIwcNYeQj4QQaw+h
wBP3sZzq55K0X7jv9AKveSNd9lvGeWYv6r16iQmWOc5ErV2+PTPh7tHHGGdS
fuz9/OWUvU+vkSf3s1Trw/Z6vrgb+M4OfrKboy3eX3kvP/gmhz4z5H7VR/hV
eafs2lPukj7IMh9k237PHQ7YH/Wi7LtXOM9lZrjEOs/M6bN6mmnOSNR+wBjX
7Bv6ujS5N9nIVfuWviet7izbeOU3y/tOl8wxF/n/f/4AVpg63w==
       "]], Line3DBox[CompressedData["
1:eJwl0UkrBGAcx/G/m71opjAmcXaR5Sy5kJL1Bbg5MMpSyvIKZCtjObowXCxv
wnKxbwduIvIKlM/k8O37+/Y80/TM1I9k+scLImIUe4UR+2hMRRwmIs7tC8yk
I3L60m5ydsvNfMfD3FYU0YJ3d4Z0q53Eve7WCbsCN7pLV9oNeNVvqLYfuIp7
nKf4Raf5iWu5Lxnxxd/IujOof+wB/uBe/uRnrDnv1I/5z2NVd+gr+xpLul3f
2OXFEbt6xh7nSR7jKS5xZ8Hbp+05lOkJZwv2PEp1Ri/mvwMpvcw1vJJ/I886
37DXUad//WZn3nTKO3zC9e4c87Y+4i3exIGdQ53zbOL///kDx788rA==
       "]], Line3DBox[CompressedData["
1:eJwl0c0qRGEAh/HXylgYHw2KaE7ZiRgXIFkM2Q1uQJShCFnZYCEkWYwdha0G
G8pFmDHjMwsxyka5Bj9Z/Hue57zv5pwTTS5k5qtCCFnLx0I4t662EM4SIRT5
nXXrvL7lBUvpC13iPbyMvXiP49hfE0KffbkzplO83sp6WNfxWivptI7zTqvo
T4v4GzbjqPMWfNGt+IodONIUwjt+WM6dtK7wCfzBDH7js+07H9SP/MmG+Ga7
d+NF23U+4FmBP9ie3sBlXMdFXMO4O0t8lc9ZTE/rLJ+xaj2lZ/mBRTqHSdzG
RlxxvsO3rEFf+2ZH3ukKD/ESk3/fF0/1DZ7gceL///wCC8E8Xg==
       "]], 
      Line3DBox[{5296, 2263, 5297, 2264, 5310, 2283, 5422, 2486, 5423, 2483, 
       5418, 2481, 2482, 7555, 5419, 2476, 2477, 7554, 5417, 2478, 7044, 2479,
        7043, 2480, 7073, 2562, 2563, 5468, 7074, 2564, 2565, 5479, 7076, 
       2579, 2578, 5483, 2582, 5484, 2580, 5480, 2379, 5370, 2377, 5369, 2378,
        5375, 2380, 5371, 2381, 7545, 5374, 2384, 2401, 7547, 5380, 2400, 
       2399, 7009, 2308, 6980, 2307, 6978, 2306, 5323, 6979, 2304, 2271, 5302,
        6965, 2272, 5303, 2262, 5296}], Line3DBox[CompressedData["
1:eJwl0L0vw2EUxfHbSBNqsLSTGCTsJN4tbCYSA5pO/Q1NGNjFUIO/Qb0MEvEP
MKgBk8V/wIZNvJSQGAifJ4aT7zkn9z65eXqztfnVXESU6aQYcdseMdIdcYeX
8gM28R7P8RGHShEXHRHDeIantNUTMSA3+UHcxgbV9f3yDr9Lm96u0yHfp9/D
dXkfW7Sga8hvaR4/8Jcq+gM5V3AorcglXMYjfSdfoKrchTWctPfs5nF8wgn8
wpn0np05/JG/aZZfTLe4t83uEl+mzFyGG/q8vpLu8QdT+ne8svuKo/IYvfCf
dK2fTveav5GPi///+weYwjYW
       "]], Line3DBox[CompressedData["
1:eJwl0M8rw2EcB/CPHTRy2GE7ycFFDk5aUljSckfKNFbLmasSpZQ/QqPUklx3
8aPIQf4HuS05SPJjpkVea4d3r/fn6fs836dnsLwxv94VEQXJ9kc8JiNu0hEv
vOUTz1nnJZ85lom47okY5xVHecGa7A1EjJhP9SFWeSK71ofNZ/qx7PjXtlT0
LR7xgF+ssMlvWbLn0Pyjt6Rg/uW+81b0ZG9Et5T1FNfYxxJnfddw5zw/Oc03
zvCdufZ5zn7VJ/WwZ44LUrSeMC/qy7JqLrLEljeYaN+JU8zJn96Ue2dtultD
/5A78wNr6c77/gM4RDiV
       "]], Line3DBox[CompressedData["
1:eJwl0D1LQmEYBuDHpTJoCGoKh2hoamoIpZAIaZdIEhQpWmtsKYQg6C8E0QdE
RLtLH1AY+CfCLaIhyrQEkeiChpvrfm+O75Ezub6d30pExJrUxiKehyIa7LAr
mYmIFtN8sn/qWb3HefZZYSkZUZaB8Yi9VMSqXrKvMC8J+wI/3FG0Z/W2vsQW
F/nNHLtcZsVvRoYjNjnKDQ4yKYfeUXb+9VyRffbk1N1tHrFg/9J/5Nj5jLs8
YZXnnPJM1V0X+r7tipcybb/mDA/sNf1WZp3vmeYD5/jmG9z5zy+84SvrfOcj
m9xJ/X/fP4zFOUs=
       "]], 
      Line3DBox[{5485, 2584, 5490, 2589, 5489, 2590, 7561, 5491, 2591, 2601, 
       7562, 5500, 2602, 7082, 2605, 7081, 2606, 7112, 2691, 2692, 5551, 7113,
        2693, 2688, 5548, 7111, 2689, 5549, 2690, 5550, 2683, 5545, 2682, 
       5546, 2684, 5638, 2854, 5647, 2860, 5648, 2861, 2859, 7574, 5644, 2839,
        2838, 7570, 5632, 2834, 2833, 7174, 2761, 7142, 2760, 7143, 2757, 
       5589, 7141, 2758, 2759, 5597, 7150, 2778, 2774, 5594, 2775, 5599, 2779,
        5598, 2587, 5486, 2583, 5485}], Line3DBox[CompressedData["
1:eJwl0M0qhGEchvG/rOadrBj5mNFMjYWh2HEcs7N1AAYxoZS1EUkOQPmYFTXO
wMdu0tAsRqSEheQY+E0WV9d93z3P+9RbWKiUF3siYh5noxEjScRSJqKCrDyN
Wi5iS5+RZ3Hp3AXm5G37JNf1Kd7FvvMN+47ctNe6G65s9/qevI5zvY4N+c5e
5VN9jU94hY95mVODERPpiISLPI4j76T1ktzH/TyAA/uvexl5DKlsRJ4P7b3O
DclN3/zy5jW3nb3hd/0Dt3ILHfu3/iA/4kXv8DP/2J/k1+49/Y0/Oc+rXOAq
F3mTh5P///sHNIA0yA==
       "]], Line3DBox[CompressedData["
1:eJwl0L1KQnEcBuBfURgnaKshlVApW/u8kDbXLiCDCo0gtz6gti4gCmrQoO6g
lgalSR2CIpOGiMBb6JGGl+f9vxzO/3Bym+WNrZGIKMnedEQhiTjgIm/TEft6
UT/kEpelbl/hWTaiZl/X72yrbHCNLzznqTx4puV8ojd5zCO5t9eG7+OzvaLf
6Lu85g6vuM1Llpma8W2TERMscJx5FiXJREw5z+mjzDA7fNae44XvHbOn9VlJ
2Vve+e3uJn/4yLa7+vqT/ss2O/Jq77LPgb2nf8in8xt7fOcXF1jlPCvMJ///
9w/qZzMX
       "]], Line3DBox[CompressedData["
1:eJwl0Dsvg2EYBuCnEgnVgYGEMlQY/AJqMJBYHdJqLIgfwG8wOCwSBt0ao1Hq
ENQgMSuLIP4CSROEUa8vHe5c9/O+3+H9vtz65uJGKiKWZas3YjIdsc0pvvKJ
X2zvivjmv/lRXvSDoYi6/qt32O+U1GDEn7lh/UN+su6TT73NXsY1PRxnNyeY
l5G+iAFzUS/IqLnErLUxfUGfl2F9jjn2J+9j2bOvvPOQF8m5eMsK73jMZ2e4
10/0Os95Jm/WH8xV/VLezafJt3OV11zhDWuyphelnDzDvKQX5Mg8yz3u+y8z
+o4+zV3m063/2wS4DDUC
       "]], Line3DBox[CompressedData["
1:eJwl0b0rxWEYxvFbRDkhcZScgeyUtwWDCYs4i/IysFn4CxgwU17C/yBJB4OX
1aYoysTAos7J4Bws8vlluPpe3+7nee7haZtfyi6WRcSCrKYjBqojhiTXErHH
J/VpOeP7fEqfk0t+wOf1C30Gz3EWH/EIj+XWmSeeS96Qe/7Cr/UruePPfEVf
Tt7lV7Ktn+IWPpjvJvf5Dt7gIbY2RYylIrLSnIlo5yN6Cw5jBkexT+rMG3mv
3iO1vIF3652S4vW8Q++SGv5hx5fdBSxiHt/tLulv+qv88ApnU+5Uyzcv56Xk
juT5LxYwzIsJzav0Svnk4+YbOIGbmMUTOwZxnffjWvr/f/4ADeE+Yw==
       "]], Line3DBox[CompressedData["
1:eJwl0b0rxHEAx/HvyYQM9NPlIVlYWSkUYfBQbjkrFuXhH8GAkvMQZRCLRZzF
UyyGk5WJcoPlLgN3l3jJ8On9fv++336/q2uZXBifj4UQZqynIoReu2gIYTvy
jE/ZclMIKT3N5+za+Y6e5Vc8iSc4gc+YxlPLuPOkz/iGpXVGp/imnesHvcWP
7Fbf2SG/x118dL6Hl3ofb/AA6+tCGKgMYdjW/b5mPcLbMImtmMAOq2oMoUa3
8z6L87hn/bzbannkWSfvskgXfaPk219YwE989+0iL/AXe9M5/frnltV5neUf
9q2rva+E5ZjHH+dlPGY5PebeEo7iIg7isTtDuKYTuIor0f//8wupU0NI
       "]], Line3DBox[CompressedData["
1:eJwl0U0rRGEYBuBXsiGRzEwylJ38BvKRWZhhY6FYKt81fgc2rCiiiJqFhZ18
iwVWZE3ZGSmZLMTM5DpZ3F3383TO+546bePzw9mKEMKM9FeHkJKz5hA2YiFM
6+uc4oSc2k/ymlv2Wf1Kn+UF5/jMEx7JvWeezMf6C8+5Jof2q9E9fLDf1Pfl
xnwr2/qj/Q7vzLnoTu7xkrtsiYeQrgmhlRmOSTIZQod5VG/nCPskYZ8w9+pN
TLFLGuw7GWfcvlvvkUZzyR1l31Bkkb98d3dJL+jf/ORrFPs88yzYv+lf0Xvm
eueVWeXMOr1WfsyV/OCQ55Y4yEVmuMA0D5w1wBXzcuz///wBU/RDIQ==
       "]]}, {
      Line3DBox[{3921, 7606, 3917, 3916, 5303, 3927, 5299, 7719, 3929, 3942, 
       5313, 5312, 3889, 5273, 3888, 5281, 3881, 5270, 3876, 5267, 3878, 5521,
        4234, 5523, 4218, 5507, 4220, 5510, 4201, 5499, 4202, 4181, 7644, 
       5488, 4180, 5489, 4186, 4183, 7645, 4182}], 
      Line3DBox[{3925, 3918, 5296, 7718, 3919, 3938, 5311, 3943, 5315, 5314, 
       3890, 5274, 3891, 5282, 3882, 7601, 3879, 5268, 3873, 5265, 3874, 5513,
        4227, 4232, 7651, 5524, 4221, 5508, 4222, 5511, 4193, 5493, 4194, 
       5498, 4200, 4189, 7646, 5490, 4188, 4190}], 
      Line3DBox[{3939, 3940, 5310, 7609, 3937, 3936, 5309, 3934, 5308, 5307, 
       3935, 7611, 3948, 5321, 3895, 5277, 3896, 5284, 3899, 5279, 3900, 5515,
        4229, 5517, 4231, 5518, 4223, 4224, 7756, 5509, 4198, 5496, 4191, 
       5492, 4192, 4177, 7749, 5486, 4175, 4176}], 
      Line3DBox[{3941, 3923, 5297, 7607, 3924, 3932, 5304, 3933, 5306, 5305, 
       3892, 7603, 5201, 5275, 3893, 5276, 3894, 5283, 3897, 5278, 3898, 5514,
        4228, 5516, 4230, 5519, 4225, 4216, 7650, 5505, 4197, 5495, 4195, 
       5494, 4196, 4173, 7748, 5485, 4172, 4174}], 
      Line3DBox[{4010, 7618, 4011, 4023, 5374, 7728, 4021, 4019, 5372, 4001, 
       5359, 5358, 4002, 7623, 3984, 5343, 3982, 5346, 3953, 5324, 3955, 5332,
        3967, 5576, 4305, 5573, 4298, 5564, 4300, 5221, 7769, 5570, 4271, 
       5547, 4268, 5543, 4266, 4272, 7762, 5548, 4256, 4255, 7655, 4276}], 
      Line3DBox[{4012, 4013, 5375, 7621, 3996, 3995, 5368, 4005, 5361, 5360, 
       3970, 5335, 3971, 5342, 3961, 7724, 5206, 5328, 3957, 5326, 3958, 5578,
        4307, 4308, 7770, 5579, 4287, 5557, 4288, 5563, 4262, 5539, 4263, 
       5541, 4264, 4275, 7763, 5550, 4250, 4251}], 
      Line3DBox[{4014, 4015, 5369, 7726, 4003, 3997, 5356, 3998, 5365, 5364, 
       3974, 7725, 3975, 5339, 3972, 5336, 3973, 5341, 3959, 5327, 3960, 5572,
        4302, 5568, 4290, 5558, 4289, 4286, 7767, 5556, 4248, 5538, 4249, 
       5540, 4259, 4260, 7653, 5545, 4269, 4273}], 
      Line3DBox[{4016, 4017, 5370, 7727, 4004, 3999, 5357, 4000, 5367, 5366, 
       4008, 7622, 3977, 5337, 3976, 5338, 3978, 5345, 3979, 5340, 3980, 5569,
        4303, 5571, 4304, 5575, 4291, 4292, 7658, 5559, 4245, 5536, 4246, 
       5537, 4247, 4261, 7654, 5546, 4270, 4274}], 
      Line3DBox[{4024, 7620, 4022, 4018, 5371, 4020, 5373, 7619, 4009, 4007, 
       5363, 5362, 3981, 5344, 3983, 5347, 3954, 5325, 3956, 5333, 3968, 5577,
        4306, 5574, 4299, 5565, 4301, 5567, 4265, 5542, 4257, 4258, 7761, 
       5544, 4267, 5549, 4252, 4253, 7652, 4254}], 
      Line3DBox[{4083, 7632, 4084, 4095, 5419, 7738, 4090, 4089, 5425, 4096, 
       5421, 5420, 4055, 7626, 4056, 5403, 4065, 5409, 4052, 5395, 4046, 5392,
        4047, 5628, 4377, 5629, 4364, 5613, 4365, 4323, 5590, 7661, 4322, 
       5602, 4336, 5596, 4335, 4337, 7777, 5597, 4332, 4333, 7663, 4346}], 
      Line3DBox[{4085, 4086, 5422, 7634, 4097, 4101, 5428, 4102, 5431, 5430, 
       4070, 7629, 4069, 5407, 4048, 5393, 4049, 5400, 4057, 5397, 4058, 5615,
        4369, 5616, 4370, 5620, 4372, 4325, 7774, 5591, 4324, 5604, 4355, 
       5605, 4354, 4339, 7778, 5598, 4338, 4340}], 
      Line3DBox[{4087, 4088, 5423, 7635, 4098, 4100, 5429, 4103, 5433, 5432, 
       4071, 5410, 4050, 5394, 4051, 7627, 4059, 5398, 4053, 5396, 4054, 5626,
        4368, 5224, 7781, 5617, 4371, 5621, 4373, 5618, 4347, 5600, 4348, 
       5603, 4353, 4345, 7779, 5599, 4341, 4342}], 
      Line3DBox[{4091, 7633, 4092, 4094, 5418, 4093, 5424, 7739, 5210, 4099, 
       5427, 5426, 4063, 5402, 4064, 5408, 4045, 5391, 4044, 5399, 4060, 5630,
        4376, 5627, 4366, 5614, 4367, 5619, 4352, 5601, 4349, 4334, 7776, 
       5595, 4331, 5594, 4330, 4344, 7662, 4343}], 
      Line3DBox[{4169, 4170, 5484, 7747, 4157, 4156, 5473, 4159, 5477, 5476, 
       4142, 5460, 4123, 5447, 4124, 7638, 4133, 5454, 4130, 5452, 4131, 5662,
        4432, 4433, 7788, 5663, 4434, 5667, 4435, 5665, 4403, 5640, 4404, 
       5642, 4400, 4401, 7673, 5647, 4394, 4395}], 
      Line3DBox[{4171, 4167, 5480, 7745, 4155, 4154, 5478, 4158, 5472, 5471, 
       4139, 7639, 4138, 5457, 4126, 5449, 4127, 5450, 4128, 5451, 4129, 5661,
        4426, 5658, 4427, 5664, 4385, 4386, 7669, 5633, 4387, 5639, 4402, 
       5641, 4399, 4397, 7670, 5638, 4396, 4398}], 
      Line3DBox[{4212, 7649, 4185, 4184, 5491, 7750, 4187, 4179, 5487, 4178, 
       5497, 4199, 5512, 7757, 4226, 4219, 5506, 4217, 5522, 4233, 5520, 3877,
        5266, 3875, 5269, 3880, 5280, 3887, 5272, 3886, 7602, 3885, 5300, 
       5301, 3928, 5298, 3926, 3930, 7720, 5302, 3920, 3922, 7608, 3931}], 
      Line3DBox[{4407, 7671, 4408, 4406, 5644, 7787, 5228, 4410, 5645, 4409, 
       5646, 4411, 7676, 5673, 4436, 4431, 5660, 4430, 5670, 4437, 5672, 4122,
        5446, 4121, 5448, 4125, 5458, 4134, 5455, 4135, 4136, 5469, 7641, 
       5470, 4153, 5482, 4162, 5213, 7744, 5479, 4163, 4164, 7642, 4165}], 
      Line3DBox[{4412, 7672, 4413, 4414, 5648, 4405, 5643, 7786, 4393, 4392, 
       5637, 4391, 5666, 4429, 5659, 4428, 5671, 4438, 5674, 4132, 5453, 4120,
        5445, 4119, 5461, 4141, 5459, 4140, 5474, 5475, 4152, 5212, 7746, 
       5481, 4168, 5483, 4160, 4161, 7643, 4166}], 
      Line3DBox[{4489, 4490, 5735, 4512, 5731, 7792, 4513, 4520, 5737, 5736, 
       4477, 5703, 4478, 5704, 4467, 5696, 4468, 5697, 4469, 5945, 4794, 5944,
        4795, 5970, 4811, 5968, 4753, 5919, 4754, 5240, 7809, 5917, 4750, 
       5936, 4782, 4783}], 
      Line3DBox[{4497, 4496, 5726, 4482, 5709, 4483, 5719, 7679, 5229, 5720, 
       4464, 5694, 4461, 5690, 4455, 5684, 4449, 5681, 4450, 5950, 4800, 5957,
        4791, 5941, 4786, 5938, 4755, 4756, 7701, 5922, 4761, 5928, 4769, 
       5925, 4749, 4748}], 
      Line3DBox[{4498, 4499, 5722, 4500, 5724, 7680, 4504, 4485, 5711, 5710, 
       4458, 5688, 4459, 5693, 4446, 5679, 4442, 5677, 4443, 5951, 4801, 5952,
        4802, 5954, 4803, 5955, 4804, 5965, 4809, 4763, 7810, 5923, 4762, 
       5930, 4767, 4768}], 
      Line3DBox[{4501, 4493, 5721, 4486, 5712, 7789, 4484, 4481, 5708, 5707, 
       4456, 5687, 4457, 5692, 4439, 5675, 4440, 5676, 4441, 5953, 4797, 5948,
        4798, 5956, 4787, 5939, 4788, 5964, 4766, 4765, 7702, 5924, 4764, 
       5929, 4770, 4771}], 
      Line3DBox[{4506, 7681, 4495, 4494, 5725, 4492, 5718, 4488, 5716, 5714, 
       4463, 7677, 4460, 5689, 4444, 5678, 4445, 5686, 4453, 5683, 4454, 5949,
        4799, 5960, 4789, 5940, 4790, 4796, 7705, 5947, 4758, 5921, 4760, 
       5927, 4747, 5916, 4745, 4744, 7700, 4743}], 
      Line3DBox[{4572, 7686, 4573, 4601, 5800, 4595, 5797, 7798, 5231, 4542, 
       5754, 5753, 4543, 5771, 4563, 5772, 4551, 5762, 4552, 5766, 4557, 6022,
        4880, 6021, 4879, 6017, 4878, 6016, 4855, 5990, 4854, 5245, 7817, 
       5991, 4851, 5986, 4850, 4825, 7707, 4824}], 
      Line3DBox[{4578, 4577, 5791, 7796, 4586, 4574, 5783, 4570, 5781, 5779, 
       4544, 5755, 4526, 5742, 4527, 5750, 4535, 5747, 4536, 6004, 4871, 6015,
        4861, 5995, 4862, 6000, 4828, 5975, 4830, 5979, 4812, 5243, 7815, 
       5978, 4821, 4819}], 
      Line3DBox[{4581, 4582, 5788, 4583, 5790, 7795, 4587, 4569, 5778, 5777, 
       4540, 5752, 4541, 5759, 4528, 5743, 4524, 5741, 4525, 6006, 4873, 6007,
        4874, 6009, 4875, 6010, 4876, 6020, 4833, 4834, 7709, 6018, 4842, 
       5983, 4838, 4839}], 
      Line3DBox[{4584, 4576, 5787, 4567, 5776, 7685, 4568, 4566, 5775, 5774, 
       4538, 5751, 4539, 5758, 4521, 5739, 4522, 5740, 4523, 6008, 4869, 6003,
        4870, 6011, 4859, 5994, 4860, 6019, 4835, 4836, 7814, 5977, 4837, 
       5982, 4840, 4841}], 
      Line3DBox[{4588, 4589, 5792, 4564, 5773, 4565, 5786, 7794, 5230, 5785, 
       4548, 5760, 4547, 5756, 4537, 5748, 4531, 5745, 4532, 6005, 4872, 6012,
        4863, 5996, 4858, 5993, 4832, 4827, 7813, 5974, 4826, 5981, 4818, 
       5972, 4816, 4817}], 
      Line3DBox[{4596, 4597, 5802, 4594, 5796, 7797, 4593, 4592, 5799, 5798, 
       4562, 5770, 4559, 5768, 4553, 5763, 4554, 5764, 4555, 6002, 4866, 5999,
        4867, 6023, 4881, 6024, 4853, 5988, 4852, 5244, 7816, 5987, 4847, 
       5984, 4846, 4848}], 
      Line3DBox[{4600, 7688, 4599, 4598, 5801, 4591, 5793, 4590, 5795, 5794, 
       4560, 5769, 4561, 7684, 4558, 5767, 4556, 5765, 4549, 5761, 4550, 5997,
        4864, 5998, 4865, 5246, 7819, 6026, 4882, 6025, 4822, 5973, 4823, 
       5989, 4849, 5985, 4845, 4844, 7708, 4843}], 
      Line3DBox[{4654, 4652, 5845, 4646, 5841, 7801, 5234, 4645, 5840, 5839, 
       4618, 5814, 4606, 5805, 4607, 5830, 4634, 5826, 4635, 6057, 4933, 6055,
        4930, 6052, 4926, 6049, 4892, 6029, 4893, 5247, 7821, 6033, 4884, 
       6027, 4883, 4890}], 
      Line3DBox[{4655, 7692, 4653, 4651, 5844, 4648, 5842, 4647, 5856, 5855, 
       4605, 5804, 4602, 7689, 4603, 5803, 4604, 5828, 4638, 5829, 4639, 6058,
        4932, 6054, 4929, 4928, 7825, 6051, 4927, 6050, 4897, 6032, 4898, 
       6034, 4885, 6028, 4886, 4889, 7710, 4891}], 
      Line3DBox[{4661, 4662, 5849, 4663, 5850, 4615, 5811, 7799, 5232, 5812, 
       4616, 5833, 4624, 5818, 4625, 5824, 4630, 5822, 4631, 6073, 4946, 6075,
        4937, 6061, 4938, 6064, 4921, 5248, 7824, 6046, 4920, 6043, 4912, 
       6039, 4909, 4910}], 
      Line3DBox[{4664, 4656, 5846, 4613, 5810, 7690, 4614, 4611, 5809, 5808, 
       4612, 5832, 4626, 5819, 4627, 5820, 4628, 5821, 4629, 6072, 4945, 6074,
        4935, 6060, 4936, 6065, 4922, 6045, 4919, 4904, 7823, 6036, 4903, 
       6038, 4907, 4908}], 
      Line3DBox[{4665, 7693, 4650, 4649, 5843, 4644, 5838, 7800, 5233, 4643, 
       5837, 5836, 4619, 5815, 4617, 5813, 4610, 5807, 4608, 5806, 4609, 6053,
        4931, 6056, 4925, 6048, 4923, 6047, 4924, 6063, 4896, 4895, 7820, 
       6030, 4894, 6031, 4887, 4888, 7712, 4918}], 
      Line3DBox[{4667, 4666, 5857, 7802, 5235, 4659, 5848, 4660, 5852, 5851, 
       4637, 5827, 4636, 5835, 4620, 5816, 4621, 5823, 4632, 6069, 4943, 6067,
        4944, 6071, 4940, 6062, 4917, 6042, 4914, 6040, 4906, 4900, 7822, 
       6035, 4899, 4911}], 
      Line3DBox[{4668, 7694, 4669, 4670, 5858, 4657, 5847, 4658, 5854, 5853, 
       4641, 7691, 4642, 5834, 4640, 5831, 4622, 5817, 4623, 5825, 4633, 6068,
        4941, 6066, 4942, 6070, 4939, 4934, 7826, 6059, 4916, 6041, 4915, 
       6044, 4905, 6037, 4901, 4902, 7711, 4913}], 
      Line3DBox[{4711, 4712, 5891, 4713, 5910, 7806, 5237, 4735, 5909, 5908, 
       4675, 5861, 4671, 5859, 4672, 5885, 4702, 5881, 4703, 6107, 4997, 6106,
        4991, 6099, 4992, 6100, 4961, 6081, 4949, 4950, 7827, 6080, 4951, 
       6077, 4952, 4984}], 
      Line3DBox[{4731, 4732, 5901, 4733, 5902, 4683, 5867, 7803, 5236, 5866, 
       4682, 5888, 4692, 5873, 4693, 5879, 4699, 5878, 4700, 6122, 5010, 6124,
        5002, 6110, 5003, 6113, 4988, 5249, 7830, 6094, 4986, 6092, 4980, 
       6088, 4978, 4979}], 
      Line3DBox[{4734, 4725, 5898, 4726, 5903, 7805, 4681, 4679, 5865, 5864, 
       4680, 5887, 4695, 5875, 4696, 5876, 4697, 5877, 4698, 6121, 5009, 6123,
        5000, 6109, 5001, 6114, 4987, 6096, 4971, 4972, 7716, 6093, 4975, 
       6087, 4976, 4977}], 
      Line3DBox[{4739, 4740, 5914, 7807, 5238, 4729, 5900, 4730, 5905, 5904, 
       4704, 5882, 4705, 5890, 4694, 5874, 4688, 5871, 4689, 6117, 5005, 6115,
        5006, 6119, 5004, 6111, 4985, 6091, 4983, 6090, 4969, 4970, 7829, 
       6086, 4973, 4974}], 
      Line3DBox[{4742, 4741, 5915, 7808, 5239, 4746, 5926, 4759, 5920, 4757, 
       5946, 4785, 5937, 4784, 5959, 4805, 5958, 4452, 5682, 4451, 5685, 4448,
        5680, 4447, 5691, 4462, 5713, 5715, 4487, 5717, 4491, 4503, 7790, 
       5723, 4502, 4505}], 
      Line3DBox[{4774, 7703, 4775, 4781, 5935, 4779, 5933, 4752, 5918, 4751, 
       5962, 4807, 5969, 7812, 5242, 4793, 5943, 4792, 5942, 4466, 5695, 4465,
        5698, 4470, 5701, 4474, 7678, 4475, 5702, 4476, 5727, 5728, 4507, 
       5730, 4511, 5734, 4516, 4518, 7683, 4519}], 
      Line3DBox[{4777, 7704, 4773, 4772, 5931, 4776, 5932, 7811, 5241, 4778, 
       5934, 4780, 5961, 4806, 5963, 4808, 5966, 4810, 5967, 4472, 5699, 4471,
        5700, 4473, 5705, 4479, 5706, 4480, 5732, 5733, 4510, 4509, 7791, 
       5729, 4508, 5738, 4517, 4515, 7682, 4514}], 
      Line3DBox[{4820, 7706, 4815, 4814, 5971, 4813, 5980, 4831, 5976, 4829, 
       6001, 7818, 4868, 4857, 5992, 4856, 6014, 4877, 6013, 4534, 5746, 4533,
        5749, 4530, 5744, 4529, 5757, 4546, 7793, 4545, 5780, 5782, 4571, 
       5784, 4575, 5789, 4585, 4580, 7687, 4579}], 
      Line3DBox[{4955, 7713, 4954, 4953, 6078, 4957, 6083, 4963, 6084, 4964, 
       6102, 4993, 6101, 7831, 5250, 4994, 6105, 4996, 6108, 4707, 5884, 4706,
        5883, 4673, 5860, 4674, 7695, 4684, 5868, 4685, 5911, 5912, 4716, 
       5893, 4715, 5892, 4714, 4722, 7698, 4723}], 
      Line3DBox[{4960, 7714, 4956, 4948, 6076, 4947, 6082, 7828, 4962, 4959, 
       6079, 4958, 6097, 4989, 6098, 4990, 6103, 4995, 6104, 4677, 5862, 4676,
        5863, 4678, 5870, 4687, 5869, 4686, 5894, 5895, 4717, 4719, 7804, 
       5896, 4718, 5897, 4724, 4721, 7697, 4720}], 
      Line3DBox[{4965, 7715, 4966, 4968, 6085, 4967, 6095, 4982, 6089, 4981, 
       6112, 7832, 4999, 4998, 6120, 5008, 6116, 5007, 6118, 4701, 5880, 4691,
        5872, 4690, 5886, 4708, 5889, 4709, 7696, 4710, 5906, 5907, 4728, 
       5899, 4727, 5913, 4736, 4737, 7699, 4738}], 
      Line3DBox[{5012, 5011, 6125, 5013, 6137, 6138, 5035, 6139, 5022, 6133, 
       5021, 5031}], Line3DBox[{5028, 5030}], 
      Line3DBox[{5032, 6135, 5029, 5027}], 
      Line3DBox[{5033, 5023, 6134, 5024, 6136, 5034}], 
      Line3DBox[{5037, 5036, 6141, 5038, 6153, 6154, 5058, 6155, 5047, 6149, 
       5046, 5056}], 
      Line3DBox[{5050, 5051, 6156, 7834, 5254, 5039, 6142, 5040, 6144, 6143, 
       5041, 6147, 5045, 6148, 5042, 6145, 5043, 6146, 5044, 6211, 5146, 6213,
        5142, 6208, 5141, 6210, 5145, 6216, 5135, 6206, 5136, 5140, 7838, 
       6207, 5137, 5138}], Line3DBox[{5053, 5052, 6151, 5252}], 
      Line3DBox[{5055, 5054}], 
      Line3DBox[{5057, 5049, 6150, 5048, 6152, 5253}], 
      Line3DBox[{5061, 5060}], Line3DBox[{5065, 5059, 6157, 5255}], 
      Line3DBox[{5073, 5072, 6166, 5066, 6160, 6161, 5063, 6159, 5064, 6171, 
       5077, 5076}], 
      Line3DBox[{5078, 5074, 6167, 7835, 5257, 5075, 6168, 5079, 6170, 6169, 
       5070, 6164, 5071, 6165, 5067, 6162, 5068, 6163, 5069, 6227, 5175, 6228,
        5173, 6225, 5172, 6226, 5174, 6233, 5177, 6230, 5157, 5156, 7839, 
       6219, 5155, 5169}], Line3DBox[{5080, 5081, 6172, 5062, 6158, 5256}], 
      Line3DBox[{5083, 6173, 5082, 5090}], Line3DBox[{5085, 5084}], 
      Line3DBox[{5087, 6174, 5086, 6188, 5107, 5106}], 
      Line3DBox[{5098, 5097, 6182, 5091, 6176, 6177, 5089, 6175, 5088, 6187, 
       5102, 5101}], Line3DBox[{5110, 5109, 6189, 5108, 6199, 5259}], 
      Line3DBox[{5116, 5115, 6192, 7837, 5117, 5114, 6191, 5113, 6201, 5123, 
       6195, 5120, 6193, 5119, 6198, 5124, 6196, 5019, 6130, 5018, 6129, 5017,
        6132, 5020, 6131, 5016, 6127, 6128, 5015, 6126, 5014, 5251, 7833, 
       6140, 5026, 5025}], 
      Line3DBox[{5118, 5112, 6190, 5111, 6202, 5125, 6200, 5122, 6194, 5121, 
       6197, 5258}], Line3DBox[{5127, 5126, 6203, 5260}], 
      Line3DBox[{5129, 5128}], 
      Line3DBox[{5132, 5130, 6204, 5131, 6214, 5148}], 
      Line3DBox[{5139, 5134, 6205, 5133, 6217, 5149, 6215, 5144, 6209, 5143, 
       6212, 5147}], Line3DBox[{5151, 5153}], 
      Line3DBox[{5154, 6218, 5152, 5150}], 
      Line3DBox[{5159, 6220, 5158, 6224, 5164, 5165}], 
      Line3DBox[{5163, 6222, 5162, 5168}], Line3DBox[{5167, 5166}], 
      Line3DBox[{5171, 5170, 6223, 5160, 6221, 5161, 6229, 5176, 6231, 5178, 
       6232, 5179}], Line3DBox[{5187, 5186, 6239, 5182, 6235, 5262}], 
      Line3DBox[{5189, 5188}], Line3DBox[{5190, 5185, 6237, 5263}], 
      Line3DBox[{5191, 5180, 6234, 7840, 5261, 5181, 6245, 5199, 6248, 5196, 
       6241, 5195, 6240, 5194, 6243, 5197, 6242, 5094, 6179, 5093, 6178, 5092,
        6181, 5096, 6180, 5095, 6185, 6186, 5105, 6184, 5103, 5100, 7836, 
       6183, 5099, 5104}], 
      Line3DBox[{5193, 5192, 6238, 5184, 6236, 5183, 6244, 5198, 6246, 5200, 
       6247, 5264}], Line3DBox[CompressedData["
1:eJwl0DsvQ2EYwPGnqb2GGkm6apf6BrVgpSEWg9hKj8vm0i8gJpGGsDJIkAjR
iyaWusXQGIyMUl/CTwxPfu8/ec45b05uMZmupiJi3uQzEfVsRIHnnOQFSzzj
OI+HIvYHI064xzp3ecAN1rjGdTM1ErGjl50XPD+ht3VFfw1HJPzkKr95w1tz
aads9865Ya71rF7yjpa+0k2+8YM9PrPJJ3Z45K59+4f84RZ73OQ7awx7KdNw
bpmib6R123nOzpge0B19ah7csco2V3j/d3e+2s3bnWGiXziqy6zoR3az///3
F1X9ONE=
       "]], Line3DBox[CompressedData["
1:eJwl0C9PQmEYhvEHNq0YMOpmNGv1T0QsysZGc2JRNzApBQZ2ZzAA06xJg45N
ZSAGUYOJwGeAb+FvIzy77uvcz/ues7NSPMuVExGxbzpLEZupiPt0xBY+4Dbe
LUbcLEQc8r3liFt+zdt4hU08xwuT1dd5Rd6VD5xp8BLP8DK+mql3vXh+pO/z
ZzmvL/Ie/+NjHOE3vmNB/yMPzRtv+7ap/SZOsIWf7q3hiFdxjJeYtN/FdXfM
ywO5oFvjc7zP8/zD+VN5KOdMlx/zL3nV7on8K+/gI2bxCTdSs//3D2Y6M6Y=

       "]], 
      Line3DBox[{3907, 5288, 3908, 5535, 4244, 5534, 4241, 5529, 4240, 7759, 
       5216, 7758, 4239, 7771, 4309, 4313, 5582, 4312, 5583, 4314, 5584, 3987,
        5349, 3986, 5348, 3985, 5350, 3988, 5351, 3989, 7615, 3915, 7605, 
       3911, 7717, 5290, 3910, 5295, 3909, 5289, 3907}], 
      Line3DBox[CompressedData["
1:eJwl0LsvQ3EYBuCPQRdRl7Yi9CBRTWelnSqEXWxVIjGw8S8yWpgkNdRl0Z4B
bSLSST1iePO8b87vXHJWz64OL8cioik32YhMPuKak7zlOsvS01OpJREl+13/
kLpdsT/1+2JEn3ccsM3N6YgtOXZm29maXpWW3bBbuYgN+8huSkHf4xx3OMUG
szxghfMF12YiZrnLHPdZ4hrHucglOfeOkfuK+opc2OF6oi/Ll28ceWafPxzw
mQ/uOXH2RX+Vtn1qv+ldebRTfv99s+cMmWGXE0z55B8ssMMk//9/fwFoVTHr

       "]], Line3DBox[CompressedData["
1:eJwl0MsrhFEch/GvjJpiMjKuGSVDdi5FqZmNsWDJwqWsJLkU/yM72WHlskCa
zKxsxMqnLH49z3Pe95z3MnV4uX3RlWTLXPcnxaHkCkt4g3O4X0lWJpNp/mlt
mbexpju4qr9wvpzsWKvrBb5odnVDL/E9XsE1HMKHatLkZd5n6rwXG1jCseFk
YyDZNKO8ib/2DPJ1XsNZPPd+p55R0DP6TJ/obj2uj3XHvmdn3jv7Bdv6Ee/0
gXufeMt86xF7frCAH3jkeg8vmpZ+961VfMMJfMXb6v//+wPU4SpA
       "]], 
      Line3DBox[{4037, 5385, 4036, 5386, 4038, 5390, 4039, 5387, 7624, 4040, 
       7625, 4043, 7636, 4114, 5440, 4113, 5439, 4106, 5435, 4104, 5434, 4105,
        5654, 4423, 5653, 4415, 5649, 4416, 4422, 7675, 5225, 7667, 5223, 
       7666, 4361, 5610, 4362, 5611, 4363, 5612, 4037}]}, {
      Line3DBox[{6282, 6280, 7606, 7390, 6965, 7720, 6865, 7393, 6977, 7722, 
       6290, 6291, 6970, 7544, 6273, 6956, 7389, 6957, 6259, 7604, 6257, 6946,
        6258, 6952, 6267, 7101, 6482, 6481, 7760, 7566, 6477, 7094, 6473, 
       7091, 6463, 7083, 6462, 6461, 7753, 7563, 6450, 6439, 7750, 7561, 6438,
        7645, 6437, 6436}], 
      Line3DBox[{6284, 7608, 6285, 7394, 6979, 7723, 6302, 6288, 6968, 7392, 
       6969, 7721, 6866, 6974, 6271, 7542, 7387, 6962, 6266, 6951, 6261, 6948,
        7386, 7108, 6484, 7106, 6480, 7100, 6478, 7098, 6466, 6883, 7754, 
       7564, 7431, 7087, 6457, 6445, 7751, 7562, 7429, 6460, 7649, 7430}], 
      Line3DBox[{6296, 7612, 6297, 6298, 6980, 7614, 6303, 6295, 6976, 6292, 
       6972, 6971, 6276, 7605, 6277, 6963, 6275, 6960, 6268, 6953, 6262, 6949,
        6263, 7104, 6475, 7093, 6476, 7095, 6440, 6441, 7758, 7096, 6464, 
       7084, 6446, 7080, 6447, 6453, 7752, 7081, 6454, 6455, 7647, 6458}], 
      Line3DBox[{6301, 7613, 6300, 6299, 6978, 6287, 6967, 7610, 6289, 6294, 
       6975, 6973, 6270, 7717, 6272, 6961, 6274, 6958, 6269, 6954, 6264, 6950,
        6265, 7107, 6483, 7105, 6479, 7099, 6442, 6443, 7759, 7097, 6465, 
       7085, 6448, 6449, 7755, 7086, 6456, 7082, 6451, 6452, 7648, 6459}], 
      Line3DBox[{6327, 7617, 6328, 6340, 7009, 6341, 7548, 7731, 6870, 6339, 
       7008, 7007, 6323, 7615, 6324, 6998, 6321, 6996, 6317, 6991, 6313, 6989,
        6314, 7134, 6514, 7132, 6510, 7126, 6511, 6512, 7771, 7127, 6500, 
       7117, 6501, 6889, 7567, 7657, 7437, 7112, 6497, 6496, 7656, 6495}], 
      Line3DBox[{6330, 6331, 7620, 6334, 7545, 7728, 6335, 7403, 7546, 7729, 
       6337, 6336, 7005, 7004, 7397, 6986, 7396, 6984, 6308, 7616, 6316, 6990,
        6315, 6994, 6320, 7137, 6515, 6891, 7768, 7119, 6506, 7136, 7441, 
       7128, 7439, 7114, 6498, 6890, 7766, 7118, 7438, 6887, 7762, 7111, 7433,
        7652, 6485, 6490}], 
      Line3DBox[{6385, 7630, 6380, 6379, 7043, 7737, 6383, 6372, 7034, 6373, 
       7036, 7035, 6364, 7625, 6362, 7022, 6361, 7027, 6355, 7020, 6351, 7016,
        6352, 7166, 6553, 7163, 6550, 7159, 6547, 6548, 7667, 7170, 6528, 
       7144, 6529, 7145, 6516, 6517, 7660, 7142, 6523, 6524, 7664, 6541}], 
      Line3DBox[{6386, 7631, 6382, 6381, 7044, 6375, 7040, 7733, 6378, 6374, 
       7039, 7037, 6358, 7624, 6357, 7021, 6356, 7025, 6353, 7017, 6348, 7014,
        6349, 7164, 6552, 7161, 6549, 7157, 6545, 6546, 7666, 7155, 6532, 
       7146, 6530, 6521, 7659, 7139, 6519, 7143, 6525, 6526, 7665, 6542}], 
      Line3DBox[{6423, 7640, 6422, 6421, 7073, 6412, 7064, 7740, 6877, 6415, 
       7068, 7067, 6402, 7636, 6403, 7075, 6404, 7054, 6405, 7055, 6395, 7048,
        6396, 7188, 6582, 7189, 6579, 7181, 6576, 6577, 7675, 7185, 6566, 
       7175, 6563, 6904, 7784, 7571, 6556, 7174, 6557, 6561, 7668, 6562}], 
      Line3DBox[{6428, 7642, 6419, 7428, 7074, 7743, 6420, 6414, 7066, 6413, 
       7065, 7741, 6878, 7069, 6401, 7053, 6400, 7052, 6397, 7049, 6394, 7047,
        7419, 7190, 6581, 7187, 6575, 7179, 7464, 7184, 6565, 6905, 7785, 
       7572, 7459, 7177, 6555, 6902, 7783, 7570, 6559, 6560, 7671, 7462}], 
      Line3DBox[{6429, 7643, 6427, 6426, 7076, 7744, 6424, 6418, 7072, 7742, 
       6417, 6416, 7071, 7070, 6407, 7057, 7422, 7637, 7558, 7421, 6393, 7046,
        6392, 7051, 6399, 7186, 6580, 6583, 7192, 7466, 7674, 7182, 7467, 
       7194, 6568, 7176, 6567, 6558, 7782, 7569, 7458, 6903, 7787, 7574, 7461,
        6573, 7672, 7463}], 
      Line3DBox[{6491, 7655, 6492, 7436, 7113, 7764, 6494, 6493, 7116, 6499, 
       7115, 7765, 6888, 6502, 7130, 6513, 7129, 7443, 7131, 7444, 7133, 6319,
        6993, 6318, 6992, 7398, 6995, 7399, 6997, 6322, 7006, 6871, 7732, 
       7549, 7404, 7010, 6342, 6872, 7730, 7547, 6343, 6329, 7618, 7402}], 
      Line3DBox[{6538, 7662, 6537, 7448, 7150, 7777, 6527, 7445, 7147, 7775, 
       6535, 6534, 7148, 7446, 7169, 7456, 7172, 6543, 7152, 7780, 6900, 6551,
        7160, 6354, 7018, 6345, 7011, 6344, 7628, 6347, 7013, 7406, 7024, 
       7409, 7553, 7042, 6371, 6873, 7735, 7552, 7413, 6875, 7738, 7555, 7417,
        6388, 7633, 7416}], 
      Line3DBox[{6539, 7663, 6540, 6522, 7141, 7773, 6895, 6520, 7140, 6518, 
       7138, 7772, 6894, 6533, 7156, 7451, 7158, 7452, 7162, 7453, 7165, 6350,
        7015, 7407, 7019, 7408, 7026, 6360, 7550, 6359, 7038, 6874, 7734, 
       7551, 6377, 7041, 6376, 6384, 7736, 7554, 7414, 6387, 7632, 7415}], 
      Line3DBox[{6593, 6592}], 
      Line3DBox[{6611, 6610, 7681, 6608, 7213, 7790, 6909, 6615, 7216, 7792, 
       6614, 6612, 7576, 7214, 6603, 7207, 6601, 7678, 6602, 7208, 6599, 7205,
        6596, 7203, 7472, 7297, 6731, 7295, 6730, 6920, 7812, 7590, 6729, 
       7292, 6709, 7282, 7505, 6708, 7809, 7588, 7504, 6705, 7808, 7587, 7503,
        7700, 6706, 6707}], 
      Line3DBox[{6616, 7682, 6591, 6590, 7201, 6589, 7200, 6907}], 
      Line3DBox[{6619, 7683, 6618, 7473, 7219, 6613, 7215, 7791, 6910, 6617, 
       7218, 7217, 6605, 7210, 6604, 7209, 6600, 7206, 6597, 7204, 6598, 7296,
        6732, 7298, 6727, 7291, 6728, 7294, 6722, 7286, 6723, 6724, 7811, 
       7589, 6715, 7283, 6714, 6713, 7703, 7506}], Line3DBox[{6637, 6636}], 
      Line3DBox[{6641, 6640, 7687, 6639, 7577, 7796, 6642, 7479, 7579, 7797, 
       6913, 6643, 7236, 7578, 7477, 7230, 6631, 7684, 6632, 7233, 7476, 7227,
        6628, 7229, 6630, 7316, 7517, 7314, 7516, 6755, 7819, 7319, 7518, 
       7318, 7511, 7299, 6737, 6923, 7816, 7304, 7512, 6922, 7815, 7302, 7510,
        7706, 6734, 6733}], 
      Line3DBox[{6648, 7237, 6647, 7238, 6646, 6638, 7686, 7478}], 
      Line3DBox[{6668, 7256, 6667, 7257, 6669, 6666, 7693, 7494}], 
      Line3DBox[{6671, 6670}], Line3DBox[{6697, 6696}], 
      Line3DBox[{6698, 7697, 6699, 6694, 7275, 6695, 7276, 6917}], 
      Line3DBox[{6700, 7698, 6701, 7501, 7277, 6693, 7272, 7804, 6690, 6689, 
       7274, 7273, 6679, 7263, 6680, 7266, 6674, 7259, 6675, 7262, 6678, 7348,
        6797, 7346, 6798, 7350, 6795, 7344, 6787, 7342, 6785, 6930, 7828, 
       7592, 6782, 7341, 7528, 6784, 7713, 7529}], 
      Line3DBox[{6703, 7699, 6704, 7502, 7281, 7807, 6691, 7499, 7279, 7806, 
       6692, 7500, 7586, 7280, 6684, 7265, 6682, 7695, 6683, 7267, 6677, 7261,
        6676, 7260, 7496, 7349, 6799, 7347, 6796, 6933, 7831, 7595, 7532, 
       7345, 6790, 7343, 6789, 6788, 7827, 7591, 6783, 6929, 7829, 7593, 6792,
        6791, 7715, 7531}], Line3DBox[{6718, 6717}], 
      Line3DBox[{6721, 7285, 6720, 7284, 6719, 6716, 7704, 7507}], 
      Line3DBox[{6736, 6735}], 
      Line3DBox[{6741, 7707, 6739, 6738, 7301, 6740, 7300, 6921}], 
      Line3DBox[{6746, 7708, 6747, 7513, 7303, 7514, 7306, 7817, 6749, 6748, 
       7305, 6750, 7311, 6753, 7312, 6754, 7315, 6757, 7317, 6629, 7228, 6627,
        7226, 6626, 7231, 6633, 7232, 6623, 7223, 7224, 6622, 6644, 7798, 
       7580, 7480, 7239, 7482, 6645, 7688, 7481}], 
      Line3DBox[{6763, 7710, 6759, 7520, 7323, 6766, 7322, 7820, 6765, 6764, 
       7337, 6776, 7328, 6775, 7329, 6778, 7335, 6779, 7332, 6652, 7242, 6651,
        7244, 6653, 7247, 6657, 7246, 6656, 7252, 7253, 6662, 6914, 7800, 
       7582, 7490, 7254, 7492, 6665, 7692, 7493}], 
      Line3DBox[{6770, 7711, 6769, 6768, 7326, 7822, 6758, 7519, 7325, 7821, 
       6926, 6767, 7324, 7521, 7330, 7525, 7331, 7825, 6777, 7524, 7334, 6780,
        7333, 6650, 7241, 7485, 7243, 7486, 7245, 6649, 7689, 7483, 7240, 
       7484, 7584, 7258, 6664, 6663, 7801, 7583, 7491, 6915, 7802, 7585, 6672,
        6673, 7694, 7495}], Line3DBox[{6773, 6772}], 
      Line3DBox[{6774, 7712, 6762, 6761, 7321, 6760, 7320, 6925}], 
      Line3DBox[{6804, 6803}], 
      Line3DBox[{6805, 7352, 6801, 7351, 6802, 6786, 7714, 7530}], 
      Line3DBox[{6810, 6808, 7356, 7357, 6807, 7358, 6809, 6814, 7833, 7359, 
       7534, 6811}], Line3DBox[{6813, 6812}], 
      Line3DBox[{6818, 6816, 7360, 7361, 6815, 7362, 6817, 6935, 7834, 7597, 
       6819, 7535}], Line3DBox[{6821, 6820}], 
      Line3DBox[{6823, 6822, 7363, 7364, 6828, 7365, 6827, 6824, 7835, 7598, 
       7536, 7537}], Line3DBox[{6826, 6825}], 
      Line3DBox[{6830, 6829, 7367, 7368, 6836, 7369, 6834, 6936, 7836, 7366, 
       6831, 6835}], Line3DBox[{6833, 6832}], Line3DBox[{6842, 6841}], 
      Line3DBox[{6843, 7372, 6839, 7371, 6837, 7370, 6838, 6937, 7837, 7599, 
       6840, 7538}], 
      Line3DBox[{6847, 7539, 7375, 7838, 6850, 6846, 7374, 6845, 7373, 6844, 
       7376, 6938}], Line3DBox[{6849, 6848}], Line3DBox[{6854, 6853}], 
      Line3DBox[{6855, 6851, 7377, 7839, 6939, 6852, 7379, 6857, 7380, 6856, 
       7378, 6940}], Line3DBox[{6861, 6860}], 
      Line3DBox[{6863, 7381, 6862, 7383, 6864, 7382, 6859, 6858, 7840, 7600, 
       7540, 7541}], 
      Line3DBox[{6249, 6941, 6250, 7089, 6471, 7651, 6470, 7088, 6469, 7090, 
       6467, 7650, 6884, 7756, 6885, 7774, 6897, 7454, 7168, 6554, 7167, 7781,
        6901, 7457, 7173, 6368, 7030, 6365, 7028, 6366, 7627, 6367, 7029, 
       7410, 7033, 6370, 7629, 6293, 7611, 6256, 7603, 6945, 6254, 6944, 6255,
        6251, 7601, 6942, 6249}], Line3DBox[CompressedData["
1:eJwl0D0vQ2EYBuBHLP4BrVLVhIHEIhZrJY3EYusmrRFdJLVTHxHSX8EuTcTC
3pGFONHUfoLWR2JyJYY313Pfz9tzTlqo1td3hiKi4uTHI7bGIq4mIra5KDfM
3VzE7GTEqW5Jd8gZ+YjX9ie84Tnv+c0HJtmIL3PTvOz+j/nXs5qecaAbmDt8
1td1qbzJjrzHT7nBntxn1t0PtjIRw3Z5+d07Wkydff2bfcbc1294ZyqPysd2
NXmgr/KVK+yxxCn7F/cKvPCbaSZykZfyPM/kNXdL5rLT1q/yjiN2t3zyXUXu
+uYFJvIcH3P//+8fUwU8Hg==
       "]], 
      Line3DBox[{6305, 6981, 6304, 6982, 7724, 6306, 6311, 6987, 6310, 6988, 
       7725, 6312, 7622, 6338, 7639, 6411, 7063, 6410, 7060, 7424, 7638, 6409,
        7059, 7423, 7061, 7425, 7196, 6586, 6584, 7788, 7575, 7469, 7193, 
       6585, 6564, 7669, 6505, 7658, 6504, 7767, 6503, 7125, 6508, 7122, 6892,
        7770, 6509, 7123, 6305}], Line3DBox[CompressedData["
1:eJwl0M0rA3Acx/GvqaVR5GKzmZSLEn+DOSxHlG3cHCn+DHKS4h/QDh5yUHbi
pHElc3CaksXBVdGS19rh0/v7+T79HibWt5e2eiKiQsVsxHE6oowfuYgSXvGP
ODQW8YCbmYgmDvNfo+byEQ2+n7/DFC7Kreir8xVc5lt639VKfAvL+I0n+IMX
OImHtKH/lD+jlHucY1s+K/61Z1o8KJ7CAbxUH8Fe/siZbfEe/rn7PibVD7AP
E3p26IV2KSP3amfBmVU9eX6c5vmm/FznfTiLTziD1/bWzd7gmpln+Vv+07mr
nTdTTe1erooL/Fuu+7//hJw5DA==
       "]], 
      Line3DBox[{7197, 6587, 7202, 7677, 6594, 6595, 7212, 7679, 6908, 7211, 
       6606, 7789, 6607, 7680, 6609, 7690, 6654, 7487, 7581, 7799, 6655, 7255,
        7489, 7691, 6661, 7250, 6660, 7251, 7488, 7248, 6658, 7249, 6659, 
       7339, 7527, 7338, 6781, 7340, 7526, 6928, 7826, 7336, 7522, 6771, 7824,
        7327, 7523, 6927, 7823, 6919, 7810, 6711, 7702, 6712, 7293, 6918, 
       7701, 6710, 7288, 6726, 7705, 7508, 7287, 6725, 7290, 7509, 7289, 7471,
        7198, 6588, 7199, 7470, 7197}], 
      Line3DBox[{7220, 6620, 7222, 7475, 7221, 6621, 7309, 6752, 7310, 7515, 
       7308, 6751, 7818, 6924, 7307, 6742, 7813, 6743, 7313, 6744, 7814, 6745,
        7709, 6756, 7716, 6932, 6794, 7594, 7830, 6931, 6793, 7596, 7832, 
       6934, 6800, 7355, 7533, 7353, 6806, 7354, 7497, 7268, 6685, 7269, 6686,
        7271, 7498, 7270, 6687, 7696, 6688, 7278, 6916, 7803, 7264, 6681, 
       6702, 7805, 6912, 7795, 6911, 7685, 6634, 7234, 6635, 7794, 7235, 6625,
        6624, 7793, 7225, 7474, 7220}]}}},
   VertexNormals->CompressedData["
1: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
paK9w1q3oZIpzHrw33MVJSoaVtUfupMvAY/TagxsDacxyJ3ZKUSYw+2zbCe7
tVPxX9xSq47ZNN5J0DRYzp/DTNfuUoGwfKwxm7jVLzWBPde1Cd/o87ioq/ft
8PYCXLiTUuUXNoVbk44PuB6k4jZ9g03fWXxldSh7HeHWNJ4a4Lez8JvDn6qu
i/zvCKhW2LQhMisXnS8575RJZKKFq+T5G6w8HToTyu+ynIvT8mF13O5MrN8z
UakWX4lS+yqvxxtP4IOpzlevM+Zxtyqb7ybeOmyxD42tipzA/u1DSX+OzePh
M6nntl+oQo7nXUHpu6fwztQjvXNnqLj75VCil00dUp5zT9CyJ/GBdMWShA8V
b6SU+o2UN6B1UOAG21+5aLFe4LO6MxO7tbVvFTqx8tROrnz1eB7u/VuUFKXM
RGMzidKq5loU2mTD3TdNwL1KjYnCpkwsjin+eD6mAYs67ZTKhGtwUvf+LiHW
7wtexm+Scm7A3YuEjEvJBUjg1Hvi6MjEdvuxXNsKAq4536oiXEvAYjWumK8X
mfjuVszg9qM1yP824qm4cReeCzFJbbdgoIF9FWd0eQ1yfJRXMr7Rh4Exf7r+
OtFxjZTaPq/1iId/377HKJ7Gd8ZF3W8F5zCg33v7b5YXLKyx3R0hMIOxlZEc
K4GzKO+QcPFSTTKujkdtWe0kYVzGLVuVYgameRemKqUko/+ZqI9UeSJu+5Nv
4LHIwPiJmzapOblo9GKFmXW5A5P/cvyNX8PEJB21XFEuUdj0SDDitybLMzLY
O3gtmMj9dGtqxe1kLMt4WC1n2IKiZmlt71j7Y/7l2pLlUVHQamn4FeJIxLI/
+de8GAzUrzpj1HckGW8tJLR9sSAgO4bVLWQzsT/gXGuHbS6GZotc0nEi4NdJ
E5GJJCaaSu5pbY1meb2qmkbSlRbkGfjZrKzJxMX4w5v2Hc7FJmXfQybHcvEr
T352ziATh5ethV9JlaGo7bfXBR65+Gc1c1y6homEtDnephNluJl8n9b6jICl
/5WQ4h8wkVFiV20pn4w2JWVy3PtY19sT/mFyjom/2/742ceJAAdPV6DR7lyc
nLBjhNOZWH1Kfnm2RgSeBu3h/s+UgMvUs2GDBUwMEP7svOwsCns+WE1rNJMw
VaBUyaySgbcjLNP0aaLgU+o1XlfUi38i8sVK5ulY2C80uW5bCroa/jRTxV68
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
37aB5NmiR21ivbBJyexc/jYaLqZM+rzr7gS1g2eSeTb2gYI7c0+PMRUrjhQJ
+QsXg9theGnH2Q6hnp/cvP0YeEhoQiB0MhuqSSXt+UNtcM06O3w1kbjutvr3
70gtggvmO6y/izTAkHK/q6sAE53Tr70yLc4GbunTxQ3ezfCxrOXY9D8GRu+Z
kdv0qhjaPvFbGibWw1Pau4EOYSYODr2SvJhcROQRs+/j+3rI2Gd7UF+Mifrj
d6ycrIqgWlaVRf95GZzwXmr5GsDE/qGyzK7PZWBpcCZQPzYbmrNYMjhjmai5
Zq38ZukimDUx2ZR6JRsExT1lBMuZaPCOtSgwOhvM4jYzjl+oB76xxbdu6kzU
3Wm5et4hG478OPiEdLEM3jodZmyIZ6KWfp7Or5oE2OlzytiafwDePtCpDS2i
YQn/tlkrjQRQ+s9DoaiYBM3tpxZURun4rW4p6DM5BxiCY28EdAdgZwT1zVA0
DetTGWxmpjnwtf7kvh0UEixpnLMQbaSj1aV1INgXD7frqngcG9ugOewJb1IB
A0cEdjihRTxI79655bVhGVyhPXoqlsXE4nOx7yKOZYOwgU3hzUPZ4OGnp/m1
j4kfbq2JYDkYD+2Caf7au7JBfD5be2GSic0zE9uXg+PBpM8U+4ielJE+4bJI
9IL7deZCVmE8+JsYqpqItsLSEN+3wVkGUkr6TZzk44Hv1NuT0WEi+Cucy+Ty
MhM/fXjwg00zG0rE/ZU98kQw+IB391U6E2127c1SFi4C/5NKtdL/RNB56tiI
QRcTb/wWuZ32ugy+cW0MkDstitNr+0oMcpioEdaZKJjyDfhkCtVZ9Cnw83n3
ql3aNL7prql/+CwXOjMSDe/zUMD2nprV/flp3K/03T3IsRSOjeYlS+4dgRLK
NvfD56aQ3XTu1DHlPDiSbFy5MWAENlz4Zmx9eAppBsfi3YJLQGDz9nwB/wH4
d2vPR19HGk7uGq2V5kDoex3y6HraKNRrq9j5i0wi/7F7a9U988Btn8N269vE
cauiCcP7k9g4LXp+xa8E1oQZvpM6NABpPOpxET403LK/+j+R80WgqPsvXciN
ePxofWVOTxoedn8/kj6fA4vRmiRH/kE4lmu3zs+OhrbhAcXhl6th/ustyr4h
UTykcVmmzJeJwaf+cabe+QAaIyp284tDwNB7eK5dkIqytLpLwfKJcF00yPtu
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
KNM4SAivb/s9C+0fH2410csEwVx9vepTQ+jusPZ4VZoGlwxbTCborZDOV87d
+/0zjgyyd5RQF6HD7T9viCyB2yFrKzwHyBgd+hbLbOjwwTu8zvRUBqwL5LeR
/NONnn9yH797RId4k90mlLH38LDRRFRmtg0vr1uv+UyWAcqK9c7nlAg4cfdB
+Rl5IvQ+SL71Z56BS72RZWtGBFwLWQ56b1gNfzJyPXbkMfBbscVGqdzASuuR
H0qvJIkgsN88OIPJQSsHL6WxVQRW8ja+J03pMccfvrBDjMlZc395z0XmBFZu
1+dyFA6RQCfr2LX/70Mvr+jucHxJxJ6kp6O3L7bAXitdv+CjDPzMy+uz+SMR
QxTP66Xd74C8EhEDvnUMlHOhfu2QIeBZv335ZS8kcPN4fNLV3wz0DUpXPDFO
xO3jUV/6xrvArlkduNPoWHFf8FB5XWClQr4GsYXJuVvS1be6MTm34HLeGtky
upIesWNSp7wLbPVHnXYhHZ+8uLej97FXpSvHhnda3iRYJuWl11Hp2GBbWMsX
QMDG0NnRFWiBH9bGdX+NGGjSPuz7tZWAW6Kntf3busCocTgo+xMdb6g8no7O
ImD7K7f1sxIk0HmoVfttiY7bYnw/Vr0jYXC//Fic2ix8eWalLOI7g3z3YtRm
g0lIstvafjp7BjJS4Wct1ywG6hXJd0qWIn9Xu1m7ExGuznKfVq9h4B3vq+/m
9UpRQ63p8bfAajDm9bE/H8pAP9JawXf+UmS36/lh908C21du7b/ay0DnjSMa
lft7UHv/f31OW+cgOGRApvnTFFpQnx5If0jGlKlbKg9rpiGnzDxT3HQWWVi2
2oy/LcUIdqP8jrctQNkv+sxFioEqyRY/EwmleDjsFXVJvBV6agR1kkQY2LQh
wELXgYiS03GfvtpVQ/9b9QZRAgMfosXrr/xlKBq80SqcuxtI1w9xvA6i46ra
ffVoLSJaX/fdEK5BhAPGe82bhxgoQ/zPfdNBIr5IJVzNKpDA+vuF/HeYddX0
Jmbf9MfASptP+kb2H/ugeq/Sgu0iDTmqQ0sPpURXBqxIUpr/foZZK2cJYgMV
S9jkQzxe3amMqn30u71zBIbsAwi/TanIyXU5SawkGbkvOL8L2joMRsP/xF6U
UpEhrJIKE8nYq7jOUDBxBFYOm0qWWVHRgXDv3BeVZFzdHCk9WNYHAiFKoxrT
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
Mx/Ihee3M3d8JX6rM92mdIXklfuM0zsdvS/g8yd29J8j8f8m7sZK4rSnXd13
9xxJBe/MlTuTiCdZpE0K4kkuBa1O5Dtyrwg6K86f/9fQAMsL2g8GSW4f1q6e
899VCD7Lit9PUltAIdXSSIzkc5OMc+6X9bXQzSWQF0ZctDaL4nqD5DPTc/eo
rJgaOOb/quczcdHjcun7gmSPaNm5GHaHVkC3hn1W6b0acPCrd4og++i99rWv
433VcGNkm1sn8VKgzVvuRwEMsH98b+sD/gowNPar7NSogcfn6S3WZE+9Sf0y
3HyjCmqTNrLvJ3v5s0DSey2yl/ceuSdcVF0Of/JXFLeu7MRy5vW542ROZziO
PaI1/vfzVIbpCWRf760275Al+5pzbGvcSZJXxlJn99wj/ol+IFz2i+SV7cWq
PXMORfBdXdqZtakBPRKuztQIMpDv3JPsPwqlIMXOyypK/LPIf6a4lOTShnD7
XbvIfKUpRLqrES8xMgX3niLzJbvDjPXptwqYrxQbCyZOKykTAmsyX43Zp2gq
ByqA6xlz3DGtGny/kuGySHrErWsf7zKTnCznXnX4Ftnjo/Y8gg0kJ3VK9Y6t
IDnp9Snluj7Z+yxD8+wuJCe9vYMTquJqYOODNu1DxHucvwqVJsk8qu5LtBCZ
rgbJgbfq64n35HbbxUmReXz00UHbd0MttD6p+hFD9qpTV9CPLWSuj3EUein5
1cFVqXuvNIhDzu18NjFHcs9MF5aPh1fCV1br5jjilpTJfIM7JG9XnRFmTReq
g903VXVPEud8CljpXUJyb61KbJDUfDpcLmVasZq4awo1178m+WZ1KLAsxTYe
TvzYkfKSeE+nJ8g4j3gvpMpoOHUwF/IOJ0rVEL/N7OyIWUX8tlx0X+rD9S8A
85Hfi4gD1a0+ZOwlDuww9VbdfiwXyijpWUbEk2fU7vDMkDyc3fFoJNurEFwt
YZCNeGnE4r52JMl/5xuPubhJrpo5O/r+fdCCz5N8DvIQ7zlHFJwIdk2FP126
bqPEew2x7yffEO8NvV0qDL9WBblqnO2zqp3Yy/y7YSPZy2tn2pn1OkvhlS/z
rGdtB/5+nq6pLUYDlfNHU/WrSkBi6n5hz3wDBsweFxYnObZnUGyaurMQflq/
DntGPCNoMD2tReaFOfyQCDvJMXaVN1NniX8OUNqr5UiORX1OyrhF5uJdzp2+
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
NnOIrnPKw78Vi/di29qra29PjKHBioecpI85aBDl3Vkr0oyft2VljRLOdBF7
p6YfnYe8VJHbAXq9eNRc310zdQxllS9lHSQ9opYifsCoio5Jz+FYK+kRt/wi
H2TejEf7xpDzL6ASz5zsbV9kzMHUkMMLhQn/6+bsBHFrGmo/3rlyBeH/udP3
au4Qzmds/P7El6z2l1Sz5zn/it6JjQdIL+v4HhqurUhFi8HbPfO9rHLf+UUT
pH/tuS0lcUeGio7vdCbne9n5xkq3p7m++WFnr5st1qNhZr2K4fw9fYXeNi68
sb75bVdYNO9iOrY/Ztn9zhvHtRIvA8qN4rE/JuV8pRHRq/rZ15KkH8UobUhY
TfoUvb/opuPOSvx2ljXjTPrUh90RmoPpvvlL46/k7qc2Yaqvz7tC0gtq7k7E
i5H+8v2gkoYbHwMlLy2NLiX9ZfHl8qy/xOeVzoTMCQp34KXr/vy2pC+8fKIv
rPzoSf45rZf29r/a0cpPp+E26SM2fwyYSqSPiIW+eYtfmvBL0H++caSPnPCf
nOMhvVJqV+Y9catKNNU5tCeI9EqDGdm/n0kvc6c/XF1nS54bRz55E+llO3QX
na0wyya8Vv3tQTAN24Rjs2oCSG861qVqSXqZP7Mn0SW2EoOsFp50Ir1su7bS
0MduKk7JrfqQ0U1Hfu/haFXSQy+sUipMJTn+cPzN1LPAXrxgOG1YSvgtMUb2
XAXJ8UPdnz8fGOnFE/eOsBtzR1Hsuc2KVffrML4zZTvnQh/Gu3qd9pgdwbh/
sQYPcgrRw2WL0iO7ZnR7ujR5nS0baTHHX6XRy1DtWOfPenozqmZ+LFm9io0S
6/l6LfbX4I/XcqnyNi24dk7To4XwZOfbV8ptlFpUGHp4hhu6cIvpoKWoEhOH
F/KvN+drwP76QwNX+PqxD1bRdfuHcevVufblOxn4eaSI+nhXN76l8BYY2Y6h
VbGvzK1wOj4u8g29uKYVz3qGTywVY+HoiYhObsLtIvtfdBwqTMf0kTR5FcLt
8iVKGXlLqlFBQOkyg6wf5Ka+nyS9QNli7x3Lu9Uo/W+51Q+uBrRRWitIJz1C
0Py5c3NgPe5S6LEJHSxE2bMnFnIIhzOyh4ZK3lbhAeE/m4ZcC/G83NvTBaQ3
uSoHpVuQvuPw4wte0mWgpfmJkluk70jbaT3lI73mOuXEqzXPGbit+4SOMuk1
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
RJZ5+VM7OXrhSAJ1bochE/R3BQRHvetCBC+nIYEEIoicc0qfaGFC+I3MAvWo
VvTKY+/nuV9jkBVeZnVihgo5xr4aTs4diL3x5FeBBAqYTHfrXbtAg0rHp4Zd
gQTkmvDD5r3YJIyZierZBZJA53Kp7IAjESmQ4nQI2C/5cvWXUh2JkO701J9x
rBs58S27aGFfBJyGK1/riMBublYTj3V+Yjtn5guscxNTS7ceRjug69nvJ8h9
SJ0n9wYpmQYn721m1GuSgbk23qC0LRMZXLnO4U2kIlvbd7x+FlT0SlWaS9Kl
GMkfaNDkFiChki966ze4MFC1yUyIFdbt71dJLf/9PDD3HNuyuycVbYqVJq8G
RpRZfD1y5dfINApwJ3vatROQw+ggedfPxLJfmtXKFwoZ6Fpt4I6IvyPoTcLl
J3oeUWUNe1f+//nrO9Q4FGWn+zWETiufu9yfjXgMb3J4NE+jNWxJ8Rr9BDSR
slJXiPfFPj/35zo/qeiS5vWINgMqepsLYp+4shHb1rHtpvEMFKFxfW8MFwlt
Km6UOCiZg0KYK4/jpliI8KYycqvKgEbgeanB5JIGZMar2GQkPY0m3bmb7fYS
UfqsckScciOKW3qy5ZoJC3lekk2XWBjSuP830+hEUTXayi02xP1yGBmGbrtA
SGIgxmuhdgPsx63qYcF3yePo9zvSg6NpVHQg8+Qu75/laGFrWsLPV9Oo89P9
87d+ElDxGYN85p5y9KL4xoHtFxnIOPak6OAeEnrPmL5UplWBpPh1VrnyWWiL
u8UpB5cRDaEapUp5ajraseq9W0ioBW34Mvni1W4WElc77jOD/b70gPnox2A9
qnM7lCaE9/6m7a/3v00KKBMMd8iyudOKskO+e9hjrmhT7Q1pH3tWRvcyfhaY
Q0LFhieYi+fw8wtJXrx34TPqGfCwuBBKQjPfqdymFxioNXrL2dG+SpR9TNH1
W3oZ8l076MWD+UEwms9s08oAUmdKeojWMdGXwMsyd1NJGoZ+hvcFSoiIsviq
5RCaRuaMgtpOniGN8fj3px/ndiNmr4bKM8YUeur4PBe5kDSc9x68ctYB5z3b
5lungqZQ2bPstQfw144jBeoDAQQkJuJZL7tnEv0dmt1WG0BCft9fzC6c7EYk
j6CUK6lMdKxg5yf+NiIKreUKTbk3gG7f35jO6cBAa3h0X5zXbUfkuLThV6Q+
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
    "]],
  Axes->True,
  BoxRatios->{1, 1, 1},
  ImageSize->{360., 406.6848831634066},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.155809995788897, 1.150652132403297, 2.3406159301031075`},
  ViewVertical->{0.19267622471751827`, -0.4234612877938957, 
   0.8851872175808574}]], "Output",
 CellChangeTimes->{3.3926537525207243`*^9, 3.492126695330125*^9},
 Magnification->1.5,ImageCache->GraphicsData["CompressedBitmap", "\<\
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
1dvPS1+TegrnbBwmqXmkNPaHtKbdGY7B1iVSDWw8LS7RnMY6WZlA5t/y8h0n
7XurTtj5mnJcmip9h7jCJsni6J74aJ0tPhKhM/aDC+rBFVrADGzPVjc4qya+
2ipctQVdteE21BruZqw/O9nG25GFVlrDChzF5ZtaXElp5ooGm7bVs9nu8FKN
sUscF7ioRlzgAr2FwRdbenyx/dIR235U0n7WFZZJNM3UeCBnVYaA3gl8s9U0
/EV8wjZAG+d4FXQxDREli/GKtZDbmb0s4dmcBA+I6JgZB2pxhqzK9Iva8TCD
+uj7drLvk9zQOkCSpHWAQV+Q0rvYZIQoi5oEgrJWRnw1BmQ9Oyd4yzzw9nYe
uI3PNxelx9E50WrS7HG+7/zsOHtMXVZJfJ5WCa4wOT5PQkGyMEvNPhLZBZIw
xxSrG3Tis7lgR5UwSJVJtx5oeDYhmk5zOaWrFJ/biSt0pLnYkebCapZnIEqf
O0WfXdrQp5kLfQuVJtzkqzTpjbBdgiLkzoGnhQzEeOmQUKREcR85shpFVErJ
XjQsy+9kWVXqalMBzyznJSr1mz+DVwPNuBThQa1Q5aR3UTK584IZYdmBwtx+
XiN1kPQpmWSYQzNnkxqek3mtdonPRp9mBq3J1tc1m2V31jrSXG1mb2Aa7iwx
ETHJ3dXn0sbWTpP2E+005x9WgZopybeKPmtUn9U30af5kRr9tuoTxpdoiD7k
h+jRRarPQtYnnwZ7zQOOPvebvPIHLMq0enWah8EP0DdXJcyvaqXM7fGV+e+O
Mg+gvA7wqhkHaAENXhKF28JO/7YLpiTIDH9eMCWgS274C6b4Ao2K7kHrTUPs
P0NuJwf2kufMoiBOokxgUTo+iQWawVml7dnstp40/aL0qCmrFLdpzCNlBjWi
254NR3Tu2Ww5a35IoGhuI/ppTRx1LQb1ns1ySqpL9p48pdsE9JWRguRJ+4Gg
q0frmIweFzWYZLHeJIuOHM3tFHzfRIQOK+1ZqQyNi/TYRyaJCg+19pCjCp3Q
HfZFiAIcvF9EqA1PobtdKxUuq2ulQsoT+QyNChdUsRKjhLhVhNi5DRdp1nnx
qAzR9Oeg9GQKPon+SJJ85MAntkPD603oekxBV5dWjSYdDemicuQkpeOTo2q0
y2XpumVGmdLBMcK0MT1TY3qGjekh2H3RxnTp2uwiJZK3TICd58VbqsfkQ24/
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
vjocml4bjtyivT4cjnccDifQTr5BNgya3xwGp94aBqffGhbQ64FdtRhV02uI
y2rkdHc1xtfdVeowIaPSGMFWYZjMKHeMI28m9UszS01IziwhI/AzD4lYfwlX
3kmFy2RvpzKhl95MgYtkb6Qgo2ivpyClaK8lI6GCz9mXky2dp15I9sl8NrlV
pA3wMK/ku0RlrVJZ9Sf/fpx9GF533ycDQ2a9D8tj66X4fB6LY/IYMNdmQurY
KCBHCJAwTBfKjyASaey3MzaRXZHGLkhjZ42nyUjke2uUyJVK5HImUnrUsTAc
Gx/DnzvjQIoh2a0xIGxPpYZSZM9j9G7jj6xu+kg6lCc+RdyuIW6fI25fwJbT
XyFuX8M2xG772e/4MzvOEXYIG6WuiFz6BTLCDmFD7DIutTBumZfts4wJNn7y
oGm9rKt+ymt+8aAnx2ap0XtZD34A2X8dBDl/GwS5Dw2GfQ8PhrxHJD4dQPQK
EL2Djw+DQkSvCLErfnIElKCVPjUSyp4eBeXPjIKKZ0dB5XOjEL9RUP38KKh5
YRTUvjgK6l4aBYc7jOZ9NbwyGo68MgqOvDoKGtGOvjYKr6Xp9VF4Lcc6joLj
b4yCE2RvjoKTaM1vjUzQEz/73kg4h+ZnnckjyAkmj9B8to7DJJe769BqyfhV
LSFKsGbUILYZ1Za3KjK7lo+7vs8dmp18lJwKH5K9nwpX3yNLgSvvor1Dgz2X
304J/AyxTEEskxFJ+f6F15MtjnFR1CAZMF3PxyTZNYNEimEEghnYx9xyr9l2
q4+fuzxaiV0ezV0vx/48YsIhHXci4jcB8RuP+I1F/MYgfqM1Ho5A/IZnMYJ2
YsMgxG9gehwEEb/um30EOxkE1zKCdnDrNQyEr2Ag7LAI4MUFAC/Mv8lyhmME
xefbiIgXkTk0rJGL30RvS6QyHANQzwLqEaDmjriNJz+FTc2fwZZTn8PW01/C
9jNfIYxfww4MmjvPCZTp52/QU4CIyd3IYwaGPTSal3aphR9238IsZumTmTlF
tU9V5NaU5yvq08rD2pvI1qd15T48FPY9MhT2PzoM8h8bBgceHw4FTwzn94qQ
ueInR8Ih5K4EuSt9ZjSUPTsayp8dAxXPjYGq58dA9QtjoebFsVD70lio6zAW
Dr88FupfGYvsjUXuxorkXh+L2HUcS8OXb4xF7MYicmMlG/fgzHtjsO/9Phbn
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
1h2ydcew5Z3XpJDxgUYPrG0bCuACWFsB1haA9Sb81RsAa7NZ0TO5Ef5qw4sG
rLUAa40F67WnbZzofBWSFvgqH+CaxgeZ+MlyGbULI/QhO+v84+XS8nsuMytT
ut5zdCEg3IGAcPvXJqv4rxfA5aXFSSr0QRGQFNGR8IhHEm7p0RK2ZQUk4ZYe
FWtrorza2YDUgaR6kFTvj0iDPyqNgTiUkKZgUpqDKWkGSS1hQ1IrSGqF72mz
Zb82pkztWpwAL9JhpZ4JN3T77CXcPdG+B+6jyKNv/737atsyxuCq8zKEHHR4
9QUZRlg8svaCjK67IGPrv5TxDV/KxEbo9YsyCU1tuijTmy8BmUsy++Yl8W2B
tn4l/re+ksDbX0nwnctA5jKQgbZflsiOy7bHPSaxnZeBCvTeZUlQ71+WJPXB
ZUlRH17Gx0l/eNkNXmQ//sp0taoxzYzGmC+RnCq6nlsjpGSYHmbY9cnbQ5T2
7iE2njtqCigidDgBOhw/z2nygQgVj9A+Soxx/rilZ3hreiodetHIXTuyd1cv
F7nLiW53ic1dYnOX2Nz16hx3myk9j9He3UZXFsxtBzbbgM07wOZt+KS3gM1W
YLPFrGGUeuNV+CT4o9dfVp+UWA9s1j1vwrzVzyDMAzYrn3ITZALIqmafRGT3
s+UybiuMdEVdf7pcWu0qPR9aP/QeSNlZ7tFiSPrvFuDhRYPK732D04kCi6jm
P1EOfi3KSwQd/Z+YB8CLU9hkSGAlAFaCSHfDiBUi4CSKHy4GThJQUlpCKWlF
+tVqeWmLzEk7WGmP2qHnDvU0ZKTTCB+sM1aIR5eGZl1xs2GifcBtk13Gtszu
46vPSMzbx5cc/bY+MLTmogyvvSgj6y7KKHLL0Q2XZAwaR645gfB3ctNXMrUZ
euOyTL95WWa2XJbZrZfF99YVQHMF0EDvXJXgtqsS2n5VwjuuAhro3WsS3XlN
/0fsvWsSf/+a7XiJD67hTSU/uCbJD68Cmqumagdn8/FVMPPJFTya23XFhmHj
6kvGycsYuvetUfU0I4BGpQ6Ffuj2iMfQMKU9nJnTHc8FNQWVoVJtiQOYavZT
vK/Zv8SSpF2jxWcDHmmZ9bKou3ZY7a5O+b7bqcTwyffgc+61O+Hue8Tnnlej
uNdC8SXuMba7xwHxe57Xyb0LfLYDn23A5x3g8/YaSb9l6oPpLSut5wE+m4DP
RuCzweCTWAt81pi6YGzlk/A8zussFf8zCOeeQDhna4KDf7lcev5subT/UX5W
iuPHGoX/cQE0Xlicml9fgJpvaTv/vlK2ZRLNIqiKeF7GElOk9y2z7q8VWLQh
7GsPm3XWOiI5kDBnC0qdzDe6mG90qRvotqEV/uJRtI8VbBjvtpNfZraTfxQR
3bJXN7kuVjKMoxte/5WMrL8MDC7L2MbLMv46tOmKTGy+IpPICqcQ105DM1ug
rVdl9q1r4nv7mvjfuSaBbdcluP06ItAd1+Euwu/ekMhOo+h7NyT2/g2T235w
Q+If3pDEhze8heVTH1+XtNMn1yVD7aKuSXbXtWLJ7iY0ud3XLBYTisWEssE4
i4BUjxGGUQZXSsmdUWjE9d07pOTOMPut526ag5Q6iGAZgVAOcNjiLyECRQXb
teGozIOBfbiLTad2/hKv1xOG+7ZOcL+V4t0cyXq04/9Tye3cKNl30fF3oONv
M6W5zNvwHW+9Zjr+m+j4b9iO//pL8B3o+OvN9Uvs+PFVT5mO/6rZFyD0/HLt
+Lw9gTxm+EfLpe8HCLP+BGHW75sy3P+8QFd+3vTy3/2GXh5Dj45pGBXLPHxf
sb1Pe31WVaSd3tFg7yvW1sxVaPIH8HWH8L2HpSUQkdZgFIpLWygh7aGkKRlz
lVt09J4C8d7HudlnsW5mXaI7F/IFe3VH0J4kcOvRB7rtRtXd7qjM7K5Lx2CC
p5GNV2X09asytumqjG++ho5+DR0devO6TG25LtNbr8sMkrpZJHe+d6BtN8SP
kDQABXd8LaF3oZ03JQxF3rsp0fehD25KDIp/eLPIFcSTH90sCD5Sn9zEfelP
vpb0LhXT891fw/x/eqNYcntueGnDJMVeVT3B3j2usdE4NEZpfj1GU6/NqEuZ
7446gYa7I+7u5pATbX2w2Hb5lsBSdvkC08/ejkdbfTivddbuJCD32eXvs8vf
Z5e/r9fUer1da2Ta3++zKnaf/f1+E/eHvd/opU+599Djd27Q29ntMPXbkGS8
Y3v81pXo9abHpzajx296EebebKqTWIcEY83Ttsc/4SUMweft/GGESiPI2vv/
AmHS90xP/18W6M7PmZ7+O4tFQTpJbtli/ftxiWXdQiS2Q6t43IzO3OIP4ssM
SSs6dBs6c1swho4cl45wAkpJJxKRroix7d3RHGRm8vXEeDl3D017j5r23vw+
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
zopbxtFsSXbemSTrcNc8lpc+zLLm5wZkDoEKh2Wtg+bgUX7ekp32/rjtFbGY
yXNiiMPjieC3bfdLAv0kguykBtlJetVFltVb5hbXQ49JFIivU8ZbJUrgkkIq
3VqtnLKle5jYqpcrFJ8NSOisnwJ15/xF35HIOYQI532gDrrgk9iXPolTF32g
zi/JS9BXfklRl/2gzi+ZK9BVP6iDrvkld83vguobfs+Dct3dcm9d9gpdn6Fy
HnstdHytWUWMPYGDnW20wW0uHZH2FKVkqUt1fPXaD06i6EN7iWxfzu0N2pf1
ZJnuy5Y6wPozliytiPSnl1jAnCv1OuiAYjdAfzrAYZyB+EOIqWPNc6Zno1sN
5mU/6SBhGyRsg8alOn8y6HNyX1QXoevSqxC7ukieetYC/EoVP312ZxuVJ48N
HWqHXhjf0Ujy5hu/9joTKYM6fs/qV9uUOSuzzud/uQBgf2rYW2irqsK5eoqP
EUHUoCeZLPjZ7TtxSa/j0n3+ZPhhJJc8gqR7CZOKFxegbgdjiwyZ35nnUEPB
AQmFBiUMpxqGU40gao7AqUbhVKPRSYnBqcZiZsuxOKLmuCHXuMIETUUC4fwy
tFEoBiMThxKQ+XjJdIp4Wxv06IpluuyShdwuVobXTHoe091Xwta4XNMpH6Z/
CePtJV5pzNbxQueCqvB5KgCqoQsBUA19GQDZ0EV8pEsBSVBfBUA2dDkgqSsB
SVNXAyAbuhaQ7PWA5K4HJXcjaC80mrsZ0NYvc+V+wK1jJOXkvEL32qksmJ5T
Za8HbplzV4G0qv9rxWdoU2kHJJVtGR0XAZHteVlw2vnrtiddnaxXGCrPkee5
MgW+zAKfKwSef5nLMn3uzzxOyIsV51IHtpMHhh4mKT0yzBfPYz6uRwSZzA+S
+UH200Fv6NZAb4Bnw2s6B3XF/kG/N35rEuVHgGdDL9ulE3a7Osi6F18zglbQ
O5kUS2eLCaHpZVVNSrs9u6PBi6SJe3stcSfs/MIfKPFKunnPrXf1zf8XC2D9
J99EvHOlMRKq8Brmi22ZLJni9Ppker7fF+PjxKIlifAC1OuLKdTW4qcSDyNv
gvV/Vjj5wvsbCvQp7+EgeR8C64b3aGQMGgfr5H1K4pb3RBzuDswnEgHLewgf
IQxFoCiU5z1leU8hqE7xCoEUs+QUwwG7Fmgmf4WAzerSuuAaqU15JbKCVdfK
FPwlnhkopF3j8TKTYscy4tYLDp0PS+hCSMJWkS+pIFCHLgYldikI1KGvgkAd
uoxPdCUE1KGrIaAeAubQ9RBQh27YLFARD0FBik69nBnhXHlA5ioCYF1XEq9g
qFjJxZiq/G7CQ+uch1Mb4t+2HKVHnAbTpsNF7fhU7RlKjzLewKlFv4MFtA7P
/yPNpK+nh5dlpL7kEeqhfsolyv0ckOpnLKGufSDtAZy2NmAR7osd/VzTdDBB
6ZE3YDUYp3jeYDxvBnhK5CELwPvCeTOgft87xU8VFXuGwEuqu3toCNT7F1gD
NxcTFqGrncrbAjZ0+p3NahXs9hz0+6oGqN5ZhfY6skhj0F5jfH7bAxuH31Nr
AEsA3YFu6zv6zxfA/o8NvAvl3o8XWoREjFLXz9zE5tnGIjijkabskj0lNquO
UkXzDICFP28AigtjcBiAX8+Pblv4w4A/HOyXCOCPAP4oHH4UBiAG+GOAPx6d
gKbwDvPwJ22ZLAmrlCT8CQ9+YK1VslQqbrlPWln+0+Q/Tf7t+os5+765lpy3
6qLNA9Oev7cX+HElU88mFCxiWmJWCtbtGeKO+1IwH5HQlxEJGyG8v0iPE70Y
luilMLCHvoI1jV8OM1a5go9BXQ1L6lpY0tT1MKiHboS9RahvhgF72OFfHgL1
FdpwWZzKgLKOpoq3bnlduXWO0norfXLbnFeS1fmoNADtnpgBGhMA/Dsynrdi
it1BYz6f+j4dSukz1GtenDP9rV9NSr/7jgk+pPcZf0+qM0uVfOfv004lBn4Z
zFuAwZQlXqt0g+xfBcgbM1A6H3k9thPE8FeGmGIPEfghAj+kw9ND9iJV/IXw
j4b8btmFIc/5d9Pvd3uXzXV1KvIEn5UzZb2rTS94aCXwxvWr7I4kgF46FfhC
18+VierytLfXuG+77b7aY9DeprTrb3dbk7HqQi/9ny5A+B8tDv+8cCARVfiL
2bKJGzvgSm4mITBZujUFWh3jsgd8l2UFkUHISiMEN8KfSuTtQEHV7retqXA2
oEcisAMR2IEoAoEoAv8Y7EAMdiCOQCAOO5CAHUhEzaK0ydgs3uN8O5DC/07h
f6eSVASK0hRI2hqCtE7ZTutAXhrGIJ2m0p49MAuySiatq+Y5i8ABYy4hkcm4
jX/SnGaS8gIAt8CkxgaaNzhDACsfzw9hm895MQZFJXyJdjNyCdYq+hWsQuwy
l2WLX4lI4qpR8ho+wTV8gus4J30j6u26cDMC/o34inPlvBRgriIMQ1DJ8Z65
yiDIpwJUibUAUh1wVoDeJw9/O+te7UppB8jvyFLaO71aSYeaAIM//Zfno/sM
+UvZknm+VP+c623q5/WikgL8c3n86cGzjxH/0kccv07YHGR0YdlXK6DEPwR7
SR55oOqJiHOKypA3Aj6k6POFhjhgNsQR8CGOgA95I+AGfj2FlzEM+YsXMAHO
THUj1+/upHh3gQFgQ2ff1eLKFMDfoK/4a47QoF94vRd58sut9YbQ4O/b7xs5
+tsc/QzdqmEBblmTiOZfLgD5vzP8/zff6PzJv07QS3CunuE/4UrubkRtiWPf
Ku3edMJzL0AQ+Ot9mlQlIoVhgikOuGgino+2C4bVCy/CcNUAayAiMBDRQC+M
Q5/EYCBiMBBxBAtxGIgEDEQCBiIJA5G0BiKFYCEVn4VcsSuVCOLrpZFIw0Ck
8c7SeGfpZMwah7gah4SxEIAe7ymTTrlFA3WFTbe4Jp9gFtecw3dpFtfMZO3q
gc4w8DUK1wXIuguP5ocUKS33pZgzJHViaUE53+RGl4z5Cn8Vl4iKxjp6mcXP
2OWYxK7EJH7VKHENeQ91neekbsSc28zcjMFyQOW0O7lyB8VcRRRiPDxXCTM0
VxVmQ694i6FEdX5TojkvTJhjaDDnsogOHnbktM5l4zr8hXhHRp/N1F9oBVgO
KDAPc/aowDwM5CgalIHsMloGYu8N8QymKT76kGUYYpAw5FmGoaQekW8W3Ic4
d3xI49shO3o+pGHrEIsChcZAAwHrzfAXKvVMgXctxZAPmrU/po1KerqtPdDa
X94idLfrXNc2mgUTFXS1OnK6dIJpV1M+KlDpBNNOc+WELp5eY+2BswlqD4rV
IJTRIKg50LfcUgVVQhVqov7FAuj/obEKC1Xr51uFiFoFwhzNmwYemnKB3WI4
bxBscADcYBJcTKDPDxmLUPawRbAvYFKH4oLio5tip3NQuP2Um0Lq75Ko39iB
mNqBftgAYwcS1g4krR0wNmC6wA6YClcaby6NN5d+yA5kjB0g4pzzk6EhyDBq
gQ0gycYCkH+V+W1gA8rmra0rFv9M1rtQ2C0amtYHNLHQ5dyT3gibG0UIfZUA
5AmvU0WuJCRKXaVpil2lYY5fi0viuorFyBtxt3Ja+mYckEPlRtlywF4Rk1yF
sW+5StyuhBXOVUWJeAQUzd2KQGGV3ELgVk0F+Zc/3O3QQ/BrpsDlzOeUe29l
TSYTndp4HHfmaAL4e3bSzXd6CNuIodiEUjAJxWoElhaaBKOBOTUH1kMM5GgO
NGTgXOYCm5DRo8fUMhDUtOhedEZesj6UcqZBj5J521BibYO1CzZicLZBXxJf
z7An3DHsfTPDQYrfwjBNxTBNxbDusDDs80qI5ky7ejxO7WGpoKfARrBpcy62
m0aixUoX3OjigHtXo4kaaFbrITvg3sEB946aom+hLTAQ7Xdd0ADdtoHfLUgt
hI6acgtUaS6HbuZt2X+8gF34g/8vJkOvT3vEZLi4xpuV56yFjxaDbyfuLfVl
woi83ZgfSZhvsNBoFNs5Ad5sXH6Y34Sh6JKYv1tiCBziyCziMBaJ0AA0hORk
GK83KikYi5Q1FmkYizSMRRrGIv2Qscjg/WSQWWSSlIm7aTAyqVihvcgicFhq
F2/k+qgZFU/Ogv5sOodemuXoYdbbasitRJdluTCjjXedZYYxgatE2ou3Up6t
SEroclLC1JWkRK66rR1i13Arfp3XWydueAM55sk3E7ATjHDKad0qGDVnK2Ar
Kk2EkasCDLkqFk9yt2IwC1ErmIlqilXfak5BUdMgd0LOPNAlt2sgoCFCB3pF
p5f4sMe6zytdOSeWzbMPmYUSYxGK9GqgfnM8Z3rcgL7ygLO1LlJQ08AyAYsJ
g9mFTIOGEGzSy2geSk24kLcLLlxQu8BH1Q8NI/odjlN6pBPfh+20HPyFeAev
yRxmADGsHXXYfiP4C/EOjik4q1A6zyqYMfxhb8g1bxV6bOTgpgi30ShoXNGi
0UQzDYOJHFSaUHQ10AZ21s/7xaWzxgQQtA0dahs05bur24rdsT9fdd42tFZ6
pqHFmAZp/tpYpn+2AP+/b0zDf7XAQ9/S1v7qcVjOuJqHvHUozlsHO5E4kTSy
44+wDsVqHkppHgqMQ7D4EeuQcNFEdCHrwKKjNx8wXTCD19AZg6mIw1TEYSoS
iC0SMBVJmIokTEUKpiIFU5GOmEsc09FJycSmoGnJwFRk4nYKSwaJ0DK01loU
WIoszFYW1iJLa5GltchqcRTmwhmLIl3l1f7gxlhk9b4sV03WxpqNkkKzAfub
taXGEmNCnOEo1ULmL3k2w7Mbl1MSupKCzYCupiRyLSVR6rqxyLEbKYnfcHF1
8iZrfKmbKUmVJylmLxU0LZmKpGQqEzAdUFXCmo8EzMct8pKrhvkw4ohENUtw
c7fxO6nCFH6YO/ntg+YonXXCAKNDs4LOObUikEbE3pBzl2cDuubsEcyJtjYB
6dfLpvq9Z/SzODHg9dABWdScML7g3IRBTsYfzBY/bE6GdPBziIOUQ2lNPJzb
Hi6YiTCsMxGGGWQMcybCsFcZN5ZD44UC+1Gi9sOdorZDTzEWpCCucKf4qKJi
z4Z4kYUxH/xoPXbSQU8bVawmhMajxRgQlRoQ/UobGWZ3NdivtSC+6Ky1RsQa
kI57XoBhjMdtY0DaPAMCVdCGeBZEz2u+IdJ0Dboq0njFfGn/dAGz8W8XtyiP
P2JRVLQRGnXEo/OLGa6YaQxHQi0N7/PSRI0+dGOFuF7qkDcyRY9YmKJ8qaRk
4fgjmcIHMmbFmJe4rwMv3CkJmJcETEsSpiUJ05KCaUlZ05IuMC2ZeaZlRs2L
3p/wSxaRSBa2JQvbkk2GrV1Bxg7jQvaNeaF1KTLmpcyYl5SLRdLWtGSWeFal
eDGr8pi2pd7Sgwo3g5F5JsYumOkup1frAqsSupqGZYGupSVyPQ3LAt1Iw7Kk
LY6Jmyz1JW+mJVmehlWh9UtVcGCmkjlfpjIlmSq8d+qWcQW5W0kalYSalrjk
bsdhTtS03NYrqu7gh1FFKPwYdyMPmRYtdC6laVHLwoZGoUu8SADZuzMopIX5
THe+bCl5q1KkxsR9M2oyxM0BVtOiKim0LoNzlCYpuaXWsAx5wc+QMSxL2ZbZ
EGXYGw2xOwRDzpwNsw5qrYsJTuyZOtg5HC+db1007jBdRkbyKQyaEdqWEZ3x
MGJXscZfCC864nOTiUe8EKVXJzv02FVte/RKdLUtPa3zohMaFpU3yQHRSZkx
LF0PGZbOB0xguDkkbYv5yZC0tBfYlTYXmLRW0AjArBiT8jV0vdCsQJdFGi5B
FzWm+DZNhn7Ljy1gUH7P2JqFZk99qzCxiYdoZ9ROGGvDRndmNWMnBYobX0xT
Y58cm6X0yT5nacyrBh+2NEsK8ihny2ILpjtF/1HBcIyzNu2wNMbaJAPdam1S
wT61NmlYmzSsTQbWRkGPjkOTkoW1ycLaZJH3ZK21ycYXtTaSo8XJweI8hjYm
uVTcKqGLnOZSKbs2t6kOL+XawUwmENDkMlm7MLe3ev1jxp7kvMsI7HKnRboE
qi5rb5K5x7SywjOCMCw0MKFrNDAZCV/PwMhkYGAyRd7idzczEr9pIrtEeQZG
ho8lKzjfo5JUpSvTkq5Kw8hAt7jK/i031ShXnTS6TXtzmyuI3OH6BXdYbJ27
ix/EE36kexFnYrT3zpW6Moiwr9s3TySE9sQT71VDUkY74d72Q+YDRkLDnsGH
bYje5wxJgQ3J6tFjakloEzK6GayxI4XWJO1UsoBJoSHweu5InOKjIxxNGaFJ
GaH3G/GMK83JiM6fGKFRGTFGpUSNijtFDYq+CrfTG/GZfR8eo12BZvJRU6+9
6rcX6WNve96+6PVVrVCLVT58MfkRKyPdDVpMzRsYm/5o6Pig6DfR3jf3ddzN
W5j2AgvTVulFL3pey00TtTxiYr5SE6Pn1H8pUnceOidSe0ak5rSbOCxXd3ge
4vEFDMzvLm575sc5IacSz/xorFPspmzYVUgZ65hsyj4TTFvjo7ZHAxxr5OM6
xBU3eZRXdwm7Eo4WfYttBceVZn89n5dZy5OYbZMErE7S3wF1SQpWJwWrk4bV
ScPqZMJD0LBk51mdCVibSc/qGIvjk1zcD8uSoCvK2eHkHAxPjhPNYHXU4ET/
XqNjHA1MzxJvxXIudZjOefsBuD0BvkXzostM2rmOztrYiCZTEPYEYWRC1HVj
bMI3shK5YdKM6E24cVibYomXZ9xi4MnKLJSBqYGqMjA00K0MDA2MTTUisWob
id1m2JO7zYgndwcf4U7SKgFzA92l8bnLCYxzd+FZ7lFRlTGtsDdlWlgpsWEL
wxcxgQwnJ3neS62PFAxViF7vYI/65fGC1Mj12CVqfuYbHmZFtG7G8DBJesT6
sIKioQ2X9RjOGMPjcpa0PXKttwF8kVek1WPd+VqPdIbHiJ1QiL9Q6XxjpCdY
K4y/UKlniniWzuwYsWE9/kIlniHip4QNKqjH0B7l342zQ71qh3pNnEPL7YxQ
j53UYUIdzwh1GyPkRTpdzgjZbTs67xkj1FFghNrVCLHAXmk3eZVW2J8WhDgt
1gY1Oxt0WW2QntNwETbogrVBZ50NMj81Yp/7R+GoDiMkPoiMe7/IrX0iVZ+Z
p5Z/LPL1hyLXd4pc2S7aeR+1Rb9jzNS/+sYQKUgTpVYlpHFSiWeo1PDE5tko
b5UYWAFjp2aKNUoqcSVhFzfGA2qoNAkLFdgpGsJCQ1X0z9UQFsxbKTBXdr73
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
N75UpYb0I6Ku9FPMiYyeTHrg3TFx36PmvuV+ZMzv39qJ/6u9tHb0YUl69CGH
f0xOTrq/+Zu/Sabs59TFNqudeHpEN8+G9ST2q0V0ci3nH9T2G8qK9q+cFRpb
W4Ke7hd7wammprqPw0z32pTn0lPd+7VeQl5aORlac1hEPy9R/G3aezx+Upxd
HD6Cx8vL3t+f7TKfV3/Xg5YFd9/Up+Zd/eUBunvOPpuePqwN+nbo0g6mzztH
0lUMdXVKEt1czn/veOLq/Cp080kaSjn4Ggc9qCKE09qqm8XwclRz4OuzNOQt
LNsclUjkmFrGr/AiXu8q1Ne1hc/C2VPRyCm24qfg7PT9yiV1e6tBVrGrmj5/
MRQKX4cH5ma2Wz6wGm5fFdYshCObxfDkOHFlBhunLoQGrmIpfF249GF1aXdw
Tnf/2yJe/W316v9izfDdjgasqqpyuVyOBZUHHnjAfeMb33BXr1616LvImAw7
Q04ev4tVit09Bc0tWCgNLAQedN0w3+4DgkOovZQzcj2c6l0+gnjGTyjvFztK
zSivbf2JcW3wYwBgSRbaeL210Np4DWXM65/gzGTi+3K4pzqsue+k+UH0z3Wb
9/eovcAWfiPnx3/R3H9TPxGI4P++9doymHZy3bdtOL1vBwdtsdUfVdsFYzO/
G+nmHjbzewGE+P8+pszGQ16f84Ep5SEGCYhywMEMLUMYYjKgAY7/s5gMyHZ+
TWJagUb/BAPyE4bASYbiJ5F6nlx0JYZEpTW2lWz9K+Gip7GO0+nQbyaP+KwE
W/q4QeMfyUEQBZ3iX5wsvMcks15jEGvIqWDi+YfU891+sX36nf6vIt75HQXg
rfzv3l9qVB9qKe3t7aG62NPTQ3gUpbUfxZF95mh+FnY8tlUVbCb2XRg2t7s3
1B/3poAACPsJAnAo5YyUB80QCPl1FvTarF0HxWZlz+iaC3FYc+E4/akC/nSC
/pRadSGjC6Nk/aIoCbA6BTSVospY+XmbAy/uCVGKJ9udH4H+dKch02VqYbxs
UF4iAmMBUh9NDr+Jcd9LA6oYaUS2yFfcGr4mX9g+EpRjx2iABZdzLCjH7nFV
jj2qHF7/GCPtmzRkYpAiDxEgHZymQXyhGOXMWA8nRRp3GKGRYnNE3OyoGoQE
/WVCTamXD3HICnFOQQWhMyKkkyFC4iOBpdSdWkoTo38qz8rg/3ay8ojPyoiD
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
6/7779ff5OTprjMzTJH9lNcxZxO5+uTm4nY01wfTMMuXL+dv1vRO0zNcprUo
I22uXtbUaU9atRy3s3O9Ou3G8AnvoFyYfiBTkdwdvfHOFWkHxl+6dGnTe6k/
fNIrl4Om/HWmcrlbwrvaV06sqdkVFi9e3Fi2bFlhc+3oQXOFjBt8zuvYImzO
Ae7KVDn3xMEMVTaZYOC4Gg0XO+61qNrtt9/OwbrdnPGvzih4rp9z79nGlWlD
ck8h7e7cELx3xx134MpCG1Lzqwr1KrtMSB3qt7wdCzPfm+v8XJ2v1qq0ZnSQ
c5+8+KLW6Y033micOHGiceONN6INXfo9qD5m7tpk6eaAuYk7PlCyqF1wyi29
ubrlOFRzv7yw5VUTExN0+FDFIq0juj2T9vI06pu5+aa7vJurlu9utDGNz2Tq
fU3mOO3e39CP3nzzTf/Iblwm5sJ/wa69Gp1mYv7KK54bnXJPHLd2blJJe+I+
Z7+dZhz+ziuS6622T5y1HLe/c0U6XZ5/RN+bwz6dn/K6twS3XFN+NtOUXKp3
QE4kvdPGr2a+8r1N2325ezPSCpqQDGk9cw/GWl6etjHnvE9LGy3xS53SrjNz
16C3aae9VXvufcH1ywX7XOC8NdPAnNjPSAPtye3Ue+1aIb1kvE3fm89drC95
I3JXIXbRmlY4F6py72kjBvSj+excdadXLtdLuaXGlnPkhpxvNFdoPpsJ/blX
qMVlc2rnVnzZTeW0fuH1PzZX7XImwr/iVcyJkhPZFv1O60de1zzbXLXLnAL+
MT1oepjsfAH3S96y3GVp+tioqZILPC1dPc9p16WqwGyDJP7ljv2styk3kFo0
y1nzP6XtmP9cpkzTXDunoDjDsZ/39rRamvAOp7fxWWnHJq3jXCcPbczoFPuq
WR73m96AdBLPDEo7fUg/6jRv9yP6XqfYV83yOK43YPd9SypyRg/qFMuqWR7H
pny4+dydgtFsc8bcuWcXTTofZzetZvuA3v82V6NTEKhmedzN+pWX8XTZ/6Q1
m9mta7M45mY95i160Om/pXZT2s6cs3bN8JnNOc4nUbFFP51Gic1SxXP6Ueqi
CzPv2SD9Vj8j8vPaDbl5wLkMENocfq7LMy7/mYaP63vp3J9UatZzf0NJvewp
qstJWyxUdpLXFvvkrtE6mdVgps6Xmc/c9BbJbCY03Qyr1Axd4VzzO40euebP
M/2xpzguw4ASY65SY56xiZ3Gr+lNnH9m9P4Z6tHJ0q6b4W87eUnahiX6l3PN
imwd6ffSnGZqYyevSttoM5udkqkl3wuDmakRnXwjbcTHZzhPJ8HFUOc1VzM0
yyp00sPsZbZTKZtn+b2dutC07zTDkX7fx+bfXYeS09j6x9k2eSL522WzrHb6
N/x349tvvP3G22/8f36j+L7/Ay08smk=\
\>"]]
}, Open  ]],

Cell[TextData[{
 "The above plotting functions evaluate an expression continuously over the \
specified domain. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " also provides a set of discrete plotting functions that take in a array of \
values rather than a continuous function as their argument. ",
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " tutorial ",
 ButtonBox["Data Visualization",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/DataVisualization"],
 " summarizes these functions. A good rule of thumb is that if ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has the function ",
 Cell[BoxData["Foo"]],
 " that can visualize a continuous function, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " also contains a function ",
 Cell[BoxData["ListFoo"]],
 " that visualizes lists of data in a similar way.",
 " Let's get back to our function with one variable,"
}], "Text",
 CellChangeTimes->{{3.492097503734375*^9, 3.492097632171875*^9}, {
   3.4920976884375*^9, 3.492097847484375*^9}, {3.492126710002*^9, 
   3.49212689540825*^9}, {3.49212716209575*^9, 3.492127173236375*^9}, 
   3.49212756009575*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", ".001"}]]}]], "Input"],

Cell[TextData[{
 "We can generate a list of values of g at regular intervals, and pass it to ",
 Cell[BoxData[
  ButtonBox["ListPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListPlot"]]],
 " to visualize:"
}], "Text",
 CellChangeTimes->{{3.4921271778145*^9, 3.492127202767625*^9}, 
   3.49212758122075*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"glist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"g", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", ".05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.492127098877*^9, 3.492127131142625*^9}, {
  3.492127314111375*^9, 3.492127322361375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"glist", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.492127095986375*^9, 3.492127115048875*^9}, {
  3.49212732747075*^9, 3.492127330955125*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQEf7Ln0cj5e+P7eHirgUBt/SKZ660con8Ph8J5/
3H27PkP5Ag650sI+cbLfoHwRh9+c6f+Yv/2A8iUcVBZk/ryV8gfKl3HQutwY
KuLN4ADhKziwJk40fPKYCcpXcljgnhyiqMkG5as4eKzQv/ghmgvKV3OYEShw
IeY+P5Sv4WClXPH8w3JhKF/LQTHHZpb9DQkoX8dBlnn13v2GClC+nsPK+F9L
43+pQvkGDo/ff//9t04fyjd0SC+wY3uebAHlGzn8mNv765ybK5Rv7HDwxaJu
vV1hUL6Jw77c29tybxdC+aYQ2qEfyjdzWI8ib+6wCUW/hcN7FPMtHeJR7Ldy
uIPiPmuHJSjut3GQRPGfrYMsiv/tHMxRwsfeYQpK+Dk4uCGHb4ODwzyU8Hd0
YEaOnwZHBw2U+HNyUESO3wYntPh3dshGTh8Nzg6HUNKPi0MNcvpqcHGApT8A
A1awGA==
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.49212711528325*^9, 3.4921271323145*^9}, {
  3.492127293142625*^9, 3.49212733128325*^9}}]
}, Open  ]],

Cell[TextData[{
 "Note that ",
 Cell[BoxData["ListPlot"]],
 " has plotted a set of points of the coordinates ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"i", ",", 
    RowBox[{"glist", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
    "}"}]]],
 ". To make the plot have the correct range ",
 Cell[BoxData[
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "1"}], "]"}]]],
 "on the X axis, modifying the definition of ",
 Cell[BoxData["glist"]],
 " to contain a list of points of the form ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"g", "[", "x", "]"}]}], "}"}]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.3926560730906787`*^9, 3.3926561926037216`*^9}, {
  3.492127247330125*^9, 3.4921272663145*^9}, {3.49212740453325*^9, 
  3.492127486611375*^9}},
 Magnification->1.5],

Cell[BoxData[
 RowBox[{
  RowBox[{"glist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"g", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", ".05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.492127098877*^9, 3.492127147767625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"glist", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.492127095986375*^9, 3.492127115048875*^9}, {
  3.49212732747075*^9, 3.492127330955125*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1klsow3EUx8ei8EDxQKwsFB7IJSQ5vxejeCG8kOU6soU35VKe5Zo0c0ki
5EEpinAyT8plUnIr0xYT2aRchmG/c3zr369/v9/5nMv3qGtaSup9FQpFwt/n
PUkuDEzSP1venNAg9YRdWnNUx+ozHOx79Yi7m56g/o0XSJN6QENkaFGV6hVM
Y17d42eAzqN8fQfiOTB2uunjou6LebeYeNJTFlaoEMSzo1/1UIrd5iuIZ8Pp
/NpSdYK/kLixGyxYSD52VQQK4lnRWBxiqbwOFjJ8/wqzY9rvXPOh/P4c1foc
E5yFC8p3iirl0hamRItUyT/BRa17TuuOE54fr47Q5nz7/O5OFkYZv4e61lz/
u9osfr+L75N97kNNnhiV9+u445jpTdooF8PyfxG3DZdrhss2rm8wRx5iQMzQ
PSzz/RTFwwrHZxAfnMyfoPyg5fw+EmSBK64vneqHWa6/kfqDCO5vnPoHFfd/
SPOBTJ4P8awwwvMjv25Aw/Mlvg2meP4Ubwcl+6Mj/yCe/SOeA9TsL/sP//4T
7wGaeT+I9whm3h/iPUEn7xfvH/zv3y9iRTdO
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.49212750247075*^9}]
}, Open  ]],

Cell[TextData[{
 " In many applications, we would like consecutive points joined by a line \
segment.  The option ",
 Cell[BoxData[
  RowBox[{"Joined", "\[Rule]", "True"}]]],
 " does this."
}], "Text",
 CellChangeTimes->{3.4921274893145*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"glist", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.492127095986375*^9, 3.492127115048875*^9}, {
  3.49212727765825*^9, 3.49212730328325*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1klsow3EUx8ei8EDxQKwsFB7IJSQ5vxejeCG8kOU6soU35VKe5Zo0c0ki
5EEpinAyT8plUnIr0xYT2aRchmG/c3zr369/v9/5nMv3qGtaSup9FQpFwt/n
PUkuDEzSP1venNAg9YRdWnNUx+ozHOx79Yi7m56g/o0XSJN6QENkaFGV6hVM
Y17d42eAzqN8fQfiOTB2uunjou6LebeYeNJTFlaoEMSzo1/1UIrd5iuIZ8Pp
/NpSdYK/kLixGyxYSD52VQQK4lnRWBxiqbwOFjJ8/wqzY9rvXPOh/P4c1foc
E5yFC8p3iirl0hamRItUyT/BRa17TuuOE54fr47Q5nz7/O5OFkYZv4e61lz/
u9osfr+L75N97kNNnhiV9+u445jpTdooF8PyfxG3DZdrhss2rm8wRx5iQMzQ
PSzz/RTFwwrHZxAfnMyfoPyg5fw+EmSBK64vneqHWa6/kfqDCO5vnPoHFfd/
SPOBTJ4P8awwwvMjv25Aw/Mlvg2meP4Ubwcl+6Mj/yCe/SOeA9TsL/sP//4T
7wGaeT+I9whm3h/iPUEn7xfvH/zv3y9iRTdO
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.492127281877*^9, 3.4921273036895*^9}, 
   3.49212733859575*^9, 3.492127514861375*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Displaying geometry", "Subsection",
 CellChangeTimes->{{3.492095604609375*^9, 3.492095621171875*^9}}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["Graphics",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Graphics"]]],
 " function provides essential drawing capabilities of 2D primitives, such as \
points, lines, polygons, etc, which have X,Y coordinates. For example, the \
following draws a filled square using the ",
 Cell[BoxData[
  ButtonBox["Polygon",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Polygon"]]],
 " primitive:"
}], "Text",
 CellChangeTimes->{{3.492099742609375*^9, 3.49209984053125*^9}, {
  3.49210031278125*^9, 3.49210032546875*^9}, {3.4921004221875*^9, 
  3.49210042996875*^9}, {3.49212490428325*^9, 3.492124905252*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Polygon", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", "p", "]"}]}], "Input",
 CellChangeTimes->{{3.49209891484375*^9, 3.492098920671875*^9}, {
  3.492099039453125*^9, 3.492099057140625*^9}, {3.492099323203125*^9, 
  3.492099327640625*^9}}],

Cell[BoxData[
 GraphicsBox[PolygonBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}}],
  ImageSize->{187.3333333333329, Automatic}]], "Output",
 CellChangeTimes->{3.4920990578125*^9, 3.492099328328125*^9, 
  3.492124835736375*^9}]
}, Open  ]],

Cell[TextData[{
 "Just like plotting, there are a range of rendering options you can use to \
adjust the look of the pictures. For example, the following draws the same \
square by with a pink fill color and a dashed, thick outline, using ",
 Cell[BoxData[
  ButtonBox["EdgeForm",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/EdgeForm"]]],
 " and ",
 Cell[BoxData[
  ButtonBox["FaceForm",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FaceForm"]]],
 " options (note that options should proceed the primitives in order to take \
effect):"
}], "Text",
 CellChangeTimes->{{3.492099886625*^9, 3.4920999760625*^9}, {
  3.4921003700625*^9, 3.492100400625*^9}, {3.4921029961875*^9, 
  3.492103003578125*^9}, {3.492124920017625*^9, 3.49212492953325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"EdgeForm", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick"}], "}"}], "]"}], ",", 
    RowBox[{"FaceForm", "[", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "0", ",", "1"}], "]"}], "]"}], ",", "p"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.49209891484375*^9, 3.492098920671875*^9}, {
   3.492099039453125*^9, 3.492099057140625*^9}, {3.49209910971875*^9, 
   3.492099135734375*^9}, {3.492099166109375*^9, 3.49209927659375*^9}, 
   3.4920993309375*^9, {3.4920993725*^9, 3.492099373296875*^9}, {
   3.492128248127*^9, 3.492128248627*^9}}],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[{Thickness[Large], Dashing[{Small, Small}]}], FaceForm[RGBColor[
   1, 0, 1]], PolygonBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]},
  ImageSize->{187.3333333333329, Automatic}]], "Output",
 CellChangeTimes->{
  3.4920990578125*^9, 3.49209913665625*^9, {3.492099188609375*^9, 
   3.49209927696875*^9}, 3.4920993318125*^9, 3.492099373625*^9, 
   3.4921282491895*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzt3E1qwkAUB/CnScfYrnRVu8oFXPQE7tpVNz2BQRqMUFqsF/AYgYAH8BKe
wRN0ka0HCCivMy8fbaEaW9DC8B+Y58sLMyTPn3GXh2A2fnoOZtEo8O+nwes4
Gr35dy9TXXIaRI2emT6ZnInKIOPGhOKgJnflw+HNZsPr9dpMUhJdTtOUy6HP
eyjbXm5JOddQDGpKrKDEccylNiXR5TAMq130eQ9l28stKecainEUFF/v8sgy
49vPzVG2tVwLxf0KhbvUveA+9XV5TnN9mmUuaemhbHvZLcod6lQgNA53P5eQ
Qll9aYLBp4//tnJLW86uM86yjHe73RErr2Slw9yrHox0umXldUYUsdLPU6UU
J0lylt4cXqm7JV0z3TNdrF+pin8IaUH+9eexfYpl5XXqbknXTPcmNDlLb2AV
VmEVVmEVVmEVVmH1/7sKq7AKq7AKq7AKq7AKq7AKq7AKq7AKq7AKq7AKq7AK
q7AKq7AKq7AKq7AKq7AKq7AKq7AKq7AKq7AKq7AKq7AKq7AKq7B6fqsDGjR5
QQsnv1nbMs9k5guiZO9P8PurBhyWILtYmR16PvzcivdqC8syk6Z7W7FarXg4
HJqpj3R0zIm2nVkrv3dpxC9e/0OND9tsaZ4=\
\>"]]
}, Open  ]],

Cell["\<\
Multiple primitives can be combined in one Graphics function, which will be \
drawn in the order they are given. The options for each primitive should be \
grouped with the primitive in a separate list. For example,\
\>", "Text",
 CellChangeTimes->{{3.49210001165625*^9, 3.49210003175*^9}, {
  3.49210018903125*^9, 3.492100226265625*^9}, {3.49210301371875*^9, 
  3.49210303025*^9}, {3.49210307153125*^9, 3.492103108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"Line", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.5", ",", "1.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{".5", ",", ".5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.5", ",", ".5"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Green", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", ".5"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", "Thick"}], "}"}], "]"}], ",", 
      RowBox[{"FaceForm", "[", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "1"}], "]"}], "]"}], ",", "p"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Thick", ",", "l"}], "}"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.492099311875*^9, 3.492099576265625*^9}, {
   3.49210004828125*^9, 3.49210017009375*^9}, 3.49212482765825*^9, {
   3.4921248810645*^9, 3.492124892627*^9}, {3.492128207627*^9, 
   3.492128286611375*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 1, 0], DiskBox[{0, 0}, 0.5]}, 
   {EdgeForm[{Thickness[Large], Dashing[{Small, Small}]}], FaceForm[RGBColor[
    1, 0, 1]], PolygonBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    LineBox[{{1.5, 1.5}, {0.5, 0.5}, {1.5, 0.5}}]}},
  ImageSize->{187.3333333333329, Automatic}]], "Output",
 CellChangeTimes->{
  3.4920990578125*^9, 3.49209913665625*^9, {3.492099188609375*^9, 
   3.49209927696875*^9}, 3.4920993318125*^9, 3.492099373625*^9, {
   3.492099429484375*^9, 3.492099456796875*^9}, {3.492099530046875*^9, 
   3.49209957671875*^9}, 3.49210005909375*^9, {3.49210014215625*^9, 
   3.4921001716875*^9}, {3.49212482903325*^9, 3.492124839627*^9}, {
   3.492124889017625*^9, 3.492124892923875*^9}, {3.4921282331895*^9, 
   3.49212828715825*^9}}]
}, Open  ]],

Cell[TextData[{
 "A useful primitive for showing 2D images is ",
 Cell[BoxData[
  ButtonBox["Raster",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Raster"]]],
 ", which takes in a two-dimensional list of values (or RGB colors) and \
returns a rectangular array of gray (or RGB color) cells that can be \
displayed with ",
 Cell[BoxData["Graphics"]],
 ". For example,"
}], "Text",
 CellChangeTimes->{{3.492124467830125*^9, 3.492124497548875*^9}, {
   3.49212452828325*^9, 3.492124685580125*^9}, 3.492124757877*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Graphics", "[", 
  RowBox[{"Raster", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.2", ",", "0.4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6", ",", "0.8", ",", "1"}], "}"}]}], "}"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{"Raster", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.492124704767625*^9, 3.492124704986375*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[{{0, 0.2, 0.4}, {0.6, 0.8, 1}}],
  ImageSize->{227.33333333333258`, Automatic}]], "Output",
 CellChangeTimes->{{3.492124687330125*^9, 3.49212470572075*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0, 1, 1}, {1, 0, 1}, {1, 1, 0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
   1}}}],
  ImageSize->{227.33333333333266`, Automatic}]], "Output",
 CellChangeTimes->{{3.492124687330125*^9, 3.492124705736375*^9}}]
}, Open  ]],

Cell[TextData[{
 "For drawing 3D primitives, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " offers ",
 Cell[BoxData[
  ButtonBox["Graphics3D",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Graphics3D"]]],
 ", which shares a similar syntax as ",
 Cell[BoxData["Graphics"]],
 " but accepting geometry with 3D coordinates. The resulting 3D graphics \
allows rotating, shifting and scaling using mouse dragging. Here is a neat \
example from ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (note that the option Opacity allows transparent rendering):"
}], "Text",
 CellChangeTimes->{{3.492100272578125*^9, 3.492100299890625*^9}, {
  3.49210041125*^9, 3.492100521234375*^9}, {3.49212497328325*^9, 
  3.4921249735645*^9}, {3.492128329580125*^9, 3.49212835472075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"Cylinder", "[", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Sphere", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "2"}], "}"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Thick", ",", "Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "0", ",", "2"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Yellow", ",", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3", ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3", ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"-", "3"}], ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Green", ",", 
      RowBox[{"Opacity", "[", ".3", "]"}], ",", 
      RowBox[{"Cuboid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "2"}], ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.492099598328125*^9, 3.492099614484375*^9}, {
  3.4921002435*^9, 3.49210026609375*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], CylinderBox[{{0, 0, -1}, {0, 0, 1}}]}, 
   {RGBColor[1, 0, 0], SphereBox[{0, 0, 2}]}, 
   {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
    Line3DBox[{{-2, 0, 2}, {2, 0, 2}, {0, 0, 4}, {-2, 0, 2}}]}, 
   {RGBColor[1, 1, 0], 
    Polygon3DBox[{{-3, -3, -2}, {-3, 3, -2}, {3, 3, -2}, {3, -3, -2}}]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], CuboidBox[{-2, -2, -2}, {2, 2, -1}]}},
  AutomaticImageSize->True,
  ImageSize->{364.22785587626794`, 328.3671931047529},
  ViewAngle->0.5303055642758702,
  ViewCenter->{{0.5, 0.5, 0.5}, {0.520343777714151, 0.5101718888570752}},
  ViewPoint->{-0.03663440794553644, -3.2923856358283494`, 0.7802914488482089},
  ViewVertical->{-0.038087672426407274`, -0.3888809693910724, 
   0.9205003643967767}]], "Output",
 CellChangeTimes->{3.492099619125*^9, 3.492100266921875*^9}]
}, Open  ]],

Cell[TextData[{
 "For a full description of available graphics primitives and drawing options \
in 2D and 3D, consult the respective guides on ",
 ButtonBox["Graphics Objects",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/GraphicsObjects"],
 ", ",
 ButtonBox["Graphics Directives ",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/GraphicsDirectives"],
 ", and ",
 ButtonBox["3D Graphics Options",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/3DGraphicsOptions"],
 "."
}], "Text",
 CellChangeTimes->{{3.492100606359375*^9, 3.49210062478125*^9}, {
  3.4921007215*^9, 3.492100786796875*^9}, {3.492103198921875*^9, 
  3.4921032043125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combining graphics", "Subsection",
 CellChangeTimes->{{3.492124997986375*^9, 3.492125001767625*^9}, {
  3.492125110705125*^9, 3.49212511178325*^9}, {3.492125744517625*^9, 
  3.492125744705125*^9}}],

Cell[TextData[{
 "Different graphics objects (plots, or Graphics/Graphics3D primitives) can \
be combined in a same picture using the Show function. For example, you can \
generate a ",
 Cell[BoxData["Plot"]],
 " graph with ",
 Cell[BoxData["Point"]],
 " primitives on the graph:"
}], "Text",
 CellChangeTimes->{{3.49212509315825*^9, 3.492125144392625*^9}, {
  3.492125286877*^9, 3.492125320548875*^9}, {3.49212537809575*^9, 
  3.49212537897075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           SuperscriptBox["x", "2"]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "4", ",", ".5"}], "}"}]}], "]"}]}], 
     "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.492125002798875*^9, 3.492125003486375*^9}, {
  3.492125149252*^9, 3.492125281361375*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}, 
   {RGBColor[1, 0, 0], PointBox[{0., 0.}], PointBox[{0.5, 0.25}], 
    PointBox[{1., 1.}], PointBox[{1.5, 2.25}], PointBox[{2., 4.}], 
    PointBox[{2.5, 6.25}], PointBox[{3., 9.}], PointBox[{3.5, 12.25}], 
    PointBox[{4., 16.}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 4}, {0., 15.999999346938782`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.492125188830125*^9, {3.49212522890825*^9, 3.492125282142625*^9}, 
   3.49212532478325*^9}]
}, Open  ]],

Cell[TextData[{
 "You can also display multiple graphics objects in a grid format using ",
 Cell[BoxData[
  ButtonBox["GraphicsGrid",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/GraphicsGrid"]]],
 ", which takes a two-dimensional array of graphics objects. Here is an \
example where the grid is drawn explicitly due to the ",
 Cell[BoxData["Frame"]],
 " \[Rule] ",
 Cell[BoxData["All"]],
 " option:"
}], "Text",
 CellChangeTimes->{{3.49212539822075*^9, 3.4921254121895*^9}, {
  3.492125622580125*^9, 3.49212573572075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"x", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}], "4"]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}], "3"]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "3"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}], "2"]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "4"], 
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], "}"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.492125444736375*^9, 3.492125470627*^9}, {
  3.49212550072075*^9, 3.49212560259575*^9}, {3.492125668205125*^9, 
  3.492125668752*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
        "], {{{}, 
          {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxF1WWYEFUUBuBdOiQUFDvpDiUkDASkSwTpMkFAQCSULgWlQ1rpklAaQTpF
ugQpaVAUBFvf4x9/vM/5zplnd2fu3Dv7SPO2tdokSUhISORW4v+1sHpTfY8z
ZOEqrdnLetd/UjtxjORcoD5f0cP162oXTpCBS7RkOwtd/1F9i0Nc159Vn+cz
qulvqN04RSYu8xq7WOV6B/UIf8vn1Nqs4A39O+px0tCETYw3b6Pu5zu5iPox
heS71FbsYZ3+bfVbkvESa+lunl5twTYW6NupB/lZrqDOp6p8h/oqX7NS/xe1
5OW8LqdWG7ORcfrjFJbHUlC+M56D3bGe+qRqPdbEO9GnU5uzNdYr3gXl5XlU
kVfwJzX1y2Ld5FRqIzbEc+uPUUgeQwF5LUnkunzJu/r5XKOcfi6V5eX8QQ39
0nhOeSzfUlA/mvxyN+bFe+Y5szlUkpfxO9X1S3hFHsNRCuhHkU/uylx+oKzZ
bCrKS/mNavoveFkezRHy60eSV+7CHK7yrNms2F9yS0ZxmHxmI8gjd2Y2V3jG
bCYV5BaM5BB5zYaTO/YYs7jM02YzKC83ZwQHyWM2jFxyJ2ZyiafMplNObsZw
DpDbbCg5Yw8yg4uUMZvGc3JThrGfXGZDyCF3ZDoXKG02lbJyE4ayj5xmH5E9
1oTGDGEvOcw/JFs8P434iD1kNx9MVvkxHuURHuYhHuQB7uc+7uUe7iZLnK/Y
02QmU5wPbicjGWL9aMiH7CabvzWI9LFWNGAw35DV/APSyR2YxnlKmX1KGXkJ
v1JV/zn15UHsivvXv89t8hoS5RdZTXv9VM5RUv8JpeNeY5+yM/ac/hZV5MXx
fZBTqg1ZH/emf1PdF+c/1kodSFr5lzhXnCYzV+J7wDdx5ly/pnbkaGLCfx/j
89RhFW8Z/ax25ru4fy7SjC3x7HFW1LYc4Kz+e/VJplBK31U9ScY4N+yI9TFv
rx7mplxZXUQ9OYXagHWxZvqd8d7lAaSRV/MPL+hX0k5OqzZlc6xf3AMl5MmU
lBfHOlBJv5C68kB2xH7S9ye13JYpnKG42aR4FnkRN6ioXxDvTh7A9tiL+n6k
ktswmdMUM5tICbkO/dkW+9asLynjnTGJUxQ1m0DxeDb6sTX2uFkfUsitmchJ
njAbTzG5Nn3ZEufBrDfJ5VZM4ASPm42jqFyLPmyOs2PWi2TxO6lJbzbFmTLv
SdL4eWrQi41x1sx7EP/Li1CdnmyIM2jenX8Bzff6yg==
             "]]]}, {}, {}}, {{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1WWcFWUUB+ClQ7oblm6UDukOBZZuWEpy6RYsULELFAxAwRYULJDu7jJI
EexCDAye8/PDs+d/zr37zsx7Z+5NTE5JGpsqISHhmj9RZ/tTgK3yXXSkBqmZ
Y16QbfLddKImaeK95oXYLt9DZ2qRNt5rXpgd8r0kUZtFZjU5Kz/PKNLF/5sV
Yad8H12ow2KzWpyTX2A06WNNs6LskufSlbqxplltzssvMoYMsaZZMXbL8+hG
vVjTrA4X5JcYS8ZY06w4e+T76c5KfVuuyu9SP46hr8tFeQkpZIpjmJVgr/wA
PVilb8dv8ns0iGPq6/GlvJQd8kBuYpx+rdqV/+RPyBzno09kn/wgm+U+pKdn
nJvanmvyKXUCq+W96lByxH4yg1vjvNX6cQ5c0h9XU/iBZfqd6iC+JgtnmMYv
jPf6OrUbl+Nm4lMm8RPrjQ6qI/iOPLHXzIp9iOuM/VFLsl8+qo5hvrxF7UsG
esWeqR34XV7DPnkYOWkY+6c24Cv5ZSbEnum7x33OBn2W2DO5FAfkh+jNav1t
/CG/TyOWxf7EdcmvMJGszDcrzUH5YfrQmGyxnnkZDsmP0JcmZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBImUpBSl4/iOVZbD8qP0oyll4vjm5TgiP0Z/mlE2
3mtenqPy4wygeexb7CVX5OVMolz8v1kFjslPMJAWsS9mjeLekFcwmfKxpllF
jstPMoiWsaZZY76RX2UKFWJNs0qckJ8imVaxplkTvpVfYyoVY02zypyUn2Yw
rWNNs6Zxr8mvM41KsaZZFU7JzzCENrGmWTO+l99gOpVjTbOqnJYXMDTuOf3t
/Cl/QNs4hr55PCvym8ygShzDrFo8C/JChsV9pe/IX/KHtItj6lvwo/wWM6ka
xzS7mc/kZxkex9R34rr8Ee3jmPqW8azJbzOL9foepGajvlqcg3wLn8vPsVXu
R0buiPNRO/O3/DEd4nz0rfhZfoddcjJZuVO/Qe1JGjbpD6kjyRvnHuetVucL
eRHb5P5kiu+DuAY1iX/kteyXh5MrnsW4HrV1fM/IJ9RxrJR3q4PJxmz9xvh+
IG3sF5PZbH5YHUW+uPa4brUGZ+RjavwILpa3qwPIHOfK1LiO2Ae1S3yf8K/+
tDqRdfKB2Le4L8nNeWZyNe6R2C+1DZf4VX9SHR+fM6v0e9Qh8RyQnbNMj/cy
x+ub1N7xHJIuPjemxGfBFq8fUUfHfUt+LsZnkur/3/TqXr8B99P5zw==
            "]]}}}],
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Method->{"AxesInFront" -> True},
       PlotRange->{{0, 1}, {0., 0.0819199963343726}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {192., -118.66252583997979`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
5fZZ0YDm82Q+2dq1fQguyWs538KAi7na/h7nfsiXhRz9acJA7XiHV8aqUbR4
HlH32+SDx3Opl6trRrGExfv62zJ3aLYKv4/3HkPps7jTTV7OYLziX6YjOI53
N7nOeB+zRcaY4EXOF+Po0EqtoBpN8OP8jyXOzhPgu5xS12ZGoPzgDF8TG60v
bUaeGS0oYnnAkj3O91mYTuePYXEKIupOxOE+Mwo+kr1v5U0GiQvvb9XsfxoO
KkxMo3SZGHasPZDdZ5OB70GuGrM/TJCp9kajjWjFEDMlUt6JgaBAnpRX0W1Q
/D0sbUvRflvpXt2pjnZ0pT0j4+zoeS0+E2Ym24k5y+Bzdikk0nwZy6gAJmSy
P6y5S+Oj7x3vtGNLF3KvZrtU0fx9kjyj/16iB5auVT8OeZAgurfa//PqhZXz
h64afprvBnid3r0cwwdFP4GaD/aIeFTVp+E2DotduzdG7LLE0mzjnK0CE9B7
e8Dy64AhjDlPBf0rmYBtWXROsaoGat8o16nasnBhpZBKmNd6ZN17s3/2HwvK
TtK30p7NE/NbA5d33KMgkHnjzMW6R0RChshLmUP+aLW4olrFP0eUbfJPMhpI
gfinpN1sxwxQU65wr/JSO6Lvvj4hSc/rtV+m+I+0dcDBKbvCM4bEJavPNtvX
M5EQWv4NNN7be7gnjS52wcPKO/kjzd/rsMlANXoCN77WzEkHaYMQWDG2oMhC
lkf1lqEKGXTGujbdb2OBqM1s3BG6BIZjbI+7LlA4p2UiU8fziVAykcoTq7sO
rjucG9OMldB1YP63dkAnJLrvjA9m0vryxuFXdz4y4VF7XXw/Xe/BpwIzfvLd
eLtFJVAxiYT5BaMsp1AWRHePT2sKi+DUK+neXbIUuG5X9snk/kc8ifx9pKWN
1p+qm/O014cSNQZij1+nuYI14t145UE/MW3A9tdtuhOeG6YeLKb52/LbYpae
ZReGO42kv9H87cupFXP5FQuNAatYd/x44Wr4+qr9MQqK49wdlnLdhNW13vIn
L6NxJtg3iGtaCvm6f/VqzGj9pyZr5UH7D7nQS661WUw4aemFtdL5L9X4mbJe
iIJbycYjv7bMEF39FVttXlB4enTg5x+CQewUz84eOR6MrE+60VHr+MB35GWJ
sCkTYoXp0g00v62PJ77axdPrmzqWb0p8TfCcZX9YnNEJ/6Pnsupp/2xIbl/r
/5cJC6Gpx4r0+ta91us9dSjY+f6qfsA1TiQpa8RajFOQfz3fK5e1l5C+Jp6z
IHEAud8su8czXxNK2+L2XuzrxKVN64zv0eef8ZY+I36QQte20Ejhx58Jl/MC
FV0xTKieu/mzmT7PSd41UqtLKagk5mwL08gnTjo6PrzsfB76P4Kqq60XweiQ
OaeSJhPrd2owxeh8HlZlNIpepvAr0v9SllIDEZjS5BX9jQmb5FCHdjouezDp
nNAX2o+wH12yrvAk8fRz8/vX1t6Y/Vsy7nN2kpiMnlzxsIIJtlj/3nx6/z2P
7MwSGmh/dXlFl5RjPNHqoebI6cLErRes3r10PO5Y7+9bdyhYrbOakTjynODJ
K3l7WLALoqcljPbTeOZib82O+01h7k7+f3qPhYjBtdIhAbJmSPA0Wr3dupAI
OmP3dTCUiWqvJz9e/U/vZ5oknymi4Fr58MgqrRIiNVEk+WYXHdf7fnvN//4f
mqxl+XZTYHpeCksgA4g0jsN5MlkncG1kw/ZxxneCN3Kr3vMiJp4f0lz1hl4f
bxz9erqGQr+29PDSmmTiP9ezl5fbMmF4QMpXkI6b3uISm5qi8G5X4o4CUoMY
DW+tcU5yhsxb9qhdGi3ErqD62KZkJhYLH5Nm/o+PXh/jejhEgU/3tELqaSei
OebeaG4NE672Cv0RdJxNXI65pYnCk/yzigEHrhBPvIbV/5xkQt+j2yOYjj/3
yFJV+0fhsm3swD/NWr3/ex74f88//h83YLSJ
        "], {{{}, 
          {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxF1WWYlVUUBtAhVLpBsAGLElAkRERFkJQ2ARUJlTRolC6llEYEJERBAUUE
xe7u7u7uxvX6xx/r2e8+M/fOPd/Z5071vsO6DS1cUFBQiAcK/V+PVO9Xe7CV
3/R3qq1Yxc36u9VO3Min+u15HXO5RH+v2oWb+F6/Uz2WpazQt1XX8Yq8Ta3O
ZbTXd1M385PcUr2G6+UO6gbek+uoM+grf0UTeQFXym3UNTwsl1MH01D+lRPl
lflc8ic0lOdwsfwdzeUl+Zvyyxwkj6edvJ53qa2fzrnylzSWr+YK+SHKyoNo
IG/iYxroZ3ORvJyXOFA/jrbyOt6hln4a58izeJAy+gupLw9nGS9ygLWxnCyv
5W0O10/lbHlmzpPS+gs4Qh7GUl5gf2tjaCP3YUbOnVLWzqeePJQlPM9+1kbT
Wu7NdO6jpLWB1JWHsJjn2NfaKE6SezEtc0EJawOoI7fiLKZyD8Wt96d2zooz
mZJ5o5j1ftTKPjmMQzmEg6lJDarn3PJ884yyz3z2fB724QTOYDJ3sZf3PI9q
8vGcziR2sWdmjKryYBbxbN7H2khayqcxMXeEPTIX7C0PYiHPUM3aCI6TT2UC
d1A0Z00VeSMfUT9znDOXF/A0VfWX0kJew1vZv34KPeUvOFq+isvlnRTJHFBZ
7q5u4ZfsX702d1fuqN7Ah/JtmZHMceYl56F2ZhPf6neox7A4855nl9ljLU/p
b82+c/9z1zMbatd8X/Bj9pv9s5zr9O1zr3kz56hOpof8OY3k+flOkFvn99kh
F1b7UEn+Oeclr8ge5A+oJ8/K/Mrf0ExelOciP0mV3HWay6t5I/Ojn0R3eTy3
U0jfm4ryQObzBJVzh/Mc5FW8ntnTT6SbPI7tBQX/fZn2ooI4gHk8TiVrw2km
d2Vsnju7cw+sl1f7M5fHqGhtGE3lLoxhG//kblgvpzahM6NzBvyd+fazsmoZ
SlOKkpSgOMUy95nvzCyNOYVR3MJfuQfeo2jmik6MZCt/Zub9rIjajzk8SgVr
Q2kkr+Q1auon0FEewRb+yB2wlv89G3ifuvqZuYfy1zSVFzJbfoTy8hCOkn+g
hbwscyy3U9fzqlwj80+H7EfdyGc507yWeblH+l35XmI1m7Nn9Xe1p/ovoo/M
nw==
             "]]]}, {}, {}}, {{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1WW0lVUUBVC6G6S7uxvplg67AQOVRmmxRQkVEyVEBUQFkbALu7u7u7t1
ruGP+fba+41x3/2+s894DSbNGD+9YIECBfb6kbq/H7+rt6jb1avVQdzFXP0F
aidu5TP9DepoRsinqg15Vd6kDmedvEbtzQ9yJ6bJFXlEXsElcne+liezTG7N
+/IWCnGA/g/1Zk5mJEvNGvGavJ7O5GEq8ai8kikU5kCzP9UdnMIoulCEg/zu
rzwz8xhNV4pSjOKUoCSlKE0ZylKO8hzsM/5WdzKfMXSjAof43T/qLhYwlu7M
MK/MY/IqjqEih5r9q+5mIePowUzzKjyec+BYKnFYDo49yiLGc5q+Ma/LG+jJ
LP0+PCFfyHFU5vCcfc5UXswETtc34Y3sAL2Yra/Kk/JFXCr34Bv5eM6T2/CB
fD1r5X78LFfhCLkQt8kb1cEsyXdRO/O5PJEz5Ka8KW9W92OjfKXahzv4Ub9N
Hcf97Kufo1ZjJ0/pr1WHcjer9ZepPfP3+VZ/ozqGe5mqP19ty24+zDOoI9kq
r1P780t2UJ2QdykfqRbm9ux/3ovchS9ylzhTbsZb8jX0Zq6+Ok/LF3MCy/Xt
+Ch3iqocpS+S582u5w7QJ/tvVoNncnc4kWocbVaUO3P+2Xn6Zt/NavJszoyT
qM4ks2K52znv3AP6UYPJ5sXz7nIe2W/6U5Na1KYOdalHfRrQkEY0pglNaUZz
WjDFZ5bgnryb3A0G0DL7b14y5yGflXvAQFpl181LcZ98dnaeQcwzq8VzOV+m
0Tq7bVY6uyGfkx1nMPPNavO8fDnTaZP9NSvDXvnc7CpDWGBWhxfkK5hBW6aa
leUBeVn2IN9Z35y3s3sMZaG+Li/Ka5hJu5y5WTkezL3JWee59C14R76OYSzS
1+Ol7D+zWKFvz8fZYdpnB/TleSh7zGq5K19mL/IO5Ja8K29iOIv19XlZvirv
Q+7Fd/JsVsod+ES+ifXyAH6VO2SP5Ao8nN1Wh7A8O61246vsWN6n3Ir35C3q
CDbnb6p9+Unero7PXZeXqA3YxSt5F+ow1uYMctdz3/g+30sdm71gjn6V2pE9
fKrfqo7KvrFNv0EdmDvCb/od6sSC////66j/D8KYy9k=
            "]]}}}],
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Method->{"AxesInFront" -> True},
       PlotRange->{{0, 1}, {0., 0.034559999172911346`}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {576., -118.66252583997979`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {InsetBox[
      GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
+x70f99H/x8SaD5S
        "], {{{}, 
          {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxF1VW4VVUUBtBzaSwMQrpEJUS6pUFK4mKi1FVauYDS3S0tLSkIKN0liFIq
gljYCnaBgYKgjskLD+Ob/5wP+6y19trfKZiSmtw9TSKRSOJk0tVaRn1Hbcs+
/tUfVZvwMuv1x9SH2M5P+tfVKsznGf1j6h7Oy3XVF3hebqFu5CP5TnU8jeSL
NJBX8aJ8hjLyDFLkc9SQFzNJPkx2uS+l5XX8SGX9PJ6WF3KKO/TjaCiv5DSl
9dNpL0/kENn0fSgl92IBH3K72VgayO2YwEGymvXmbrkn8/mAImZjuFduy/g4
H26Js6GkfBclKE4xisZ5xFrj9+IZ3EZ92jCO17g59kZhuR6tGcsBbjLvRSG5
B/N4P55jNpq68V4Yw6vcaNaTgnIqc3mPwmajqCM/ymj2k8WsBwXktfxAJf1c
ustzeJdC+pHUllfwFaX002gln6W6vCh+R97HDXIq+eXLNJZfivsmP6hu43u5
ojqHp2Jt6m7+lOuoy5ktN1c3cDL2GftjBLX0J9Q2vMIF/ZF4T3Hn4o7q31Jb
spkv48zj/TKVR/THo7KTX+PeqPfE3Y4965uq6+L58vVxLuSTL9FIXhP7kh9Q
t/KdXCHWzZPyH9SWl/FcfIcUkIdTU17OF5TUT+FheQR7uS7OhbzyGr6lfDyH
bvKs2D/59cOoIS/j87iP+mfjm5aHs4drY03kkbsyM/ZPPrOhVI93wzB2c038
DrnlLszgbfKaDYlzin0zlF1kNutKLrka9zOEnWQy70JO+VZykJ1sZI1vKb6F
uPNxj+Nuxh2KM49ziLXHeqhKSwazg4ye2ZnMchWSGcR2Mph3IpNcmRYMZBvp
zTuSUe7MdI6Rx2wwleLeMYCtpDPrQAa5E9PibpHbbBAV5Wb0ZwtpzZ4gvdyR
qbxJLrOBVJCX8hkl9JNpKvdjM2n0j5NO7sAU3iCn2QDKy0v4lOL6Sdwn92UT
SfoU0sqr+YZy+lmxLvl3aslL457IR+O9yP0pJ/9NfXkli+VPKCZPpIn8S7xj
eSF95I2JxJU/nPbEf9A/NJRXsyrugrqFr+Wy6szYn9xK3cVvck11SZxFnKW6
niNxV9R+lJVbq3v5Sz6s1mMFi+J81WQ28bH+gFqUCTSOuxvfFzv4WX9QrcoC
esf5xhmylg36/ep/ajv1f5o02jw=
             "]]]}, {}, {}}, {{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1WWUUFUUBtChu7sZuru7O4eUZjBoDMJAQUFBQlIBpZQSBaQ7RSkVlVIw
sLvBLvZZ/NhzvnMW791737ozJCaPSxqbIiEh4ZwfUYf48b96TN2mblE78xoT
9MvVhpzge/0+tS9v0lE/Sy3Pcd7T71CTeJ1V+vVqa07xu/6wOpCa8r1qPk7L
W9WuzJWfVZvxi3xA7ccweXE8x+fyLrUnG+UX1Pb8LadkaByM7cpEVsiN+EHu
xGy5Au/Lq9kgt+EPuRb3yfk5Iz/Bc3Jzrsm38qRciy9ibVKRHN+THfIkOjNH
X5EP4kzU5n59gfi+8jxuIzXDzFKyM74LXZirr8SHsQfq8IC+YHxfeT63kyb2
ZZaKXbF/ulKXyWaFeENewB2kjXXNUrM79kQ36vGgWWHOygsZTrpYxywNe2IP
dKc+6eOd5mnZG+uRRAMyxPPm6dgX76YHDclIJjKThaxkIzs5yEkucpOHvOQj
PwUY4Z3p2S8/RE8aUZCR5hk4IE+hF43j35kVibsrL4p3UIhRZhk5KE+lN03i
WbOivBV3L95LYUabZeKQ/DB94p7oK3NVXkPTeJe+GG/HnYl1eEpfmy/lFynC
GH1mDsuP0Dfuhr4KH8lraRZr6YtzLt4T68gtuB57Yolch6/k3WovNsU6agf+
kYsSfwCycER+Se3CNHml2piT/Kjfr94S548a902tyit8rN+p9oi7xTr982rb
+H3mT/0RdVCcP35/4mxqIi9zXr9N7caSOKPakl/lg2p/xshL1bp8Le9Re7NZ
3qR25F+5GOPkrByVp7NKbsJPcr+4+3I1PpHX04Jp+hJciHXiu7BMX49v5C0U
5059No7Jj9KflrGOWUkuxnOxBxK5yyx7nFN+jAG0imfNSnFJfjreSwnuNsvB
cXkGA2lNSe4xzxnfXJ7JINpQitKUoSzlKE8FKlKJylRhvOdz8ar8OINpG3sz
K8078jOxb6oywSw3J+RZDKFd7M2sDO/Ky2PfVGOiWZ64N/JshrJQX51P5Q20
j/3ry3JZXhFni++gr8+3cRepziR9Xk7Jc1gtN+VnOZlFcg0+izvHRrkdf8kd
4oxyOa7I29XurJTXqa34TT6kDmB8nF1tEN+H7/R71T6cZat+s9qJM/ynP6oO
TnHz/9Aa+htxetll
            "]]}}}],
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Method->{"AxesInFront" -> True},
       PlotRange->{{0, 1}, {0., 0.03455999915199733}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {192., -355.98757751993935`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
        "], {{{}, 
          {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
           GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxF1Xe8SGUYB/BrhCQtkbSUvbJJWjZlK3ukUnZIItl7U9l7U/ZKFEkZ2ZvI
CNmUKCX1feqP/vh+nt/znPs595z3vO+9GRu3rtYqcUJCQiISJ/6/5o+Z2tvg
Mhloy2HWu5ZCbcgmuukXcY2X9MupLLdgAscpajaVfHIlmjOeYxQxn0JeuSLN
GMdRCptP5sm4N00Zyw8UMp9EHvlF3mIMRyhoPpHcclcW8mv8nNkyKshvMprD
FDCbQC65Cwu4SgWzpZSXmzCK78lvNp6c8gfM5xfKmy2hnLw64b+FrclXvKEd
ySHy6ceRQ/6a5HIDNtJZP4+fKadfTFl5FX/zin4tr8up475s52P9QfLKY8ku
P6i24XvW6ZOp9dnA+/r71Gbs4VP9e+oJrshl1UWUkXuoF0jLDVqyn89d+yvu
xSluxTqrL7OG1+KZ1a6c5U6ux7OzjY9c/1Ntz1EOxHvH92YM2fS91Euk520O
xXrGuqs/cRv1+JZO5veqTdnNJ/rLlJEXUlpeGc9MDf2XNJZTxbOylQ/1+8kj
jyar3JG5XKK02QJKyZ9xk+r6L3hVHsE+cutHkSXWlTlcpJTZfErKjRjOXnKZ
jSSz3IHZXKCk2TxKyA0Zxh5yxjcnk/wEj5ORx3iUR3iYh8gQe4H0PEA60nI/
aWIfxLpxD3fzAg0Yym5yxLfiLvl56jOEXWSPNSO1/Bz1GMxOspmPiO8uP0td
BrGDrObDSSU/Qx0Gsp0s5sO4Q36XWZynROxTisu1GcA2MpsNJaXcnpmci/eI
PcDTci36s5VMZkO4XX6HGZyNdzObSzG5Jv3YEutrNpgUcjumcybe12wOT8W5
pC/fxbcwG0RyuS3T+CnWwGw2ReUVsfeppl8dZ0buw+b4jvqBJJPbMJXTsU5m
sygiL+cPqupXUUPuzabYA/oBcTbktSSV6/JNnCH9FE5RXD+TwvIyblAlzjXV
5V5sjP2k709SeQ1J5Dqsp3XsG/UtdjFZf5Kn5RkUkpfyO5X1K6km3xFnjy30
1G+IPSv3I0ns07g3B+Oc6hOrtfmaVrFP1TfZySR9B/U4P8rF1OkUjD2utmAf
S/Sd1JP8JldSP6OqnDLOL9/RI/aF+kP8XYlzpPYl/lf2VC+SLp6DA3H2zTur
p0lELdbR0rybei7OTvxOmrCDibG31WOckH+JfcQ0CiQk/PvLusvnScPvNGcv
i12+qXaM9+W6/qpakRVU0d9Su3Am9jnXaMRmusfeUdtxJPaF/or6EH34B+T3
AdI=
             "]]]}, {}, {}}, {{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1WW0VVUUBtD3lO7uTqW7O6RB6S6lQbqUkrBbbKVsxaKku7s7pOxAECxE
59Ifk2+tdce4Z5+99+UV7Du87f2JCQkJibchH/ZPHq6wRX9GjuZPHtLvlL25
Tkq+YQq3uNvnX8hWXOOG/qKcyE0W6Y/IIfxOFr6P740He35F8Za6Ole5oP9S
jmOOer/sz2+k5zumMcxnG2VnEvmKSawxPy7jBbPzIzMS/3tUwiMyL1vVZ+UY
pqt3yT6k4h79ctk6nqm+JB9gsfqoHEpWKunfljW4qD4vxzNXfUAOIEOsQ79J
dok1sFZ/Qg4nB7frH5X52KaewW51X1LTVr9Cton9Uy+hMu/oa3JJPY+D6oFk
jO/Wb5Zd4/tZp0/CY+r8bFfPpB0r4wz5Q72UKryrr8Vl9XxGsEXfjSSs1yfl
cXUBdqhn0Z5VsYdxd9TLqMp7+tpxRuoFjCQZT5gVZGfcQTqwOt6Zv+JeUY33
9XX4Ou4Ko0jOk2aF2BVnS0eq84FZ3bincUaMJgVPmRVmd+w5najBh2b1+Db2
lTGk5GmzIuyJvaMzNfnIrH7cxdgrxpKKZ8yKsjf2hi7UYqFZg7j3sReMIzXP
mhVjX+wFXalNGp4zL87+eE+6UYe0PG9+BwfinehOXdLxgvmdHIz104N6pGe2
eQkOxVrpSX0ykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCC96TkkOx3vS
iwZ8bNaQH+JcGU9RXjIrxZF4d3rTkE/MGsXvOM6VCRTjZbPSHI39oA9r9O24
qV5OIz7VN+anOGcmUpxXzMpwLPaMPep7SRO/Pf1a2Z6/1StozGf6u/g57gCH
1IPIFP9H6LfK7iSNu8pkNpiflCPIGetgZpyf+auyLL9wXH9Ojo27z2z9Xnkf
N0gb95Op/BNr9fk62YFfuaW/LB+MNbNSf0wOi9822WLPmR7v4LPPZROuqC/I
CSxUH5aDyRzfpd8me5CMjfpTciS54p7pX5PlOBFnzj51P9LF2vXrZcdYs3oV
TVikbxrvHfeBSWzX9yQ5m/QleF1dnpNxP+jHBn0n4g/XatGUxepmXI37wmRK
8oZZBU7FfaE/zVhi1pxrcT+YQineNKvI6bgfDKA5S81axD7HHWAqpZljVokz
cZYMpAVlmGtembOxRwyiJWWZZ16Fc/GODKYV5ZhvXpUvY/0MoTXlWWBejfOx
VobShmVmLbke58o0duh7kYLN+tNyFLnj/jIr8f+//xV89i+rBgHL
            "]]}}}],
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Method->{"AxesInFront" -> True},
       PlotRange->{{0, 1}, {0., 0.08191999997049376}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {576., -355.98757751993935`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}}, 
   StyleBox[{{}, {LineBox[{{0, 0}, {0, -237.32505167995959`}}], 
      LineBox[{{0, -237.32505167995959`}, {0, -474.65010335991917`}}], 
      LineBox[{{384., 0}, {384., -237.32505167995959`}}], 
      LineBox[{{384., -237.32505167995959`}, {384., -474.65010335991917`}}], 
      LineBox[{{768., 0}, {768., -237.32505167995959`}}], 
      LineBox[{{768., -237.32505167995959`}, {768., -474.65010335991917`}}], 
      LineBox[{{0, 0}, {384., 0}}], LineBox[{{384., 0}, {768., 0}}], 
      LineBox[{{0, -237.32505167995959`}, {384., -237.32505167995959`}}], 
      LineBox[{{384., -237.32505167995959`}, {768., -237.32505167995959`}}], 
      LineBox[{{0, -474.65010335991917`}, {384., -474.65010335991917`}}], 
      LineBox[{{384., -474.65010335991917`}, {768., -474.65010335991917`}}]}},
    Antialiasing->False]},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.49212546197075*^9, 3.49212547140825*^9}, {
   3.492125507798875*^9, 3.492125603142625*^9}, 3.492125669611375*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Subsection",
 CellChangeTimes->{{3.5238773068125*^9, 3.52387730875*^9}}],

Cell[TextData[{
 StyleBox["Exercise 1:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Plot the functions ",
 Cell[BoxData["Sin"]],
 " and ",
 Cell[BoxData["Cos"]],
 " simultaneously over the domain ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"2", "\[Pi]"}]}], "}"}]]],
 ".  Add a label to the X axis signifying that the input parameter is ",
 Cell[BoxData["x"]],
 " and the two output functions are ",
 Cell[BoxData[
  RowBox[{"Sin", "[", "x", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"Cos", "[", "x", "]"}]]],
 ".  Fill the area under each curve.  "
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAmIQLXaz3jKJ5ZWjWKSdFZi+2ewGoVcGQ8Q1ZkBoqTkg
WuTZnBVzgHTC66xVIPrzxpJDIFrXcclxEP3tAstZEL0lZd9lEJ3qdMtrLpDe
E3woAERnNQYmgOikrvhkEH1v0bZsEF20iaUQRC9q/NsNond07usD0QwMOjNW
gOk9iyB04kow3TARSn86BxGfdRHCv1O/Eky/gtI6fWCa4d5kCH/7DAi9Zg6I
ThK4krwJRE9YngWhtTdAaN6tEHr1bgh9AEqbHgDTAv2XIPyKBxD+zicQesHJ
zWDxm6fBtADbBQhtdAlE84V+eXICSKuEajwF0f15RxRPgsLrnbTSSbA7Ga2d
HUE0F5gGADvsvYM=
  "],
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"x", ","}], "}"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.650800903943488*^9, 3.650800949548374*^9}, {
  3.6508011284424477`*^9, 3.650801206188468*^9}, {3.650801240992301*^9, 
  3.650801243944167*^9}, {3.650801292481786*^9, 3.6508012937429647`*^9}, {
  3.6508017683491077`*^9, 3.650801788361938*^9}, {3.650801870439815*^9, 
  3.650801897917514*^9}, {3.650802112569756*^9, 3.6508021767902117`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
/v99/f8DRIZkEQ==
      "], {{{
         Hue[0.67, 0.6, 0.6], 
         Opacity[0.2], 
         EdgeForm[None], 
         GraphicsGroupBox[
          PolygonBox[CompressedData["
1:eJwl08lvTWEYB+BzW+PSVHPbi2rR0jYkpGmqqlqWklIzXRlvkRgW5nlKiKGG
iKGRaiNiZx6XZjaGhSFBgpDwD+B5Y/Hk/b3vvd93vnPOvemm5umZrCRJUnyi
nMrsJKlggDyQQQwmlzzyabDgj3qVzcykijQzfPZXvcYWGpnIYvMePJQPs5Qh
sTb1/wDXla3MopolZj15JB9hGUNjP7MUN+RtzGZS7GfWi8fyUZYzLPYzy+Km
vJ05rNHn8ko+S03sr+/NE/kYu+VSvsor2CAX8E5uoyCurc/mlrwj9peL+SzP
Za2cx2u5Ra3inLxfHcsP+bRay+Q4s9qHVp7GfaiVdNCi36OW0cY3/Sm1hstk
9BvV4Vzgvf6EWs0lLuoPquNp55f+jFoXa+K5qJ24He9HrWBn3Jdawhd5Huvk
fN7I5zkgj+OnXBvPSs7hmXycvXI53+VmNsmFfJDbKYxnpe/MHXkX81mvT/NW
bmUKGX1fnse9sZKiOJdZF+7Ge2MBdXE9s368kE+yihGxv1lX7sUzZSH1jIy1
5t24H2dnEVMZRTEljGYMpZTFet/vzgN5H01Mi/OZ9edlvCtWx/9FX8RHuYND
8gR+x29RrecK/wCk7WTY
           "]]]}, {
         Hue[0.67, 0.6, 0.6], 
         Opacity[0.2], 
         EdgeForm[None], 
         GraphicsGroupBox[
          PolygonBox[CompressedData["
1:eJwt08lvTWEYB+CjKJ2Loi0W1AYJi1ZLSyMiEmPbq+y1NW0IrbEIEhYoGhGR
IoRGoqYa/gFjl0JtsCkJCwmJmVbieZMunvx+73fud849382d3LAltTktSZIh
PB/MeUOTpIoivZDxjGMsBYyhmjXs5wH/qLd5tJzPavZxnwFWuTYq7h2fYy/3
6CflWr7cRDs95FvbQFXspZW7/KXOep7cyCmekWdtPZX6RV4xydxCSn/PDP0Q
e/Ru/lBrzpVfqNBP0Km/ZareGt9D/8gs/Qgn4z3kaZ7ql+MerGOu+ZZcRAef
zNdkKUe5YL4uqzlDr/mKnEgzdeYbciHneGfulNM5yG5zpWznjn5J/pY1Mkcu
jmfwWS+XbVzVF8izvNFL4gzivPQPzNQPx7vrT8jRm5ijn+clE8zbqNX7mKYf
YJd+m1+sNGfH+/CaKfF941z0Nh6TbW6kQu/gBcXmrdToO+P8+MkKa1myieM8
IstaA+XxPHZwkx8st54pGznGQzKtrWV23I/tcb58Z5n1DFkWe2mhi28sdW2k
HEE6wxmGv0US/5fS2E9z/J58ZYk9/wEy6F2a
           "]]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Opacity[0.2], 
         EdgeForm[None], 
         GraphicsGroupBox[
          PolygonBox[CompressedData["
1:eJwV0klsDmEYwPH52hIcqtaQkChFkZBYy81ywLH25SQpWtIeLAccNKlEuFlb
XNHiZjmg1dJSX2lpm4qbndba2MX2ew6//N95vpnMN+9M7oaywtKMJElSpCnI
TJI51BrUcYN6GrjJLZ644BCFjOG32Wsaeer4MMvI5Y/ZGz5bn6aIGQykyfyZ
HmE5Y/lr1s0X6zNsZCY53DZ/rkdZwTj+maX834vW25hPj9lXPcsmZjGIO+Yv
9BgryYsHJ8P1l3Q7C3jrvG9azWZmM9g5jVoRa/o5vqq7WMwIx2k9QLPrX+px
VjHKb606nmzret0b97fu0hSZ1pd1iu6IfdX22CtdqMO1Wafpfp2oj+PZ9J37
fbeuYbLjYh2tbTo93qcO0Sadqvviv+ijmNPf+prujndm3aFLGGndoge56x6v
tJLVTIh36PcGLY89JMvxFd3JIt675oeeo4QChjLAedd1D0tJx/ejVayJZ4v9
4IP5Tz3PFuYyjJb4pvQEa8mPe/PR/JdeYCvzYt+4F9+UnmQdk+jDJ/P79Fif
Yn3sH33pNW+ljQc8pJ0OOvkPUWVphg==
           "]]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Opacity[0.2], 
         EdgeForm[None], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwVzy1PQmEYgOEXCBZxI5gQmDMZ2NTiSNpMIhqNaIZhMxkMJgX/gvoD/FbU
zWAgEQwmvzY/yGpRIeh1wrX7Oc95z9k5w+XqQiUeQoixyL6hkAhhkivzJRc0
OeeMU07o0CPnBfNs88yx3Ttdsq5LNHjiyG5AJ1hmjy/e7H/JmOeo88ihXVLH
WWKXT17tp3UlOhP9gO/9sRsyF9nigQO7GV2lSZ9z/brODSnXY1pmhw9ePLOh
LQbdn9JbcuZa9E7++HbuTkfs1zSv15rUdPTN2ta0zuqobuo9/1TYMjA=
            "]], 
           PolygonBox[CompressedData["
1:eJwV0DkvhEEcwOFBnKtQSJYtJBQicRYiG7uro6HSOzsFq6OhUEgkvgLLB3B0
NBQKiUShcKx1167E1Tji2eLJb+Y/8+ZNpn48PThVGEIoYIJ4UQjdPBh0ac5h
ky5rhx5rTAe0U0+1Qee1Rfe1UmOapdF6UQ+ptu7RE+qsp3WbP778b0mPiDrr
01l2KbGP6AIHVNm36xjrvHLv+36dY4+IO7WaIs0Wv3y616sz7FDsXoW2Mcoa
L9y5V6NJ8g+0yQ8f5uXayggZnrk1j2qCSTb45t28LP82DLPKEzfmb5RaNzPE
Co9cm1+R45IsF5xzxj8N3zf2
            "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         LineBox[CompressedData["
1:eJwV1GWAFVUABeCV7u5eQrokpUPSBLtlVSxCUMouUAEFC0RBCUG67O4EsRPs
Tuyu7/z49px735v7Zu7MbGHRxNET9igoKNjsT3KEPz/KtZzFvnShGMUpQUlK
UZoyjHTMT3IdZ7MfXSmb4332s1zPFPanG2PMl+NxfQ4nUi7HmvtFbmAqB9Cd
IvPleUKfy0mUz3rmfpUbmcaBTDJXj1f0m+mR9Y0r8KR+FSczw7gp7+grqJDf
M/5NbmI6Fxm35kP9ICbr9XlVX0zPnItxRZ7Sr2am3oHP9LGcozdjp75QDuC2
nIfsznf6Ejk06+Qa5O9yqdwsr5G9mKFfLNuwko+MF8lBrGdU7plswApeM75B
9mMtS4xnyy7cztfZH7kPG9k7+yIrsYynja+TfZinz5Id+Vw/hXP15uzSV+ba
9R7s1itlv/Q/5JbsAZcYt+VjfXSeFb0hr+u30Cv7ZVyZZ/T5nEplRpn7U27N
73IwvXMe5qvwbPaJ06iS9c39Je/gPA6hD1VzrM/+lndyPofSl2r5ns/+kXdx
AYfRj+rUoCa1qE0d6uY8vBj1ZH0a0JBGNKZJ1rfmv/JuLuRw+lOY9X32n7wn
zxpHMCDXbb4qz+nXcjpNc2xeUu7Ns8CRDMx1m6vG87lnnEGzrJf3mvuy/xzF
oKxnrjrb9OsZR/OsZ64Y9+uXcjRTjBvxhn4rg7O+cQ225xnjcr0TX+jjs+d6
C97VV9Eiv21cnAf0y7K+3o5P9GOYqjfmTX2B7M9SfY7syjf6Yjkkz2zOWdZk
OS/kOmRf1rDA+ArZmVV8aXyTHMwGJuTeyz3zLvKe8Y1yIOvyfhjPkz1Zzfd5
RuWwHJN9kSV4MPdH9mZmrku251P9WKbpTXhLX8ZcvRvf6kOyV3otdugLuVLf
i6/0iXkG9Za8r6+mZfbKuCQP6bM4junGhbytL2co+cdemxdzbZxJq5yXuVI8
nPvG8QzL75mrw0v6IibROuubK80j2VNOYDhtcqz5Mjyac2cMI2hLO9rTgY50
onOO9/2yPKbPpoiROT9zdXk594rJeV+MW/GBvob5+T/FD3kW5XA2Zc+M/wfX
5r77
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         LineBox[CompressedData["
1:eJwV1HeAj3UcwPHfoYwo4RBSSBmRTUk7I4lQoUKotChaSommFoVKRlFmg4xz
3OHO3jszHCqy9x69Pn+87v19Pr/nd7/n9zzfu1IdujbvkpRIJPr6MZEt2RKJ
LyifPZFoosV1uVbV4ppPZ2sl7aVl9E895b2X9A9e4Trz1XonydYL9WN2Ou+w
jqQDVbja63P1ffKS0/F07UGD+J3e85d+yUOU4HRctPMmWXfjLnaZHdGf6BjX
HNfLJPOt2o+mXMsZs785av0znajGlUw236b9aUZJzpr9wxS2O/6Kh+N7cs7s
X6aSwjRSmc4M0kintuudqbOYTQaZzGEuWX7X1zTnes6b7WYeOxwPoAWluGC2
h2PWo3ia6lzFfPOdOpCWlOai2X8ctx7NM9QgPwvMd+kgHolnyiWzJNc72bo7
d7PX7ISO4VlqxrNjYdxL/YZHuYEE2bx/ir7KPexz3kkdS2dqUcA58/SDWJPL
8Qx9i4YUdbxEP2VRPAP9lsdiH3hthZaN52adoe/F51uv1ySyW0/Vivpa3Fdd
E/dK79XCukhv0U/0Jt0U3033+7xT1uOo4Pi52Du6MvaK1taCOl8r64dxLboh
5uS2TtO345lZr9VGXGO9VD9jcewd/Y5W3BjP0OuZ2jvuITkcp+jr3McB7zmt
43meOhQij/PStScPsCT2jw6mdXy3uB8cND+jv/ACt5LM0thT+j1tKBefzSHz
s/orL3Jb3DeWxZ7SITxOeS7jsPly9loP5Ym4f1zOEfMVrGQVq1nDWtZRJ/6f
6Ho2sJFNbI7/TfF/gH1+zzCejOdKTo7G3zj7rYfTlptjP3HM/Jz+xkvUpQjb
zA/oD7SjUjwzjpuf19/pwu2xD9luflB/pH0887jn8Z1d8zR9g/s54bwLOoGu
1ItnzhXx96/v0Jgs5x3SETwVe5D8zpmjfeL8uGeOU/VN6sd1O16sfTnp/Rd1
Ii9T0mur9I7YD9YL9KPYU9YbtRh5rWfFvdF3tbSu0xr6YJyjy7SKfh57QDdr
Ld3h8/4H9cvOTQ==
          "]]}}}], {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> {
      FormBox["x", TraditionalForm], ""}, AxesOrigin -> {0, 0}, 
    Method -> {"AxesInFront" -> True}, PlotRange -> 
    NCache[{{0, 2 Pi}, {-0.9999998830731719, 0.9999999999999918}}, {{
       0, 6.283185307179586}, {-0.9999998830731719, 0.9999999999999918}}], 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     TagBox[
      FormBox[
       TagBox[
        RowBox[{"sin", "(", "x", ")"}], HoldForm], TraditionalForm], 
      TraditionalForm, Editable -> True], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{"cos", "(", "x", ")"}], HoldForm], TraditionalForm], 
      TraditionalForm, Editable -> True]}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
             ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.650802131636694*^9, 3.650802179026739*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Exercise 2:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Create a simple 3D scene with ",
 Cell[BoxData["Graphics3D"]],
 " using 5 different kinds of primitives."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4919592439952497`*^9, 3.4919592499483747`*^9}, {
  3.4919593481202497`*^9, 3.4919594533077497`*^9}, {3.4919600012608747`*^9, 
  3.4919600328233747`*^9}, {3.4920789169030857`*^9, 3.4920789313412323`*^9}, {
  3.4920791236467223`*^9, 3.492079165132956*^9}, {3.492079208150508*^9, 
  3.492079261949793*^9}, {3.492080214820605*^9, 3.4920802620727215`*^9}, {
  3.4920803865470476`*^9, 3.4920804109856424`*^9}, {3.4920804777073812`*^9, 
  3.492080520146783*^9}, {3.4920807359220743`*^9, 3.4920807579543114`*^9}, {
  3.492103361375*^9, 3.492103445875*^9}, {3.49210349903125*^9, 
  3.492103500546875*^9}, {3.49210364859375*^9, 3.492103649734375*^9}, {
  3.492104730078125*^9, 3.492104772859375*^9}, {3.492124368423875*^9, 
  3.492124394986375*^9}, {3.4921695281667385`*^9, 3.492169529432371*^9}, {
  3.5238773235625*^9, 3.523877324*^9}},
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Yellow", ",", 
      RowBox[{"Cylinder", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "2"}], "}"}]}], "}"}], ",", "2"}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Yellow", ",", 
      RowBox[{"Sphere", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "2"}], "}"}], ",", "2"}], "]"}]}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Yellow", ",", 
      RowBox[{"Sphere", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"-", "2"}]}], "}"}], ",", "2"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Cuboid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", 
          RowBox[{"-", "4"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Pink", ",", 
      RowBox[{"Cone", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", "1"}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Purple", ",", 
      RowBox[{"Tube", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "6"}], ",", "6", ",", "8"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4", ",", "4"}], "}"}]}], "}"}], ",", 
        "1"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.65075517934422*^9, 3.6507551872011337`*^9}, {
   3.650755390947093*^9, 3.650755453177837*^9}, {3.650755503477619*^9, 
   3.650755550071216*^9}, {3.6507556650127068`*^9, 3.6507556990627527`*^9}, {
   3.650755730642776*^9, 3.650755760147723*^9}, {3.6507558728987913`*^9, 
   3.650755874473165*^9}, {3.650755991814312*^9, 3.650756038618227*^9}, {
   3.650756382959716*^9, 3.650756414901945*^9}, {3.650811628424788*^9, 
   3.65081179046596*^9}, {3.6508118739990387`*^9, 3.650812005101495*^9}, {
   3.650812037072233*^9, 3.6508120443565273`*^9}, {3.650812084088085*^9, 
   3.650812104407477*^9}, 3.650812163468574*^9, {3.6508122421851587`*^9, 
   3.650812303690316*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], CylinderBox[{{0, 0, -2}, {0, 0, 2}}, 2]}, 
   {RGBColor[1, 1, 0], SphereBox[{0, 0, 2}, 2]}, 
   {RGBColor[1, 1, 0], SphereBox[{0, 0, -2}, 2]}, 
   {GrayLevel[1], CuboidBox[{-3, -3, -5}, {3, 2, -4}]}, 
   {RGBColor[1, 0.5, 0.5], ConeBox[{{5, 5, 5}, {3, 3, 3}}, 1]}, 
   {RGBColor[0.5, 0, 0.5], TubeBox[{{-6, 6, 8}, {-4, 4, 4}}, 1]}},
  AutomaticImageSize->True,
  ImageSize->{365.83263365859455`, 450.02089512049616`},
  ViewPoint->{0.5675727925127523, -3.0086864648833833`, 1.4407174883462806`},
  ViewVertical->{0.311538708468697, -0.19637960307372862`, 
   0.9538843917956369}]], "Output",
 CellChangeTimes->{{3.650811914424492*^9, 3.650811945409399*^9}, {
   3.650811996705686*^9, 3.650812005743404*^9}, {3.650812045041545*^9, 
   3.6508120515621967`*^9}, 3.6508120886093063`*^9, 3.650812171132712*^9, {
   3.650812249294553*^9, 3.650812304164689*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6507561585764008`*^9, 3.650812314765654*^9}],

Cell[BoxData[""], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dynamic visualizations", "Section",
 CellChangeTimes->{{3.3926478596985035`*^9, 3.392647865056261*^9}, 
   3.3926479757164865`*^9},
 Magnification->1.5],

Cell[TextData[{
 "In the previous section, we have focused on creating static visualizations. \
 While these visualizations provide either 2D or 3D intuition, there remains \
one more dimension at our disposal to aid in understanding the behavior of a \
problem or its solution, ",
 StyleBox["time",
  FontSlant->"Italic"],
 ". ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " supports the creation of interactive visualizations in which users can \
manipulate a graphical object dynamically.  While ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has lots of support for this activity, the key function for this task is ",
 Cell[BoxData["Manipulate"]],
 ". In this section, I will cover the basics of ",
 Cell[BoxData["Manipulate"]],
 ".  However, at some point, I suggest that you also review the tutorial ",
 ButtonBox["Introduction to Manipulate.",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/IntroductionToManipulate"]
}], "Text",
 CellChangeTimes->{{3.3927386117728233`*^9, 3.392738776491319*^9}, {
  3.3927388677033854`*^9, 3.392738940608945*^9}, {3.392843951337388*^9, 
  3.392844005750956*^9}, {3.492128465252*^9, 3.49212846759575*^9}, {
  3.523877361546875*^9, 3.52387736359375*^9}},
 Magnification->1.5],

Cell[CellGroupData[{

Cell["The Manipulate function", "Subsection",
 CellChangeTimes->{{3.523877279078125*^9, 3.52387728321875*^9}}],

Cell[TextData[{
 Cell[BoxData["Manipulate"]],
 " is a function that takes two inputs:  an expression to be manipulated \
dynamically and a variable or a set of variables that can be changed \
dynamically to manipulate the expression.  Here is a simple example, "
}], "Text",
 CellChangeTimes->{{3.3927389514646635`*^9, 3.392739022076903*^9}, {
  3.392844030916147*^9, 3.392844040909397*^9}, {3.39284413676348*^9, 
  3.392844187775443*^9}},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"x", "!"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "20", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.392739029758024*^9, 3.3927390510188074`*^9}, {
  3.3927430717504272`*^9, 3.392743082045333*^9}},
 Magnification->1.5],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 1, 20, 1}}, Typeset`size$$ = {12., {0., 13.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$5852$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$5852$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Factorial[$CellContext`x$$], 
      "Specifications" :> {{$CellContext`x$$, 1, 20, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{371., {71., 80.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.392739038150175*^9, 3.3927390514494314`*^9}, {
  3.3927430727318482`*^9, 3.3927430828965654`*^9}},
 Magnification->1.5]
}, Open  ]],

Cell[TextData[{
 "The power of ",
 Cell[BoxData["Manipulate"]],
 " becomes more apparent when the expression is a ",
 Cell[BoxData["Graphics"]],
 " object.  Here, the variables ",
 Cell[BoxData["r"]],
 ", ",
 Cell[BoxData["g"]],
 ", ",
 Cell[BoxData["b"]],
 " create three sliders that control the color of a rectangle."
}], "Text",
 CellChangeTimes->{{3.3927390654196587`*^9, 3.392739099118451*^9}, {
  3.3927391520450835`*^9, 3.392739176670739*^9}, {3.39274024880308*^9, 
  3.3927402716261253`*^9}, {3.3928442237166777`*^9, 3.392844226644066*^9}},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"{", 
        RowBox[{"r", ",", "g", ",", "b"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"g", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3927391038553095`*^9, 3.392739137534073*^9}, {
  3.3927402089353557`*^9, 3.392740229665371*^9}},
 Magnification->1.5],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 0.278, $CellContext`g$$ = 
    0.524, $CellContext`r$$ = 0.5630000000000001, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`r$$], 0, 1}, {
      Hold[$CellContext`g$$], 0, 1}, {
      Hold[$CellContext`b$$], 0, 1}}, Typeset`size$$ = {333., {161., 171.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`r$3009$$ = 0, $CellContext`g$3010$$ = 
    0, $CellContext`b$3011$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`b$$ = 0, $CellContext`g$$ = 
        0, $CellContext`r$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`r$$, $CellContext`r$3009$$, 0], 
        Hold[$CellContext`g$$, $CellContext`g$3010$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$3011$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         RGBColor[{$CellContext`r$$, $CellContext`g$$, $CellContext`b$$}], 
         Rectangle[{-1, -1}, {1, 1}]}], 
      "Specifications" :> {{$CellContext`r$$, 0, 1}, {$CellContext`g$$, 0, 
         1}, {$CellContext`b$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{399., {268., 277.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.392739138335233*^9, 3.39274023048656*^9},
 Magnification->1.5]
}, Open  ]],

Cell[TextData[{
 "Manipulate can also create a discrete set of buttons, when the variable can \
assume a finite set of choices.  Here, I allow ",
 Cell[BoxData["x"]],
 " to be one of three discrete choices for an RGB color using three buttons."
}], "Text",
 CellChangeTimes->{{3.3927391922933593`*^9, 3.3927392261423693`*^9}, {
   3.3927392796598573`*^9, 3.392739305387108*^9}, {3.3927400151748095`*^9, 
   3.3927400217743654`*^9}, 3.392844255664867*^9},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RGBColor", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.3927391038553095`*^9, 3.392739137534073*^9}, {
  3.3927392339837227`*^9, 3.39273925476381*^9}, {3.392739355379492*^9, 
  3.392739370230995*^9}, {3.392739531975185*^9, 3.3927395322355614`*^9}},
 Magnification->1.5],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = {1, 0, 0}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}}}, 
    Typeset`size$$ = {333., {161., 171.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`x$149$$ = 
    0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = {1, 0, 0}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$149$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         RGBColor[$CellContext`x$$], 
         Rectangle[{-1, -1}, {1, 1}]}], 
      "Specifications" :> {{$CellContext`x$$, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
         1}}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{399., {225., 233.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.3927392555048833`*^9, 3.3927393710922422`*^9, 3.392739533126852*^9, {
   3.3927399882157755`*^9, 3.3927399968482747`*^9}},
 Magnification->1.5]
}, Open  ]],

Cell[TextData[{
 "Below is a more interesting example in which I have attempted to make a \
blue disk of radius ",
 Cell[BoxData["0.1"]],
 " revolve (following a unit circle) around a yellow disk of radius ",
 Cell[BoxData["0.2"]],
 " fixed at the origin."
}], "Text",
 CellChangeTimes->{{3.3927403025509014`*^9, 3.3927403204267845`*^9}, {
  3.392740372912779*^9, 3.3927404744497943`*^9}, {3.3927405359488387`*^9, 
  3.3927405366598682`*^9}, {3.3927409048329463`*^9, 3.392740905614077*^9}, {
  3.3927409758858232`*^9, 3.39274097705752*^9}, {3.3928443005866833`*^9, 
  3.392844301661092*^9}},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "0.2"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}], ",", "0.1"}], 
       "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3927403230305543`*^9, 3.392740353054025*^9}, {
  3.3927403885554276`*^9, 3.392740390338009*^9}, {3.392740477774608*^9, 
  3.392740519515044*^9}, {3.3927408296340656`*^9, 3.392740829854385*^9}, {
  3.39274086609686*^9, 3.3927408663872805`*^9}, {3.392740913084894*^9, 
  3.3927409144769096`*^9}},
 Magnification->1.5],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 8.017344451961153, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, 4 Pi}}, Typeset`size$$ = {
    333., {59., 69.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$3728$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$3728$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         RGBColor[{1, 1, 0}], 
         Disk[{0, 0}, 0.2], 
         RGBColor[{0, 0, 1}], 
         Disk[{
           Sin[$CellContext`\[Theta]$$], 
           Cos[$CellContext`\[Theta]$$]}, 0.1]}], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 4 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{399., {125., 134.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.392740354015417*^9, 3.392740390938879*^9, {3.392740490963705*^9, 
   3.392740520206045*^9}, 3.392740830605472*^9, 3.392740867108325*^9, 
   3.3927409151578956`*^9},
 Magnification->1.5]
}, Open  ]],

Cell[TextData[{
 "Unfortunately, my ",
 Cell[BoxData["Manipulate"]],
 " expression doesn't seem to work too well.  The problem is that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " automatically trims the graphical output to tightly bound both disks.  \
Since the blue disk is moving, the bounding box is also moving ruining our \
sense of a blue disk orbiting a ",
 StyleBox["fixed",
  FontSlant->"Italic"],
 " yellow disk.  The solution to this problem is specify a fix ",
 Cell[BoxData["PlotRange"]],
 " that always contains both disks."
}], "Text",
 CellChangeTimes->{{3.3927405436800327`*^9, 3.3927406854853525`*^9}, {
  3.392740926394165*^9, 3.392740961605147*^9}, {3.3928443349193296`*^9, 
  3.3928443458285427`*^9}},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0"}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "0.2"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}], ",", "0.1"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "1.3"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3927403230305543`*^9, 3.392740353054025*^9}, {
  3.3927403885554276`*^9, 3.392740390338009*^9}, {3.392740477774608*^9, 
  3.392740519515044*^9}, {3.3927407007774944`*^9, 3.3927407254732513`*^9}, {
  3.392740767574209*^9, 3.3927408535286627`*^9}, {3.3927409879432817`*^9, 
  3.3927409964556065`*^9}, {3.3927431510051804`*^9, 3.3927431521668625`*^9}},
 Magnification->1.5],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 7.502123256772426, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, 4 Pi}}, Typeset`size$$ = {
    333., {161., 172.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$5875$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$5875$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         RGBColor[{1, 1, 0}], 
         Disk[{0, 0}, 0.2], 
         RGBColor[{0, 0, 1}], 
         Disk[{
           Sin[$CellContext`\[Theta]$$], 
           Cos[$CellContext`\[Theta]$$]}, 0.1]}, PlotRange -> 1.3], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, 4 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{399., {228., 236.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.3927407791109133`*^9, 3.3927408541195183`*^9}, 
   3.392740997306839*^9, 3.392743152887906*^9},
 Magnification->1.5]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can also manipulate the position of points that are not constrained to \
move along a 1-dimensional curve, but are free to move in two dimensions.  \
When you manipulate a scalar, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " automatically creates a 1-dimensional slider;  when you manipulate a \
point, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " automatically creates a 2-dimensional slider.  Below is an example of a \
2-dimensional slider used to control the size of a blue rectangle by \
manipulating one of the corners of the rectangle."
}], "Text",
 CellChangeTimes->{{3.392741043093133*^9, 3.392741082580307*^9}, {
  3.3928443818656693`*^9, 3.392844400665661*^9}, {3.393003376068527*^9, 
  3.393003601771392*^9}, {3.393003760425889*^9, 3.393003786526189*^9}, {
  3.393004465609631*^9, 3.393004483303719*^9}},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "pt"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "5"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"pt", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzVkowwEABvBh/7SUxCxHEy8iljNPm5Cj5FhyRO7clivLMVuRsIm1whSz
tqFQrkXLgxra0GrK5oFWNB4WMkq0Ef9vD1+/l6/vi2rsLmn2plAokWQgT7Wf
N5TnyBxISCmE0Qf8MhhSJ6iAw7m6Bug077TBgqdJARzcixLBljv+BKy3SqZg
dpFUCiP6fmSevv5eDReJhA04whBuQ+Gk1uNp+eIpJKLNJthZSr2Bl4zaW3jz
sPbo2Q9IcXj+xkdf4TtL+AanrxSfsEmqcUGL+zd2CX/u3mQYaJawoS44nAPj
jxuK4JhytBiuhB7NwNR2HxnsGDfPQddf4TysySK08FucdQRFit0LSGWem2B6
kvIaKuJ4Vrhq37qHw756Owz4qHTA1kPbM4zw23yD/lTDF6RXEpRlUumZlxdM
JGhsFekst4sDjayOKsjn22th/wlTDKuNJzLYQ39ZgOp1rhymWeQrGlKGnqaC
BpszaJU0h6UKgzuD+TEwI2ibBf8BX0AAgQ==
  "],
 Magnification->1.5],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`pt$$ = {2.24, 3.04}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`pt$$], {1, 1}, {5, 5}}}, Typeset`size$$ = {
    225., {107., 118.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`pt$31380$$ = {0, 0}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`pt$$ = {1, 1}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`pt$$, $CellContext`pt$31380$$, {0, 0}]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         RGBColor[{0, 0, 1}], 
         Rectangle[{0, 0}, $CellContext`pt$$]}, PlotRange -> 5, ImageSize -> 
        150, Axes -> True], 
      "Specifications" :> {{$CellContext`pt$$, {1, 1}, {5, 5}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{291., {216., 224.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.393003886325382*^9, 3.492129454361375*^9},
 Magnification->1.5]
}, Open  ]],

Cell[TextData[{
 "You can replace 2-dimensional sliders with ",
 Cell[BoxData["Locators"]],
 " -- points on the screen -- by specifying that you want a ",
 Cell[BoxData["Locator"]],
 " attached to variable point.  You can then tug on the Locator instead of a \
slider to manipulate the point."
}], "Text",
 CellChangeTimes->{{3.392741043093133*^9, 3.392741082580307*^9}, {
  3.3928443818656693`*^9, 3.392844400665661*^9}, {3.393003376068527*^9, 
  3.393003601771392*^9}, {3.393003760425889*^9, 3.393003786526189*^9}, {
  3.3930041802235126`*^9, 3.393004406347329*^9}, {3.39360607060808*^9, 
  3.393606087432272*^9}},
 Magnification->1.5],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "pt"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "5"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "150"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"pt", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}], ",", "Locator"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzVkowwEABvBh/7TUkmM5ovayiDVMnkYsR8lmyRG5c5MryzFTJHPEWmGK
0VyFmmORFLWRq9WUbQ+kaDwstFGiIf7f/+Hr9/L1fezKlpxqTxqNxiYDm7Q7
Gd0ZjpROHl8EObvSPBhUJiuAPen7FdBl3qyDWU8KGezaZvfBmlvpECy3jg7D
VLFSCcPbf1RU33C/CGcI3hrsZcl1UK7QUx7nzxxDgmM2wcZcug1eskpvoO1h
5ZHa9+U7qL/B/lf4xpU74diV5gNWKZfc0PL9GzmLv++2OOhnHhXA/cDQRBh9
VCGGAwv92XA++GAcxtd7qWDDoHkSuv9EU7BESOjh14jwAPZpti4gPezcBJNi
F66hJqrJCpftG/ewx9tgh77vhQ5Yu3f3DMN91p2QST/9hAGFBG2OVHni4QFj
CIZASzohaU6EZ9yGIiiV2kthhzFsBBafGVWwNeBlGi6uStQwwaKeXyJlGRha
eHrn8l8mTeNqQ+BmV2YETPbXcaGFyRJD46GC8h+oJwhG
  "],
 Magnification->1.5],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`pt$$ = {2.4000000000000004`, 3.83}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`pt$$], {1, 1}, {5, 5}}}, Typeset`size$$ = {
    225., {107., 118.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`pt$31401$$ = {0, 0}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`pt$$ = {1, 1}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`pt$$, $CellContext`pt$31401$$, {0, 0}]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{
         RGBColor[{0, 0, 1}], 
         Rectangle[{0, 0}, $CellContext`pt$$]}, PlotRange -> 5, ImageSize -> 
        150, Axes -> True], 
      "Specifications" :> {{$CellContext`pt$$, {1, 1}, {5, 5}, ControlType -> 
         Locator}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{301., {154., 163.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.393004150062541*^9, 3.492129471502*^9},
 Magnification->1.5]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Subsection",
 CellChangeTimes->{{3.523877290203125*^9, 3.52387729240625*^9}}],

Cell[TextData[{
 StyleBox["Exercise 1:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " In the exercises of the Lists section, you created a ",
 Cell[BoxData[
  RowBox[{"threshold", "[", 
   RowBox[{"img", ",", "val"}], "]"}]]],
 " function that binarizes an image ",
 Cell[BoxData["img"]],
 " using a threshold value ",
 Cell[BoxData["val"]],
 ". Now, create a function ",
 Cell[BoxData[
  RowBox[{"thresholdDyn", "[", "img", "]"}]]],
 " that produces a 1D slider that controls the threshold value to your ",
 Cell[BoxData["threadhold"]],
 " function and dynamically displays the thresholded image."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->CompressedData["
1:eJwtyE8ow3EYx/FvWm60AzvsxG0yF3KwgxqSPyXssKxkfrPLHDQ5yGEjLpua
icNaP2KUDYkxfzJrzYG16Gf+1JaWJLUtB5RIyvd5nh0+vfq8K4WRXnMRY6yC
D1Sk7A2CLKdV9DVq0NR0KxnQUVd5SKUIlr2KfpFrzFs2wc+9sRhYo12/AL8k
2RV4MBS5Bc1N6Y4lblgX6wYtUz1GUHAOmMCM73AYHA3KrKBv6m8WPHZEXCBj
ao8fDfvIwQA6OV/w45q694b+oz2A5gqqXSjLLNA/8pDbIijI70xB0L1hIat3
yZIQuXVKRgvWR1H5XJL++BP9kxdyJb6PPZVA5cUSWZskd6wh1DaDujUO+qWL
ZFak/nZGKhPUW1Cj3pa75Dr1z2jne7sqzl21lleBbefLv99cXfMaapMy7Ifr
lbLofX+XwVCX1048pNF/O7rwjw==
  "],
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"thresholdDyn", "[", "img_", "]"}], ":=", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"showArray", "[", 
     RowBox[{"threshold", "[", 
      RowBox[{"img", ",", "val"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"val", ",", "0", ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"thresholdDyn", "[", 
  RowBox[{"makeImage", "[", 
   RowBox[{"20", ",", "30"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.650802338107082*^9, 3.6508023579634027`*^9}, {
  3.650802432747486*^9, 3.650802513226861*^9}, {3.650802630008224*^9, 
  3.650802688230694*^9}, {3.6508027409102993`*^9, 3.6508027476234303`*^9}, {
  3.650816332211989*^9, 3.650816338283533*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`val$$ = 0.772, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`val$$], 0, 1}}, Typeset`size$$ = {540., {182., 192.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`val$148594$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`val$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`val$$, $CellContext`val$148594$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`showArray[
        $CellContext`threshold[{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {
          0, Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], -
           Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], 0}, {
          0, Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], 
           Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], 0}, {
          0, Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], -
           Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], 0}, {
          0, Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], 
           Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], 0}, {
          0, -Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], -
           Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], 0}, {
          0, -Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], 
           Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], 0}, {0, 0, 0, 0, 
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
           0, 0, 0}}, $CellContext`val$$]], 
      "Specifications" :> {{$CellContext`val$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{606., {248., 257.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.650802690125023*^9, 3.650802748344852*^9, 
  3.650816339545497*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Exercise 2:",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 " Replace the 1D slider in the previous problem with a 2D locator over the \
image ",
 Cell[BoxData["img"]],
 ", and dynamically display the thresholded image with the threshold value \
set to be the pixel value at the locator."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBWIQLXaz3jKJ5ZWjWKSdFZi+2ewGoVcGQ8Q1ZkBoqTkg
WuTZnBVzgHTC66xVIPrzxpJDIFrXcclxEP3tAstZEL0lZd9lEJ3qdMtrLpDe
E3woAERnNQYmgOikrvhkEH1v0bZsEF20iaUQRC9q/NsNond07usD0QwMOjNW
gOk9iyB04kow3TARSn86BxGfdRHCv1O/Eky/gtI6fWCa4d5kCH/7DAi9Zg6I
ThK4krwJRE9YngWhtTdAaN6tEHr1bgh9AEqbHgDTAv2XIPyKBxD+zicQesHJ
zWDxm6fBtADbBQhtdAlCryvcCqbrWsD0BKtOCJ9vCoR+OQdC6+2C0PL7IHTT
KRD9KvzY6xNAuifC6y2I9vu0UeskkL77OVMPRAMAI27XAA==
  "],
 FontColor->RGBColor[0, 0, 1],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Func1", "[", "img_", "]"}], ":=", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"showArray", "[", 
     RowBox[{"threshold", "[", 
      RowBox[{"img", ",", 
       RowBox[{"img", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"pt", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Round", "[", 
           RowBox[{"pt", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"pt", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "img", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "img", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "Locator"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Func1", "[", 
  RowBox[{"makeImage", "[", 
   RowBox[{"20", ",", "30"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.650802949009139*^9, 3.650802963144826*^9}, {
   3.650803004566842*^9, 3.6508031126933317`*^9}, {3.6508034199171743`*^9, 
   3.650803422274912*^9}, {3.650803515534133*^9, 3.650803569765278*^9}, {
   3.650803613323807*^9, 3.6508036461258917`*^9}, {3.650803804338889*^9, 
   3.650803816718451*^9}, {3.650803848086019*^9, 3.650803876037841*^9}, {
   3.650804413019472*^9, 3.650804419684409*^9}, {3.650804511494926*^9, 
   3.65080456453581*^9}, {3.650804598264805*^9, 3.650804663966007*^9}, {
   3.650804704711076*^9, 3.65080475865093*^9}, {3.650804856322742*^9, 
   3.650804886046941*^9}, {3.650804935424202*^9, 3.650804940421238*^9}, {
   3.650805060852051*^9, 3.650805201000705*^9}, {3.6508060763213263`*^9, 
   3.6508061650429983`*^9}, {3.650806207561656*^9, 3.650806212224818*^9}, {
   3.6508113770446787`*^9, 3.650811401381526*^9}, {3.650811532212335*^9, 
   3.650811538842619*^9}, {3.650812499865842*^9, 3.650812522505918*^9}, 
   3.6508125806453342`*^9, {3.650812618319529*^9, 3.650812684225473*^9}, {
   3.650812766779982*^9, 3.65081278007469*^9}, {3.650812987969035*^9, 
   3.6508130316755943`*^9}, {3.650813068184764*^9, 3.6508130729442263`*^9}, 
   3.650813125999763*^9, {3.650815656290381*^9, 3.650815657401751*^9}, {
   3.6508163510942917`*^9, 3.650816354020981*^9}, {3.6508164121087313`*^9, 
   3.6508164211014147`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`pt$$ = {19.92, 8.780000000000001}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`pt$$], {1, 1}, {30, 20}}}, Typeset`size$$ = {
    540., {182., 192.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`pt$148666$$ = {0, 0}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`pt$$ = {1, 1}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`pt$$, $CellContext`pt$148666$$, {0, 0}]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`showArray[
        $CellContext`threshold[{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {
          0, Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], -
           Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], 0}, {
          0, Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], 
           Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], 0}, {
          0, Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], -
           Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], 0}, {
          0, Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], 
           Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], -
           Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], 
           Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], 
           Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], 0}, {
          0, -Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], -
           Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], -
           Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], -
           Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], 
           Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], -
           Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], -
           Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], -
           Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], 
           Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], 
           Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], 
           Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
          0, -Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], -
           Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], 
           Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], 0}, {
          0, -Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], -
           Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], -
           Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], -
           Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], -
           Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], -
           Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], 
           Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], 
           Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], 
           Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], 
           Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], 0}, {0, 0, 0, 0, 
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
           0, 0, 0}}, 
         Part[{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0}, {
           0, Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], 
            Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], 
            Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], 
            Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], 
            Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], 
            Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], 
            Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], -
            Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], -
            Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], -
            Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], -
            Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], -
            Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], -
            Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], -
            Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], 0}, {
           0, Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], 
            Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], 0}, {
           0, Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], 
            Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], 
            Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], 
            Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], 
            Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], 
            Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], 
            Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], -
            Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], -
            Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], -
            Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], -
            Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], -
            Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], -
            Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], 
            Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], 
            Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], 
            Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], 
            Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], 
            Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], 
            Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], -
            Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], -
            Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], -
            Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], -
            Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], -
            Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], -
            Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], 
            Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], -
            Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], 
            Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], 
            Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], 
            Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], 
            Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], 
            Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], 
            Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], -
            Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], -
            Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], -
            Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], -
            Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], -
            Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], -
            Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], 
            Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], 
            Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], 
            Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], 
            Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], 
            Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], 
            Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], -
            Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], -
            Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], -
            Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], -
            Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], -
            Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], -
            Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], -
            Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], 0}, {
           0, Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], 
            Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], -
            Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, -Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], -
            Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], -
            Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], -
            Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], 
            Sin[Rational[1, 29] Pi] Sin[Rational[1, 19] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[3, 29] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[5, 29] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[11, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[7, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[3, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[1, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[5, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[9, 58] Pi] Sin[Rational[1, 19] Pi], 
            Cos[Rational[13, 58] Pi] Sin[Rational[1, 19] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[6, 29] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[4, 29] Pi], 
            Sin[Rational[1, 19] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, -Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], -
            Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], -
            Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], -
            Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], -
            Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], -
            Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], -
            Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], -
            Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], 
            Sin[Rational[1, 29] Pi] Sin[Rational[3, 19] Pi], 
            Sin[Rational[3, 29] Pi] Sin[Rational[3, 19] Pi], 
            Sin[Rational[3, 19] Pi] Sin[Rational[5, 29] Pi], 
            Sin[Rational[3, 19] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[11, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[7, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[3, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[1, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[5, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[9, 58] Pi] Sin[Rational[3, 19] Pi], 
            Cos[Rational[13, 58] Pi] Sin[Rational[3, 19] Pi], 
            Sin[Rational[3, 19] Pi] Sin[Rational[6, 29] Pi], 
            Sin[Rational[4, 29] Pi] Sin[Rational[3, 19] Pi], 
            Sin[Rational[2, 29] Pi] Sin[Rational[3, 19] Pi], 0}, {
           0, -Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], -
            Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[1, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[3, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[5, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[11, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[7, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[3, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[1, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[5, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[9, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[13, 58] Pi] Cos[Rational[9, 38] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[4, 29] Pi], 
            Cos[Rational[9, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, -Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], -
            Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], -
            Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], -
            Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], -
            Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], -
            Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], -
            Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], -
            Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[1, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[3, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[5, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[5, 38] Pi] Cos[Rational[11, 58] Pi], 
            Cos[Rational[7, 58] Pi] Cos[Rational[5, 38] Pi], 
            Cos[Rational[3, 58] Pi] Cos[Rational[5, 38] Pi], 
            Cos[Rational[1, 58] Pi] Cos[Rational[5, 38] Pi], 
            Cos[Rational[5, 58] Pi] Cos[Rational[5, 38] Pi], 
            Cos[Rational[5, 38] Pi] Cos[Rational[9, 58] Pi], 
            Cos[Rational[5, 38] Pi] Cos[Rational[13, 58] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[4, 29] Pi], 
            Cos[Rational[5, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, -Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], -
            Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], -
            Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], -
            Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[1, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[3, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[5, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[11, 58] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[7, 58] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[3, 58] Pi], 
            Cos[Rational[1, 58] Pi] Cos[Rational[1, 38] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[5, 58] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[9, 58] Pi], 
            Cos[Rational[1, 38] Pi] Cos[Rational[13, 58] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[4, 29] Pi], 
            Cos[Rational[1, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, -Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], -
            Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], -
            Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], -
            Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], -
            Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], -
            Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], -
            Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], -
            Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[1, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[3, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[5, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[3, 38] Pi] Cos[Rational[11, 58] Pi], 
            Cos[Rational[3, 38] Pi] Cos[Rational[7, 58] Pi], 
            Cos[Rational[3, 58] Pi] Cos[Rational[3, 38] Pi], 
            Cos[Rational[1, 58] Pi] Cos[Rational[3, 38] Pi], 
            Cos[Rational[3, 38] Pi] Cos[Rational[5, 58] Pi], 
            Cos[Rational[3, 38] Pi] Cos[Rational[9, 58] Pi], 
            Cos[Rational[3, 38] Pi] Cos[Rational[13, 58] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[4, 29] Pi], 
            Cos[Rational[3, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, -Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], -
            Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], -
            Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], -
            Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], -
            Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], -
            Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], -
            Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], -
            Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[1, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[3, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[5, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[7, 38] Pi] Cos[Rational[11, 58] Pi], 
            Cos[Rational[7, 58] Pi] Cos[Rational[7, 38] Pi], 
            Cos[Rational[3, 58] Pi] Cos[Rational[7, 38] Pi], 
            Cos[Rational[1, 58] Pi] Cos[Rational[7, 38] Pi], 
            Cos[Rational[5, 58] Pi] Cos[Rational[7, 38] Pi], 
            Cos[Rational[9, 58] Pi] Cos[Rational[7, 38] Pi], 
            Cos[Rational[7, 38] Pi] Cos[Rational[13, 58] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[6, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[4, 29] Pi], 
            Cos[Rational[7, 38] Pi] Sin[Rational[2, 29] Pi], 0}, {
           0, -Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], -
            Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], -
            Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], -
            Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[1, 29] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[3, 29] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[5, 29] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[4, 19] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[11, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[7, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[3, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[1, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[5, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[9, 58] Pi] Sin[Rational[4, 19] Pi], 
            Cos[Rational[13, 58] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[6, 29] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[4, 29] Pi] Sin[Rational[4, 19] Pi], 
            Sin[Rational[2, 29] Pi] Sin[Rational[4, 19] Pi], 0}, {
           0, -Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], -
            Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], -
            Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], -
            Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], -
            Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], -
            Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], -
            Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], -
            Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], -
            Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], 
            Sin[Rational[1, 29] Pi] Sin[Rational[2, 19] Pi], 
            Sin[Rational[3, 29] Pi] Sin[Rational[2, 19] Pi], 
            Sin[Rational[2, 19] Pi] Sin[Rational[5, 29] Pi], 
            Sin[Rational[2, 19] Pi] Sin[Rational[7, 29] Pi], 
            Cos[Rational[11, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[7, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[3, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[1, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[5, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[9, 58] Pi] Sin[Rational[2, 19] Pi], 
            Cos[Rational[13, 58] Pi] Sin[Rational[2, 19] Pi], 
            Sin[Rational[2, 19] Pi] Sin[Rational[6, 29] Pi], 
            Sin[Rational[2, 19] Pi] Sin[Rational[4, 29] Pi], 
            Sin[Rational[2, 29] Pi] Sin[Rational[2, 19] Pi], 0}, {0, 0, 0, 0, 
           0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0, 0, 0, 0}}, 
          Round[
           Part[$CellContext`pt$$, 2]], 
          Round[
           Part[$CellContext`pt$$, 1]]]]], 
      "Specifications" :> {{$CellContext`pt$$, {1, 1}, {30, 20}, ControlType -> 
         Locator}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{616., {229., 237.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.650812784177845*^9, 3.650813128640626*^9, {3.6508156584628067`*^9, 
   3.650815665516293*^9}, 3.650816355907126*^9, 3.6508164231657248`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"...", 
  RowBox[{"\[AliasDelimiter]", 
   RowBox[{"\[AliasDelimiter]", 
    RowBox[{"\[AliasDelimiter]", 
     RowBox[{"\[AliasDelimiter]", 
      RowBox[{"\[AliasDelimiter]", 
       RowBox[{"\[AliasDelimiter]", 
        RowBox[{"\[AliasDelimiter]", 
         RowBox[{
         "\[AliasDelimiter]", "\[AliasDelimiter]"}]}]}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.650812912514307*^9, 3.650812912580508*^9}, {
  3.650812980104794*^9, 3.650812980506851*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6508038396081533`*^9, 3.6508038405538*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6508049080225353`*^9, 3.650804908842332*^9}, {
  3.650815620333864*^9, 3.6508156213420973`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{612, 755},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintingOptions->{"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->True,
"PrintingMargins"->{{54, 54}, {72, 72}}},
ShowSelection->True,
Magnification->1.5,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", CharacterEncoding -> 
       "CP936"]]], 
   Cell[
    StyleData["Exercise"], CellDingbat -> "\[FilledDownTriangle]", 
    MenuSortingValue -> 10000], 
   Cell[
    StyleData["ExerciseText"], TextAlignment -> Left, TextJustification -> 0.,
     MenuSortingValue -> 10000, FontColor -> RGBColor[0, 0, 1]]}, Visible -> 
  False, FrontEndVersion -> 
  "9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, 2012)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 464, 10, 91, "Title"],
Cell[1034, 34, 431, 8, 53, "Subsubtitle"],
Cell[1468, 44, 1104, 22, 123, "Text"],
Cell[2575, 68, 747, 12, 70, "Text"],
Cell[CellGroupData[{
Cell[3347, 84, 271, 7, 109, "Section"],
Cell[3621, 93, 1144, 25, 149, "Text"],
Cell[4768, 120, 262, 7, 43, "Text"],
Cell[5033, 129, 345, 8, 43, "Text"],
Cell[5381, 139, 328, 8, 43, "Text"],
Cell[5712, 149, 333, 8, 43, "Text"],
Cell[6048, 159, 252, 7, 43, "Text"],
Cell[6303, 168, 321, 8, 43, "Text"],
Cell[6627, 178, 312, 8, 43, "Text"],
Cell[6942, 188, 269, 7, 43, "Text"],
Cell[7214, 197, 327, 10, 43, "Text"],
Cell[7544, 209, 542, 11, 70, "Text"],
Cell[CellGroupData[{
Cell[8111, 224, 257, 3, 52, "Subsection"],
Cell[8371, 229, 621, 13, 96, "Text"],
Cell[8995, 244, 1048, 22, 176, "Text"],
Cell[10046, 268, 1529, 32, 229, "Text"],
Cell[11578, 302, 1203, 21, 67, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[12784, 325, 1304, 32, 176, "Text"],
Cell[14091, 359, 1479, 44, 120, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[15573, 405, 142, 1, 43, "Text"],
Cell[CellGroupData[{
Cell[15740, 410, 163, 2, 84, "Input"],
Cell[15906, 414, 87, 1, 58, "Output"],
Cell[15996, 417, 72, 1, 58, "Output"]
}, Open  ]],
Cell[16083, 421, 146, 2, 84, InheritFromParent],
Cell[16232, 425, 922, 20, 123, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17191, 450, 105, 1, 52, "Subsection"],
Cell[17299, 453, 978, 19, 149, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18314, 477, 100, 1, 52, "Subsection"],
Cell[18417, 480, 1458, 36, 176, "Text"],
Cell[19878, 518, 1153, 31, 97, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[21056, 553, 175, 4, 58, "Input"],
Cell[21234, 559, 72, 1, 58, "Output"]
}, Open  ]],
Cell[21321, 563, 906, 17, 96, "Text"],
Cell[22230, 582, 998, 25, 69, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[23265, 612, 183, 5, 52, "Subsection"],
Cell[23451, 619, 1043, 22, 149, "Text"],
Cell[24497, 643, 854, 22, 149, "Text"],
Cell[25354, 667, 716, 15, 67, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[26095, 686, 154, 3, 58, "Input"],
Cell[26252, 691, 77, 1, 58, "Output"]
}, Open  ]],
Cell[26344, 695, 91, 1, 58, "Input"],
Cell[26438, 698, 996, 26, 123, "Text"],
Cell[27437, 726, 881, 18, 120, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[28343, 748, 176, 5, 58, "Input"],
Cell[28522, 755, 1543, 32, 190, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30126, 794, 569, 7, 109, "Section"],
Cell[30698, 803, 926, 19, 123, "Text"],
Cell[CellGroupData[{
Cell[31649, 826, 165, 2, 52, "Subsection"],
Cell[31817, 830, 380, 8, 70, "Text"],
Cell[CellGroupData[{
Cell[32222, 842, 402, 9, 148, "Input"],
Cell[32627, 853, 94, 1, 58, "Output"],
Cell[32724, 856, 112, 1, 58, "Output"],
Cell[32839, 859, 111, 1, 58, "Output"]
}, Open  ]],
Cell[32965, 863, 880, 18, 176, "Text"],
Cell[33848, 883, 982, 24, 98, "Text"],
Cell[CellGroupData[{
Cell[34855, 911, 416, 10, 109, "Input"],
Cell[35274, 923, 69, 1, 58, "Output"],
Cell[35346, 926, 87, 1, 58, "Output"],
Cell[35436, 929, 86, 1, 58, "Output"]
}, Open  ]],
Cell[35537, 933, 1043, 30, 149, "Text"],
Cell[36583, 965, 192, 5, 58, "Input"],
Cell[36778, 972, 712, 16, 123, "Text"],
Cell[37493, 990, 726, 16, 70, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38256, 1011, 242, 3, 52, "Subsection"],
Cell[38501, 1016, 749, 17, 123, "Text"],
Cell[CellGroupData[{
Cell[39275, 1037, 136, 3, 80, "Input"],
Cell[39414, 1042, 70, 1, 58, "Output"]
}, Open  ]],
Cell[39499, 1046, 293, 7, 43, "Text"],
Cell[CellGroupData[{
Cell[39817, 1057, 200, 5, 65, "Input"],
Cell[40020, 1064, 276, 8, 60, "Output"]
}, Open  ]],
Cell[40311, 1075, 532, 14, 70, "Text"],
Cell[40846, 1091, 615, 15, 72, "Text"],
Cell[CellGroupData[{
Cell[41486, 1110, 269, 8, 58, "Input"],
Cell[41758, 1120, 212, 6, 80, "Output"]
}, Open  ]],
Cell[41985, 1129, 891, 26, 123, "Text"],
Cell[CellGroupData[{
Cell[42901, 1159, 289, 7, 58, "Input"],
Cell[43193, 1168, 410, 8, 34, "Message"],
Cell[43606, 1178, 378, 7, 34, "Message"],
Cell[43987, 1187, 101, 2, 58, "Output"]
}, Open  ]],
Cell[44103, 1192, 545, 15, 96, "Text"],
Cell[CellGroupData[{
Cell[44673, 1211, 411, 12, 58, "Input"],
Cell[45087, 1225, 225, 6, 58, "Output"]
}, Open  ]],
Cell[45327, 1234, 826, 19, 127, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46190, 1258, 94, 1, 52, "Subsection"],
Cell[46287, 1261, 1405, 24, 94, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[47717, 1289, 1656, 48, 553, "Input"],
Cell[49376, 1339, 70, 1, 58, "Output"],
Cell[49449, 1342, 90, 1, 58, "Output"],
Cell[49542, 1345, 87, 1, 58, "Output"],
Cell[49632, 1348, 70, 1, 58, "Output"],
Cell[49705, 1351, 85, 1, 58, "Output"],
Cell[49793, 1354, 89, 1, 58, "Output"],
Cell[49885, 1357, 75, 1, 58, "Output"],
Cell[49963, 1360, 184, 6, 85, "Output"],
Cell[50150, 1368, 255, 9, 60, "Output"],
Cell[50408, 1379, 298, 10, 60, "Output"],
Cell[50709, 1391, 118, 3, 58, "Output"]
}, Open  ]],
Cell[50842, 1397, 1341, 29, 120, "Text"],
Cell[CellGroupData[{
Cell[52208, 1430, 415, 12, 176, "Input"],
Cell[52626, 1444, 72, 1, 58, "Output"],
Cell[52701, 1447, 72, 1, 58, "Output"],
Cell[52776, 1450, 72, 1, 58, "Output"]
}, Open  ]],
Cell[52863, 1454, 26, 0, 58, "Input"],
Cell[52892, 1456, 1989, 49, 144, "Text"],
Cell[CellGroupData[{
Cell[54906, 1509, 548, 17, 209, "Input"],
Cell[55457, 1528, 74, 1, 58, "Output"],
Cell[55534, 1531, 91, 2, 81, "Output"],
Cell[55628, 1535, 149, 2, 58, "Output"],
Cell[55780, 1539, 151, 2, 58, "Output"]
}, Open  ]],
Cell[55946, 1544, 1822, 43, 152, "Text"],
Cell[CellGroupData[{
Cell[57793, 1591, 1143, 36, 309, "Input"],
Cell[58939, 1629, 206, 6, 60, "Output"],
Cell[59148, 1637, 661, 23, 95, "Output"],
Cell[59812, 1662, 181, 5, 60, "Output"],
Cell[59996, 1669, 269, 9, 58, "Output"],
Cell[60268, 1680, 655, 23, 80, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60984, 1710, 344, 5, 109, "Section"],
Cell[61331, 1717, 799, 18, 149, "Text"],
Cell[62133, 1737, 476, 11, 70, "Text"],
Cell[CellGroupData[{
Cell[62634, 1752, 108, 1, 52, "Subsection"],
Cell[62745, 1755, 828, 25, 70, "Text"],
Cell[CellGroupData[{
Cell[63598, 1784, 123, 2, 58, "Input"],
Cell[63724, 1788, 98, 1, 58, "Output"]
}, Open  ]],
Cell[63837, 1792, 694, 17, 125, "Text"],
Cell[CellGroupData[{
Cell[64556, 1813, 175, 3, 58, "Input"],
Cell[64734, 1818, 109, 1, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64892, 1825, 112, 1, 52, "Subsection"],
Cell[65007, 1828, 1132, 21, 149, "Text"],
Cell[CellGroupData[{
Cell[66164, 1853, 318, 6, 84, "Input"],
Cell[66485, 1861, 73, 1, 58, "Output"],
Cell[66561, 1864, 98, 2, 58, "Output"]
}, Open  ]],
Cell[66674, 1869, 833, 20, 123, "Text"],
Cell[CellGroupData[{
Cell[67532, 1893, 236, 5, 60, "Input"],
Cell[67771, 1900, 197, 3, 58, "Output"]
}, Open  ]],
Cell[67983, 1906, 365, 8, 44, "Text"],
Cell[CellGroupData[{
Cell[68373, 1918, 272, 5, 84, "Input"],
Cell[68648, 1925, 99, 1, 58, "Output"],
Cell[68750, 1928, 126, 2, 58, "Output"]
}, Open  ]],
Cell[68891, 1933, 509, 10, 96, "Text"],
Cell[CellGroupData[{
Cell[69425, 1947, 471, 11, 111, "Input"],
Cell[69899, 1960, 124, 2, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70072, 1968, 196, 5, 52, "Subsection"],
Cell[70271, 1975, 1089, 20, 125, "Text"],
Cell[CellGroupData[{
Cell[71385, 1999, 170, 3, 58, "Input"],
Cell[71558, 2004, 94, 1, 58, "Output"]
}, Open  ]],
Cell[71667, 2008, 204, 5, 43, "Text"],
Cell[CellGroupData[{
Cell[71896, 2017, 230, 5, 84, "Input"],
Cell[72129, 2024, 151, 3, 58, "Output"]
}, Open  ]],
Cell[72295, 2030, 1115, 26, 98, "Text"],
Cell[CellGroupData[{
Cell[73435, 2060, 765, 16, 159, "Input"],
Cell[74203, 2078, 124, 2, 58, "Output"],
Cell[74330, 2082, 124, 2, 58, "Output"]
}, Open  ]],
Cell[74469, 2087, 634, 19, 96, "Text"],
Cell[75106, 2108, 339, 7, 43, "Text"],
Cell[CellGroupData[{
Cell[75470, 2119, 409, 11, 58, "Input"],
Cell[75882, 2132, 124, 2, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76055, 2140, 96, 1, 52, "Subsection"],
Cell[76154, 2143, 1293, 26, 94, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[77472, 2173, 559, 17, 159, "Input"],
Cell[78034, 2192, 284, 6, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78379, 2205, 211, 3, 109, "Section"],
Cell[78593, 2210, 881, 20, 123, "Text"],
Cell[CellGroupData[{
Cell[79499, 2234, 142, 2, 52, "Subsection"],
Cell[79644, 2238, 677, 15, 98, "Text"],
Cell[CellGroupData[{
Cell[80346, 2257, 533, 10, 84, "Input"],
Cell[80882, 2269, 257, 6, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81188, 2281, 230, 3, 52, "Subsection"],
Cell[81421, 2286, 1027, 30, 71, "Text"],
Cell[CellGroupData[{
Cell[82473, 2320, 76, 1, 58, "Input"],
Cell[82552, 2323, 73, 1, 58, "Output"]
}, Open  ]],
Cell[82640, 2327, 479, 12, 96, "Text"],
Cell[CellGroupData[{
Cell[83144, 2343, 177, 3, 58, "Input"],
Cell[83324, 2348, 98, 1, 58, "Output"]
}, Open  ]],
Cell[83437, 2352, 401, 13, 44, "Text"],
Cell[CellGroupData[{
Cell[83863, 2369, 334, 7, 84, "Input"],
Cell[84200, 2378, 102, 1, 58, "Output"],
Cell[84305, 2381, 99, 1, 58, "Output"]
}, Open  ]],
Cell[84419, 2385, 1476, 40, 99, "Text"],
Cell[CellGroupData[{
Cell[85920, 2429, 412, 10, 84, "Input"],
Cell[86335, 2441, 122, 2, 58, "Output"],
Cell[86460, 2445, 122, 2, 58, "Output"]
}, Open  ]],
Cell[86597, 2450, 424, 10, 43, "Text"],
Cell[CellGroupData[{
Cell[87046, 2464, 223, 6, 58, "Input"],
Cell[87272, 2472, 122, 2, 58, "Output"]
}, Open  ]],
Cell[87409, 2477, 249, 6, 58, "Input"],
Cell[87661, 2485, 272, 8, 43, "Text"],
Cell[CellGroupData[{
Cell[87958, 2497, 168, 3, 58, "Input"],
Cell[88129, 2502, 143, 3, 58, "Output"]
}, Open  ]],
Cell[88287, 2508, 197, 2, 43, "Text"],
Cell[CellGroupData[{
Cell[88509, 2514, 375, 9, 58, "Input"],
Cell[88887, 2525, 144, 2, 58, "Output"]
}, Open  ]],
Cell[89046, 2530, 935, 25, 98, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90018, 2560, 150, 2, 52, "Subsection"],
Cell[90171, 2564, 956, 23, 72, "Text"],
Cell[CellGroupData[{
Cell[91152, 2591, 534, 11, 58, "Input"],
Cell[CellGroupData[{
Cell[91711, 2606, 145, 2, 30, "Print"],
Cell[91859, 2610, 145, 2, 30, "Print"],
Cell[92007, 2614, 145, 2, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[92179, 2620, 1089, 29, 98, "Text"],
Cell[CellGroupData[{
Cell[93293, 2653, 396, 8, 58, "Input"],
Cell[CellGroupData[{
Cell[93714, 2665, 91, 1, 30, "Print"],
Cell[93808, 2668, 91, 1, 30, "Print"],
Cell[93902, 2671, 91, 1, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[94020, 2676, 808, 22, 70, "Text"],
Cell[CellGroupData[{
Cell[94853, 2702, 454, 9, 58, "Input"],
Cell[CellGroupData[{
Cell[95332, 2715, 139, 2, 30, "Print"],
Cell[95474, 2719, 139, 2, 30, "Print"],
Cell[95616, 2723, 139, 2, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[95782, 2729, 304, 9, 43, "Text"],
Cell[CellGroupData[{
Cell[96111, 2742, 530, 12, 58, "Input"],
Cell[CellGroupData[{
Cell[96666, 2758, 256, 6, 30, "Print"],
Cell[96925, 2766, 253, 6, 30, "Print"],
Cell[97181, 2774, 256, 6, 30, "Print"],
Cell[97440, 2782, 255, 6, 30, "Print"],
Cell[97698, 2790, 254, 6, 30, "Print"],
Cell[97955, 2798, 256, 6, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[98238, 2808, 312, 8, 43, "Text"],
Cell[CellGroupData[{
Cell[98575, 2820, 789, 18, 58, "Input"],
Cell[CellGroupData[{
Cell[99389, 2842, 233, 5, 30, "Print"],
Cell[99625, 2849, 233, 5, 30, "Print"],
Cell[99861, 2856, 233, 5, 30, "Print"],
Cell[100097, 2863, 233, 5, 30, "Print"],
Cell[100333, 2870, 232, 5, 30, "Print"],
Cell[100568, 2877, 232, 5, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[100827, 2886, 631, 18, 72, "Text"],
Cell[CellGroupData[{
Cell[101483, 2908, 485, 11, 84, "Input"],
Cell[CellGroupData[{
Cell[101993, 2923, 137, 2, 30, "Print"],
Cell[102133, 2927, 138, 2, 30, "Print"],
Cell[102274, 2931, 138, 2, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[102439, 2937, 730, 20, 72, "Text"],
Cell[CellGroupData[{
Cell[103194, 2961, 606, 15, 84, "Input"],
Cell[CellGroupData[{
Cell[103825, 2980, 88, 1, 30, "Print"],
Cell[103916, 2983, 88, 1, 30, "Print"],
Cell[104007, 2986, 91, 1, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[104125, 2991, 385, 9, 70, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104547, 3005, 95, 1, 52, "Subsection"],
Cell[104645, 3008, 1230, 27, 98, "Text"],
Cell[CellGroupData[{
Cell[105900, 3039, 356, 10, 159, "Input"],
Cell[106259, 3051, 87, 2, 58, "Output"],
Cell[106349, 3055, 72, 1, 58, "Output"],
Cell[106424, 3058, 70, 1, 58, "Output"]
}, Open  ]],
Cell[106509, 3062, 1342, 26, 96, "Text"],
Cell[CellGroupData[{
Cell[107876, 3092, 1336, 39, 109, "Input"],
Cell[CellGroupData[{
Cell[109237, 3135, 146, 3, 30, "Print"],
Cell[109386, 3140, 146, 3, 30, "Print"],
Cell[109535, 3145, 146, 3, 30, "Print"],
Cell[109684, 3150, 148, 3, 30, "Print"],
Cell[109835, 3155, 146, 3, 30, "Print"],
Cell[109984, 3160, 146, 3, 30, "Print"],
Cell[110133, 3165, 147, 3, 30, "Print"],
Cell[110283, 3170, 147, 3, 30, "Print"],
Cell[110433, 3175, 149, 3, 30, "Print"],
Cell[110585, 3180, 149, 3, 30, "Print"],
Cell[110737, 3185, 149, 3, 30, "Print"],
Cell[110889, 3190, 148, 3, 30, "Print"],
Cell[111040, 3195, 150, 3, 30, "Print"],
Cell[111193, 3200, 148, 3, 30, "Print"],
Cell[111344, 3205, 148, 3, 30, "Print"],
Cell[111495, 3210, 150, 3, 30, "Print"],
Cell[111648, 3215, 149, 3, 30, "Print"],
Cell[111800, 3220, 149, 3, 30, "Print"],
Cell[111952, 3225, 149, 3, 30, "Print"],
Cell[112104, 3230, 151, 3, 30, "Print"]
}, Open  ]],
Cell[112270, 3236, 385, 8, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112692, 3249, 334, 8, 58, InheritFromParent],
Cell[113029, 3259, 359, 7, 58, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113449, 3273, 107, 1, 109, "Section"],
Cell[113559, 3276, 1060, 20, 123, "Text"],
Cell[114622, 3298, 1212, 21, 149, "Text"],
Cell[CellGroupData[{
Cell[115859, 3323, 184, 2, 52, "Subsection"],
Cell[116046, 3327, 448, 11, 70, "Text"],
Cell[116497, 3340, 255, 7, 59, "Input"],
Cell[116755, 3349, 1881, 56, 176, "Text"],
Cell[118639, 3407, 339, 8, 43, "Text"],
Cell[CellGroupData[{
Cell[119003, 3419, 266, 7, 109, "Input"],
Cell[119272, 3428, 94, 1, 58, "Output"],
Cell[119369, 3431, 94, 1, 58, "Output"],
Cell[119466, 3434, 94, 1, 58, "Output"]
}, Open  ]],
Cell[119575, 3438, 479, 9, 70, "Text"],
Cell[120057, 3449, 429, 11, 43, "Text"],
Cell[120489, 3462, 431, 15, 43, "Text"],
Cell[120923, 3479, 462, 12, 43, "Text"],
Cell[121388, 3493, 1128, 30, 123, "Text"],
Cell[122519, 3525, 501, 9, 43, "Text"],
Cell[123023, 3536, 567, 16, 43, "Text"],
Cell[123593, 3554, 768, 16, 98, "Text"],
Cell[124364, 3572, 700, 17, 109, "Input"],
Cell[CellGroupData[{
Cell[125089, 3593, 180, 3, 58, "Input"],
Cell[125272, 3598, 153, 2, 58, "Output"]
}, Open  ]],
Cell[125440, 3603, 533, 10, 70, "Text"],
Cell[125976, 3615, 818, 20, 109, "Input"],
Cell[CellGroupData[{
Cell[126819, 3639, 256, 5, 58, "Input"],
Cell[127078, 3646, 205, 3, 58, "Output"]
}, Open  ]],
Cell[127298, 3652, 561, 14, 70, "Text"],
Cell[127862, 3668, 316, 6, 58, "Input"],
Cell[128181, 3676, 153, 3, 58, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128371, 3684, 109, 1, 52, "Subsection"],
Cell[128483, 3687, 542, 13, 72, "Text"],
Cell[129028, 3702, 630, 14, 58, "Input"],
Cell[129661, 3718, 342, 8, 70, "Text"],
Cell[CellGroupData[{
Cell[130028, 3730, 204, 4, 58, "Input"],
Cell[130235, 3736, 96, 1, 58, "Output"]
}, Open  ]],
Cell[130346, 3740, 280, 5, 70, "Text"],
Cell[130629, 3747, 555, 14, 58, "Input"],
Cell[CellGroupData[{
Cell[131209, 3765, 410, 8, 84, "Input"],
Cell[131622, 3775, 76, 1, 58, "Output"],
Cell[131701, 3778, 75, 1, 58, "Output"]
}, Open  ]],
Cell[131791, 3782, 603, 17, 96, "Text"],
Cell[132397, 3801, 451, 11, 58, "Input"],
Cell[132851, 3814, 428, 10, 58, "Input"],
Cell[133282, 3826, 1130, 33, 127, "Text"],
Cell[CellGroupData[{
Cell[134437, 3863, 413, 12, 58, "Input"],
Cell[134853, 3877, 184, 4, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135086, 3887, 219, 3, 52, "Subsection"],
Cell[135308, 3892, 830, 23, 127, "Text"],
Cell[136141, 3917, 265, 6, 43, "Text"],
Cell[136409, 3925, 583, 16, 59, "Input"],
Cell[136995, 3943, 218, 6, 43, "Text"],
Cell[CellGroupData[{
Cell[137238, 3953, 127, 2, 58, "Input"],
Cell[137368, 3957, 79, 1, 58, "Output"]
}, Open  ]],
Cell[137462, 3961, 298, 9, 43, "Text"],
Cell[137763, 3972, 945, 24, 124, "Text"],
Cell[138711, 3998, 743, 21, 59, "Input"],
Cell[139457, 4021, 721, 20, 123, "Text"],
Cell[CellGroupData[{
Cell[140203, 4045, 181, 3, 58, "Input"],
Cell[140387, 4050, 173, 3, 58, "Output"]
}, Open  ]],
Cell[140575, 4056, 294, 7, 43, "Text"],
Cell[140872, 4065, 568, 9, 123, "Text"],
Cell[141443, 4076, 173, 4, 59, "Input"],
Cell[141619, 4082, 419, 11, 71, "Text"],
Cell[142041, 4095, 182, 4, 58, "Input"],
Cell[142226, 4101, 338, 7, 70, "Text"],
Cell[CellGroupData[{
Cell[142589, 4112, 70, 1, 58, "Input"],
Cell[142662, 4115, 72, 1, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142771, 4121, 141, 2, 58, "Input"],
Cell[142915, 4125, 72, 1, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143036, 4132, 195, 2, 52, "Subsection"],
Cell[143234, 4136, 967, 21, 176, "Text"],
Cell[144204, 4159, 351, 8, 70, "Text"],
Cell[144558, 4169, 1117, 28, 234, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145712, 4202, 96, 1, 52, "Subsection"],
Cell[145811, 4205, 1968, 43, 122, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[147804, 4252, 458, 11, 109, "Input"],
Cell[148265, 4265, 100, 1, 58, "Output"],
Cell[148368, 4268, 102, 1, 58, "Output"]
}, Open  ]],
Cell[148485, 4272, 1474, 28, 67, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[149984, 4304, 901, 20, 84, "Input"],
Cell[150888, 4326, 88, 1, 58, "Output"]
}, Open  ]],
Cell[150991, 4330, 1504, 25, 67, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[152520, 4359, 750, 16, 134, "Input"],
Cell[153273, 4377, 266, 4, 58, "Output"],
Cell[153542, 4383, 263, 4, 58, "Output"],
Cell[153808, 4389, 263, 4, 58, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154132, 4400, 92, 1, 109, "Section"],
Cell[154227, 4403, 937, 28, 123, "Text"],
Cell[CellGroupData[{
Cell[155189, 4435, 162, 3, 58, "Input"],
Cell[155354, 4440, 135, 3, 58, "Output"]
}, Open  ]],
Cell[155504, 4446, 339, 11, 43, "Text"],
Cell[155846, 4459, 171, 3, 43, "Text"],
Cell[CellGroupData[{
Cell[156042, 4466, 352, 10, 58, "Input"],
Cell[156397, 4478, 274, 9, 58, "Output"]
}, Open  ]],
Cell[156686, 4490, 215, 6, 43, "Text"],
Cell[CellGroupData[{
Cell[156926, 4500, 397, 10, 58, "Input"],
Cell[157326, 4512, 350, 10, 58, "Output"]
}, Open  ]],
Cell[157691, 4525, 861, 19, 96, "Text"],
Cell[158555, 4546, 213, 4, 70, "Text"],
Cell[CellGroupData[{
Cell[158793, 4554, 106, 1, 52, "Subsection"],
Cell[158902, 4557, 447, 9, 96, "Text"],
Cell[159352, 4568, 756, 23, 72, "Text"],
Cell[CellGroupData[{
Cell[160133, 4595, 216, 4, 58, "Input"],
Cell[160352, 4601, 267, 5, 58, "Output"]
}, Open  ]],
Cell[160634, 4609, 1281, 33, 127, "Text"],
Cell[CellGroupData[{
Cell[161940, 4646, 177, 4, 58, "Input"],
Cell[162120, 4652, 1152, 17, 134, "Output"]
}, Open  ]],
Cell[163287, 4672, 1174, 34, 98, "Text"],
Cell[CellGroupData[{
Cell[164486, 4710, 360, 8, 58, "Input"],
Cell[164849, 4720, 447, 8, 58, "Output"]
}, Open  ]],
Cell[165311, 4731, 278, 8, 43, "Text"],
Cell[CellGroupData[{
Cell[165614, 4743, 410, 11, 58, "Input"],
Cell[166027, 4756, 670, 23, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166746, 4785, 208, 3, 52, "Subsection"],
Cell[166957, 4790, 282, 5, 70, "Text"],
Cell[167242, 4797, 309, 8, 45, "Text"],
Cell[CellGroupData[{
Cell[167576, 4809, 577, 16, 84, "Input"],
Cell[168156, 4827, 96, 1, 58, "Output"],
Cell[168255, 4830, 96, 1, 58, "Output"]
}, Open  ]],
Cell[168366, 4834, 440, 10, 45, "Text"],
Cell[CellGroupData[{
Cell[168831, 4848, 479, 14, 84, "Input"],
Cell[169313, 4864, 94, 2, 58, "Output"],
Cell[169410, 4868, 117, 3, 58, "Output"]
}, Open  ]],
Cell[169542, 4874, 487, 16, 45, "Text"],
Cell[CellGroupData[{
Cell[170054, 4894, 338, 8, 58, "Input"],
Cell[170395, 4904, 99, 1, 58, "Output"]
}, Open  ]],
Cell[170509, 4908, 576, 13, 45, "Text"],
Cell[CellGroupData[{
Cell[171110, 4925, 340, 8, 58, "Input"],
Cell[171453, 4935, 189, 5, 58, "Output"]
}, Open  ]],
Cell[171657, 4943, 698, 17, 96, "Text"],
Cell[CellGroupData[{
Cell[172380, 4964, 372, 11, 58, "Input"],
Cell[172755, 4977, 215, 7, 58, "Output"]
}, Open  ]],
Cell[172985, 4987, 468, 13, 70, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173490, 5005, 111, 1, 52, "Subsection"],
Cell[173604, 5008, 1034, 30, 96, "Text"],
Cell[CellGroupData[{
Cell[174663, 5042, 520, 13, 134, "Input"],
Cell[175186, 5057, 123, 2, 58, "Output"],
Cell[175312, 5061, 123, 2, 58, "Output"],
Cell[175438, 5065, 123, 2, 58, "Output"]
}, Open  ]],
Cell[175576, 5070, 569, 13, 96, "Text"],
Cell[CellGroupData[{
Cell[176170, 5087, 472, 8, 84, "Input"],
Cell[176645, 5097, 177, 2, 58, "Output"],
Cell[176825, 5101, 717, 12, 34, "Message"],
Cell[177545, 5115, 310, 6, 58, "Output"]
}, Open  ]],
Cell[177870, 5124, 217, 4, 70, "Text"],
Cell[CellGroupData[{
Cell[178112, 5132, 677, 17, 109, "Input"],
Cell[178792, 5151, 195, 4, 58, "Output"],
Cell[178990, 5157, 150, 2, 58, "Output"]
}, Open  ]],
Cell[179155, 5162, 422, 7, 70, "Text"],
Cell[CellGroupData[{
Cell[179602, 5173, 540, 12, 84, "Input"],
Cell[180145, 5187, 320, 9, 58, "Output"],
Cell[180468, 5198, 222, 5, 58, "Output"]
}, Open  ]],
Cell[180705, 5206, 712, 19, 72, "Text"],
Cell[181420, 5227, 967, 29, 100, "Text"],
Cell[CellGroupData[{
Cell[182412, 5260, 663, 13, 159, "Input"],
Cell[183078, 5275, 171, 2, 58, "Output"],
Cell[183252, 5279, 171, 2, 58, "Output"],
Cell[183426, 5283, 236, 4, 58, "Output"],
Cell[183665, 5289, 236, 4, 58, "Output"]
}, Open  ]],
Cell[183916, 5296, 1151, 41, 74, "Text"],
Cell[CellGroupData[{
Cell[185092, 5341, 514, 12, 109, "Input"],
Cell[185609, 5355, 219, 4, 58, "Output"],
Cell[185831, 5361, 219, 4, 58, "Output"],
Cell[186053, 5367, 229, 4, 58, "Output"]
}, Open  ]],
Cell[186297, 5374, 1741, 55, 102, "Text"],
Cell[CellGroupData[{
Cell[188063, 5433, 641, 15, 134, "Input"],
Cell[188707, 5450, 204, 4, 58, "Output"],
Cell[188914, 5456, 204, 4, 58, "Output"],
Cell[189121, 5462, 194, 4, 58, "Output"],
Cell[189318, 5468, 214, 4, 58, "Output"]
}, Open  ]],
Cell[189547, 5475, 851, 24, 72, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190435, 5504, 107, 1, 52, "Subsection"],
Cell[190545, 5507, 990, 28, 98, "Text"],
Cell[CellGroupData[{
Cell[191560, 5539, 469, 12, 134, "Input"],
Cell[192032, 5553, 221, 4, 58, "Output"],
Cell[192256, 5559, 221, 4, 58, "Output"],
Cell[192480, 5565, 221, 4, 58, "Output"]
}, Open  ]],
Cell[192716, 5572, 416, 10, 70, "Text"],
Cell[CellGroupData[{
Cell[193157, 5586, 69, 1, 58, "Input"],
Cell[193229, 5589, 134, 3, 58, "Output"]
}, Open  ]],
Cell[193378, 5595, 479, 14, 72, "Text"],
Cell[CellGroupData[{
Cell[193882, 5613, 238, 4, 84, "Input"],
Cell[194123, 5619, 224, 5, 58, "Output"],
Cell[194350, 5626, 224, 5, 58, "Output"]
}, Open  ]],
Cell[194589, 5634, 803, 22, 74, "Text"],
Cell[CellGroupData[{
Cell[195417, 5660, 261, 4, 109, "Input"],
Cell[195681, 5666, 169, 3, 58, "Output"],
Cell[195853, 5671, 169, 3, 58, "Output"],
Cell[196025, 5676, 171, 3, 58, "Output"]
}, Open  ]],
Cell[196211, 5682, 334, 9, 45, "Text"],
Cell[CellGroupData[{
Cell[196570, 5695, 192, 4, 58, "Input"],
Cell[196765, 5701, 137, 3, 58, "Output"]
}, Open  ]],
Cell[196917, 5707, 470, 8, 96, "Text"],
Cell[CellGroupData[{
Cell[197412, 5719, 557, 18, 58, "Input"],
Cell[197972, 5739, 324, 10, 58, "Output"]
}, Open  ]],
Cell[198311, 5752, 1345, 44, 129, "Text"],
Cell[CellGroupData[{
Cell[199681, 5800, 448, 13, 84, "Input"],
Cell[200132, 5815, 168, 3, 58, "Output"],
Cell[200303, 5820, 158, 3, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200510, 5829, 297, 4, 52, "Subsection"],
Cell[200810, 5835, 422, 9, 96, "Text"],
Cell[CellGroupData[{
Cell[201257, 5848, 468, 13, 84, "Input"],
Cell[201728, 5863, 695, 20, 106, "Output"]
}, Open  ]],
Cell[202438, 5886, 144, 1, 43, "Text"],
Cell[CellGroupData[{
Cell[202607, 5891, 163, 3, 58, "Input"],
Cell[202773, 5896, 663, 18, 82, "Output"]
}, Open  ]],
Cell[203451, 5917, 501, 15, 71, "Text"],
Cell[CellGroupData[{
Cell[203977, 5936, 203, 4, 58, "Input"],
Cell[204183, 5942, 673, 19, 106, "Output"]
}, Open  ]],
Cell[204871, 5964, 338, 6, 70, "Text"],
Cell[CellGroupData[{
Cell[205234, 5974, 189, 4, 58, "Input"],
Cell[205426, 5980, 694, 19, 106, "Output"]
}, Open  ]],
Cell[206135, 6002, 197, 5, 43, "Text"],
Cell[CellGroupData[{
Cell[206357, 6011, 141, 3, 58, "Input"],
Cell[206501, 6016, 909, 17, 34, "Message"],
Cell[207413, 6035, 638, 21, 58, "Output"]
}, Open  ]],
Cell[208066, 6059, 157, 3, 43, "Text"],
Cell[CellGroupData[{
Cell[208248, 6066, 246, 6, 84, "Input"],
Cell[208497, 6074, 73, 1, 58, "Output"]
}, Open  ]],
Cell[208585, 6078, 1022, 31, 100, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209644, 6114, 317, 4, 52, "Subsection"],
Cell[209964, 6120, 589, 19, 45, "Text"],
Cell[CellGroupData[{
Cell[210578, 6143, 411, 10, 109, "Input"],
Cell[210992, 6155, 138, 3, 58, "Output"],
Cell[211133, 6160, 121, 2, 58, "Output"]
}, Open  ]],
Cell[211269, 6165, 1530, 45, 153, "Text"],
Cell[212802, 6212, 1102, 26, 98, "Text"],
Cell[CellGroupData[{
Cell[213929, 6242, 794, 24, 84, "Input"],
Cell[214726, 6268, 216, 5, 58, "Output"],
Cell[214945, 6275, 216, 5, 58, "Output"]
}, Open  ]],
Cell[215176, 6283, 1031, 28, 127, "Text"],
Cell[216210, 6313, 714, 19, 72, "Text"],
Cell[CellGroupData[{
Cell[216949, 6336, 350, 9, 58, "Input"],
Cell[CellGroupData[{
Cell[217324, 6349, 267, 7, 30, "Print"],
Cell[217594, 6358, 247, 6, 30, "Print"],
Cell[217844, 6366, 267, 7, 30, "Print"],
Cell[218114, 6375, 247, 6, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[218410, 6387, 433, 11, 58, "Input"],
Cell[CellGroupData[{
Cell[218868, 6402, 242, 6, 30, "Print"],
Cell[219113, 6410, 220, 5, 30, "Print"],
Cell[219336, 6417, 240, 6, 30, "Print"],
Cell[219579, 6425, 220, 5, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219860, 6437, 101, 1, 52, "Subsection"],
Cell[219964, 6440, 716, 11, 123, "Text"],
Cell[220683, 6453, 797, 20, 84, "Input"],
Cell[221483, 6475, 3128, 67, 94, "Text"],
Cell[CellGroupData[{
Cell[224636, 6546, 3142, 68, 345, "Input"],
Cell[227781, 6616, 1124, 20, 58, "Output"],
Cell[228908, 6638, 11276, 206, 483, "Output"],
Cell[240187, 6846, 219979, 3587, 577, "Output"]
}, Open  ]],
Cell[460181, 10436, 1514, 34, 147, "Text"],
Cell[CellGroupData[{
Cell[461720, 10474, 2456, 54, 159, "Input"],
Cell[464179, 10530, 1797, 44, 109, "Output"],
Cell[465979, 10576, 834, 15, 577, "Output"]
}, Open  ]],
Cell[466828, 10594, 1927, 43, 175, "Text"],
Cell[CellGroupData[{
Cell[468780, 10641, 4778, 120, 484, "Input"],
Cell[473561, 10763, 1274, 23, 58, "Output"],
Cell[474838, 10788, 940, 13, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475815, 10806, 439, 11, 134, "Input"],
Cell[476257, 10819, 72934, 1047, 577, "Output"]
}, Open  ]],
Cell[549206, 11869, 92, 1, 58, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[549347, 11876, 165, 2, 109, "Section"],
Cell[549515, 11880, 615, 11, 96, "Text"],
Cell[CellGroupData[{
Cell[550155, 11895, 102, 1, 52, "Subsection"],
Cell[550260, 11898, 875, 27, 72, "Text"],
Cell[551138, 11927, 153, 5, 87, "Input"],
Cell[CellGroupData[{
Cell[551316, 11936, 451, 11, 58, "Input"],
Cell[551770, 11949, 9000, 154, 382, "Output"]
}, Open  ]],
Cell[560785, 12106, 989, 31, 149, "Text"],
Cell[CellGroupData[{
Cell[561799, 12141, 330, 9, 58, "Input"],
Cell[562132, 12152, 12295, 206, 379, "Output"]
}, Open  ]],
Cell[574442, 12361, 388, 13, 70, "Text"],
Cell[574833, 12376, 273, 7, 70, "Text"],
Cell[575109, 12385, 300, 9, 59, "Input"],
Cell[575412, 12396, 432, 14, 45, "Text"],
Cell[CellGroupData[{
Cell[575869, 12414, 427, 13, 58, "Input"],
Cell[576299, 12429, 292849, 4779, 468, 108101, 1749, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[869163, 17211, 430, 8, 96, "Text"],
Cell[869596, 17221, 890, 27, 98, "Text"],
Cell[CellGroupData[{
Cell[870511, 17252, 434, 13, 58, "Input"],
Cell[870948, 17267, 261353, 4352, 585, 177975, 2984, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[1132316, 21622, 756, 19, 125, "Text"],
Cell[CellGroupData[{
Cell[1133097, 21645, 436, 13, 58, "Input"],
Cell[1133536, 21660, 16058, 274, 585, "Output"]
}, Open  ]],
Cell[1149609, 21937, 967, 25, 98, "Text"],
Cell[1150579, 21964, 388, 12, 61, "Input"],
Cell[CellGroupData[{
Cell[1150992, 21980, 527, 16, 58, "Input"],
Cell[1151522, 21998, 652498, 10657, 647, 469139, 7650, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[1804035, 32658, 1147, 30, 149, "Text"],
Cell[1805185, 32690, 153, 5, 87, "Input"],
Cell[1805341, 32697, 316, 9, 45, "Text"],
Cell[1805660, 32708, 373, 11, 58, "Input"],
Cell[CellGroupData[{
Cell[1806058, 32723, 242, 5, 58, "Input"],
Cell[1806303, 32730, 841, 18, 367, "Output"]
}, Open  ]],
Cell[1807159, 32751, 812, 26, 96, "Text"],
Cell[1807974, 32779, 379, 12, 58, "Input"],
Cell[CellGroupData[{
Cell[1808378, 32795, 242, 5, 58, "Input"],
Cell[1808623, 32802, 830, 17, 379, "Output"]
}, Open  ]],
Cell[1809468, 32822, 241, 7, 70, "Text"],
Cell[CellGroupData[{
Cell[1809734, 32833, 289, 6, 58, "Input"],
Cell[1810026, 32841, 896, 18, 379, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1810971, 32865, 107, 1, 52, "Subsection"],
Cell[1811081, 32868, 655, 17, 74, "Text"],
Cell[CellGroupData[{
Cell[1811761, 32889, 623, 18, 84, "Input"],
Cell[1812387, 32909, 216, 4, 318, "Output"]
}, Open  ]],
Cell[1812618, 32916, 753, 18, 98, "Text"],
Cell[CellGroupData[{
Cell[1813396, 32938, 650, 15, 58, "Input"],
Cell[1814049, 32955, 1101, 20, 318, 222, 4, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[1815165, 32978, 431, 7, 70, "Text"],
Cell[CellGroupData[{
Cell[1815621, 32989, 1294, 38, 159, "Input"],
Cell[1816918, 33029, 826, 15, 318, "Output"]
}, Open  ]],
Cell[1817759, 33047, 517, 13, 98, "Text"],
Cell[CellGroupData[{
Cell[1818301, 33064, 1023, 31, 84, "Input"],
Cell[1819327, 33097, 193, 3, 269, "Output"],
Cell[1819523, 33102, 241, 5, 269, "Output"]
}, Open  ]],
Cell[1819779, 33110, 779, 20, 231, "Text"],
Cell[CellGroupData[{
Cell[1820583, 33134, 2244, 66, 359, "Input"],
Cell[1822830, 33202, 870, 16, 530, "Output"]
}, Open  ]],
Cell[1823715, 33221, 645, 18, 149, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1824397, 33244, 203, 3, 52, "Subsection"],
Cell[1824603, 33249, 450, 11, 149, "Text"],
Cell[CellGroupData[{
Cell[1825078, 33264, 710, 21, 161, "Input"],
Cell[1825791, 33287, 4050, 73, 274, "Output"]
}, Open  ]],
Cell[1829856, 33363, 528, 14, 151, "Text"],
Cell[CellGroupData[{
Cell[1830409, 33381, 1828, 52, 352, "Input"],
Cell[1832240, 33435, 53799, 907, 267, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1886088, 34348, 91, 1, 52, "Subsection"],
Cell[1886182, 34351, 1137, 34, 200, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[1887344, 34389, 893, 20, 134, "Input"],
Cell[1888240, 34411, 26904, 492, 284, "Output"]
}, Open  ]],
Cell[1915159, 34906, 1176, 22, 120, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[1916360, 34932, 2865, 77, 384, "Input"],
Cell[1919228, 35011, 909, 16, 712, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1920174, 35032, 92, 1, 58, "Input"],
Cell[1920269, 35035, 27, 0, 58, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1920357, 35042, 158, 3, 109, "Section"],
Cell[1920518, 35047, 1235, 27, 388, "Text"],
Cell[CellGroupData[{
Cell[1921778, 35078, 110, 1, 52, "Subsection"],
Cell[1921891, 35081, 460, 9, 149, "Text"],
Cell[CellGroupData[{
Cell[1922376, 35094, 315, 8, 58, "Input"],
Cell[1922694, 35104, 1586, 33, 190, "Output"]
}, Open  ]],
Cell[1924295, 35140, 570, 16, 123, "Text"],
Cell[CellGroupData[{
Cell[1924890, 35160, 980, 27, 184, "Input"],
Cell[1925873, 35189, 2068, 42, 584, "Output"]
}, Open  ]],
Cell[1927956, 35234, 475, 9, 149, "Text"],
Cell[CellGroupData[{
Cell[1928456, 35247, 1075, 30, 159, "Input"],
Cell[1929534, 35279, 1750, 37, 497, "Output"]
}, Open  ]],
Cell[1931299, 35319, 612, 13, 123, "Text"],
Cell[CellGroupData[{
Cell[1931936, 35336, 1316, 34, 184, "Input"],
Cell[1933255, 35372, 1902, 41, 298, "Output"]
}, Open  ]],
Cell[1935172, 35416, 754, 18, 255, "Text"],
Cell[CellGroupData[{
Cell[1935951, 35438, 1487, 37, 209, "Input"],
Cell[1937441, 35477, 1851, 39, 503, "Output"]
}, Open  ]],
Cell[1939307, 35519, 925, 20, 308, "Text"],
Cell[CellGroupData[{
Cell[1940257, 35543, 1336, 34, 159, "Input"],
Cell[1941596, 35579, 1701, 35, 479, "Output"]
}, Open  ]],
Cell[1943312, 35617, 637, 13, 176, "Text"],
Cell[CellGroupData[{
Cell[1943974, 35634, 1363, 35, 184, "Input"],
Cell[1945340, 35671, 1740, 35, 356, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1947129, 35712, 96, 1, 52, "Subsection"],
Cell[1947228, 35715, 1231, 31, 147, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[1948484, 35750, 723, 17, 84, "Input"],
Cell[1949210, 35769, 33014, 540, 544, "Output"]
}, Open  ]],
Cell[1982239, 36312, 904, 21, 94, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[1983168, 36337, 2485, 52, 134, "Input"],
Cell[1985656, 36391, 65202, 1053, 505, "Output"]
}, Open  ]],
Cell[2050873, 37447, 487, 12, 58, "Input"],
Cell[2051363, 37461, 92, 1, 58, "Input"],
Cell[2051458, 37464, 145, 2, 58, InheritFromParent]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
